{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./libs/integration-ai/src/index.ts","webpack:///./libs/integration-ai/src/lib/gauzy-ai.service.ts","webpack:///./libs/integration-ai/src/lib/sdk/gauzy-ai-sdk.ts","webpack:///./libs/integration-hubstaff/src/index.ts","webpack:///./libs/integration-hubstaff/src/lib/hubstaff-entity-settings.ts","webpack:///./libs/integration-upwork/src/index.ts","webpack:///./libs/integration-upwork/src/lib/upwork-job.service.ts","webpack:///./libs/integration-upwork/src/lib/upwork-offers.service.ts","webpack:///./libs/integration-upwork/src/lib/upwork-report.service.ts","webpack:///./libs/models/src/index.ts","webpack:///./libs/models/src/lib/approval-policy.model.ts","webpack:///./libs/models/src/lib/availability-slots.model.ts","webpack:///./libs/models/src/lib/candidate.model.ts","webpack:///./libs/models/src/lib/currency.model.ts","webpack:///./libs/models/src/lib/custom-smtp.model.ts","webpack:///./libs/models/src/lib/email-template.model.ts","webpack:///./libs/models/src/lib/employee-job.model.ts","webpack:///./libs/models/src/lib/employee-statistics.model.ts","webpack:///./libs/models/src/lib/employee.model.ts","webpack:///./libs/models/src/lib/equipment-sharing.model.ts","webpack:///./libs/models/src/lib/expense-category.model.ts","webpack:///./libs/models/src/lib/expense.model.ts","webpack:///./libs/models/src/lib/feature.model.ts","webpack:///./libs/models/src/lib/file-provider.ts","webpack:///./libs/models/src/lib/geo-location.model.ts","webpack:///./libs/models/src/lib/goal-settings.model.ts","webpack:///./libs/models/src/lib/goals.model.ts","webpack:///./libs/models/src/lib/http-status.enum.ts","webpack:///./libs/models/src/lib/income.model.ts","webpack:///./libs/models/src/lib/integration.model.ts","webpack:///./libs/models/src/lib/invite.model.ts","webpack:///./libs/models/src/lib/invoice.model.ts","webpack:///./libs/models/src/lib/organization-contact.model.ts","webpack:///./libs/models/src/lib/organization-employment-type.model.ts","webpack:///./libs/models/src/lib/organization-expense-category.model.ts","webpack:///./libs/models/src/lib/organization-projects.model.ts","webpack:///./libs/models/src/lib/organization-sprint.model.ts","webpack:///./libs/models/src/lib/organization-vendors.model.ts","webpack:///./libs/models/src/lib/organization.model.ts","webpack:///./libs/models/src/lib/payment.model.ts","webpack:///./libs/models/src/lib/product.model.ts","webpack:///./libs/models/src/lib/proposal.model.ts","webpack:///./libs/models/src/lib/recurring-expense.model.ts","webpack:///./libs/models/src/lib/request-approval.model.ts","webpack:///./libs/models/src/lib/role-permission.model.ts","webpack:///./libs/models/src/lib/role.model.ts","webpack:///./libs/models/src/lib/sms.model.ts","webpack:///./libs/models/src/lib/task-entity.model.ts","webpack:///./libs/models/src/lib/time-off.model.ts","webpack:///./libs/models/src/lib/timesheet.model.ts","webpack:///./libs/models/src/lib/upwork.model.ts","webpack:///./libs/models/src/lib/user.model.ts","webpack:///./libs/utils/src/index.ts","webpack:///./libs/utils/src/lib/utils.ts","webpack:///./src/app/app.controller.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.service.ts","webpack:///./src/app/appointment-employees/appointment-employees.controller.ts","webpack:///./src/app/appointment-employees/appointment-employees.entity.ts","webpack:///./src/app/appointment-employees/appointment-employees.module.ts","webpack:///./src/app/appointment-employees/appointment-employees.seed.ts","webpack:///./src/app/appointment-employees/appointment-employees.service.ts","webpack:///./src/app/approval-policy/approval-policy.controller.ts","webpack:///./src/app/approval-policy/approval-policy.entity.ts","webpack:///./src/app/approval-policy/approval-policy.module.ts","webpack:///./src/app/approval-policy/approval-policy.seed.ts","webpack:///./src/app/approval-policy/approval-policy.service.ts","webpack:///./src/app/approval-policy/commands/approval-policy.create.command.ts","webpack:///./src/app/approval-policy/commands/approval-policy.get.command.ts","webpack:///./src/app/approval-policy/commands/approval-policy.update.command.ts","webpack:///./src/app/approval-policy/commands/handlers/approval-policy.create.handler.ts","webpack:///./src/app/approval-policy/commands/handlers/approval-policy.get.handler.ts","webpack:///./src/app/approval-policy/commands/handlers/approval-policy.update.handler.ts","webpack:///./src/app/approval-policy/commands/handlers/index.ts","webpack:///./src/app/approval-policy/commands/handlers/request-approval-policy.get.handler.ts","webpack:///./src/app/approval-policy/commands/index.ts","webpack:///./src/app/approval-policy/commands/request-approval-policy.get.command.ts","webpack:///./src/app/approval-policy/default-approval-policies.ts","webpack:///./src/app/auth/auth.controller.ts","webpack:///./src/app/auth/auth.module.ts","webpack:///./src/app/auth/auth.service.ts","webpack:///./src/app/auth/auth0.strategy.ts","webpack:///./src/app/auth/commands/auth.login.command.ts","webpack:///./src/app/auth/commands/auth.register.command.ts","webpack:///./src/app/auth/commands/handlers/auth.login.handler.ts","webpack:///./src/app/auth/commands/handlers/auth.register.handler.ts","webpack:///./src/app/auth/commands/handlers/index.ts","webpack:///./src/app/auth/commands/index.ts","webpack:///./src/app/auth/facebook.strategy.ts","webpack:///./src/app/auth/github.strategy.ts","webpack:///./src/app/auth/google.strategy.ts","webpack:///./src/app/auth/guard/keycloak-auth-guard.ts","webpack:///./src/app/auth/guard/microsoft-auth-guard.ts","webpack:///./src/app/auth/jwt.strategy.ts","webpack:///./src/app/auth/linkedin.strategy.ts","webpack:///./src/app/auth/microsoft.strategy.ts","webpack:///./src/app/auth/twitter.strategy.ts","webpack:///./src/app/availability-slots/availability-slots.controller.ts","webpack:///./src/app/availability-slots/availability-slots.entity.ts","webpack:///./src/app/availability-slots/availability-slots.module.ts","webpack:///./src/app/availability-slots/availability-slots.seed.ts","webpack:///./src/app/availability-slots/availability-slots.service.ts","webpack:///./src/app/availability-slots/commands/availability-slots.bulk.create.command.ts","webpack:///./src/app/availability-slots/commands/availability-slots.create.command.ts","webpack:///./src/app/availability-slots/commands/get-conflict-availability-slots.command.ts","webpack:///./src/app/availability-slots/commands/handlers/availability-slots.bulk.create.handler.ts","webpack:///./src/app/availability-slots/commands/handlers/availability-slots.create.handler.ts","webpack:///./src/app/availability-slots/commands/handlers/get-conflict-availability-slots.handler.ts","webpack:///./src/app/availability-slots/commands/handlers/index.ts","webpack:///./src/app/candidate-criterions-rating/candidate-criterion-rating.controller.ts","webpack:///./src/app/candidate-criterions-rating/candidate-criterion-rating.entity.ts","webpack:///./src/app/candidate-criterions-rating/candidate-criterion-rating.module.ts","webpack:///./src/app/candidate-criterions-rating/candidate-criterion-rating.seed.ts","webpack:///./src/app/candidate-criterions-rating/candidate-criterion-rating.service.ts","webpack:///./src/app/candidate-criterions-rating/commands/candidate-criterions-rating.bulk.create.command.ts","webpack:///./src/app/candidate-criterions-rating/commands/candidate-criterions-rating.bulk.delete.command.ts","webpack:///./src/app/candidate-criterions-rating/commands/candidate-criterions-rating.bulk.update.command.ts","webpack:///./src/app/candidate-criterions-rating/commands/handlers/candidate-criterions-rating.bulk.create.handler.ts","webpack:///./src/app/candidate-criterions-rating/commands/handlers/candidate-criterions-rating.bulk.delete.handler.ts","webpack:///./src/app/candidate-criterions-rating/commands/handlers/candidate-criterions-rating.bulk.update.handler.ts","webpack:///./src/app/candidate-criterions-rating/commands/handlers/index.ts","webpack:///./src/app/candidate-criterions-rating/commands/index.ts","webpack:///./src/app/candidate-documents/candidate-documents.controller.ts","webpack:///./src/app/candidate-documents/candidate-documents.entity.ts","webpack:///./src/app/candidate-documents/candidate-documents.module.ts","webpack:///./src/app/candidate-documents/candidate-documents.seed.ts","webpack:///./src/app/candidate-documents/candidate-documents.service.ts","webpack:///./src/app/candidate-documents/default-candidate-documents.ts","webpack:///./src/app/candidate-education/candidate-education.controller.ts","webpack:///./src/app/candidate-education/candidate-education.entity.ts","webpack:///./src/app/candidate-education/candidate-education.module.ts","webpack:///./src/app/candidate-education/candidate-education.seed.ts","webpack:///./src/app/candidate-education/candidate-education.service.ts","webpack:///./src/app/candidate-education/default-candidate-educations.ts","webpack:///./src/app/candidate-experience/candidate-experience.controller.ts","webpack:///./src/app/candidate-experience/candidate-experience.entity.ts","webpack:///./src/app/candidate-experience/candidate-experience.module.ts","webpack:///./src/app/candidate-experience/candidate-experience.seed.ts","webpack:///./src/app/candidate-experience/candidate-experience.service.ts","webpack:///./src/app/candidate-feedbacks/candidate-feedbacks.controller.ts","webpack:///./src/app/candidate-feedbacks/candidate-feedbacks.entity.ts","webpack:///./src/app/candidate-feedbacks/candidate-feedbacks.module.ts","webpack:///./src/app/candidate-feedbacks/candidate-feedbacks.seed.ts","webpack:///./src/app/candidate-feedbacks/candidate-feedbacks.service.ts","webpack:///./src/app/candidate-feedbacks/commands/candidate-feedbacks.delete.command.ts","webpack:///./src/app/candidate-feedbacks/commands/candidate-feedbacks.update.command.ts","webpack:///./src/app/candidate-feedbacks/commands/handlers/candidate-feedbacks.delete.handler.ts","webpack:///./src/app/candidate-feedbacks/commands/handlers/candidate-feedbacks.update.handler.ts","webpack:///./src/app/candidate-feedbacks/commands/handlers/index.ts","webpack:///./src/app/candidate-feedbacks/default-candidate-feedbacks.ts","webpack:///./src/app/candidate-interview/candidate-interview.controller.ts","webpack:///./src/app/candidate-interview/candidate-interview.entity.ts","webpack:///./src/app/candidate-interview/candidate-interview.module.ts","webpack:///./src/app/candidate-interview/candidate-interview.seed.ts","webpack:///./src/app/candidate-interview/candidate-interview.service.ts","webpack:///./src/app/candidate-interviewers/candidate-interviewers.controller.ts","webpack:///./src/app/candidate-interviewers/candidate-interviewers.entity.ts","webpack:///./src/app/candidate-interviewers/candidate-interviewers.module.ts","webpack:///./src/app/candidate-interviewers/candidate-interviewers.seed.ts","webpack:///./src/app/candidate-interviewers/candidate-interviewers.service.ts","webpack:///./src/app/candidate-interviewers/commands/candidate-interviewers.bulk.create.command.ts","webpack:///./src/app/candidate-interviewers/commands/candidate-interviewers.employee.bulk.delete.command.ts","webpack:///./src/app/candidate-interviewers/commands/candidate-interviewers.interview.bulk.delete.command.ts","webpack:///./src/app/candidate-interviewers/commands/handlers/candidate-interviewers.bulk.create.handler.ts","webpack:///./src/app/candidate-interviewers/commands/handlers/candidate-interviewers.employee.bulk.delete.handler.ts","webpack:///./src/app/candidate-interviewers/commands/handlers/candidate-interviewers.interview.bulk.delete.handler.ts","webpack:///./src/app/candidate-interviewers/commands/handlers/index.ts","webpack:///./src/app/candidate-interviewers/commands/index.ts","webpack:///./src/app/candidate-personal-qualities/candidate-personal-qualities.controller.ts","webpack:///./src/app/candidate-personal-qualities/candidate-personal-qualities.entity.ts","webpack:///./src/app/candidate-personal-qualities/candidate-personal-qualities.module.ts","webpack:///./src/app/candidate-personal-qualities/candidate-personal-qualities.seed.ts","webpack:///./src/app/candidate-personal-qualities/candidate-personal-qualities.service.ts","webpack:///./src/app/candidate-personal-qualities/commands/candidate-personal-qualities.bulk.create.command.ts","webpack:///./src/app/candidate-personal-qualities/commands/candidate-personal-qualities.bulk.delete.command.ts","webpack:///./src/app/candidate-personal-qualities/commands/handlers/candidate-personal-qualities.bulk.create.handler.ts","webpack:///./src/app/candidate-personal-qualities/commands/handlers/candidate-personal-qualities.bulk.delete.handler.ts","webpack:///./src/app/candidate-personal-qualities/commands/handlers/index.ts","webpack:///./src/app/candidate-personal-qualities/commands/index.ts","webpack:///./src/app/candidate-skill/candidate-skill.controller.ts","webpack:///./src/app/candidate-skill/candidate-skill.entity.ts","webpack:///./src/app/candidate-skill/candidate-skill.module.ts","webpack:///./src/app/candidate-skill/candidate-skill.seed.ts","webpack:///./src/app/candidate-skill/candidate-skill.service.ts","webpack:///./src/app/candidate-skill/default-candidate-skills.ts","webpack:///./src/app/candidate-source/candidate-source.controller.ts","webpack:///./src/app/candidate-source/candidate-source.entity.ts","webpack:///./src/app/candidate-source/candidate-source.module.ts","webpack:///./src/app/candidate-source/candidate-source.seed.ts","webpack:///./src/app/candidate-source/candidate-source.service.ts","webpack:///./src/app/candidate-source/default-candidate-sources.ts","webpack:///./src/app/candidate-technologies/candidate-technologies.controller.ts","webpack:///./src/app/candidate-technologies/candidate-technologies.entity.ts","webpack:///./src/app/candidate-technologies/candidate-technologies.module.ts","webpack:///./src/app/candidate-technologies/candidate-technologies.seed.ts","webpack:///./src/app/candidate-technologies/candidate-technologies.service.ts","webpack:///./src/app/candidate-technologies/commands/candidate-technologies.bulk.create.command.ts","webpack:///./src/app/candidate-technologies/commands/candidate-technologies.bulk.delete.command.ts","webpack:///./src/app/candidate-technologies/commands/candidate-technologies.bulk.update.command.ts","webpack:///./src/app/candidate-technologies/commands/handlers/candidate-technologies.bulk.create.handler.ts","webpack:///./src/app/candidate-technologies/commands/handlers/candidate-technologies.bulk.delete.handler.ts","webpack:///./src/app/candidate-technologies/commands/handlers/candidate-technologies.bulk.update.handler.ts","webpack:///./src/app/candidate-technologies/commands/handlers/index.ts","webpack:///./src/app/candidate-technologies/commands/index.ts","webpack:///./src/app/candidate/candidate.controller.ts","webpack:///./src/app/candidate/candidate.entity.ts","webpack:///./src/app/candidate/candidate.module.ts","webpack:///./src/app/candidate/candidate.seed.ts","webpack:///./src/app/candidate/candidate.service.ts","webpack:///./src/app/candidate/commands/candidate.bulk.create.command.ts","webpack:///./src/app/candidate/commands/candidate.create.command.ts","webpack:///./src/app/candidate/commands/candidate.update.command.ts","webpack:///./src/app/candidate/commands/handlers/candidate.bulk.create.handler.ts","webpack:///./src/app/candidate/commands/handlers/candidate.create.handler.ts","webpack:///./src/app/candidate/commands/handlers/candidate.update.handler.ts","webpack:///./src/app/candidate/commands/handlers/index.ts","webpack:///./src/app/candidate/commands/index.ts","webpack:///./src/app/candidate/default-candidates.ts","webpack:///./src/app/config/config.module.ts","webpack:///./src/app/config/config.service.ts","webpack:///./src/app/config/index.ts","webpack:///./src/app/contact/contact.entity.ts","webpack:///./src/app/contact/contact.seed.ts","webpack:///./src/app/contact/contact.service.ts","webpack:///./src/app/core/context/index.ts","webpack:///./src/app/core/context/request-context.middleware.ts","webpack:///./src/app/core/context/request-context.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/core/crud/crud.controller.ts","webpack:///./src/app/core/crud/crud.service.ts","webpack:///./src/app/core/crud/index.ts","webpack:///./src/app/core/crud/pagination-params.ts","webpack:///./src/app/core/crud/tenant-aware-crud.service.ts","webpack:///./src/app/core/entities/base.ts","webpack:///./src/app/core/entities/tenant-base.ts","webpack:///./src/app/core/entities/tenant-organization-base.ts","webpack:///./src/app/core/entities/translate-base.ts","webpack:///./src/app/core/file-storage/file-storage.middleware.ts","webpack:///./src/app/core/file-storage/file-storage.module.ts","webpack:///./src/app/core/file-storage/file-storage.ts","webpack:///./src/app/core/file-storage/index.ts","webpack:///./src/app/core/file-storage/providers/index.ts","webpack:///./src/app/core/file-storage/providers/local.provider.ts","webpack:///./src/app/core/file-storage/providers/provider.ts","webpack:///./src/app/core/file-storage/providers/s3.provider.ts","webpack:///./src/app/core/file-storage/uploaded-file-storage.ts","webpack:///./src/app/core/index.ts","webpack:///./src/app/core/moment-extend.ts","webpack:///./src/app/core/seeds/random-seed-config.ts","webpack:///./src/app/core/seeds/seed-data.service.ts","webpack:///./src/app/core/utils.ts","webpack:///./src/app/country/country.controller.ts","webpack:///./src/app/country/country.entity.ts","webpack:///./src/app/country/country.module.ts","webpack:///./src/app/country/country.seed.ts","webpack:///./src/app/country/country.service.ts","webpack:///./src/app/country/default-countries.ts","webpack:///./src/app/country/index.ts","webpack:///./src/app/currency/currency.controller.ts","webpack:///./src/app/currency/currency.entity.ts","webpack:///./src/app/currency/currency.module.ts","webpack:///./src/app/currency/currency.seed.ts","webpack:///./src/app/currency/currency.service.ts","webpack:///./src/app/currency/index.ts","webpack:///./src/app/custom-smtp/commands/custom-smtp.create.command.ts","webpack:///./src/app/custom-smtp/commands/custom-smtp.update.command.ts","webpack:///./src/app/custom-smtp/commands/handlers/custom-smtp.create.handler.ts","webpack:///./src/app/custom-smtp/commands/handlers/custom-smtp.update.handler.ts","webpack:///./src/app/custom-smtp/commands/index.ts","webpack:///./src/app/custom-smtp/custom-smtp.controller.ts","webpack:///./src/app/custom-smtp/custom-smtp.entity.ts","webpack:///./src/app/custom-smtp/custom-smtp.module.ts","webpack:///./src/app/custom-smtp/custom-smtp.service.ts","webpack:///./src/app/deal/deal.controller.ts","webpack:///./src/app/deal/deal.entity.ts","webpack:///./src/app/deal/deal.module.ts","webpack:///./src/app/deal/deal.seed.ts","webpack:///./src/app/deal/deal.service.ts","webpack:///./src/app/email-template/commands/email-template.save.command.ts","webpack:///./src/app/email-template/commands/handlers/email-template.save.handler.ts","webpack:///./src/app/email-template/commands/handlers/index.ts","webpack:///./src/app/email-template/commands/index.ts","webpack:///./src/app/email-template/email-template.controller.ts","webpack:///./src/app/email-template/email-template.entity.ts","webpack:///./src/app/email-template/email-template.module.ts","webpack:///./src/app/email-template/email-template.seed.ts","webpack:///./src/app/email-template/email-template.service.ts","webpack:///./src/app/email-template/index.ts","webpack:///./src/app/email-template/queries/email-template.find.query.ts","webpack:///./src/app/email-template/queries/email-template.generate-preview.query.ts","webpack:///./src/app/email-template/queries/handlers/email-template.find.handler.ts","webpack:///./src/app/email-template/queries/handlers/email-template.generate-preview.handler.ts","webpack:///./src/app/email-template/queries/handlers/index.ts","webpack:///./src/app/email-template/queries/index.ts","webpack:///./src/app/email/email.controller.ts","webpack:///./src/app/email/email.entity.ts","webpack:///./src/app/email/email.module.ts","webpack:///./src/app/email/email.seed.ts","webpack:///./src/app/email/email.service.ts","webpack:///./src/app/email/index.ts","webpack:///./src/app/employee-appointment/commands/employee-appointment.create.command.ts","webpack:///./src/app/employee-appointment/commands/employee-appointment.update.command.ts","webpack:///./src/app/employee-appointment/commands/handlers/employee-appointment.create.handler.ts","webpack:///./src/app/employee-appointment/commands/handlers/employee-appointment.update.handler.ts","webpack:///./src/app/employee-appointment/default-employee-appointment.ts","webpack:///./src/app/employee-appointment/employee-appointment.controller.ts","webpack:///./src/app/employee-appointment/employee-appointment.entity.ts","webpack:///./src/app/employee-appointment/employee-appointment.module.ts","webpack:///./src/app/employee-appointment/employee-appointment.seed.ts","webpack:///./src/app/employee-appointment/employee-appointment.service.ts","webpack:///./src/app/employee-appointment/index.ts","webpack:///./src/app/employee-award/default-employee-awards.ts","webpack:///./src/app/employee-award/employee-award.controller.ts","webpack:///./src/app/employee-award/employee-award.entity.ts","webpack:///./src/app/employee-award/employee-award.module.ts","webpack:///./src/app/employee-award/employee-award.seed.ts","webpack:///./src/app/employee-award/employee-award.service.ts","webpack:///./src/app/employee-job-preset/commands/create-job-preset.command.ts","webpack:///./src/app/employee-job-preset/commands/handlers/create-job-preset.handler.ts","webpack:///./src/app/employee-job-preset/commands/handlers/index.ts","webpack:///./src/app/employee-job-preset/commands/handlers/save-employee-criterion.handler.ts","webpack:///./src/app/employee-job-preset/commands/handlers/save-employee-preset.handler.ts","webpack:///./src/app/employee-job-preset/commands/handlers/save-preset-criterion.handler.ts","webpack:///./src/app/employee-job-preset/commands/save-employee-criterion.command.ts","webpack:///./src/app/employee-job-preset/commands/save-employee-preset.command.ts","webpack:///./src/app/employee-job-preset/commands/save-preset-criterion.command.ts","webpack:///./src/app/employee-job-preset/employee-job-preset.module.ts","webpack:///./src/app/employee-job-preset/employee-preset.controller.ts","webpack:///./src/app/employee-job-preset/employee-upwork-jobs-search-criterion.entity.ts","webpack:///./src/app/employee-job-preset/job-preset-upwork-job-search-criterion.entity.ts","webpack:///./src/app/employee-job-preset/job-preset.entity.ts","webpack:///./src/app/employee-job-preset/job-preset.service.ts","webpack:///./src/app/employee-job-preset/job-search-category/job-search-category.controller.ts","webpack:///./src/app/employee-job-preset/job-search-category/job-search-category.entity.ts","webpack:///./src/app/employee-job-preset/job-search-category/job-search-category.seed.ts","webpack:///./src/app/employee-job-preset/job-search-category/job-search-category.service.ts","webpack:///./src/app/employee-job-preset/job-search-occupation/job-search-occupation.controller.ts","webpack:///./src/app/employee-job-preset/job-search-occupation/job-search-occupation.entity.ts","webpack:///./src/app/employee-job-preset/job-search-occupation/job-search-occupation.seed.ts","webpack:///./src/app/employee-job-preset/job-search-occupation/job-search-occupation.service.ts","webpack:///./src/app/employee-job-preset/job-search-preset.controller.ts","webpack:///./src/app/employee-job/employee-job.controller.ts","webpack:///./src/app/employee-job/employee-job.entity.ts","webpack:///./src/app/employee-job/employee-job.module.ts","webpack:///./src/app/employee-job/employee-job.seed.ts","webpack:///./src/app/employee-job/employee-job.service.ts","webpack:///./src/app/employee-job/index.ts","webpack:///./src/app/employee-job/jobPost.entity.ts","webpack:///./src/app/employee-proposal-template/employee-proposal-template.controller.ts","webpack:///./src/app/employee-proposal-template/employee-proposal-template.entity.ts","webpack:///./src/app/employee-proposal-template/employee-proposal-template.module.ts","webpack:///./src/app/employee-proposal-template/employee-proposal-template.service.ts","webpack:///./src/app/employee-recurring-expense/commands/employee-recurring-expense.create.command.ts","webpack:///./src/app/employee-recurring-expense/commands/employee-recurring-expense.delete.command.ts","webpack:///./src/app/employee-recurring-expense/commands/employee-recurring-expense.edit.command.ts","webpack:///./src/app/employee-recurring-expense/commands/handlers/employee-recurring-expense.create.handler.ts","webpack:///./src/app/employee-recurring-expense/commands/handlers/employee-recurring-expense.delete.handler.ts","webpack:///./src/app/employee-recurring-expense/commands/handlers/employee-recurring-expense.edit.handler.ts","webpack:///./src/app/employee-recurring-expense/commands/handlers/index.ts","webpack:///./src/app/employee-recurring-expense/employee-recurring-expense.controller.ts","webpack:///./src/app/employee-recurring-expense/employee-recurring-expense.entity.ts","webpack:///./src/app/employee-recurring-expense/employee-recurring-expense.module.ts","webpack:///./src/app/employee-recurring-expense/employee-recurring-expense.seed.ts","webpack:///./src/app/employee-recurring-expense/employee-recurring-expense.service.ts","webpack:///./src/app/employee-recurring-expense/index.ts","webpack:///./src/app/employee-recurring-expense/queries/employee-recurring-expense.by-month.query.ts","webpack:///./src/app/employee-recurring-expense/queries/employee-recurring-expense.update-type.query.ts","webpack:///./src/app/employee-recurring-expense/queries/handlers/employee-recurring-expense.by-month.handler.ts","webpack:///./src/app/employee-recurring-expense/queries/handlers/employee-recurring-expense.start-date-update-type.handler.ts","webpack:///./src/app/employee-recurring-expense/queries/handlers/index.ts","webpack:///./src/app/employee-setting/employee-setting.controller.ts","webpack:///./src/app/employee-setting/employee-setting.entity.ts","webpack:///./src/app/employee-setting/employee-setting.module.ts","webpack:///./src/app/employee-setting/employee-setting.seed.ts","webpack:///./src/app/employee-setting/employee-setting.service.ts","webpack:///./src/app/employee-setting/index.ts","webpack:///./src/app/employee-statistics/employee-statistics.controller.ts","webpack:///./src/app/employee-statistics/employee-statistics.module.ts","webpack:///./src/app/employee-statistics/employee-statistics.service.ts","webpack:///./src/app/employee-statistics/index.ts","webpack:///./src/app/employee-statistics/queries/aggregate-employee-statistic.query.ts","webpack:///./src/app/employee-statistics/queries/employee-statistics-history.query.ts","webpack:///./src/app/employee-statistics/queries/handlers/aggregate-employee-statistic.handler.ts","webpack:///./src/app/employee-statistics/queries/handlers/employee-statistics-history.handler.ts","webpack:///./src/app/employee-statistics/queries/handlers/index.ts","webpack:///./src/app/employee-statistics/queries/handlers/month-aggregated-employee-statistics.handler.ts","webpack:///./src/app/employee-statistics/queries/month-aggregated-employee-statistics.query.ts","webpack:///./src/app/employee/commands/employee.bulk.create.command.ts","webpack:///./src/app/employee/commands/employee.create.command.ts","webpack:///./src/app/employee/commands/employee.get.command.ts","webpack:///./src/app/employee/commands/get-employee-job-statistics.command.ts","webpack:///./src/app/employee/commands/handlers/employee.bulk.create.handler.ts","webpack:///./src/app/employee/commands/handlers/employee.create.handler.ts","webpack:///./src/app/employee/commands/handlers/employee.get.handler.ts","webpack:///./src/app/employee/commands/handlers/get-employee-job-statistics.handler.ts","webpack:///./src/app/employee/commands/handlers/index.ts","webpack:///./src/app/employee/commands/handlers/update-employee-job-search-status.handler.ts","webpack:///./src/app/employee/commands/handlers/update-employee-total-worked-hours.handler.ts","webpack:///./src/app/employee/commands/index.ts","webpack:///./src/app/employee/commands/update-employee-job-search-status.command.ts","webpack:///./src/app/employee/commands/update-employee-total-worked-hours.command.ts","webpack:///./src/app/employee/default-employees.ts","webpack:///./src/app/employee/employee.controller.ts","webpack:///./src/app/employee/employee.entity.ts","webpack:///./src/app/employee/employee.module.ts","webpack:///./src/app/employee/employee.seed.ts","webpack:///./src/app/employee/employee.service.ts","webpack:///./src/app/equipment-sharing-policy/equipment-sharing-policy.controller.ts","webpack:///./src/app/equipment-sharing-policy/equipment-sharing-policy.entity.ts","webpack:///./src/app/equipment-sharing-policy/equipment-sharing-policy.module.ts","webpack:///./src/app/equipment-sharing-policy/equipment-sharing-policy.seed.ts","webpack:///./src/app/equipment-sharing-policy/equipment-sharing-policy.service.ts","webpack:///./src/app/equipment-sharing/commands/equipment-sharing.create.command.ts","webpack:///./src/app/equipment-sharing/commands/equipment-sharing.status.command.ts","webpack:///./src/app/equipment-sharing/commands/equipment-sharing.update.command.ts","webpack:///./src/app/equipment-sharing/commands/handlers/equipment-sharing.create.handler.ts","webpack:///./src/app/equipment-sharing/commands/handlers/equipment-sharing.status.handler.ts","webpack:///./src/app/equipment-sharing/commands/handlers/equipment-sharing.update.handler.ts","webpack:///./src/app/equipment-sharing/commands/handlers/index.ts","webpack:///./src/app/equipment-sharing/commands/index.ts","webpack:///./src/app/equipment-sharing/equipment-sharing.controller.ts","webpack:///./src/app/equipment-sharing/equipment-sharing.entity.ts","webpack:///./src/app/equipment-sharing/equipment-sharing.module.ts","webpack:///./src/app/equipment-sharing/equipment-sharing.seed.ts","webpack:///./src/app/equipment-sharing/equipment-sharing.service.ts","webpack:///./src/app/equipment-sharing/index.ts","webpack:///./src/app/equipment/default-equipments.ts","webpack:///./src/app/equipment/equipment.controller.ts","webpack:///./src/app/equipment/equipment.entity.ts","webpack:///./src/app/equipment/equipment.module.ts","webpack:///./src/app/equipment/equipment.seed.ts","webpack:///./src/app/equipment/equipment.service.ts","webpack:///./src/app/estimate-email/estimate-email.controller.ts","webpack:///./src/app/estimate-email/estimate-email.entity.ts","webpack:///./src/app/estimate-email/estimate-email.module.ts","webpack:///./src/app/estimate-email/estimate-email.service.ts","webpack:///./src/app/event-types/commands/event-type.create.command.ts","webpack:///./src/app/event-types/commands/handlers/event-type.create.handler.ts","webpack:///./src/app/event-types/commands/handlers/index.ts","webpack:///./src/app/event-types/event-type.controller.ts","webpack:///./src/app/event-types/event-type.entity.ts","webpack:///./src/app/event-types/event-type.module.ts","webpack:///./src/app/event-types/event-type.seed.ts","webpack:///./src/app/event-types/event-type.service.ts","webpack:///./src/app/expense-categories/expense-categories.controller.ts","webpack:///./src/app/expense-categories/expense-categories.module.ts","webpack:///./src/app/expense-categories/expense-categories.seed.ts","webpack:///./src/app/expense-categories/expense-categories.service.ts","webpack:///./src/app/expense-categories/expense-category.entity.ts","webpack:///./src/app/expense/commands/expense.create.command.ts","webpack:///./src/app/expense/commands/expense.delete.command.ts","webpack:///./src/app/expense/commands/expense.update.command.ts","webpack:///./src/app/expense/commands/handlers/expense.create.handler.ts","webpack:///./src/app/expense/commands/handlers/expense.delete.handler.ts","webpack:///./src/app/expense/commands/handlers/expense.update.handler.ts","webpack:///./src/app/expense/commands/handlers/index.ts","webpack:///./src/app/expense/expense.controller.ts","webpack:///./src/app/expense/expense.entity.ts","webpack:///./src/app/expense/expense.map.service.ts","webpack:///./src/app/expense/expense.module.ts","webpack:///./src/app/expense/expense.seed.ts","webpack:///./src/app/expense/expense.service.ts","webpack:///./src/app/expense/queries/expense.find-split-expense.query.ts","webpack:///./src/app/expense/queries/handlers/expense.find-split-expense.handler.ts","webpack:///./src/app/expense/queries/handlers/index.ts","webpack:///./src/app/export_import/export-all.controller.ts","webpack:///./src/app/export_import/export-all.module.ts","webpack:///./src/app/export_import/export-all.service.ts","webpack:///./src/app/export_import/import/import-all.controller.ts","webpack:///./src/app/export_import/import/import-all.module.ts","webpack:///./src/app/export_import/import/import-all.service.ts","webpack:///./src/app/export_import/import/index.ts","webpack:///./src/app/feature/commands/feature-toggle.update.command.ts","webpack:///./src/app/feature/commands/handlers/feature-toggle.update.handler.ts","webpack:///./src/app/feature/commands/handlers/index.ts","webpack:///./src/app/feature/default-features.ts","webpack:///./src/app/feature/feature-toggle.controller.ts","webpack:///./src/app/feature/feature.entity.ts","webpack:///./src/app/feature/feature.module.ts","webpack:///./src/app/feature/feature.seed.ts","webpack:///./src/app/feature/feature.service.ts","webpack:///./src/app/feature/feature_organization.entity.ts","webpack:///./src/app/goal-general-setting/goal-general-setting.controller.ts","webpack:///./src/app/goal-general-setting/goal-general-setting.entity.ts","webpack:///./src/app/goal-general-setting/goal-general-setting.module.ts","webpack:///./src/app/goal-general-setting/goal-general-setting.seed.ts","webpack:///./src/app/goal-general-setting/goal-general-setting.service.ts","webpack:///./src/app/goal-kpi-template/default-goal-kpi-templates.ts","webpack:///./src/app/goal-kpi-template/goal-kpi-template.controller.ts","webpack:///./src/app/goal-kpi-template/goal-kpi-template.entity.ts","webpack:///./src/app/goal-kpi-template/goal-kpi-template.module.ts","webpack:///./src/app/goal-kpi-template/goal-kpi-template.seed.ts","webpack:///./src/app/goal-kpi-template/goal-kpi-template.service.ts","webpack:///./src/app/goal-kpi/default-goal-kpis.ts","webpack:///./src/app/goal-kpi/goal-kpi.controller.ts","webpack:///./src/app/goal-kpi/goal-kpi.entity.ts","webpack:///./src/app/goal-kpi/goal-kpi.module.ts","webpack:///./src/app/goal-kpi/goal-kpi.seed.ts","webpack:///./src/app/goal-kpi/goal-kpi.service.ts","webpack:///./src/app/goal-template/default-goal-templates.ts","webpack:///./src/app/goal-template/goal-template.controller.ts","webpack:///./src/app/goal-template/goal-template.entity.ts","webpack:///./src/app/goal-template/goal-template.module.ts","webpack:///./src/app/goal-template/goal-template.seed.ts","webpack:///./src/app/goal-template/goal-template.service.ts","webpack:///./src/app/goal-time-frame/goal-time-frame.controller.ts","webpack:///./src/app/goal-time-frame/goal-time-frame.entity.ts","webpack:///./src/app/goal-time-frame/goal-time-frame.module.ts","webpack:///./src/app/goal-time-frame/goal-time-frame.seed.ts","webpack:///./src/app/goal-time-frame/goal-time-frame.service.ts","webpack:///./src/app/goal/default-goals.ts","webpack:///./src/app/goal/goal.controller.ts","webpack:///./src/app/goal/goal.entity.ts","webpack:///./src/app/goal/goal.module.ts","webpack:///./src/app/goal/goal.seed.ts","webpack:///./src/app/goal/goal.service.ts","webpack:///./src/app/help-center-article/commands/handlers/help-center.menu.bulk.delete.handler.ts","webpack:///./src/app/help-center-article/commands/handlers/index.ts","webpack:///./src/app/help-center-article/commands/help-center.menu.bulk.delete.command.ts","webpack:///./src/app/help-center-article/commands/index.ts","webpack:///./src/app/help-center-article/help-center-article.controller.ts","webpack:///./src/app/help-center-article/help-center-article.entity.ts","webpack:///./src/app/help-center-article/help-center-article.module.ts","webpack:///./src/app/help-center-article/help-center-article.seed.ts","webpack:///./src/app/help-center-article/help-center-article.service.ts","webpack:///./src/app/help-center-author/commands/handlers/help-center-author.bulk.create.handler.ts","webpack:///./src/app/help-center-author/commands/handlers/help-center-author.bulk.delete.handler.ts","webpack:///./src/app/help-center-author/commands/handlers/index.ts","webpack:///./src/app/help-center-author/commands/help-center-author.bulk.create.command.ts","webpack:///./src/app/help-center-author/commands/help-center-author.bulk.delete.command.ts","webpack:///./src/app/help-center-author/commands/index.ts","webpack:///./src/app/help-center-author/help-center-author.controller.ts","webpack:///./src/app/help-center-author/help-center-author.entity.ts","webpack:///./src/app/help-center-author/help-center-author.module.ts","webpack:///./src/app/help-center-author/help-center-author.seed.ts","webpack:///./src/app/help-center-author/help-center-author.service.ts","webpack:///./src/app/help-center/commands/handlers/help-center-base.bulk.handler.ts","webpack:///./src/app/help-center/commands/handlers/help-center.bulk.handler.ts","webpack:///./src/app/help-center/commands/handlers/index.ts","webpack:///./src/app/help-center/commands/help-center-base.bulk.command.ts","webpack:///./src/app/help-center/commands/help-center.bulk.command.ts","webpack:///./src/app/help-center/commands/index.ts","webpack:///./src/app/help-center/default-help-centers.ts","webpack:///./src/app/help-center/help-center.controller.ts","webpack:///./src/app/help-center/help-center.entity.ts","webpack:///./src/app/help-center/help-center.module.ts","webpack:///./src/app/help-center/help-center.seed.ts","webpack:///./src/app/help-center/help-center.service.ts","webpack:///./src/app/home/home.controller.ts","webpack:///./src/app/home/home.module.ts","webpack:///./src/app/hubstaff/hubstaff.controller.ts","webpack:///./src/app/hubstaff/hubstaff.module.ts","webpack:///./src/app/hubstaff/hubstaff.service.ts","webpack:///./src/app/income/commands/handlers/income.create.handler.ts","webpack:///./src/app/income/commands/handlers/income.delete.handler.ts","webpack:///./src/app/income/commands/handlers/income.update.handler.ts","webpack:///./src/app/income/commands/handlers/index.ts","webpack:///./src/app/income/commands/income.create.command.ts","webpack:///./src/app/income/commands/income.delete.command.ts","webpack:///./src/app/income/commands/income.update.command.ts","webpack:///./src/app/income/income.controller.ts","webpack:///./src/app/income/income.entity.ts","webpack:///./src/app/income/income.module.ts","webpack:///./src/app/income/income.seed.ts","webpack:///./src/app/income/income.service.ts","webpack:///./src/app/integration-entity-setting-tied-entity/integration-entity-setting-tied-entity.controller.ts","webpack:///./src/app/integration-entity-setting-tied-entity/integration-entity-setting-tied-entity.entity.ts","webpack:///./src/app/integration-entity-setting-tied-entity/integration-entity-setting-tied-entity.module.ts","webpack:///./src/app/integration-entity-setting-tied-entity/integration-entity-setting-tied-entity.seed.ts","webpack:///./src/app/integration-entity-setting-tied-entity/integration-entity-setting-tied-entity.service.ts","webpack:///./src/app/integration-entity-setting/integration-entity-setting.controller.ts","webpack:///./src/app/integration-entity-setting/integration-entity-setting.entity.ts","webpack:///./src/app/integration-entity-setting/integration-entity-setting.module.ts","webpack:///./src/app/integration-entity-setting/integration-entity-setting.seed.ts","webpack:///./src/app/integration-entity-setting/integration-entity-setting.service.ts","webpack:///./src/app/integration-map/commands/handlers/index.ts","webpack:///./src/app/integration-map/commands/handlers/integration-map.sync-entity.handler.ts","webpack:///./src/app/integration-map/commands/handlers/integration-map.sync-project.handler.ts","webpack:///./src/app/integration-map/commands/index.ts","webpack:///./src/app/integration-map/commands/integration-map.sync-entity.command.ts","webpack:///./src/app/integration-map/commands/integration-map.sync-project.command.ts","webpack:///./src/app/integration-map/integration-map.controller.ts","webpack:///./src/app/integration-map/integration-map.entity.ts","webpack:///./src/app/integration-map/integration-map.module.ts","webpack:///./src/app/integration-map/integration-map.seed.ts","webpack:///./src/app/integration-map/integration-map.service.ts","webpack:///./src/app/integration-setting/commands/handlers/index.ts","webpack:///./src/app/integration-setting/commands/handlers/integration-setting.create.handler.ts","webpack:///./src/app/integration-setting/commands/handlers/integration-setting.get.handler.ts","webpack:///./src/app/integration-setting/commands/handlers/integration-setting.getMany.handler.ts","webpack:///./src/app/integration-setting/commands/index.ts","webpack:///./src/app/integration-setting/commands/integration-setting.create.command.ts","webpack:///./src/app/integration-setting/commands/integration-setting.get.command.ts","webpack:///./src/app/integration-setting/commands/integration-setting.getMany.command.ts","webpack:///./src/app/integration-setting/integration-setting.controller.ts","webpack:///./src/app/integration-setting/integration-setting.entity.ts","webpack:///./src/app/integration-setting/integration-setting.module.ts","webpack:///./src/app/integration-setting/integration-setting.seed.ts","webpack:///./src/app/integration-setting/integration-setting.service.ts","webpack:///./src/app/integration-tenant/commands/handlers/index.ts","webpack:///./src/app/integration-tenant/commands/handlers/integration-tenant.create.handler.ts","webpack:///./src/app/integration-tenant/commands/handlers/integration-tenant.get.handler.ts","webpack:///./src/app/integration-tenant/commands/index.ts","webpack:///./src/app/integration-tenant/commands/integration-tenant.create.command.ts","webpack:///./src/app/integration-tenant/commands/integration-tenant.get.command.ts","webpack:///./src/app/integration-tenant/integration-tenant.controller.ts","webpack:///./src/app/integration-tenant/integration-tenant.entity.ts","webpack:///./src/app/integration-tenant/integration-tenant.module.ts","webpack:///./src/app/integration-tenant/integration-tenant.seed.ts","webpack:///./src/app/integration-tenant/integration-tenant.service.ts","webpack:///./src/app/integration/commands/handlers/index.ts","webpack:///./src/app/integration/commands/handlers/integration-type.get.handler.ts","webpack:///./src/app/integration/commands/handlers/integration.get.handler.ts","webpack:///./src/app/integration/commands/index.ts","webpack:///./src/app/integration/commands/integration-type.get.command.ts","webpack:///./src/app/integration/commands/integration.get.command.ts","webpack:///./src/app/integration/integration-type.entity.ts","webpack:///./src/app/integration/integration-type.seed.ts","webpack:///./src/app/integration/integration.controller.ts","webpack:///./src/app/integration/integration.entity.ts","webpack:///./src/app/integration/integration.module.ts","webpack:///./src/app/integration/integration.seed.ts","webpack:///./src/app/integration/integration.service.ts","webpack:///./src/app/invite/commands/handlers/index.ts","webpack:///./src/app/invite/commands/handlers/invite.accept-employee.handler.ts","webpack:///./src/app/invite/commands/handlers/invite.accept-organization-contact.handler.ts","webpack:///./src/app/invite/commands/handlers/invite.accept-user.handler.ts","webpack:///./src/app/invite/commands/handlers/invite.organization-contact.handler.ts","webpack:///./src/app/invite/commands/handlers/invite.resend.handler.ts","webpack:///./src/app/invite/commands/invite.accept-employee.command.ts","webpack:///./src/app/invite/commands/invite.accept-organization-contact.command.ts","webpack:///./src/app/invite/commands/invite.accept-user.command.ts","webpack:///./src/app/invite/commands/invite.organization-contact.command.ts","webpack:///./src/app/invite/commands/invite.resend.command.ts","webpack:///./src/app/invite/invite.controller.ts","webpack:///./src/app/invite/invite.entity.ts","webpack:///./src/app/invite/invite.module.ts","webpack:///./src/app/invite/invite.seed.ts","webpack:///./src/app/invite/invite.service.ts","webpack:///./src/app/invoice-estimate-history/invoice-estimate-history.controller.ts","webpack:///./src/app/invoice-estimate-history/invoice-estimate-history.entity.ts","webpack:///./src/app/invoice-estimate-history/invoice-estimate-history.module.ts","webpack:///./src/app/invoice-estimate-history/invoice-estimate-history.service.ts","webpack:///./src/app/invoice-item/commands/handlers/index.ts","webpack:///./src/app/invoice-item/commands/handlers/invoice-item.bulk.create.handler.ts","webpack:///./src/app/invoice-item/commands/index.ts","webpack:///./src/app/invoice-item/commands/invoice-item.bulk.create.command.ts","webpack:///./src/app/invoice-item/invoice-item.controller.ts","webpack:///./src/app/invoice-item/invoice-item.entity.ts","webpack:///./src/app/invoice-item/invoice-item.module.ts","webpack:///./src/app/invoice-item/invoice-item.seed.ts","webpack:///./src/app/invoice-item/invoice-item.service.ts","webpack:///./src/app/invoice/commands/handlers/invoice.create.handler.ts","webpack:///./src/app/invoice/commands/handlers/invoice.delete.handler.ts","webpack:///./src/app/invoice/commands/handlers/invoice.send.email.handler.ts","webpack:///./src/app/invoice/commands/handlers/invoice.update.handler.ts","webpack:///./src/app/invoice/commands/index.ts","webpack:///./src/app/invoice/commands/invoice.create.command.ts","webpack:///./src/app/invoice/commands/invoice.delete.command.ts","webpack:///./src/app/invoice/commands/invoice.send.email.command.ts","webpack:///./src/app/invoice/commands/invoice.update.command.ts","webpack:///./src/app/invoice/invoice.controller.ts","webpack:///./src/app/invoice/invoice.entity.ts","webpack:///./src/app/invoice/invoice.module.ts","webpack:///./src/app/invoice/invoice.seed.ts","webpack:///./src/app/invoice/invoice.service.ts","webpack:///./src/app/keyresult-template/default-keyresult-templates.ts","webpack:///./src/app/keyresult-template/keyresult-template.controller.ts","webpack:///./src/app/keyresult-template/keyresult-template.entity.ts","webpack:///./src/app/keyresult-template/keyresult-template.module.ts","webpack:///./src/app/keyresult-template/keyresult-template.seed.ts","webpack:///./src/app/keyresult-template/keyresult-template.service.ts","webpack:///./src/app/keyresult-update/commands/handlers/index.ts","webpack:///./src/app/keyresult-update/commands/handlers/keyresult-update.bulk.delete.handler.ts","webpack:///./src/app/keyresult-update/commands/index.ts","webpack:///./src/app/keyresult-update/commands/keyresult-update.bulk.delete.command.ts","webpack:///./src/app/keyresult-update/keyresult-update.controller.ts","webpack:///./src/app/keyresult-update/keyresult-update.entity.ts","webpack:///./src/app/keyresult-update/keyresult-update.module.ts","webpack:///./src/app/keyresult-update/keyresult-update.seed.ts","webpack:///./src/app/keyresult-update/keyresult-update.service.ts","webpack:///./src/app/keyresult/default-keyresults.ts","webpack:///./src/app/keyresult/keyresult.controller.ts","webpack:///./src/app/keyresult/keyresult.entity.ts","webpack:///./src/app/keyresult/keyresult.module.ts","webpack:///./src/app/keyresult/keyresult.seed.ts","webpack:///./src/app/keyresult/keyresult.service.ts","webpack:///./src/app/language/language.controller.ts","webpack:///./src/app/language/language.entity.ts","webpack:///./src/app/language/language.module.ts","webpack:///./src/app/language/language.seed.ts","webpack:///./src/app/language/language.service.ts","webpack:///./src/app/organization-awards/default-organization-awards.ts","webpack:///./src/app/organization-awards/organization-awards.controller.ts","webpack:///./src/app/organization-awards/organization-awards.entity.ts","webpack:///./src/app/organization-awards/organization-awards.module.ts","webpack:///./src/app/organization-awards/organization-awards.seed.ts","webpack:///./src/app/organization-awards/organization-awards.service.ts","webpack:///./src/app/organization-contact/commands/handlers/index.ts","webpack:///./src/app/organization-contact/commands/handlers/organization-contact-create.handler.ts","webpack:///./src/app/organization-contact/commands/handlers/organization-contact.edit-by-employee.handler.ts","webpack:///./src/app/organization-contact/commands/organization-contact-create.command.ts","webpack:///./src/app/organization-contact/commands/organization-contact.edit-by-employee.command.ts","webpack:///./src/app/organization-contact/organization-contact.controller.ts","webpack:///./src/app/organization-contact/organization-contact.entity.ts","webpack:///./src/app/organization-contact/organization-contact.module.ts","webpack:///./src/app/organization-contact/organization-contact.seed.ts","webpack:///./src/app/organization-contact/organization-contact.service.ts","webpack:///./src/app/organization-department/commands/handlers/index.ts","webpack:///./src/app/organization-department/commands/handlers/organization-department.edit-by-employee.handler.ts","webpack:///./src/app/organization-department/commands/handlers/organization-department.update.handler.ts","webpack:///./src/app/organization-department/commands/organization-department.edit-by-employee.command.ts","webpack:///./src/app/organization-department/commands/organization-department.update.command.ts","webpack:///./src/app/organization-department/default-organization-departments.ts","webpack:///./src/app/organization-department/organization-department.controller.ts","webpack:///./src/app/organization-department/organization-department.entity.ts","webpack:///./src/app/organization-department/organization-department.module.ts","webpack:///./src/app/organization-department/organization-department.seed.ts","webpack:///./src/app/organization-department/organization-department.service.ts","webpack:///./src/app/organization-documents/organization-documents.controler.ts","webpack:///./src/app/organization-documents/organization-documents.entity.ts","webpack:///./src/app/organization-documents/organization-documents.module.ts","webpack:///./src/app/organization-documents/organization-documents.seed.ts","webpack:///./src/app/organization-documents/organization-documents.service.ts","webpack:///./src/app/organization-employment-type/organization-employment-type.controller.ts","webpack:///./src/app/organization-employment-type/organization-employment-type.entity.ts","webpack:///./src/app/organization-employment-type/organization-employment-type.module.ts","webpack:///./src/app/organization-employment-type/organization-employment-type.seed.ts","webpack:///./src/app/organization-employment-type/organization-employment-type.service.ts","webpack:///./src/app/organization-languages/default-organization-languages.ts","webpack:///./src/app/organization-languages/organization-languages.controller.ts","webpack:///./src/app/organization-languages/organization-languages.entity.ts","webpack:///./src/app/organization-languages/organization-languages.module.ts","webpack:///./src/app/organization-languages/organization-languages.seed.ts","webpack:///./src/app/organization-languages/organization-languages.service.ts","webpack:///./src/app/organization-positions/default-organization-positions.ts","webpack:///./src/app/organization-positions/organization-position.seed.ts","webpack:///./src/app/organization-positions/organization-positions.controller.ts","webpack:///./src/app/organization-positions/organization-positions.entity.ts","webpack:///./src/app/organization-positions/organization-positions.module.ts","webpack:///./src/app/organization-positions/organization-positions.service.ts","webpack:///./src/app/organization-projects/commands/handlers/index.ts","webpack:///./src/app/organization-projects/commands/handlers/organization-project.create.handler.ts","webpack:///./src/app/organization-projects/commands/handlers/organization-project.edit-by-employee.handler.ts","webpack:///./src/app/organization-projects/commands/handlers/organization-project.update.handler.ts","webpack:///./src/app/organization-projects/commands/organization-project.create.command.ts","webpack:///./src/app/organization-projects/commands/organization-project.edit-by-employee.command.ts","webpack:///./src/app/organization-projects/commands/organization-project.update.command.ts","webpack:///./src/app/organization-projects/default-organization-projects.ts","webpack:///./src/app/organization-projects/organization-projects.controller.ts","webpack:///./src/app/organization-projects/organization-projects.entity.ts","webpack:///./src/app/organization-projects/organization-projects.module.ts","webpack:///./src/app/organization-projects/organization-projects.seed.ts","webpack:///./src/app/organization-projects/organization-projects.service.ts","webpack:///./src/app/organization-recurring-expense/commands/handlers/index.ts","webpack:///./src/app/organization-recurring-expense/commands/handlers/organization-recurring-expense.create.handler.ts","webpack:///./src/app/organization-recurring-expense/commands/handlers/organization-recurring-expense.delete.handler.ts","webpack:///./src/app/organization-recurring-expense/commands/handlers/organization-recurring-expense.edit.handler.ts","webpack:///./src/app/organization-recurring-expense/commands/organization-recurring-expense.create.command.ts","webpack:///./src/app/organization-recurring-expense/commands/organization-recurring-expense.delete.command.ts","webpack:///./src/app/organization-recurring-expense/commands/organization-recurring-expense.edit.command.ts","webpack:///./src/app/organization-recurring-expense/organization-recurring-expense.controller.ts","webpack:///./src/app/organization-recurring-expense/organization-recurring-expense.entity.ts","webpack:///./src/app/organization-recurring-expense/organization-recurring-expense.module.ts","webpack:///./src/app/organization-recurring-expense/organization-recurring-expense.seed.ts","webpack:///./src/app/organization-recurring-expense/organization-recurring-expense.service.ts","webpack:///./src/app/organization-recurring-expense/queries/handlers/index.ts","webpack:///./src/app/organization-recurring-expense/queries/handlers/organization-recurring-expense.by-month.handler.ts","webpack:///./src/app/organization-recurring-expense/queries/handlers/organization-recurring-expense.find-split-expense.handler.ts","webpack:///./src/app/organization-recurring-expense/queries/handlers/organization-recurring-expense.start-date-update-type.handler.ts","webpack:///./src/app/organization-recurring-expense/queries/organization-recurring-expense.by-month.query.ts","webpack:///./src/app/organization-recurring-expense/queries/organization-recurring-expense.find-split-expense.query.ts","webpack:///./src/app/organization-recurring-expense/queries/organization-recurring-expense.update-type.query.ts","webpack:///./src/app/organization-sprint/commands/handlers/index.ts","webpack:///./src/app/organization-sprint/commands/handlers/organization-sprint.update.handler.ts","webpack:///./src/app/organization-sprint/commands/organization-sprint.update.command.ts","webpack:///./src/app/organization-sprint/organization-sprint.controller.ts","webpack:///./src/app/organization-sprint/organization-sprint.entity.ts","webpack:///./src/app/organization-sprint/organization-sprint.module.ts","webpack:///./src/app/organization-sprint/organization-sprint.seed.ts","webpack:///./src/app/organization-sprint/organization-sprint.service.ts","webpack:///./src/app/organization-team-employee/organization-team-employee.entity.ts","webpack:///./src/app/organization-team-employee/organization-team-employee.module.ts","webpack:///./src/app/organization-team-employee/organization-team-employee.seed.ts","webpack:///./src/app/organization-team-employee/organization-team-employee.service.ts","webpack:///./src/app/organization-team/default-organization-teams.ts","webpack:///./src/app/organization-team/organization-team.controller.ts","webpack:///./src/app/organization-team/organization-team.entity.ts","webpack:///./src/app/organization-team/organization-team.module.ts","webpack:///./src/app/organization-team/organization-team.seed.ts","webpack:///./src/app/organization-team/organization-team.service.ts","webpack:///./src/app/organization-vendors/organization-vendors.controller.ts","webpack:///./src/app/organization-vendors/organization-vendors.entity.ts","webpack:///./src/app/organization-vendors/organization-vendors.module.ts","webpack:///./src/app/organization-vendors/organization-vendors.seed.ts","webpack:///./src/app/organization-vendors/organization-vendors.service.ts","webpack:///./src/app/organization/commands/handlers/index.ts","webpack:///./src/app/organization/commands/handlers/organization.create.handler.ts","webpack:///./src/app/organization/commands/handlers/organization.update.handler.ts","webpack:///./src/app/organization/commands/index.ts","webpack:///./src/app/organization/commands/organization.create.command.ts","webpack:///./src/app/organization/commands/organization.update.command.ts","webpack:///./src/app/organization/default-organizations.ts","webpack:///./src/app/organization/organization.controller.ts","webpack:///./src/app/organization/organization.entity.ts","webpack:///./src/app/organization/organization.module.ts","webpack:///./src/app/organization/organization.seed.ts","webpack:///./src/app/organization/organization.service.ts","webpack:///./src/app/organization_employee-level/default-organization-employee-levels.ts","webpack:///./src/app/organization_employee-level/organization-employee-level.controller.ts","webpack:///./src/app/organization_employee-level/organization-employee-level.entity.ts","webpack:///./src/app/organization_employee-level/organization-employee-level.module.ts","webpack:///./src/app/organization_employee-level/organization-employee-level.seed.ts","webpack:///./src/app/organization_employee-level/organization-employee-level.service.ts","webpack:///./src/app/payment/payment.controller.ts","webpack:///./src/app/payment/payment.entity.ts","webpack:///./src/app/payment/payment.map.service.ts","webpack:///./src/app/payment/payment.module.ts","webpack:///./src/app/payment/payment.seed.ts","webpack:///./src/app/payment/payment.service.ts","webpack:///./src/app/pipeline-stage/pipeline-stage.entity.ts","webpack:///./src/app/pipeline-stage/pipeline-stage.module.ts","webpack:///./src/app/pipeline-stage/pipeline-stage.seed.ts","webpack:///./src/app/pipeline-stage/pipeline-stage.service.ts","webpack:///./src/app/pipeline/pipeline.controller.ts","webpack:///./src/app/pipeline/pipeline.entity.ts","webpack:///./src/app/pipeline/pipeline.module.ts","webpack:///./src/app/pipeline/pipeline.seed.ts","webpack:///./src/app/pipeline/pipeline.service.ts","webpack:///./src/app/product-category/category.seed.ts","webpack:///./src/app/product-category/product-category-translation.entity.ts","webpack:///./src/app/product-category/product-category.controller.ts","webpack:///./src/app/product-category/product-category.entity.ts","webpack:///./src/app/product-category/product-category.module.ts","webpack:///./src/app/product-category/product-category.service.ts","webpack:///./src/app/product-option/product-option.entity.ts","webpack:///./src/app/product-option/product-option.seed.ts","webpack:///./src/app/product-option/product-option.service.ts","webpack:///./src/app/product-settings/product-settings.controller.ts","webpack:///./src/app/product-settings/product-settings.entity.ts","webpack:///./src/app/product-settings/product-settings.module.ts","webpack:///./src/app/product-settings/product-settings.seed.ts","webpack:///./src/app/product-settings/product-settings.service.ts","webpack:///./src/app/product-type/product-type-translation.entity.ts","webpack:///./src/app/product-type/product-type.controller.ts","webpack:///./src/app/product-type/product-type.entity.ts","webpack:///./src/app/product-type/product-type.module.ts","webpack:///./src/app/product-type/product-type.service.ts","webpack:///./src/app/product-type/type.seed.ts","webpack:///./src/app/product-variant-price/product-variant-price-module.ts","webpack:///./src/app/product-variant-price/product-variant-price.controller.ts","webpack:///./src/app/product-variant-price/product-variant-price.entity.ts","webpack:///./src/app/product-variant-price/product-variant-price.seed.ts","webpack:///./src/app/product-variant-price/product-variant-price.service.ts","webpack:///./src/app/product-variant/commands/handlers/product-variant.create.handler.ts","webpack:///./src/app/product-variant/commands/handlers/product-variant.delete.handler.ts","webpack:///./src/app/product-variant/commands/index.ts","webpack:///./src/app/product-variant/commands/product-variant.create.command.ts","webpack:///./src/app/product-variant/commands/product-variant.delete.command.ts","webpack:///./src/app/product-variant/product-variant.controller.ts","webpack:///./src/app/product-variant/product-variant.entity.ts","webpack:///./src/app/product-variant/product-variant.module.ts","webpack:///./src/app/product-variant/product-variant.seed.ts","webpack:///./src/app/product-variant/product-variant.service.ts","webpack:///./src/app/product/commands/handlers/product.create.handler.ts","webpack:///./src/app/product/commands/handlers/product.delete.handler.ts","webpack:///./src/app/product/commands/handlers/product.update.handler.ts","webpack:///./src/app/product/commands/index.ts","webpack:///./src/app/product/commands/product.create.command.ts","webpack:///./src/app/product/commands/product.delete.command.ts","webpack:///./src/app/product/commands/product.update.command.ts","webpack:///./src/app/product/product.controller.ts","webpack:///./src/app/product/product.entity.ts","webpack:///./src/app/product/product.module.ts","webpack:///./src/app/product/product.seed.ts","webpack:///./src/app/product/product.service.ts","webpack:///./src/app/proposal/commands/handlers/index.ts","webpack:///./src/app/proposal/commands/handlers/proposal-create.handler.ts","webpack:///./src/app/proposal/commands/proposal-create.command.ts","webpack:///./src/app/proposal/proposal.controller.ts","webpack:///./src/app/proposal/proposal.entity.ts","webpack:///./src/app/proposal/proposal.module.ts","webpack:///./src/app/proposal/proposal.seed.ts","webpack:///./src/app/proposal/proposal.service.ts","webpack:///./src/app/reports/report-category.controller.ts","webpack:///./src/app/reports/report-category.entity.ts","webpack:///./src/app/reports/report-category.service.ts","webpack:///./src/app/reports/report-organization.entity.ts","webpack:///./src/app/reports/report.controller.ts","webpack:///./src/app/reports/report.entity.ts","webpack:///./src/app/reports/report.module.ts","webpack:///./src/app/reports/report.seed.ts","webpack:///./src/app/reports/report.service.ts","webpack:///./src/app/request-approval-employee/request-approval-employee.entity.ts","webpack:///./src/app/request-approval-employee/request-approval-employee.module.ts","webpack:///./src/app/request-approval-employee/request-approval-employee.seed.ts","webpack:///./src/app/request-approval-team/request-approval-team.entity.ts","webpack:///./src/app/request-approval-team/request-approval-team.module.ts","webpack:///./src/app/request-approval-team/request-approval-team.seed.ts","webpack:///./src/app/request-approval/commands/handlers/request-approval.status.handler.ts","webpack:///./src/app/request-approval/commands/index.ts","webpack:///./src/app/request-approval/commands/request-approval.status.command.ts","webpack:///./src/app/request-approval/request-approval.controller.ts","webpack:///./src/app/request-approval/request-approval.entity.ts","webpack:///./src/app/request-approval/request-approval.module.ts","webpack:///./src/app/request-approval/request-approval.seed.ts","webpack:///./src/app/request-approval/request-approval.service.ts","webpack:///./src/app/role-permissions/default-role-permissions.ts","webpack:///./src/app/role-permissions/role-permissions.controller.ts","webpack:///./src/app/role-permissions/role-permissions.entity.ts","webpack:///./src/app/role-permissions/role-permissions.module.ts","webpack:///./src/app/role-permissions/role-permissions.seed.ts","webpack:///./src/app/role-permissions/role-permissions.service.ts","webpack:///./src/app/role/commands/handlers/index.ts","webpack:///./src/app/role/commands/handlers/tenant-role-bulk-create.handler.ts","webpack:///./src/app/role/commands/tenant-role-bulk-create.command.ts","webpack:///./src/app/role/role.controller.ts","webpack:///./src/app/role/role.entity.ts","webpack:///./src/app/role/role.module.ts","webpack:///./src/app/role/role.seed.ts","webpack:///./src/app/role/role.service.ts","webpack:///./src/app/shared/decorators/permissions.ts","webpack:///./src/app/shared/decorators/roles.ts","webpack:///./src/app/shared/guards/auth/organization-permission.guard.ts","webpack:///./src/app/shared/guards/auth/permission.guard.ts","webpack:///./src/app/shared/guards/auth/role.guard.ts","webpack:///./src/app/shared/guards/auth/tenant-base.guard .ts","webpack:///./src/app/shared/guards/auth/tenant-permission.guard.ts","webpack:///./src/app/shared/handlers/index.ts","webpack:///./src/app/shared/handlers/recurring-expense.delete.handler.ts","webpack:///./src/app/shared/handlers/recurring-expense.edit.handler.ts","webpack:///./src/app/shared/handlers/recurring-expense.find-by-month.handler.ts","webpack:///./src/app/shared/handlers/recurring-expense.find-update-type.handler.ts","webpack:///./src/app/shared/handlers/update-entity.by-member.handler.ts","webpack:///./src/app/shared/index.ts","webpack:///./src/app/shared/pipes/index.ts","webpack:///./src/app/shared/pipes/parse-json.pipe.ts","webpack:///./src/app/shared/pipes/uuid-validation.pipe.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/skills/default-skills.ts","webpack:///./src/app/skills/skill.controller.ts","webpack:///./src/app/skills/skill.entity.ts","webpack:///./src/app/skills/skill.module.ts","webpack:///./src/app/skills/skill.seed.ts","webpack:///./src/app/skills/skill.service.ts","webpack:///./src/app/tags/default-tags.ts","webpack:///./src/app/tags/tag.controller.ts","webpack:///./src/app/tags/tag.entity.ts","webpack:///./src/app/tags/tag.module.ts","webpack:///./src/app/tags/tag.seed.ts","webpack:///./src/app/tags/tag.service.ts","webpack:///./src/app/tasks/commands/handlers/index.ts","webpack:///./src/app/tasks/commands/handlers/task-create.handler.ts","webpack:///./src/app/tasks/commands/handlers/task-update.handler.ts","webpack:///./src/app/tasks/commands/index.ts","webpack:///./src/app/tasks/commands/task-create.command.ts","webpack:///./src/app/tasks/commands/task-update.command.ts","webpack:///./src/app/tasks/task.controller.ts","webpack:///./src/app/tasks/task.entity.ts","webpack:///./src/app/tasks/task.module.ts","webpack:///./src/app/tasks/task.seed.ts","webpack:///./src/app/tasks/task.service.ts","webpack:///./src/app/tenant/commands/handlers/index.ts","webpack:///./src/app/tenant/commands/handlers/tenant-feature-organization.create.handler.ts","webpack:///./src/app/tenant/commands/tenant-feature-organization.create.command.ts","webpack:///./src/app/tenant/tenant-setting/tenant-setting.controller.ts","webpack:///./src/app/tenant/tenant-setting/tenant-setting.entity.ts","webpack:///./src/app/tenant/tenant-setting/tenant-setting.module.ts","webpack:///./src/app/tenant/tenant-setting/tenant-setting.service.ts","webpack:///./src/app/tenant/tenant.controller.ts","webpack:///./src/app/tenant/tenant.entity.ts","webpack:///./src/app/tenant/tenant.module.ts","webpack:///./src/app/tenant/tenant.seed.ts","webpack:///./src/app/tenant/tenant.service.ts","webpack:///./src/app/time-off-policy/default-time-off-policies.ts","webpack:///./src/app/time-off-policy/time-off-policy.controller.ts","webpack:///./src/app/time-off-policy/time-off-policy.entity.ts","webpack:///./src/app/time-off-policy/time-off-policy.module.ts","webpack:///./src/app/time-off-policy/time-off-policy.seed.ts","webpack:///./src/app/time-off-policy/time-off-policy.service.ts","webpack:///./src/app/time-off-request/commands/index.ts","webpack:///./src/app/time-off-request/commands/time-off.create.command.ts","webpack:///./src/app/time-off-request/commands/time-off.status.command.ts","webpack:///./src/app/time-off-request/commands/time-off.update.command.ts","webpack:///./src/app/time-off-request/time-off-request.controller.ts","webpack:///./src/app/time-off-request/time-off-request.entity.ts","webpack:///./src/app/time-off-request/time-off-request.module.ts","webpack:///./src/app/time-off-request/time-off-request.seed.ts","webpack:///./src/app/time-off-request/time-off-request.service.ts","webpack:///./src/app/timesheet/activity.entity.ts","webpack:///./src/app/timesheet/activity/activities.seed.ts","webpack:///./src/app/timesheet/activity/activity.controller.ts","webpack:///./src/app/timesheet/activity/activity.map.service.ts","webpack:///./src/app/timesheet/activity/activity.service.ts","webpack:///./src/app/timesheet/activity/commands/bulk-activities-save.command.ts","webpack:///./src/app/timesheet/activity/commands/handlers/bulk-activities-save.handler.ts","webpack:///./src/app/timesheet/activity/commands/handlers/index.ts","webpack:///./src/app/timesheet/commands/activity-create.command.ts","webpack:///./src/app/timesheet/commands/handlers/activity-create.handler.ts","webpack:///./src/app/timesheet/commands/handlers/index.ts","webpack:///./src/app/timesheet/commands/handlers/screenshot-create.handler.ts","webpack:///./src/app/timesheet/commands/handlers/time-slot-create.handler.ts","webpack:///./src/app/timesheet/commands/handlers/timesheet-create.handler.ts","webpack:///./src/app/timesheet/commands/handlers/timesheet-get.handler.ts","webpack:///./src/app/timesheet/commands/index.ts","webpack:///./src/app/timesheet/commands/screenshot-create.command.ts","webpack:///./src/app/timesheet/commands/time-slot-create.command.ts","webpack:///./src/app/timesheet/commands/timesheet-create.command.ts","webpack:///./src/app/timesheet/commands/timesheet-get.command.ts","webpack:///./src/app/timesheet/screenshot.entity.ts","webpack:///./src/app/timesheet/screenshot/screenshot.controller.ts","webpack:///./src/app/timesheet/screenshot/screenshot.seed.ts","webpack:///./src/app/timesheet/screenshot/screenshot.service.ts","webpack:///./src/app/timesheet/statistic/statistic.controller.ts","webpack:///./src/app/timesheet/statistic/statistic.service.ts","webpack:///./src/app/timesheet/time-log.entity.ts","webpack:///./src/app/timesheet/time-log/commands/delete-time-span.command.ts","webpack:///./src/app/timesheet/time-log/commands/get-conflict-time-log.command.ts","webpack:///./src/app/timesheet/time-log/commands/get-time-log-group-by-client.command.ts","webpack:///./src/app/timesheet/time-log/commands/get-time-log-group-by-date.command.ts","webpack:///./src/app/timesheet/time-log/commands/get-time-log-group-by-employee.command.ts","webpack:///./src/app/timesheet/time-log/commands/get-time-log-group-by-project.command.ts","webpack:///./src/app/timesheet/time-log/commands/handlers/delete-time-span.handler.ts","webpack:///./src/app/timesheet/time-log/commands/handlers/get-conflict-time-log.handler.ts","webpack:///./src/app/timesheet/time-log/commands/handlers/get-time-log-group-by-client.handler.ts","webpack:///./src/app/timesheet/time-log/commands/handlers/get-time-log-group-by-date.handler.ts","webpack:///./src/app/timesheet/time-log/commands/handlers/get-time-log-group-by-employee.handler.ts","webpack:///./src/app/timesheet/time-log/commands/handlers/get-time-log-group-by-project.handler.ts","webpack:///./src/app/timesheet/time-log/commands/handlers/index.ts","webpack:///./src/app/timesheet/time-log/commands/handlers/time-log-create.handler.ts","webpack:///./src/app/timesheet/time-log/commands/handlers/time-log-delete.handler.ts","webpack:///./src/app/timesheet/time-log/commands/handlers/time-log-update.handler.ts","webpack:///./src/app/timesheet/time-log/commands/time-log-create.command.ts","webpack:///./src/app/timesheet/time-log/commands/time-log-delete.command.ts","webpack:///./src/app/timesheet/time-log/commands/time-log-update.command.ts","webpack:///./src/app/timesheet/time-log/time-log.controller.ts","webpack:///./src/app/timesheet/time-log/time-log.seed.ts","webpack:///./src/app/timesheet/time-log/time-log.service.ts","webpack:///./src/app/timesheet/time-slot-minute.entity.ts","webpack:///./src/app/timesheet/time-slot.entity.ts","webpack:///./src/app/timesheet/time-slot/commands/create-time-slot-minutes.command.ts","webpack:///./src/app/timesheet/time-slot/commands/create-time-slot.command.ts","webpack:///./src/app/timesheet/time-slot/commands/delete-time-slot.command.ts","webpack:///./src/app/timesheet/time-slot/commands/handlers/create-time-slot-minutes.handler.ts","webpack:///./src/app/timesheet/time-slot/commands/handlers/create-time-slot.handler.ts","webpack:///./src/app/timesheet/time-slot/commands/handlers/delete-time-slot.handler.ts","webpack:///./src/app/timesheet/time-slot/commands/handlers/index.ts","webpack:///./src/app/timesheet/time-slot/commands/handlers/time-slot-bulk-create-or-update.handler.ts","webpack:///./src/app/timesheet/time-slot/commands/handlers/time-slot-bulk-create.handler.ts","webpack:///./src/app/timesheet/time-slot/commands/handlers/time-slot-merge.handler.ts","webpack:///./src/app/timesheet/time-slot/commands/handlers/time-slot-range-delete.handler.ts","webpack:///./src/app/timesheet/time-slot/commands/handlers/update-time-slot-minutes.handler.ts","webpack:///./src/app/timesheet/time-slot/commands/handlers/update-time-slot.handler.ts","webpack:///./src/app/timesheet/time-slot/commands/time-slot-bulk-create-or-update.command.ts","webpack:///./src/app/timesheet/time-slot/commands/time-slot-bulk-create.command.ts","webpack:///./src/app/timesheet/time-slot/commands/time-slot-merge.command.ts","webpack:///./src/app/timesheet/time-slot/commands/time-slot-range-delete.command.ts","webpack:///./src/app/timesheet/time-slot/commands/update-time-slot-minutes.command.ts","webpack:///./src/app/timesheet/time-slot/commands/update-time-slot.command.ts","webpack:///./src/app/timesheet/time-slot/time-slot.controller.ts","webpack:///./src/app/timesheet/time-slot/time-slot.seed.ts","webpack:///./src/app/timesheet/time-slot/time-slot.service.ts","webpack:///./src/app/timesheet/time-slot/utils.ts","webpack:///./src/app/timesheet/timer/timer.controller.ts","webpack:///./src/app/timesheet/timer/timer.service.ts","webpack:///./src/app/timesheet/timesheet.entity.ts","webpack:///./src/app/timesheet/timesheet.module.ts","webpack:///./src/app/timesheet/timesheet/commands/handlers/index.ts","webpack:///./src/app/timesheet/timesheet/commands/handlers/timesheet-first-or-create.handler.ts","webpack:///./src/app/timesheet/timesheet/commands/handlers/timesheet-recalculate.handler.ts","webpack:///./src/app/timesheet/timesheet/commands/handlers/timesheet-submit.handler.ts","webpack:///./src/app/timesheet/timesheet/commands/handlers/timesheet-update-status.handler.ts","webpack:///./src/app/timesheet/timesheet/commands/timesheet-first-or-create.command.ts","webpack:///./src/app/timesheet/timesheet/commands/timesheet-recalculate.command.ts","webpack:///./src/app/timesheet/timesheet/commands/timesheet-submit.command.ts","webpack:///./src/app/timesheet/timesheet/commands/timesheet-update-status.command.ts","webpack:///./src/app/timesheet/timesheet/timesheet.controller.ts","webpack:///./src/app/timesheet/timesheet/timesheet.seed.ts","webpack:///./src/app/timesheet/timesheet/timesheet.service.ts","webpack:///./src/app/upwork/upwork-transaction.service.ts","webpack:///./src/app/upwork/upwork.controller.ts","webpack:///./src/app/upwork/upwork.module.ts","webpack:///./src/app/upwork/upwork.service.ts","webpack:///./src/app/user-organization/commands/handlers/user-organization.delete.handler.ts","webpack:///./src/app/user-organization/commands/index.ts","webpack:///./src/app/user-organization/commands/user-organization.delete.command.ts","webpack:///./src/app/user-organization/user-organization.controller.ts","webpack:///./src/app/user-organization/user-organization.entity.ts","webpack:///./src/app/user-organization/user-organization.module.ts","webpack:///./src/app/user-organization/user-organization.seed.ts","webpack:///./src/app/user-organization/user-organization.services.ts","webpack:///./src/app/user/commands/handlers/index.ts","webpack:///./src/app/user/commands/handlers/user.create.handler.ts","webpack:///./src/app/user/commands/index.ts","webpack:///./src/app/user/commands/user.create.command.ts","webpack:///./src/app/user/default-users.ts","webpack:///./src/app/user/user.controller.ts","webpack:///./src/app/user/user.entity.ts","webpack:///./src/app/user/user.module.ts","webpack:///./src/app/user/user.seed.ts","webpack:///./src/app/user/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///external \"@angular/common/http\"","webpack:///external \"@angular/core\"","webpack:///external \"@apollo/client/core\"","webpack:///external \"@nestjs/common\"","webpack:///external \"@nestjs/common/utils/http-error-by-code.util\"","webpack:///external \"@nestjs/core\"","webpack:///external \"@nestjs/cqrs\"","webpack:///external \"@nestjs/passport\"","webpack:///external \"@nestjs/platform-express\"","webpack:///external \"@nestjs/serve-static\"","webpack:///external \"@nestjs/swagger\"","webpack:///external \"@nestjs/typeorm\"","webpack:///external \"@ntegral/nestjs-sentry\"","webpack:///external \"@sentry/node\"","webpack:///external \"@sentry/tracing\"","webpack:///external \"@sentry/types\"","webpack:///external \"app-root-path\"","webpack:///external \"archiver\"","webpack:///external \"aws-sdk\"","webpack:///external \"bcryptjs\"","webpack:///external \"chalk\"","webpack:///external \"class-transformer\"","webpack:///external \"class-validator\"","webpack:///external \"cls-hooked\"","webpack:///external \"cross-fetch\"","webpack:///external \"csv-parser\"","webpack:///external \"csv-writer\"","webpack:///external \"date-fns\"","webpack:///external \"dotenv\"","webpack:///external \"email-templates\"","webpack:///external \"express\"","webpack:///external \"express-session\"","webpack:///external \"faker\"","webpack:///external \"fs\"","webpack:///external \"fs-extra\"","webpack:///external \"handlebars\"","webpack:///external \"helmet\"","webpack:///external \"jsonwebtoken\"","webpack:///external \"lodash\"","webpack:///external \"mjml\"","webpack:///external \"moment\"","webpack:///external \"moment-range\"","webpack:///external \"moment-timezone\"","webpack:///external \"multer\"","webpack:///external \"multer-s3\"","webpack:///external \"nest-router\"","webpack:///external \"nestjs-i18n\"","webpack:///external \"nodemailer\"","webpack:///external \"os\"","webpack:///external \"passport\"","webpack:///external \"passport-auth0\"","webpack:///external \"passport-azure-ad-oauth2\"","webpack:///external \"passport-facebook-token\"","webpack:///external \"passport-github2\"","webpack:///external \"passport-google-oauth20\"","webpack:///external \"passport-jwt\"","webpack:///external \"passport-linkedin-oauth2\"","webpack:///external \"passport-twitter\"","webpack:///external \"path\"","webpack:///external \"request\"","webpack:///external \"rimraf\"","webpack:///external \"rxjs\"","webpack:///external \"rxjs/operators\"","webpack:///external \"sharp\"","webpack:///external \"tslib\"","webpack:///external \"typeorm\"","webpack:///external \"typeorm/query-builder/QueryPartialEntity\"","webpack:///external \"underscore\"","webpack:///external \"unleash-client\"","webpack:///external \"unzipper\"","webpack:///external \"upwork-api\"","webpack:///external \"upwork-api/lib/routers/auth.js\"","webpack:///external \"upwork-api/lib/routers/hr/engagements.js\"","webpack:///external \"upwork-api/lib/routers/hr/freelancers/applications.js\"","webpack:///external \"upwork-api/lib/routers/hr/freelancers/offers.js\"","webpack:///external \"upwork-api/lib/routers/jobs/profile.js\"","webpack:///external \"upwork-api/lib/routers/organization/users.js\"","webpack:///external \"upwork-api/lib/routers/reports/finance/billings.js\"","webpack:///external \"upwork-api/lib/routers/reports/finance/earnings.js\"","webpack:///external \"upwork-api/lib/routers/reports/time.js\"","webpack:///external \"upwork-api/lib/routers/snapshot.js\"","webpack:///external \"upwork-api/lib/routers/workdiary.js\"","webpack:///external \"uuid\""],"names":[],"mappings":"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;ACAA,oC;;;;;;;;;;;ACAA,4C;;;;;;;;;;;ACAA,kC;;;;;;;;;;;ACAA,+B;;;;;;;;;;;ACAA,qC;;;;;;;;;;;ACAA,uC;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,yC;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,yC;;;;;;;;;;;ACAA,4C;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,sC;;;;;;;;;;;ACAA,wC;;;;;;;;;;;ACAA,wC;;;;;;;;;;;ACAA,uC;;;;;;;;;;;ACAA,+B;;;;;;;;;;;ACAA,qC;;;;;;;;;;;ACAA,2C;;;;;;;;;;;ACAA,qD;;;;;;;;;;;ACAA,oD;;;;;;;;;;;ACAA,6C;;;;;;;;;;;ACAA,oD;;;;;;;;;;;ACAA,yC;;;;;;;;;;;ACAA,qD;;;;;;;;;;;ACAA,6C;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,oC;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,2C;;;;;;;;;;;ACAA,kC;;;;;;;;;;;ACAA,kC;;;;;;;;;;;ACAA,oC;;;;;;;;;;;ACAA,qE;;;;;;;;;;;ACAA,uC;;;;;;;;;;;ACAA,2C;;;;;;;;;;;ACAA,qC;;;;;;;;;;;ACAA,uC;;;;;;;;;;;ACAA,2D;;;;;;;;;;;ACAA,qE;;;;;;;;;;;ACAA,kF;;;;;;;;;;;ACAA,4E;;;;;;;;;;;ACAA,mE;;;;;;;;;;;ACAA,yE;;;;;;;;;;;ACAA,+E;;;;;;;;;;;ACAA,+E;;;;;;;;;;;ACAA,mE;;;;;;;;;;;ACAA,+D;;;;;;;;;;;ACAA,gE;;;;;;;;;;;ACAA,iC","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export * from './lib/sdk/gauzy-ai-sdk';\r\nexport * from './lib/gauzy-ai.service';\r\n","// import * as _ from 'underscore';\r\nimport { Injectable, Logger } from '@nestjs/common';\r\nimport {\r\n\tEmployee,\r\n\tEmployeeJobPostsDocument,\r\n\tEmployeeJobPostsQuery,\r\n\tEmployeeQuery,\r\n\tUpdateEmployeeJobPost,\r\n\tUpworkJobsSearchCriterion\r\n} from './sdk/gauzy-ai-sdk';\r\nimport { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';\r\nimport fetch from 'cross-fetch';\r\nimport {\r\n\tApolloClient,\r\n\tApolloQueryResult,\r\n\tNormalizedCacheObject,\r\n\tHttpLink,\r\n\tInMemoryCache,\r\n\tDefaultOptions,\r\n\tNetworkStatus,\r\n\tgql\r\n} from '@apollo/client/core';\r\nimport {\r\n\tIEmployeeUpworkJobsSearchCriterion,\r\n\tIEmployee,\r\n\tIVisibilityJobPostInput,\r\n\tIApplyJobPostInput,\r\n\tIUpdateEmployeeJobPostAppliedResult,\r\n\tIGetEmployeeJobPostInput,\r\n\tIPagination,\r\n\tIEmployeeJobPost,\r\n\tIJobPost,\r\n\tIGetEmployeeJobPostFilters,\r\n\tJobPostStatusEnum,\r\n\tJobPostTypeEnum,\r\n\tIEmployeeJobsStatistics\r\n} from '@gauzy/models';\r\n\r\n@Injectable()\r\nexport class GauzyAIService {\r\n\tprivate readonly _logger = new Logger(GauzyAIService.name);\r\n\tprivate _client: ApolloClient<NormalizedCacheObject>;\r\n\r\n\t// For now, we disable Apollo client caching for all GraphQL queries and mutations\r\n\tprivate readonly defaultOptions: DefaultOptions = {\r\n\t\twatchQuery: {\r\n\t\t\tfetchPolicy: 'no-cache',\r\n\t\t\terrorPolicy: 'ignore'\r\n\t\t},\r\n\t\tquery: {\r\n\t\t\tfetchPolicy: 'no-cache',\r\n\t\t\terrorPolicy: 'all'\r\n\t\t},\r\n\t\tmutate: {\r\n\t\t\tfetchPolicy: 'no-cache',\r\n\t\t\terrorPolicy: 'all'\r\n\t\t}\r\n\t};\r\n\r\n\tprivate gauzyAIGraphQLEndpoint: string;\r\n\r\n\tprivate initClient() {\r\n\t\tthis._client = new ApolloClient({\r\n\t\t\ttypeDefs: EmployeeJobPostsDocument,\r\n\t\t\tlink: new HttpLink({\r\n\t\t\t\t// TODO: use endpoint from .env. We probably should inject settings into constructor for this.\r\n\t\t\t\turi: this.gauzyAIGraphQLEndpoint,\r\n\t\t\t\tfetch\r\n\t\t\t}),\r\n\t\t\tcache: new InMemoryCache(),\r\n\t\t\tdefaultOptions: this.defaultOptions\r\n\t\t});\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\ttry {\r\n\t\t\t// TODO: read from constructor injected parameter (e.g. config service)\r\n\t\t\tthis.gauzyAIGraphQLEndpoint = process.env.GAUZY_AI_GRAPHQL_ENDPOINT;\r\n\r\n\t\t\tif (this.gauzyAIGraphQLEndpoint) {\r\n\t\t\t\tthis._logger.log(\r\n\t\t\t\t\t'Gauzy AI Endpoint configured in the environment'\r\n\t\t\t\t);\r\n\r\n\t\t\t\tthis.initClient();\r\n\r\n\t\t\t\tconst testConnectionQuery = async () => {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tconst employeesQuery: DocumentNode<EmployeeQuery> = gql`\r\n\t\t\t\t\t\t\tquery employee {\r\n\t\t\t\t\t\t\t\temployees {\r\n\t\t\t\t\t\t\t\t\tedges {\r\n\t\t\t\t\t\t\t\t\t\tnode {\r\n\t\t\t\t\t\t\t\t\t\t\tid\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\ttotalCount\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t`;\r\n\r\n\t\t\t\t\t\tconst employeesQueryResult: ApolloQueryResult<EmployeeQuery> = await this._client.query<\r\n\t\t\t\t\t\t\tEmployeeQuery\r\n\t\t\t\t\t\t>({\r\n\t\t\t\t\t\t\tquery: employeesQuery\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\temployeesQueryResult.networkStatus ===\r\n\t\t\t\t\t\t\tNetworkStatus.error\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\tthis._client = null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\tthis._logger.error(err);\r\n\t\t\t\t\t\tthis._client = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\ttestConnectionQuery();\r\n\t\t\t} else {\r\n\t\t\t\tthis._logger.warn(\r\n\t\t\t\t\t'Gauzy AI Endpoint not configured in the environment'\r\n\t\t\t\t);\r\n\t\t\t\tthis._client = null;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tthis._logger.error(err);\r\n\t\t\tthis._client = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get statistic from Gauzy AI about how many jobs are available for given employee\r\n\t * and to how many of jobs employee already applied and more statistic in the future.\r\n\t */\r\n\tpublic async getEmployeesStatistics(): Promise<IEmployeeJobsStatistics[]> {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Updates in Gauzy AI if given Employee looking for a jobs or not.\r\n\t * If not looking, Gauzy AI will NOT return jobs for such employee and will NOT crawl sources for jobs for such employee\r\n\t * @param employeeId\r\n\t * @param isJobSearchActive\r\n\t */\r\n\tpublic async updateEmployeeStatus(\r\n\t\temployeeId: string,\r\n\t\tisJobSearchActive: boolean\r\n\t): Promise<boolean> {\r\n\t\tif (this._client == null) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// First we need to get employee id because we have only externalId\r\n\t\tconst gauzyAIEmployeeId = await this.getEmployeeGauzyAIId(employeeId);\r\n\r\n\t\tconsole.log(\r\n\t\t\t`updateVisibility called. EmployeeId: ${employeeId}. Gauzy AI EmployeeId: ${gauzyAIEmployeeId}`\r\n\t\t);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates job visibility\r\n\t * @param hide Should job be hidden or visible. This will set isActive field to false in Gauzy AI\r\n\t * @param employeeId If employeeId set, job will be set not active only for that specific employee (using EmployeeJobPost record update in Gauzy AI)\r\n\t * If employeeId is not set, job will be set not active for all employees (using JobPost record update in Gauzy AI)\r\n\t * @param providerCode e.g. 'upwork'\r\n\t * @param providerJobId Unique job id in the provider, e.g. in Upwork. If this value is not set, it will update ALL jobs for given provider\r\n\t */\r\n\tpublic async updateVisibility(\r\n\t\tinput: IVisibilityJobPostInput\r\n\t): Promise<boolean> {\r\n\t\tif (this._client == null) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// If it's for specific employee and specific job\r\n\t\tif (input.employeeId && input.providerCode && input.providerJobId) {\r\n\t\t\t// First we need to get employee id because we have only externalId\r\n\t\t\tconst employeeId = await this.getEmployeeGauzyAIId(\r\n\t\t\t\tinput.employeeId\r\n\t\t\t);\r\n\r\n\t\t\tconsole.log(`updateVisibility called. EmployeeId: ${employeeId}`);\r\n\r\n\t\t\t// Next we need to get a job using providerCode and providerJobId\r\n\t\t\tconst jobPostId = await this.getJobPostId(\r\n\t\t\t\tinput.providerCode,\r\n\t\t\t\tinput.providerJobId\r\n\t\t\t);\r\n\r\n\t\t\tconsole.log(`updateVisibility called. jobPostId: ${jobPostId}`);\r\n\r\n\t\t\t// Next, we need to find `public employee job post` table record in Gauzy AI to get id of record.\r\n\t\t\t// We can find by employeeId and jobPostId\r\n\r\n\t\t\tconst employeeJobPostId = await this.getEmployeeJobPostId(\r\n\t\t\t\temployeeId,\r\n\t\t\t\tjobPostId\r\n\t\t\t);\r\n\r\n\t\t\tconsole.log(\r\n\t\t\t\t`updateVisibility called. employeeJobPostId: ${employeeJobPostId}`\r\n\t\t\t);\r\n\r\n\t\t\tif (employeeId && jobPostId && employeeJobPostId) {\r\n\t\t\t\tconst update: UpdateEmployeeJobPost = {\r\n\t\t\t\t\temployeeId: employeeId,\r\n\t\t\t\t\tjobPostId: jobPostId,\r\n\t\t\t\t\tisActive: !input.hide,\r\n\t\t\t\t\tisArchived: input.hide\r\n\t\t\t\t};\r\n\r\n\t\t\t\tconst updateEmployeeJobPostMutation: DocumentNode<any> = gql`\r\n\t\t\t\t\tmutation updateOneEmployeeJobPost(\r\n\t\t\t\t\t\t$input: UpdateOneEmployeeJobPostInput!\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tupdateOneEmployeeJobPost(input: $input) {\r\n\t\t\t\t\t\t\temployeeId\r\n\t\t\t\t\t\t\tjobPostId\r\n\t\t\t\t\t\t\tisActive\r\n\t\t\t\t\t\t\tisArchived\r\n\t\t\t\t\t\t\tisApplied\r\n\t\t\t\t\t\t\tappliedDate\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t`;\r\n\r\n\t\t\t\tawait this._client.mutate({\r\n\t\t\t\t\tmutation: updateEmployeeJobPostMutation,\r\n\t\t\t\t\tvariables: {\r\n\t\t\t\t\t\tinput: {\r\n\t\t\t\t\t\t\tid: employeeJobPostId,\r\n\t\t\t\t\t\t\tupdate: update\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// OK, so it's for all jobs for all employees or for all jobs on specific employee\r\n\t\t\t// TODO: implement\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates if Employee Applied to a job\r\n\t * @param applied This will set isApplied and appliedDate fields in Gauzy AI\r\n\t * @param employeeId Employee who applied for a job\r\n\t * @param providerCode e.g. 'upwork'\r\n\t * @p  aram providerJobId Unique job id in the provider, e.g. in Upwork\r\n\t */\r\n\tpublic async updateApplied(\r\n\t\tinput: IApplyJobPostInput\r\n\t): Promise<IUpdateEmployeeJobPostAppliedResult> {\r\n\t\tif (this._client == null) {\r\n\t\t\treturn { isRedirectRequired: true };\r\n\t\t}\r\n\r\n\t\t// First we need to get employee id because we have only externalId\r\n\t\tconst employeeId = await this.getEmployeeGauzyAIId(input.employeeId);\r\n\r\n\t\tconsole.log(`updateApplied called. EmployeeId: ${employeeId}`);\r\n\r\n\t\t// Next we need to get a job using providerCode and providerJobId\r\n\t\tconst jobPostId = await this.getJobPostId(\r\n\t\t\tinput.providerCode,\r\n\t\t\tinput.providerJobId\r\n\t\t);\r\n\r\n\t\tconsole.log(`updateApplied called. jobPostId: ${jobPostId}`);\r\n\r\n\t\t// Next, we need to find `public employee job post` table record in Gauzy AI to get id of record.\r\n\t\t// We can find by employeeId and jobPostId\r\n\r\n\t\tconst employeeJobPostId = await this.getEmployeeJobPostId(\r\n\t\t\temployeeId,\r\n\t\t\tjobPostId\r\n\t\t);\r\n\r\n\t\tconsole.log(\r\n\t\t\t`updateApplied called. employeeJobPostId: ${employeeJobPostId}`\r\n\t\t);\r\n\r\n\t\tif (employeeId && jobPostId && employeeJobPostId) {\r\n\t\t\tconst update: UpdateEmployeeJobPost = {\r\n\t\t\t\temployeeId: employeeId,\r\n\t\t\t\tjobPostId: jobPostId,\r\n\t\t\t\tisApplied: input.applied\r\n\t\t\t};\r\n\r\n\t\t\tconst updateEmployeeJobPostMutation: DocumentNode<any> = gql`\r\n\t\t\t\tmutation updateOneEmployeeJobPost(\r\n\t\t\t\t\t$input: UpdateOneEmployeeJobPostInput!\r\n\t\t\t\t) {\r\n\t\t\t\t\tupdateOneEmployeeJobPost(input: $input) {\r\n\t\t\t\t\t\temployeeId\r\n\t\t\t\t\t\tjobPostId\r\n\t\t\t\t\t\tisActive\r\n\t\t\t\t\t\tisArchived\r\n\t\t\t\t\t\tisApplied\r\n\t\t\t\t\t\tappliedDate\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t`;\r\n\r\n\t\t\tawait this._client.mutate({\r\n\t\t\t\tmutation: updateEmployeeJobPostMutation,\r\n\t\t\t\tvariables: {\r\n\t\t\t\t\tinput: {\r\n\t\t\t\t\t\tid: employeeJobPostId,\r\n\t\t\t\t\t\tupdate: update\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// TODO: here we need to check what returned from Gauzy AI\r\n\t\t// Because for some providers (e.g. Upwork), redirect to apply manually required\r\n\t\t// But for other providers, apply can work inside Gauzy AI automatically\r\n\t\treturn { isRedirectRequired: true };\r\n\t}\r\n\r\n\t// We call this on each \"Save\" operation for matching for employee.\r\n\t// Both when Preset saved for given employee and when any criteria saved for given employee (new criteria or changes in criteria)\r\n\t// You should pass `employee` entity for which anything on Matching page was changes\r\n\t// IMPORTANT: You should ALWAYS pass ALL criteria defined for given employee on Matching page, not only new or changed!\r\n\t// Best way to call this method, is to reload from Gauzy DB all criteria for given employee before call this method.\r\n\t// We DO NOT USE DATA YOU PASS FROM UI!\r\n\t// INSTEAD, We CALL THIS METHOD FROM YOUR CQRS COMMAND HANDLERS when you detect that anything related to matching changes\r\n\t// But as explained above, we must reload criteria from DB, not use anything you have in the local variables\r\n\t// (because it might not be full data, but this method requires all data to be synced to Gauzy AI, even if such data was previously already synced)\r\n\t// How this method will work internally:\r\n\t// - it will call sync for employee first and if no such employee exists in Gauzy AI, it will create new. If exists, it will update employee properties, e.g. lastName\r\n\t// - next, it will remove all criteria for employee in Gauzy AI and create new records again for criterions.\r\n\t// I.e. no update will be done, it will be full replacement\r\n\t// The reason it's acceptable is because such data changes rarely for given employee, so it's totally fine to recreate it\r\n\t// NOTE: will need to call this method from multiple different CQRS command handlers!\r\n\tpublic async syncGauzyEmployeeJobSearchCriteria(\r\n\t\temployee: IEmployee,\r\n\t\tcriteria: IEmployeeUpworkJobsSearchCriterion[]\r\n\t): Promise<boolean> {\r\n\t\tif (this._client == null) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tconsole.log(\r\n\t\t\t`syncGauzyEmployeeJobSearchCriteria called. Criteria: ${JSON.stringify(\r\n\t\t\t\tcriteria\r\n\t\t\t)}. Employee: ${JSON.stringify(employee)}`\r\n\t\t);\r\n\r\n\t\ttry {\r\n\t\t\tconst gauzyAIEmployee: Employee = await this.syncEmployee({\r\n\t\t\t\texternalEmployeeId: employee.id,\r\n\t\t\t\tisActive: employee.isActive,\r\n\t\t\t\tisArchived: false,\r\n\t\t\t\tupworkJobSearchCriteria: undefined,\r\n\t\t\t\tupworkJobSearchCriteriaAggregate: undefined,\r\n\t\t\t\tfirstName: employee.user.firstName,\r\n\t\t\t\tlastName: employee.user.lastName\r\n\t\t\t});\r\n\r\n\t\t\tconsole.log(`Synced Employee ${JSON.stringify(gauzyAIEmployee)}`);\r\n\r\n\t\t\t// let's delete all criteria for Employee\r\n\r\n\t\t\tconst deleteAllCriteriaMutation: DocumentNode<any> = gql`\r\n\t\t\t\tmutation deleteManyUpworkJobsSearchCriteria(\r\n\t\t\t\t\t$input: DeleteManyUpworkJobsSearchCriteriaInput!\r\n\t\t\t\t) {\r\n\t\t\t\t\tdeleteManyUpworkJobsSearchCriteria(input: $input) {\r\n\t\t\t\t\t\tdeletedCount\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t`;\r\n\r\n\t\t\tconst deleteMutationResult = await this._client.mutate({\r\n\t\t\t\tmutation: deleteAllCriteriaMutation,\r\n\t\t\t\tvariables: {\r\n\t\t\t\t\tinput: {\r\n\t\t\t\t\t\tfilter: {\r\n\t\t\t\t\t\t\tisActive: {\r\n\t\t\t\t\t\t\t\tis: true\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\temployeeId: {\r\n\t\t\t\t\t\t\t\teq: gauzyAIEmployee.id\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tconsole.log(\r\n\t\t\t\t`Delete Existed Criterions count: ${JSON.stringify(\r\n\t\t\t\t\tdeleteMutationResult.data.deleteManyUpworkJobsSearchCriteria\r\n\t\t\t\t\t\t.deletedCount\r\n\t\t\t\t)}`\r\n\t\t\t);\r\n\r\n\t\t\t// now let's create new criteria in Gauzy AI based on Gauzy criterions data\r\n\r\n\t\t\tif (criteria && criteria.length > 0) {\r\n\t\t\t\tconst gauzyAICriteria: UpworkJobsSearchCriterion[] = [];\r\n\r\n\t\t\t\tcriteria.forEach(\r\n\t\t\t\t\t(criterion: IEmployeeUpworkJobsSearchCriterion) => {\r\n\t\t\t\t\t\tgauzyAICriteria.push({\r\n\t\t\t\t\t\t\temployee: undefined,\r\n\t\t\t\t\t\t\temployeeId: gauzyAIEmployee.id,\r\n\t\t\t\t\t\t\tisActive: true,\r\n\t\t\t\t\t\t\tisArchived: false,\r\n\t\t\t\t\t\t\tjobType: 'hourly', // TODO: criterion.jobType\r\n\t\t\t\t\t\t\tkeyword: criterion.keyword,\r\n\t\t\t\t\t\t\tcategory: criterion.category?.name,\r\n\t\t\t\t\t\t\tcategoryId: criterion.categoryId,\r\n\t\t\t\t\t\t\toccupation: criterion.occupation?.name,\r\n\t\t\t\t\t\t\toccupationId: criterion.occupationId\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\r\n\t\t\t\tconst createCriteriaMutation: DocumentNode<any> = gql`\r\n\t\t\t\t\tmutation createManyUpworkJobsSearchCriteria(\r\n\t\t\t\t\t\t$input: CreateManyUpworkJobsSearchCriteriaInput!\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tcreateManyUpworkJobsSearchCriteria(input: $input) {\r\n\t\t\t\t\t\t\tid\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t`;\r\n\r\n\t\t\t\tconst createNewCriteriaResult = await this._client.mutate({\r\n\t\t\t\t\tmutation: createCriteriaMutation,\r\n\t\t\t\t\tvariables: {\r\n\t\t\t\t\t\tinput: {\r\n\t\t\t\t\t\t\tupworkJobsSearchCriteria: gauzyAICriteria\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t`Create New Criteria result: ${JSON.stringify(\r\n\t\t\t\t\t\tcreateNewCriteriaResult.data\r\n\t\t\t\t\t\t\t.createManyUpworkJobsSearchCriteria\r\n\t\t\t\t\t)}`\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t} catch (err) {\r\n\t\t\tthis._logger.error(err);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * Creates employees in Gauzy AI if not exists yet. If exists, updates fields, including externalEmployeeId\r\n\t * How it works:\r\n\t * - search done externalEmployeeId field first in Gauzy AI to be equal to Gauzy employee Id.\r\n\t * - if no record found in Gauzy AI, it search Gauzy AI employees records by employee name\r\n\t * - if no record found in Gauzy AI, it creates new employee in Gauzy AI\r\n\t *\r\n\t * @param employees\r\n\t */\r\n\tpublic async syncEmployees(employees: IEmployee[]): Promise<boolean> {\r\n\t\tif (this._client == null) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tawait Promise.all(\r\n\t\t\temployees.map(async (employee) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst gauzyAIEmployee: Employee = await this.syncEmployee({\r\n\t\t\t\t\t\texternalEmployeeId: employee.id,\r\n\t\t\t\t\t\tisActive: employee.isActive,\r\n\t\t\t\t\t\tisArchived: false,\r\n\t\t\t\t\t\tupworkJobSearchCriteria: undefined,\r\n\t\t\t\t\t\tupworkJobSearchCriteriaAggregate: undefined,\r\n\t\t\t\t\t\tfirstName: employee.user.firstName,\r\n\t\t\t\t\t\tlastName: employee.user.lastName\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t`Synced Employee ${JSON.stringify(gauzyAIEmployee)}`\r\n\t\t\t\t\t);\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tthis._logger.error(err);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tprivate async getEmployeeJobPostId(\r\n\t\temployeeId: string,\r\n\t\tjobPostId: string\r\n\t): Promise<string> {\r\n\t\tconst employeeJobPostsQuery = gql`\r\n\t\t\tquery employeeJobPostsByEmployeeIdJobPostId(\r\n\t\t\t\t$employeeIdFilter: String!\r\n\t\t\t\t$jobPostIdFilter: String!\r\n\t\t\t) {\r\n\t\t\t\temployeeJobPosts(\r\n\t\t\t\t\tfilter: {\r\n\t\t\t\t\t\temployeeId: { eq: $employeeIdFilter }\r\n\t\t\t\t\t\tjobPostId: { eq: $jobPostIdFilter }\r\n\t\t\t\t\t}\r\n\t\t\t\t) {\r\n\t\t\t\t\tedges {\r\n\t\t\t\t\t\tnode {\r\n\t\t\t\t\t\t\tid\r\n\t\t\t\t\t\t\tisActive\r\n\t\t\t\t\t\t\tisArchived\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t`;\r\n\r\n\t\tconst employeeJobPostsQueryResult = await this._client.query<any>({\r\n\t\t\tquery: employeeJobPostsQuery,\r\n\t\t\tvariables: {\r\n\t\t\t\temployeeIdFilter: employeeId,\r\n\t\t\t\tjobPostIdFilter: jobPostId\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst employeeJobPostsResponse =\r\n\t\t\temployeeJobPostsQueryResult.data.employeeJobPosts.edges;\r\n\r\n\t\tif (employeeJobPostsResponse && employeeJobPostsResponse.length > 0) {\r\n\t\t\treturn employeeJobPostsResponse[0].node.id;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tprivate async getJobPostId(\r\n\t\tproviderCode: string,\r\n\t\tproviderJobId: string\r\n\t): Promise<string> {\r\n\t\tconst jobPostsQuery = gql`\r\n\t\t\tquery jobPosts(\r\n\t\t\t\t$providerCodeFilter: String!\r\n\t\t\t\t$providerJobIdFilter: String!\r\n\t\t\t) {\r\n\t\t\t\tjobPosts(\r\n\t\t\t\t\tfilter: {\r\n\t\t\t\t\t\tproviderCode: { eq: $providerCodeFilter }\r\n\t\t\t\t\t\tproviderJobId: { eq: $providerJobIdFilter }\r\n\t\t\t\t\t}\r\n\t\t\t\t) {\r\n\t\t\t\t\tedges {\r\n\t\t\t\t\t\tnode {\r\n\t\t\t\t\t\t\tid\r\n\t\t\t\t\t\t\tisActive\r\n\t\t\t\t\t\t\tisArchived\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t`;\r\n\r\n\t\tconst jobPostsQueryResult = await this._client.query<any>({\r\n\t\t\tquery: jobPostsQuery,\r\n\t\t\tvariables: {\r\n\t\t\t\tproviderCodeFilter: providerCode,\r\n\t\t\t\tproviderJobIdFilter: providerJobId\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst jobPostsResponse = jobPostsQueryResult.data.jobPosts.edges;\r\n\r\n\t\tif (jobPostsResponse && jobPostsResponse.length > 0) {\r\n\t\t\treturn jobPostsResponse[0].node.id;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tprivate async getEmployeeGauzyAIId(\r\n\t\texternalEmployeeId: string\r\n\t): Promise<string> {\r\n\t\tconst employeesQuery: DocumentNode<EmployeeQuery> = gql`\r\n\t\t\tquery employeeByExternalEmployeeId(\r\n\t\t\t\t$externalEmployeeIdFilter: String!\r\n\t\t\t) {\r\n\t\t\t\temployees(\r\n\t\t\t\t\tfilter: {\r\n\t\t\t\t\t\texternalEmployeeId: { eq: $externalEmployeeIdFilter }\r\n\t\t\t\t\t}\r\n\t\t\t\t) {\r\n\t\t\t\t\tedges {\r\n\t\t\t\t\t\tnode {\r\n\t\t\t\t\t\t\tid\r\n\t\t\t\t\t\t\texternalEmployeeId\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttotalCount\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t`;\r\n\r\n\t\tconst employeesQueryResult: ApolloQueryResult<EmployeeQuery> = await this._client.query<\r\n\t\t\tEmployeeQuery\r\n\t\t>({\r\n\t\t\tquery: employeesQuery,\r\n\t\t\tvariables: {\r\n\t\t\t\texternalEmployeeIdFilter: externalEmployeeId\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst employeesResponse = employeesQueryResult.data.employees.edges;\r\n\r\n\t\tif (employeesResponse.length > 0) {\r\n\t\t\treturn employeesResponse[0].node.id;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/** Sync Employee between Gauzy and Gauzy AI\r\n\t *  Creates new Employee in Gauzy AI if it's not yet exists there yet (it try to find by externalEmployeeId field value or by name)\r\n\t *  Update existed Gauzy AI Employee record with new data from Gauzy DB\r\n\t */\r\n\tprivate async syncEmployee(employee: Employee): Promise<Employee> {\r\n\t\t// First, let's search by employee.externalEmployeeId (which is Gauzy employeeId)\r\n\r\n\t\tlet employeesQuery: DocumentNode<EmployeeQuery> = gql`\r\n\t\t\tquery employeeByExternalEmployeeId(\r\n\t\t\t\t$externalEmployeeIdFilter: String!\r\n\t\t\t) {\r\n\t\t\t\temployees(\r\n\t\t\t\t\tfilter: {\r\n\t\t\t\t\t\texternalEmployeeId: { eq: $externalEmployeeIdFilter }\r\n\t\t\t\t\t}\r\n\t\t\t\t) {\r\n\t\t\t\t\tedges {\r\n\t\t\t\t\t\tnode {\r\n\t\t\t\t\t\t\tid\r\n\t\t\t\t\t\t\texternalEmployeeId\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttotalCount\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t`;\r\n\r\n\t\tlet employeesQueryResult: ApolloQueryResult<EmployeeQuery> = await this._client.query<\r\n\t\t\tEmployeeQuery\r\n\t\t>({\r\n\t\t\tquery: employeesQuery,\r\n\t\t\tvariables: {\r\n\t\t\t\texternalEmployeeIdFilter: employee.externalEmployeeId\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tlet employeesResponse = employeesQueryResult.data.employees.edges;\r\n\r\n\t\tlet isAlreadyCreated = employeesResponse.length > 0;\r\n\r\n\t\tconsole.log(\r\n\t\t\t`Is Employee ${employee.externalEmployeeId} already exists in Gauzy AI: ${isAlreadyCreated} by externalEmployeeId field`\r\n\t\t);\r\n\r\n\t\tif (!isAlreadyCreated) {\r\n\t\t\t// OK, so we can't find by employee.externalEmployeeId value, let's try to search by name\r\n\r\n\t\t\temployeesQuery = gql`\r\n\t\t\t\tquery employeeByName(\r\n\t\t\t\t\t$firstNameFilter: String!\r\n\t\t\t\t\t$lastNameFilter: String!\r\n\t\t\t\t) {\r\n\t\t\t\t\temployees(\r\n\t\t\t\t\t\tfilter: {\r\n\t\t\t\t\t\t\tfirstName: { eq: $firstNameFilter }\r\n\t\t\t\t\t\t\tlastName: { eq: $lastNameFilter }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tedges {\r\n\t\t\t\t\t\t\tnode {\r\n\t\t\t\t\t\t\t\tid\r\n\t\t\t\t\t\t\t\tfirstName\r\n\t\t\t\t\t\t\t\tlastName\r\n\t\t\t\t\t\t\t\texternalEmployeeId\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttotalCount\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t`;\r\n\r\n\t\t\temployeesQueryResult = await this._client.query<EmployeeQuery>({\r\n\t\t\t\tquery: employeesQuery,\r\n\t\t\t\tvariables: {\r\n\t\t\t\t\tfirstNameFilter: employee.firstName,\r\n\t\t\t\t\tlastNameFilter: employee.lastName\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\temployeesResponse = employeesQueryResult.data.employees.edges;\r\n\r\n\t\t\tisAlreadyCreated = employeesResponse.length > 0;\r\n\r\n\t\t\tconsole.log(\r\n\t\t\t\t`Is Employee ${employee.externalEmployeeId} already exists in Gauzy AI: ${isAlreadyCreated} by name fields`\r\n\t\t\t);\r\n\r\n\t\t\tif (!isAlreadyCreated) {\r\n\t\t\t\tconst createEmployeeMutation: DocumentNode<any> = gql`\r\n\t\t\t\t\tmutation createOneEmployee(\r\n\t\t\t\t\t\t$input: CreateOneEmployeeInput!\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tcreateOneEmployee(input: $input) {\r\n\t\t\t\t\t\t\tid\r\n\t\t\t\t\t\t\texternalEmployeeId\r\n\t\t\t\t\t\t\tfirstName\r\n\t\t\t\t\t\t\tlastName\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t`;\r\n\r\n\t\t\t\tconst newEmployee = await this._client.mutate({\r\n\t\t\t\t\tmutation: createEmployeeMutation,\r\n\t\t\t\t\tvariables: {\r\n\t\t\t\t\t\tinput: {\r\n\t\t\t\t\t\t\temployee\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn newEmployee.data.createOneEmployee;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// update record of employee\r\n\r\n\t\tconst id = employeesResponse[0].node.id;\r\n\r\n\t\tconst updateEmployeeMutation: DocumentNode<any> = gql`\r\n\t\t\tmutation updateOneEmployee($input: UpdateOneEmployeeInput!) {\r\n\t\t\t\tupdateOneEmployee(input: $input) {\r\n\t\t\t\t\texternalEmployeeId\r\n\t\t\t\t\tisActive\r\n\t\t\t\t\tisArchived\r\n\t\t\t\t\tfirstName\r\n\t\t\t\t\tlastName\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t`;\r\n\r\n\t\tawait this._client.mutate({\r\n\t\t\tmutation: updateEmployeeMutation,\r\n\t\t\tvariables: {\r\n\t\t\t\tinput: {\r\n\t\t\t\t\tid: id,\r\n\t\t\t\t\tupdate: employee\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn <Employee>employeesResponse[0].node;\r\n\t}\r\n\r\n\t/**\r\n\t * Get Jobs available for registered employees\r\n\t */\r\n\tpublic async getEmployeesJobPosts(\r\n\t\tdata: IGetEmployeeJobPostInput\r\n\t): Promise<IPagination<IEmployeeJobPost>> {\r\n\t\tif (this._client == null) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tconsole.log(`getEmployeesJobPosts. Data ${JSON.stringify(data)}`);\r\n\r\n\t\tconst filters: IGetEmployeeJobPostFilters = data.filters\r\n\t\t\t? JSON.parse(<any>data.filters)\r\n\t\t\t: undefined;\r\n\r\n\t\tconsole.log(`getEmployeesJobPosts. Filters ${JSON.stringify(filters)}`);\r\n\r\n\t\tconst employeeIdFilter =\r\n\t\t\tfilters && filters.employeeIds && filters.employeeIds.length > 0\r\n\t\t\t\t? filters.employeeIds[0]\r\n\t\t\t\t: undefined;\r\n\r\n\t\ttry {\r\n\t\t\t// TODO: use Query saved in SDK, not hard-code it here. Note: we may add much more fields to that query as we need more info!\r\n\t\t\tconst employeesQuery: DocumentNode<EmployeeJobPostsQuery> = gql`\r\n\t\t\t\tquery employeeJobPosts(\r\n\t\t\t\t\t$after: ConnectionCursor!\r\n\t\t\t\t\t$first: Int!\r\n\t\t\t\t\t$filter: EmployeeJobPostFilter!\r\n\t\t\t\t\t$sorting: [EmployeeJobPostSort!]\r\n\t\t\t\t) {\r\n\t\t\t\t\temployeeJobPosts(\r\n\t\t\t\t\t\tpaging: { after: $after, first: $first }\r\n\t\t\t\t\t\tfilter: $filter\r\n\t\t\t\t\t\tsorting: $sorting\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\ttotalCount\r\n\t\t\t\t\t\tpageInfo {\r\n\t\t\t\t\t\t\thasNextPage\r\n\t\t\t\t\t\t\thasPreviousPage\r\n\t\t\t\t\t\t\tstartCursor\r\n\t\t\t\t\t\t\tendCursor\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tedges {\r\n\t\t\t\t\t\t\tnode {\r\n\t\t\t\t\t\t\t\tid\r\n\t\t\t\t\t\t\t\tisApplied\r\n\t\t\t\t\t\t\t\tappliedDate\r\n\t\t\t\t\t\t\t\tcreatedAt\r\n\t\t\t\t\t\t\t\tupdatedAt\r\n\t\t\t\t\t\t\t\tisActive\r\n\t\t\t\t\t\t\t\tisArchived\r\n\t\t\t\t\t\t\t\temployee {\r\n\t\t\t\t\t\t\t\t\tid\r\n\t\t\t\t\t\t\t\t\texternalEmployeeId\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tproviderCode\r\n\t\t\t\t\t\t\t\tproviderJobId\r\n\t\t\t\t\t\t\t\tjobDateCreated\r\n\t\t\t\t\t\t\t\tjobStatus\r\n\t\t\t\t\t\t\t\tjobType\r\n\t\t\t\t\t\t\t\tjobPost {\r\n\t\t\t\t\t\t\t\t\tid\r\n\t\t\t\t\t\t\t\t\tproviderCode\r\n\t\t\t\t\t\t\t\t\tproviderJobId\r\n\t\t\t\t\t\t\t\t\ttitle\r\n\t\t\t\t\t\t\t\t\tdescription\r\n\t\t\t\t\t\t\t\t\tjobDateCreated\r\n\t\t\t\t\t\t\t\t\tjobStatus\r\n\t\t\t\t\t\t\t\t\tjobType\r\n\t\t\t\t\t\t\t\t\turl\r\n\t\t\t\t\t\t\t\t\tbudget\r\n\t\t\t\t\t\t\t\t\tduration\r\n\t\t\t\t\t\t\t\t\tworkload\r\n\t\t\t\t\t\t\t\t\tskills\r\n\t\t\t\t\t\t\t\t\tcategory\r\n\t\t\t\t\t\t\t\t\tsubcategory\r\n\t\t\t\t\t\t\t\t\tcountry\r\n\t\t\t\t\t\t\t\t\tclientFeedback\r\n\t\t\t\t\t\t\t\t\tclientReviewsCount\r\n\t\t\t\t\t\t\t\t\tclientJobsPosted\r\n\t\t\t\t\t\t\t\t\tclientPastHires\r\n\t\t\t\t\t\t\t\t\tclientPaymentVerificationStatus\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t`;\r\n\r\n\t\t\tconst jobResponses: IEmployeeJobPost[] = [];\r\n\r\n\t\t\tlet isContinue: boolean;\r\n\t\t\tlet after = '';\r\n\r\n\t\t\tconst filter = {\r\n\t\t\t\tisActive: {\r\n\t\t\t\t\tis: true\r\n\t\t\t\t},\r\n\t\t\t\tisArchived: {\r\n\t\t\t\t\tis: false\r\n\t\t\t\t},\r\n\t\t\t\temployeeId: undefined\r\n\t\t\t};\r\n\r\n\t\t\tif (employeeIdFilter) {\r\n\t\t\t\tconst employeeId = await this.getEmployeeGauzyAIId(\r\n\t\t\t\t\temployeeIdFilter\r\n\t\t\t\t);\r\n\r\n\t\t\t\tfilter.employeeId = {\r\n\t\t\t\t\teq: employeeId\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tconsole.log(`Applying filter: ${JSON.stringify(filter)}`);\r\n\r\n\t\t\tconst graphQLPageSize = 50;\r\n\r\n\t\t\t// e.g. if it's page 7 and limit is 10, it mean we need to load first 70 records, i.e. do 2 trips to server because each trip get 50 records\r\n\t\t\tconst loadCounts = Math.ceil(\r\n\t\t\t\t(data.page * data.limit) / graphQLPageSize\r\n\t\t\t);\r\n\r\n\t\t\tconsole.log(`Round trips to Gauzy API: ${loadCounts}`);\r\n\r\n\t\t\tlet currentCount = 1;\r\n\r\n\t\t\tlet totalCount;\r\n\r\n\t\t\tdo {\r\n\t\t\t\tconst result: ApolloQueryResult<EmployeeJobPostsQuery> = await this._client.query<\r\n\t\t\t\t\tEmployeeJobPostsQuery\r\n\t\t\t\t>({\r\n\t\t\t\t\tquery: employeesQuery,\r\n\t\t\t\t\tvariables: {\r\n\t\t\t\t\t\tafter: after,\r\n\t\t\t\t\t\tfirst: graphQLPageSize,\r\n\t\t\t\t\t\tsorting: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tfield: 'jobDateCreated',\r\n\t\t\t\t\t\t\t\tdirection: 'DESC'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tfilter: filter\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tconst jobsResponse = result.data.employeeJobPosts.edges.map(\r\n\t\t\t\t\t(it) => {\r\n\t\t\t\t\t\tconst rec = it.node;\r\n\r\n\t\t\t\t\t\tconst res: IEmployeeJobPost = {\r\n\t\t\t\t\t\t\temployeeId: rec.employee.externalEmployeeId,\r\n\t\t\t\t\t\t\temployee: undefined,\r\n\t\t\t\t\t\t\tjobPostId: rec.jobPost.id,\r\n\t\t\t\t\t\t\tjobPost: <IJobPost>rec.jobPost,\r\n\r\n\t\t\t\t\t\t\tjobDateCreated: rec.jobDateCreated,\r\n\t\t\t\t\t\t\tproviderCode: rec.providerCode,\r\n\t\t\t\t\t\t\tproviderJobId: rec.providerJobId,\r\n\t\t\t\t\t\t\tjobStatus: rec.jobStatus\r\n\t\t\t\t\t\t\t\t? JobPostStatusEnum[rec.jobStatus]\r\n\t\t\t\t\t\t\t\t: undefined,\r\n\t\t\t\t\t\t\tjobType: rec.jobType\r\n\t\t\t\t\t\t\t\t? JobPostTypeEnum[rec.jobType]\r\n\t\t\t\t\t\t\t\t: undefined,\r\n\r\n\t\t\t\t\t\t\tisApplied: rec.isApplied,\r\n\t\t\t\t\t\t\tappliedDate: rec.appliedDate,\r\n\t\t\t\t\t\t\tisActive: rec.isActive,\r\n\t\t\t\t\t\t\tisArchived: rec.isArchived,\r\n\t\t\t\t\t\t\tcreatedAt: rec.createdAt,\r\n\t\t\t\t\t\t\tupdatedAt: rec.updatedAt\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\treturn res;\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\r\n\t\t\t\tisContinue =\r\n\t\t\t\t\tresult.data.employeeJobPosts.pageInfo.hasNextPage &&\r\n\t\t\t\t\tcurrentCount < loadCounts;\r\n\t\t\t\tafter = result.data.employeeJobPosts.pageInfo.endCursor;\r\n\t\t\t\ttotalCount = result.data.employeeJobPosts.totalCount;\r\n\r\n\t\t\t\tjobResponses.push(...jobsResponse);\r\n\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t`Found ${jobsResponse.length} job records. IsContinue: ${isContinue}. After: ${after}`\r\n\t\t\t\t);\r\n\r\n\t\t\t\tcurrentCount++;\r\n\t\t\t} while (isContinue);\r\n\r\n\t\t\t// Note: possible to do additional client side filtering like below:\r\n\t\t\t// jobResponses = _.filter(jobResponses, (it) => it.isActive === true && it.isArchived === false);\r\n\r\n\t\t\tconsole.log(\r\n\t\t\t\t`getEmployeesJobPosts. Total Count: ${totalCount}. Page ${data.page}`\r\n\t\t\t);\r\n\r\n\t\t\tconst response: IPagination<IEmployeeJobPost> = {\r\n\t\t\t\titems: this.paginate(jobResponses, data.limit, data.page),\r\n\t\t\t\ttotal: totalCount\r\n\t\t\t};\r\n\r\n\t\t\t// console.log(`Found Records: ${JSON.stringify(response)}`);\r\n\r\n\t\t\treturn response;\r\n\t\t} catch (err) {\r\n\t\t\tthis._logger.error(err);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate paginate(array, page_size, page_number) {\r\n\t\t// human-readable page numbers usually start with 1, so we reduce 1 in the first argument\r\n\t\treturn array.slice(\r\n\t\t\t(page_number - 1) * page_size,\r\n\t\t\tpage_number * page_size\r\n\t\t);\r\n\t}\r\n}\r\n","import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';\r\nexport type Maybe<T> = T | null;\r\nexport type Exact<T extends { [key: string]: unknown }> = {\r\n\t[K in keyof T]: T[K];\r\n};\r\n/** All built-in and custom scalars, mapped to their actual values */\r\nexport type Scalars = {\r\n\tID: string;\r\n\tString: string;\r\n\tBoolean: boolean;\r\n\tInt: number;\r\n\tFloat: number;\r\n\t/** A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format. */\r\n\tDateTime: any;\r\n\t/** Cursor for paging through collections */\r\n\tConnectionCursor: any;\r\n};\r\n\r\nexport type UpworkJobsSearchCriterion = {\r\n\t__typename?: 'UpworkJobsSearchCriterion';\r\n\tid?: Maybe<Scalars['ID']>;\r\n\temployeeId: Scalars['String'];\r\n\tcategory?: Maybe<Scalars['String']>;\r\n\tcategoryId?: Maybe<Scalars['String']>;\r\n\toccupation?: Maybe<Scalars['String']>;\r\n\toccupationId?: Maybe<Scalars['String']>;\r\n\tjobType: Scalars['String'];\r\n\tkeyword: Scalars['String'];\r\n\tcreatedAt?: Maybe<Scalars['DateTime']>;\r\n\tupdatedAt?: Maybe<Scalars['DateTime']>;\r\n\tisActive: Scalars['Boolean'];\r\n\tisArchived: Scalars['Boolean'];\r\n\temployee: Employee;\r\n};\r\n\r\nexport type Employee = {\r\n\t__typename?: 'Employee';\r\n\tid?: Maybe<Scalars['ID']>;\r\n\texternalEmployeeId?: Maybe<Scalars['String']>;\r\n\tfirstName?: Maybe<Scalars['String']>;\r\n\tlastName?: Maybe<Scalars['String']>;\r\n\tname?: Maybe<Scalars['String']>;\r\n\tjobType?: Maybe<Scalars['String']>;\r\n\tcreatedAt?: Maybe<Scalars['DateTime']>;\r\n\tupdatedAt?: Maybe<Scalars['DateTime']>;\r\n\tisActive: Scalars['Boolean'];\r\n\tisArchived: Scalars['Boolean'];\r\n\tupworkJobSearchCriteria: Array<UpworkJobsSearchCriterion>;\r\n\tupworkJobSearchCriteriaAggregate: EmployeeUpworkJobSearchCriteriaAggregateResponse;\r\n};\r\n\r\nexport type EmployeeUpworkJobSearchCriteriaArgs = {\r\n\tpaging?: Maybe<OffsetPaging>;\r\n\tfilter?: Maybe<UpworkJobsSearchCriterionFilter>;\r\n\tsorting?: Maybe<Array<UpworkJobsSearchCriterionSort>>;\r\n};\r\n\r\nexport type EmployeeUpworkJobSearchCriteriaAggregateArgs = {\r\n\tfilter?: Maybe<UpworkJobsSearchCriterionAggregateFilter>;\r\n};\r\n\r\nexport type OffsetPaging = {\r\n\t/** Limit the number of records returned */\r\n\tlimit?: Maybe<Scalars['Int']>;\r\n\t/** Offset to start returning records from */\r\n\toffset?: Maybe<Scalars['Int']>;\r\n};\r\n\r\nexport type UpworkJobsSearchCriterionFilter = {\r\n\tand?: Maybe<Array<UpworkJobsSearchCriterionFilter>>;\r\n\tor?: Maybe<Array<UpworkJobsSearchCriterionFilter>>;\r\n\tid?: Maybe<IdFilterComparison>;\r\n\temployeeId?: Maybe<StringFieldComparison>;\r\n\tjobType?: Maybe<StringFieldComparison>;\r\n\tisActive?: Maybe<BooleanFieldComparison>;\r\n\tisArchived?: Maybe<BooleanFieldComparison>;\r\n};\r\n\r\nexport type IdFilterComparison = {\r\n\tis?: Maybe<Scalars['Boolean']>;\r\n\tisNot?: Maybe<Scalars['Boolean']>;\r\n\teq?: Maybe<Scalars['ID']>;\r\n\tneq?: Maybe<Scalars['ID']>;\r\n\tgt?: Maybe<Scalars['ID']>;\r\n\tgte?: Maybe<Scalars['ID']>;\r\n\tlt?: Maybe<Scalars['ID']>;\r\n\tlte?: Maybe<Scalars['ID']>;\r\n\tlike?: Maybe<Scalars['ID']>;\r\n\tnotLike?: Maybe<Scalars['ID']>;\r\n\tiLike?: Maybe<Scalars['ID']>;\r\n\tnotILike?: Maybe<Scalars['ID']>;\r\n\tin?: Maybe<Array<Scalars['ID']>>;\r\n\tnotIn?: Maybe<Array<Scalars['ID']>>;\r\n};\r\n\r\nexport type StringFieldComparison = {\r\n\tis?: Maybe<Scalars['Boolean']>;\r\n\tisNot?: Maybe<Scalars['Boolean']>;\r\n\teq?: Maybe<Scalars['String']>;\r\n\tneq?: Maybe<Scalars['String']>;\r\n\tgt?: Maybe<Scalars['String']>;\r\n\tgte?: Maybe<Scalars['String']>;\r\n\tlt?: Maybe<Scalars['String']>;\r\n\tlte?: Maybe<Scalars['String']>;\r\n\tlike?: Maybe<Scalars['String']>;\r\n\tnotLike?: Maybe<Scalars['String']>;\r\n\tiLike?: Maybe<Scalars['String']>;\r\n\tnotILike?: Maybe<Scalars['String']>;\r\n\tin?: Maybe<Array<Scalars['String']>>;\r\n\tnotIn?: Maybe<Array<Scalars['String']>>;\r\n};\r\n\r\nexport type BooleanFieldComparison = {\r\n\tis?: Maybe<Scalars['Boolean']>;\r\n\tisNot?: Maybe<Scalars['Boolean']>;\r\n};\r\n\r\nexport type UpworkJobsSearchCriterionSort = {\r\n\tfield: UpworkJobsSearchCriterionSortFields;\r\n\tdirection: SortDirection;\r\n\tnulls?: Maybe<SortNulls>;\r\n};\r\n\r\nexport enum UpworkJobsSearchCriterionSortFields {\r\n\tId = 'id',\r\n\tEmployeeId = 'employeeId',\r\n\tJobType = 'jobType',\r\n\tIsActive = 'isActive',\r\n\tIsArchived = 'isArchived'\r\n}\r\n\r\n/** Sort Directions */\r\nexport enum SortDirection {\r\n\tAsc = 'ASC',\r\n\tDesc = 'DESC'\r\n}\r\n\r\n/** Sort Nulls Options */\r\nexport enum SortNulls {\r\n\tNullsFirst = 'NULLS_FIRST',\r\n\tNullsLast = 'NULLS_LAST'\r\n}\r\n\r\nexport type UpworkJobsSearchCriterionAggregateFilter = {\r\n\tand?: Maybe<Array<UpworkJobsSearchCriterionAggregateFilter>>;\r\n\tor?: Maybe<Array<UpworkJobsSearchCriterionAggregateFilter>>;\r\n\tid?: Maybe<IdFilterComparison>;\r\n\temployeeId?: Maybe<StringFieldComparison>;\r\n\tjobType?: Maybe<StringFieldComparison>;\r\n\tisActive?: Maybe<BooleanFieldComparison>;\r\n\tisArchived?: Maybe<BooleanFieldComparison>;\r\n};\r\n\r\nexport type JobPost = {\r\n\t__typename?: 'JobPost';\r\n\tid?: Maybe<Scalars['ID']>;\r\n\tproviderCode: Scalars['String'];\r\n\tproviderJobId: Scalars['String'];\r\n\ttitle: Scalars['String'];\r\n\tdescription: Scalars['String'];\r\n\tjobDateCreated?: Maybe<Scalars['DateTime']>;\r\n\tjobStatus?: Maybe<Scalars['String']>;\r\n\tjobType?: Maybe<Scalars['String']>;\r\n\turl?: Maybe<Scalars['String']>;\r\n\tbudget?: Maybe<Scalars['String']>;\r\n\tduration?: Maybe<Scalars['String']>;\r\n\tworkload?: Maybe<Scalars['String']>;\r\n\tskills?: Maybe<Scalars['String']>;\r\n\tcategory?: Maybe<Scalars['String']>;\r\n\tsubcategory?: Maybe<Scalars['String']>;\r\n\tcountry?: Maybe<Scalars['String']>;\r\n\tclientFeedback?: Maybe<Scalars['String']>;\r\n\tclientReviewsCount?: Maybe<Scalars['Float']>;\r\n\tclientJobsPosted?: Maybe<Scalars['Float']>;\r\n\tclientPastHires?: Maybe<Scalars['Float']>;\r\n\tclientPaymentVerificationStatus?: Maybe<Scalars['Boolean']>;\r\n\tsearchCategory?: Maybe<Scalars['String']>;\r\n\tsearchCategoryId?: Maybe<Scalars['String']>;\r\n\tsearchOccupation?: Maybe<Scalars['String']>;\r\n\tsearchOccupationId?: Maybe<Scalars['String']>;\r\n\tsearchJobType?: Maybe<Scalars['String']>;\r\n\tsearchKeyword?: Maybe<Scalars['String']>;\r\n\tcreatedAt?: Maybe<Scalars['DateTime']>;\r\n\tupdatedAt?: Maybe<Scalars['DateTime']>;\r\n\tisActive: Scalars['Boolean'];\r\n\tisArchived: Scalars['Boolean'];\r\n};\r\n\r\nexport type EmployeeJobPost = {\r\n\t__typename?: 'EmployeeJobPost';\r\n\tid?: Maybe<Scalars['ID']>;\r\n\temployeeId: Scalars['String'];\r\n\tjobPostId: Scalars['String'];\r\n\tjobDateCreated?: Maybe<Scalars['DateTime']>;\r\n\tjobStatus?: Maybe<Scalars['String']>;\r\n\tjobType?: Maybe<Scalars['String']>;\r\n\tproviderCode: Scalars['String'];\r\n\tproviderJobId: Scalars['String'];\r\n\tisApplied?: Maybe<Scalars['Boolean']>;\r\n\tappliedDate?: Maybe<Scalars['DateTime']>;\r\n\tcreatedAt?: Maybe<Scalars['DateTime']>;\r\n\tupdatedAt?: Maybe<Scalars['DateTime']>;\r\n\tisActive: Scalars['Boolean'];\r\n\tisArchived: Scalars['Boolean'];\r\n\tjobPost: JobPost;\r\n\temployee: Employee;\r\n};\r\n\r\nexport type DeleteManyResponse = {\r\n\t__typename?: 'DeleteManyResponse';\r\n\t/** The number of records deleted. */\r\n\tdeletedCount: Scalars['Int'];\r\n};\r\n\r\nexport type JobPostDeleteResponse = {\r\n\t__typename?: 'JobPostDeleteResponse';\r\n\tid?: Maybe<Scalars['ID']>;\r\n\tproviderCode?: Maybe<Scalars['String']>;\r\n\tproviderJobId?: Maybe<Scalars['String']>;\r\n\ttitle?: Maybe<Scalars['String']>;\r\n\tdescription?: Maybe<Scalars['String']>;\r\n\tjobDateCreated?: Maybe<Scalars['DateTime']>;\r\n\tjobStatus?: Maybe<Scalars['String']>;\r\n\tjobType?: Maybe<Scalars['String']>;\r\n\turl?: Maybe<Scalars['String']>;\r\n\tbudget?: Maybe<Scalars['String']>;\r\n\tduration?: Maybe<Scalars['String']>;\r\n\tworkload?: Maybe<Scalars['String']>;\r\n\tskills?: Maybe<Scalars['String']>;\r\n\tcategory?: Maybe<Scalars['String']>;\r\n\tsubcategory?: Maybe<Scalars['String']>;\r\n\tcountry?: Maybe<Scalars['String']>;\r\n\tclientFeedback?: Maybe<Scalars['String']>;\r\n\tclientReviewsCount?: Maybe<Scalars['Float']>;\r\n\tclientJobsPosted?: Maybe<Scalars['Float']>;\r\n\tclientPastHires?: Maybe<Scalars['Float']>;\r\n\tclientPaymentVerificationStatus?: Maybe<Scalars['Boolean']>;\r\n\tsearchCategory?: Maybe<Scalars['String']>;\r\n\tsearchCategoryId?: Maybe<Scalars['String']>;\r\n\tsearchOccupation?: Maybe<Scalars['String']>;\r\n\tsearchOccupationId?: Maybe<Scalars['String']>;\r\n\tsearchJobType?: Maybe<Scalars['String']>;\r\n\tsearchKeyword?: Maybe<Scalars['String']>;\r\n\tcreatedAt?: Maybe<Scalars['DateTime']>;\r\n\tupdatedAt?: Maybe<Scalars['DateTime']>;\r\n\tisActive?: Maybe<Scalars['Boolean']>;\r\n\tisArchived?: Maybe<Scalars['Boolean']>;\r\n};\r\n\r\nexport type UpdateManyResponse = {\r\n\t__typename?: 'UpdateManyResponse';\r\n\t/** The number of records updated. */\r\n\tupdatedCount: Scalars['Int'];\r\n};\r\n\r\nexport type JobPostEdge = {\r\n\t__typename?: 'JobPostEdge';\r\n\t/** The node containing the JobPost */\r\n\tnode: JobPost;\r\n\t/** Cursor for this node. */\r\n\tcursor: Scalars['ConnectionCursor'];\r\n};\r\n\r\nexport type PageInfo = {\r\n\t__typename?: 'PageInfo';\r\n\t/** true if paging forward and there are more records. */\r\n\thasNextPage?: Maybe<Scalars['Boolean']>;\r\n\t/** true if paging backwards and there are more records. */\r\n\thasPreviousPage?: Maybe<Scalars['Boolean']>;\r\n\t/** The cursor of the first returned record. */\r\n\tstartCursor?: Maybe<Scalars['ConnectionCursor']>;\r\n\t/** The cursor of the last returned record. */\r\n\tendCursor?: Maybe<Scalars['ConnectionCursor']>;\r\n};\r\n\r\nexport type JobPostConnection = {\r\n\t__typename?: 'JobPostConnection';\r\n\t/** Paging information */\r\n\tpageInfo: PageInfo;\r\n\t/** Array of edges. */\r\n\tedges: Array<JobPostEdge>;\r\n\t/** Fetch total count of records */\r\n\ttotalCount: Scalars['Int'];\r\n};\r\n\r\nexport type JobPostCountAggregate = {\r\n\t__typename?: 'JobPostCountAggregate';\r\n\tid?: Maybe<Scalars['Int']>;\r\n\tproviderCode?: Maybe<Scalars['Int']>;\r\n\tproviderJobId?: Maybe<Scalars['Int']>;\r\n\tjobDateCreated?: Maybe<Scalars['Int']>;\r\n\tjobStatus?: Maybe<Scalars['Int']>;\r\n\tjobType?: Maybe<Scalars['Int']>;\r\n\tcountry?: Maybe<Scalars['Int']>;\r\n\tcreatedAt?: Maybe<Scalars['Int']>;\r\n\tupdatedAt?: Maybe<Scalars['Int']>;\r\n\tisActive?: Maybe<Scalars['Int']>;\r\n\tisArchived?: Maybe<Scalars['Int']>;\r\n};\r\n\r\nexport type JobPostMinAggregate = {\r\n\t__typename?: 'JobPostMinAggregate';\r\n\tid?: Maybe<Scalars['ID']>;\r\n\tproviderCode?: Maybe<Scalars['String']>;\r\n\tproviderJobId?: Maybe<Scalars['String']>;\r\n\tjobDateCreated?: Maybe<Scalars['DateTime']>;\r\n\tjobStatus?: Maybe<Scalars['String']>;\r\n\tjobType?: Maybe<Scalars['String']>;\r\n\tcountry?: Maybe<Scalars['String']>;\r\n\tcreatedAt?: Maybe<Scalars['DateTime']>;\r\n\tupdatedAt?: Maybe<Scalars['DateTime']>;\r\n};\r\n\r\nexport type JobPostMaxAggregate = {\r\n\t__typename?: 'JobPostMaxAggregate';\r\n\tid?: Maybe<Scalars['ID']>;\r\n\tproviderCode?: Maybe<Scalars['String']>;\r\n\tproviderJobId?: Maybe<Scalars['String']>;\r\n\tjobDateCreated?: Maybe<Scalars['DateTime']>;\r\n\tjobStatus?: Maybe<Scalars['String']>;\r\n\tjobType?: Maybe<Scalars['String']>;\r\n\tcountry?: Maybe<Scalars['String']>;\r\n\tcreatedAt?: Maybe<Scalars['DateTime']>;\r\n\tupdatedAt?: Maybe<Scalars['DateTime']>;\r\n};\r\n\r\nexport type JobPostAggregateResponse = {\r\n\t__typename?: 'JobPostAggregateResponse';\r\n\tcount?: Maybe<JobPostCountAggregate>;\r\n\tmin?: Maybe<JobPostMinAggregate>;\r\n\tmax?: Maybe<JobPostMaxAggregate>;\r\n};\r\n\r\nexport type UpworkJobsSearchCriterionDeleteResponse = {\r\n\t__typename?: 'UpworkJobsSearchCriterionDeleteResponse';\r\n\tid?: Maybe<Scalars['ID']>;\r\n\temployeeId?: Maybe<Scalars['String']>;\r\n\tcategory?: Maybe<Scalars['String']>;\r\n\tcategoryId?: Maybe<Scalars['String']>;\r\n\toccupation?: Maybe<Scalars['String']>;\r\n\toccupationId?: Maybe<Scalars['String']>;\r\n\tjobType?: Maybe<Scalars['String']>;\r\n\tkeyword?: Maybe<Scalars['String']>;\r\n\tcreatedAt?: Maybe<Scalars['DateTime']>;\r\n\tupdatedAt?: Maybe<Scalars['DateTime']>;\r\n\tisActive?: Maybe<Scalars['Boolean']>;\r\n\tisArchived?: Maybe<Scalars['Boolean']>;\r\n};\r\n\r\nexport type UpworkJobsSearchCriterionEdge = {\r\n\t__typename?: 'UpworkJobsSearchCriterionEdge';\r\n\t/** The node containing the UpworkJobsSearchCriterion */\r\n\tnode: UpworkJobsSearchCriterion;\r\n\t/** Cursor for this node. */\r\n\tcursor: Scalars['ConnectionCursor'];\r\n};\r\n\r\nexport type UpworkJobsSearchCriterionConnection = {\r\n\t__typename?: 'UpworkJobsSearchCriterionConnection';\r\n\t/** Paging information */\r\n\tpageInfo: PageInfo;\r\n\t/** Array of edges. */\r\n\tedges: Array<UpworkJobsSearchCriterionEdge>;\r\n\t/** Fetch total count of records */\r\n\ttotalCount: Scalars['Int'];\r\n};\r\n\r\nexport type UpworkJobsSearchCriterionCountAggregate = {\r\n\t__typename?: 'UpworkJobsSearchCriterionCountAggregate';\r\n\tid?: Maybe<Scalars['Int']>;\r\n\temployeeId?: Maybe<Scalars['Int']>;\r\n\tjobType?: Maybe<Scalars['Int']>;\r\n\tisActive?: Maybe<Scalars['Int']>;\r\n\tisArchived?: Maybe<Scalars['Int']>;\r\n};\r\n\r\nexport type UpworkJobsSearchCriterionMinAggregate = {\r\n\t__typename?: 'UpworkJobsSearchCriterionMinAggregate';\r\n\tid?: Maybe<Scalars['ID']>;\r\n\temployeeId?: Maybe<Scalars['String']>;\r\n\tjobType?: Maybe<Scalars['String']>;\r\n};\r\n\r\nexport type UpworkJobsSearchCriterionMaxAggregate = {\r\n\t__typename?: 'UpworkJobsSearchCriterionMaxAggregate';\r\n\tid?: Maybe<Scalars['ID']>;\r\n\temployeeId?: Maybe<Scalars['String']>;\r\n\tjobType?: Maybe<Scalars['String']>;\r\n};\r\n\r\nexport type UpworkJobsSearchCriterionAggregateResponse = {\r\n\t__typename?: 'UpworkJobsSearchCriterionAggregateResponse';\r\n\tcount?: Maybe<UpworkJobsSearchCriterionCountAggregate>;\r\n\tmin?: Maybe<UpworkJobsSearchCriterionMinAggregate>;\r\n\tmax?: Maybe<UpworkJobsSearchCriterionMaxAggregate>;\r\n};\r\n\r\nexport type EmployeeDeleteResponse = {\r\n\t__typename?: 'EmployeeDeleteResponse';\r\n\tid?: Maybe<Scalars['ID']>;\r\n\texternalEmployeeId?: Maybe<Scalars['String']>;\r\n\tfirstName?: Maybe<Scalars['String']>;\r\n\tlastName?: Maybe<Scalars['String']>;\r\n\tname?: Maybe<Scalars['String']>;\r\n\tjobType?: Maybe<Scalars['String']>;\r\n\tcreatedAt?: Maybe<Scalars['DateTime']>;\r\n\tupdatedAt?: Maybe<Scalars['DateTime']>;\r\n\tisActive?: Maybe<Scalars['Boolean']>;\r\n\tisArchived?: Maybe<Scalars['Boolean']>;\r\n};\r\n\r\nexport type EmployeeEdge = {\r\n\t__typename?: 'EmployeeEdge';\r\n\t/** The node containing the Employee */\r\n\tnode: Employee;\r\n\t/** Cursor for this node. */\r\n\tcursor: Scalars['ConnectionCursor'];\r\n};\r\n\r\nexport type EmployeeConnection = {\r\n\t__typename?: 'EmployeeConnection';\r\n\t/** Paging information */\r\n\tpageInfo: PageInfo;\r\n\t/** Array of edges. */\r\n\tedges: Array<EmployeeEdge>;\r\n\t/** Fetch total count of records */\r\n\ttotalCount: Scalars['Int'];\r\n};\r\n\r\nexport type EmployeeCountAggregate = {\r\n\t__typename?: 'EmployeeCountAggregate';\r\n\tid?: Maybe<Scalars['Int']>;\r\n\texternalEmployeeId?: Maybe<Scalars['Int']>;\r\n\tfirstName?: Maybe<Scalars['Int']>;\r\n\tlastName?: Maybe<Scalars['Int']>;\r\n\tjobType?: Maybe<Scalars['Int']>;\r\n\tcreatedAt?: Maybe<Scalars['Int']>;\r\n\tupdatedAt?: Maybe<Scalars['Int']>;\r\n\tisActive?: Maybe<Scalars['Int']>;\r\n\tisArchived?: Maybe<Scalars['Int']>;\r\n};\r\n\r\nexport type EmployeeMinAggregate = {\r\n\t__typename?: 'EmployeeMinAggregate';\r\n\tid?: Maybe<Scalars['ID']>;\r\n\texternalEmployeeId?: Maybe<Scalars['String']>;\r\n\tfirstName?: Maybe<Scalars['String']>;\r\n\tlastName?: Maybe<Scalars['String']>;\r\n\tjobType?: Maybe<Scalars['String']>;\r\n\tcreatedAt?: Maybe<Scalars['DateTime']>;\r\n\tupdatedAt?: Maybe<Scalars['DateTime']>;\r\n};\r\n\r\nexport type EmployeeMaxAggregate = {\r\n\t__typename?: 'EmployeeMaxAggregate';\r\n\tid?: Maybe<Scalars['ID']>;\r\n\texternalEmployeeId?: Maybe<Scalars['String']>;\r\n\tfirstName?: Maybe<Scalars['String']>;\r\n\tlastName?: Maybe<Scalars['String']>;\r\n\tjobType?: Maybe<Scalars['String']>;\r\n\tcreatedAt?: Maybe<Scalars['DateTime']>;\r\n\tupdatedAt?: Maybe<Scalars['DateTime']>;\r\n};\r\n\r\nexport type EmployeeAggregateResponse = {\r\n\t__typename?: 'EmployeeAggregateResponse';\r\n\tcount?: Maybe<EmployeeCountAggregate>;\r\n\tmin?: Maybe<EmployeeMinAggregate>;\r\n\tmax?: Maybe<EmployeeMaxAggregate>;\r\n};\r\n\r\nexport type EmployeeUpworkJobSearchCriteriaCountAggregate = {\r\n\t__typename?: 'EmployeeUpworkJobSearchCriteriaCountAggregate';\r\n\tid?: Maybe<Scalars['Int']>;\r\n\temployeeId?: Maybe<Scalars['Int']>;\r\n\tjobType?: Maybe<Scalars['Int']>;\r\n\tisActive?: Maybe<Scalars['Int']>;\r\n\tisArchived?: Maybe<Scalars['Int']>;\r\n};\r\n\r\nexport type EmployeeUpworkJobSearchCriteriaMinAggregate = {\r\n\t__typename?: 'EmployeeUpworkJobSearchCriteriaMinAggregate';\r\n\tid?: Maybe<Scalars['ID']>;\r\n\temployeeId?: Maybe<Scalars['String']>;\r\n\tjobType?: Maybe<Scalars['String']>;\r\n};\r\n\r\nexport type EmployeeUpworkJobSearchCriteriaMaxAggregate = {\r\n\t__typename?: 'EmployeeUpworkJobSearchCriteriaMaxAggregate';\r\n\tid?: Maybe<Scalars['ID']>;\r\n\temployeeId?: Maybe<Scalars['String']>;\r\n\tjobType?: Maybe<Scalars['String']>;\r\n};\r\n\r\nexport type EmployeeUpworkJobSearchCriteriaAggregateResponse = {\r\n\t__typename?: 'EmployeeUpworkJobSearchCriteriaAggregateResponse';\r\n\tcount?: Maybe<EmployeeUpworkJobSearchCriteriaCountAggregate>;\r\n\tmin?: Maybe<EmployeeUpworkJobSearchCriteriaMinAggregate>;\r\n\tmax?: Maybe<EmployeeUpworkJobSearchCriteriaMaxAggregate>;\r\n};\r\n\r\nexport type EmployeeJobPostDeleteResponse = {\r\n\t__typename?: 'EmployeeJobPostDeleteResponse';\r\n\tid?: Maybe<Scalars['ID']>;\r\n\temployeeId?: Maybe<Scalars['String']>;\r\n\tjobPostId?: Maybe<Scalars['String']>;\r\n\tjobDateCreated?: Maybe<Scalars['DateTime']>;\r\n\tjobStatus?: Maybe<Scalars['String']>;\r\n\tjobType?: Maybe<Scalars['String']>;\r\n\tproviderCode?: Maybe<Scalars['String']>;\r\n\tproviderJobId?: Maybe<Scalars['String']>;\r\n\tisApplied?: Maybe<Scalars['Boolean']>;\r\n\tappliedDate?: Maybe<Scalars['DateTime']>;\r\n\tcreatedAt?: Maybe<Scalars['DateTime']>;\r\n\tupdatedAt?: Maybe<Scalars['DateTime']>;\r\n\tisActive?: Maybe<Scalars['Boolean']>;\r\n\tisArchived?: Maybe<Scalars['Boolean']>;\r\n};\r\n\r\nexport type EmployeeJobPostEdge = {\r\n\t__typename?: 'EmployeeJobPostEdge';\r\n\t/** The node containing the EmployeeJobPost */\r\n\tnode: EmployeeJobPost;\r\n\t/** Cursor for this node. */\r\n\tcursor: Scalars['ConnectionCursor'];\r\n};\r\n\r\nexport type EmployeeJobPostConnection = {\r\n\t__typename?: 'EmployeeJobPostConnection';\r\n\t/** Paging information */\r\n\tpageInfo: PageInfo;\r\n\t/** Array of edges. */\r\n\tedges: Array<EmployeeJobPostEdge>;\r\n\t/** Fetch total count of records */\r\n\ttotalCount: Scalars['Int'];\r\n};\r\n\r\nexport type EmployeeJobPostCountAggregate = {\r\n\t__typename?: 'EmployeeJobPostCountAggregate';\r\n\tid?: Maybe<Scalars['Int']>;\r\n\temployeeId?: Maybe<Scalars['Int']>;\r\n\tjobPostId?: Maybe<Scalars['Int']>;\r\n\tjobDateCreated?: Maybe<Scalars['Int']>;\r\n\tjobStatus?: Maybe<Scalars['Int']>;\r\n\tjobType?: Maybe<Scalars['Int']>;\r\n\tproviderCode?: Maybe<Scalars['Int']>;\r\n\tproviderJobId?: Maybe<Scalars['Int']>;\r\n\tisApplied?: Maybe<Scalars['Int']>;\r\n\tappliedDate?: Maybe<Scalars['Int']>;\r\n\tcreatedAt?: Maybe<Scalars['Int']>;\r\n\tupdatedAt?: Maybe<Scalars['Int']>;\r\n\tisActive?: Maybe<Scalars['Int']>;\r\n\tisArchived?: Maybe<Scalars['Int']>;\r\n};\r\n\r\nexport type EmployeeJobPostMinAggregate = {\r\n\t__typename?: 'EmployeeJobPostMinAggregate';\r\n\tid?: Maybe<Scalars['ID']>;\r\n\temployeeId?: Maybe<Scalars['String']>;\r\n\tjobPostId?: Maybe<Scalars['String']>;\r\n\tjobDateCreated?: Maybe<Scalars['DateTime']>;\r\n\tjobStatus?: Maybe<Scalars['String']>;\r\n\tjobType?: Maybe<Scalars['String']>;\r\n\tproviderCode?: Maybe<Scalars['String']>;\r\n\tproviderJobId?: Maybe<Scalars['String']>;\r\n\tappliedDate?: Maybe<Scalars['DateTime']>;\r\n\tcreatedAt?: Maybe<Scalars['DateTime']>;\r\n\tupdatedAt?: Maybe<Scalars['DateTime']>;\r\n};\r\n\r\nexport type EmployeeJobPostMaxAggregate = {\r\n\t__typename?: 'EmployeeJobPostMaxAggregate';\r\n\tid?: Maybe<Scalars['ID']>;\r\n\temployeeId?: Maybe<Scalars['String']>;\r\n\tjobPostId?: Maybe<Scalars['String']>;\r\n\tjobDateCreated?: Maybe<Scalars['DateTime']>;\r\n\tjobStatus?: Maybe<Scalars['String']>;\r\n\tjobType?: Maybe<Scalars['String']>;\r\n\tproviderCode?: Maybe<Scalars['String']>;\r\n\tproviderJobId?: Maybe<Scalars['String']>;\r\n\tappliedDate?: Maybe<Scalars['DateTime']>;\r\n\tcreatedAt?: Maybe<Scalars['DateTime']>;\r\n\tupdatedAt?: Maybe<Scalars['DateTime']>;\r\n};\r\n\r\nexport type EmployeeJobPostAggregateResponse = {\r\n\t__typename?: 'EmployeeJobPostAggregateResponse';\r\n\tcount?: Maybe<EmployeeJobPostCountAggregate>;\r\n\tmin?: Maybe<EmployeeJobPostMinAggregate>;\r\n\tmax?: Maybe<EmployeeJobPostMaxAggregate>;\r\n};\r\n\r\nexport type Query = {\r\n\t__typename?: 'Query';\r\n\tjobPost?: Maybe<JobPost>;\r\n\tjobPosts: JobPostConnection;\r\n\tjobPostAggregate: JobPostAggregateResponse;\r\n\tupworkJobsSearchCriterion?: Maybe<UpworkJobsSearchCriterion>;\r\n\tupworkJobsSearchCriteria: UpworkJobsSearchCriterionConnection;\r\n\tupworkJobsSearchCriterionAggregate: UpworkJobsSearchCriterionAggregateResponse;\r\n\temployee?: Maybe<Employee>;\r\n\temployees: EmployeeConnection;\r\n\temployeeAggregate: EmployeeAggregateResponse;\r\n\temployeeJobPost?: Maybe<EmployeeJobPost>;\r\n\temployeeJobPosts: EmployeeJobPostConnection;\r\n\temployeeJobPostAggregate: EmployeeJobPostAggregateResponse;\r\n};\r\n\r\nexport type QueryJobPostArgs = {\r\n\tid: Scalars['ID'];\r\n};\r\n\r\nexport type QueryJobPostsArgs = {\r\n\tpaging?: Maybe<CursorPaging>;\r\n\tfilter?: Maybe<JobPostFilter>;\r\n\tsorting?: Maybe<Array<JobPostSort>>;\r\n};\r\n\r\nexport type QueryJobPostAggregateArgs = {\r\n\tfilter?: Maybe<JobPostAggregateFilter>;\r\n};\r\n\r\nexport type QueryUpworkJobsSearchCriterionArgs = {\r\n\tid: Scalars['ID'];\r\n};\r\n\r\nexport type QueryUpworkJobsSearchCriteriaArgs = {\r\n\tpaging?: Maybe<CursorPaging>;\r\n\tfilter?: Maybe<UpworkJobsSearchCriterionFilter>;\r\n\tsorting?: Maybe<Array<UpworkJobsSearchCriterionSort>>;\r\n};\r\n\r\nexport type QueryUpworkJobsSearchCriterionAggregateArgs = {\r\n\tfilter?: Maybe<UpworkJobsSearchCriterionAggregateFilter>;\r\n};\r\n\r\nexport type QueryEmployeeArgs = {\r\n\tid: Scalars['ID'];\r\n};\r\n\r\nexport type QueryEmployeesArgs = {\r\n\tpaging?: Maybe<CursorPaging>;\r\n\tfilter?: Maybe<EmployeeFilter>;\r\n\tsorting?: Maybe<Array<EmployeeSort>>;\r\n};\r\n\r\nexport type QueryEmployeeAggregateArgs = {\r\n\tfilter?: Maybe<EmployeeAggregateFilter>;\r\n};\r\n\r\nexport type QueryEmployeeJobPostArgs = {\r\n\tid: Scalars['ID'];\r\n};\r\n\r\nexport type QueryEmployeeJobPostsArgs = {\r\n\tpaging?: Maybe<CursorPaging>;\r\n\tfilter?: Maybe<EmployeeJobPostFilter>;\r\n\tsorting?: Maybe<Array<EmployeeJobPostSort>>;\r\n};\r\n\r\nexport type QueryEmployeeJobPostAggregateArgs = {\r\n\tfilter?: Maybe<EmployeeJobPostAggregateFilter>;\r\n};\r\n\r\nexport type CursorPaging = {\r\n\t/** Paginate before opaque cursor */\r\n\tbefore?: Maybe<Scalars['ConnectionCursor']>;\r\n\t/** Paginate after opaque cursor */\r\n\tafter?: Maybe<Scalars['ConnectionCursor']>;\r\n\t/** Paginate first */\r\n\tfirst?: Maybe<Scalars['Int']>;\r\n\t/** Paginate last */\r\n\tlast?: Maybe<Scalars['Int']>;\r\n};\r\n\r\nexport type JobPostFilter = {\r\n\tand?: Maybe<Array<JobPostFilter>>;\r\n\tor?: Maybe<Array<JobPostFilter>>;\r\n\tid?: Maybe<IdFilterComparison>;\r\n\tproviderCode?: Maybe<StringFieldComparison>;\r\n\tproviderJobId?: Maybe<StringFieldComparison>;\r\n\tjobDateCreated?: Maybe<DateFieldComparison>;\r\n\tjobStatus?: Maybe<StringFieldComparison>;\r\n\tjobType?: Maybe<StringFieldComparison>;\r\n\tcountry?: Maybe<StringFieldComparison>;\r\n\tcreatedAt?: Maybe<DateFieldComparison>;\r\n\tupdatedAt?: Maybe<DateFieldComparison>;\r\n\tisActive?: Maybe<BooleanFieldComparison>;\r\n\tisArchived?: Maybe<BooleanFieldComparison>;\r\n};\r\n\r\nexport type DateFieldComparison = {\r\n\tis?: Maybe<Scalars['Boolean']>;\r\n\tisNot?: Maybe<Scalars['Boolean']>;\r\n\teq?: Maybe<Scalars['DateTime']>;\r\n\tneq?: Maybe<Scalars['DateTime']>;\r\n\tgt?: Maybe<Scalars['DateTime']>;\r\n\tgte?: Maybe<Scalars['DateTime']>;\r\n\tlt?: Maybe<Scalars['DateTime']>;\r\n\tlte?: Maybe<Scalars['DateTime']>;\r\n\tin?: Maybe<Array<Scalars['DateTime']>>;\r\n\tnotIn?: Maybe<Array<Scalars['DateTime']>>;\r\n\tbetween?: Maybe<DateFieldComparisonBetween>;\r\n\tnotBetween?: Maybe<DateFieldComparisonBetween>;\r\n};\r\n\r\nexport type DateFieldComparisonBetween = {\r\n\tlower: Scalars['DateTime'];\r\n\tupper: Scalars['DateTime'];\r\n};\r\n\r\nexport type JobPostSort = {\r\n\tfield: JobPostSortFields;\r\n\tdirection: SortDirection;\r\n\tnulls?: Maybe<SortNulls>;\r\n};\r\n\r\nexport enum JobPostSortFields {\r\n\tId = 'id',\r\n\tProviderCode = 'providerCode',\r\n\tProviderJobId = 'providerJobId',\r\n\tJobDateCreated = 'jobDateCreated',\r\n\tJobStatus = 'jobStatus',\r\n\tJobType = 'jobType',\r\n\tCountry = 'country',\r\n\tCreatedAt = 'createdAt',\r\n\tUpdatedAt = 'updatedAt',\r\n\tIsActive = 'isActive',\r\n\tIsArchived = 'isArchived'\r\n}\r\n\r\nexport type JobPostAggregateFilter = {\r\n\tand?: Maybe<Array<JobPostAggregateFilter>>;\r\n\tor?: Maybe<Array<JobPostAggregateFilter>>;\r\n\tid?: Maybe<IdFilterComparison>;\r\n\tproviderCode?: Maybe<StringFieldComparison>;\r\n\tproviderJobId?: Maybe<StringFieldComparison>;\r\n\tjobDateCreated?: Maybe<DateFieldComparison>;\r\n\tjobStatus?: Maybe<StringFieldComparison>;\r\n\tjobType?: Maybe<StringFieldComparison>;\r\n\tcountry?: Maybe<StringFieldComparison>;\r\n\tcreatedAt?: Maybe<DateFieldComparison>;\r\n\tupdatedAt?: Maybe<DateFieldComparison>;\r\n\tisActive?: Maybe<BooleanFieldComparison>;\r\n\tisArchived?: Maybe<BooleanFieldComparison>;\r\n};\r\n\r\nexport type EmployeeFilter = {\r\n\tand?: Maybe<Array<EmployeeFilter>>;\r\n\tor?: Maybe<Array<EmployeeFilter>>;\r\n\tid?: Maybe<IdFilterComparison>;\r\n\texternalEmployeeId?: Maybe<StringFieldComparison>;\r\n\tfirstName?: Maybe<StringFieldComparison>;\r\n\tlastName?: Maybe<StringFieldComparison>;\r\n\tjobType?: Maybe<StringFieldComparison>;\r\n\tcreatedAt?: Maybe<DateFieldComparison>;\r\n\tupdatedAt?: Maybe<DateFieldComparison>;\r\n\tisActive?: Maybe<BooleanFieldComparison>;\r\n\tisArchived?: Maybe<BooleanFieldComparison>;\r\n};\r\n\r\nexport type EmployeeSort = {\r\n\tfield: EmployeeSortFields;\r\n\tdirection: SortDirection;\r\n\tnulls?: Maybe<SortNulls>;\r\n};\r\n\r\nexport enum EmployeeSortFields {\r\n\tId = 'id',\r\n\tExternalEmployeeId = 'externalEmployeeId',\r\n\tFirstName = 'firstName',\r\n\tLastName = 'lastName',\r\n\tJobType = 'jobType',\r\n\tCreatedAt = 'createdAt',\r\n\tUpdatedAt = 'updatedAt',\r\n\tIsActive = 'isActive',\r\n\tIsArchived = 'isArchived'\r\n}\r\n\r\nexport type EmployeeAggregateFilter = {\r\n\tand?: Maybe<Array<EmployeeAggregateFilter>>;\r\n\tor?: Maybe<Array<EmployeeAggregateFilter>>;\r\n\tid?: Maybe<IdFilterComparison>;\r\n\texternalEmployeeId?: Maybe<StringFieldComparison>;\r\n\tfirstName?: Maybe<StringFieldComparison>;\r\n\tlastName?: Maybe<StringFieldComparison>;\r\n\tjobType?: Maybe<StringFieldComparison>;\r\n\tcreatedAt?: Maybe<DateFieldComparison>;\r\n\tupdatedAt?: Maybe<DateFieldComparison>;\r\n\tisActive?: Maybe<BooleanFieldComparison>;\r\n\tisArchived?: Maybe<BooleanFieldComparison>;\r\n};\r\n\r\nexport type EmployeeJobPostFilter = {\r\n\tand?: Maybe<Array<EmployeeJobPostFilter>>;\r\n\tor?: Maybe<Array<EmployeeJobPostFilter>>;\r\n\tid?: Maybe<IdFilterComparison>;\r\n\temployeeId?: Maybe<StringFieldComparison>;\r\n\tjobPostId?: Maybe<StringFieldComparison>;\r\n\tjobDateCreated?: Maybe<DateFieldComparison>;\r\n\tjobStatus?: Maybe<StringFieldComparison>;\r\n\tjobType?: Maybe<StringFieldComparison>;\r\n\tproviderCode?: Maybe<StringFieldComparison>;\r\n\tproviderJobId?: Maybe<StringFieldComparison>;\r\n\tisApplied?: Maybe<BooleanFieldComparison>;\r\n\tappliedDate?: Maybe<DateFieldComparison>;\r\n\tcreatedAt?: Maybe<DateFieldComparison>;\r\n\tupdatedAt?: Maybe<DateFieldComparison>;\r\n\tisActive?: Maybe<BooleanFieldComparison>;\r\n\tisArchived?: Maybe<BooleanFieldComparison>;\r\n\tjobPost?: Maybe<EmployeeJobPostFilterJobPostFilter>;\r\n\temployee?: Maybe<EmployeeJobPostFilterEmployeeFilter>;\r\n};\r\n\r\nexport type EmployeeJobPostFilterJobPostFilter = {\r\n\tand?: Maybe<Array<EmployeeJobPostFilterJobPostFilter>>;\r\n\tor?: Maybe<Array<EmployeeJobPostFilterJobPostFilter>>;\r\n\tid?: Maybe<IdFilterComparison>;\r\n\tproviderCode?: Maybe<StringFieldComparison>;\r\n\tproviderJobId?: Maybe<StringFieldComparison>;\r\n\tjobDateCreated?: Maybe<DateFieldComparison>;\r\n\tjobStatus?: Maybe<StringFieldComparison>;\r\n\tjobType?: Maybe<StringFieldComparison>;\r\n\tcountry?: Maybe<StringFieldComparison>;\r\n\tcreatedAt?: Maybe<DateFieldComparison>;\r\n\tupdatedAt?: Maybe<DateFieldComparison>;\r\n\tisActive?: Maybe<BooleanFieldComparison>;\r\n\tisArchived?: Maybe<BooleanFieldComparison>;\r\n};\r\n\r\nexport type EmployeeJobPostFilterEmployeeFilter = {\r\n\tand?: Maybe<Array<EmployeeJobPostFilterEmployeeFilter>>;\r\n\tor?: Maybe<Array<EmployeeJobPostFilterEmployeeFilter>>;\r\n\tid?: Maybe<IdFilterComparison>;\r\n\texternalEmployeeId?: Maybe<StringFieldComparison>;\r\n\tfirstName?: Maybe<StringFieldComparison>;\r\n\tlastName?: Maybe<StringFieldComparison>;\r\n\tjobType?: Maybe<StringFieldComparison>;\r\n\tcreatedAt?: Maybe<DateFieldComparison>;\r\n\tupdatedAt?: Maybe<DateFieldComparison>;\r\n\tisActive?: Maybe<BooleanFieldComparison>;\r\n\tisArchived?: Maybe<BooleanFieldComparison>;\r\n};\r\n\r\nexport type EmployeeJobPostSort = {\r\n\tfield: EmployeeJobPostSortFields;\r\n\tdirection: SortDirection;\r\n\tnulls?: Maybe<SortNulls>;\r\n};\r\n\r\nexport enum EmployeeJobPostSortFields {\r\n\tId = 'id',\r\n\tEmployeeId = 'employeeId',\r\n\tJobPostId = 'jobPostId',\r\n\tJobDateCreated = 'jobDateCreated',\r\n\tJobStatus = 'jobStatus',\r\n\tJobType = 'jobType',\r\n\tProviderCode = 'providerCode',\r\n\tProviderJobId = 'providerJobId',\r\n\tIsApplied = 'isApplied',\r\n\tAppliedDate = 'appliedDate',\r\n\tCreatedAt = 'createdAt',\r\n\tUpdatedAt = 'updatedAt',\r\n\tIsActive = 'isActive',\r\n\tIsArchived = 'isArchived'\r\n}\r\n\r\nexport type EmployeeJobPostAggregateFilter = {\r\n\tand?: Maybe<Array<EmployeeJobPostAggregateFilter>>;\r\n\tor?: Maybe<Array<EmployeeJobPostAggregateFilter>>;\r\n\tid?: Maybe<IdFilterComparison>;\r\n\temployeeId?: Maybe<StringFieldComparison>;\r\n\tjobPostId?: Maybe<StringFieldComparison>;\r\n\tjobDateCreated?: Maybe<DateFieldComparison>;\r\n\tjobStatus?: Maybe<StringFieldComparison>;\r\n\tjobType?: Maybe<StringFieldComparison>;\r\n\tproviderCode?: Maybe<StringFieldComparison>;\r\n\tproviderJobId?: Maybe<StringFieldComparison>;\r\n\tisApplied?: Maybe<BooleanFieldComparison>;\r\n\tappliedDate?: Maybe<DateFieldComparison>;\r\n\tcreatedAt?: Maybe<DateFieldComparison>;\r\n\tupdatedAt?: Maybe<DateFieldComparison>;\r\n\tisActive?: Maybe<BooleanFieldComparison>;\r\n\tisArchived?: Maybe<BooleanFieldComparison>;\r\n};\r\n\r\nexport type Mutation = {\r\n\t__typename?: 'Mutation';\r\n\tdeleteOneJobPost: JobPostDeleteResponse;\r\n\tdeleteManyJobPosts: DeleteManyResponse;\r\n\tupdateOneJobPost: JobPost;\r\n\tupdateManyJobPosts: UpdateManyResponse;\r\n\tcreateOneJobPost: JobPost;\r\n\tcreateManyJobPosts: Array<JobPost>;\r\n\tdeleteOneUpworkJobsSearchCriterion: UpworkJobsSearchCriterionDeleteResponse;\r\n\tdeleteManyUpworkJobsSearchCriteria: DeleteManyResponse;\r\n\tupdateOneUpworkJobsSearchCriterion: UpworkJobsSearchCriterion;\r\n\tupdateManyUpworkJobsSearchCriteria: UpdateManyResponse;\r\n\tcreateOneUpworkJobsSearchCriterion: UpworkJobsSearchCriterion;\r\n\tcreateManyUpworkJobsSearchCriteria: Array<UpworkJobsSearchCriterion>;\r\n\tremoveEmployeeFromUpworkJobsSearchCriterion: UpworkJobsSearchCriterion;\r\n\tsetEmployeeOnUpworkJobsSearchCriterion: UpworkJobsSearchCriterion;\r\n\tdeleteOneEmployee: EmployeeDeleteResponse;\r\n\tdeleteManyEmployees: DeleteManyResponse;\r\n\tupdateOneEmployee: Employee;\r\n\tupdateManyEmployees: UpdateManyResponse;\r\n\tcreateOneEmployee: Employee;\r\n\tcreateManyEmployees: Array<Employee>;\r\n\tremoveUpworkJobSearchCriteriaFromEmployee: Employee;\r\n\taddUpworkJobSearchCriteriaToEmployee: Employee;\r\n\tdeleteOneEmployeeJobPost: EmployeeJobPostDeleteResponse;\r\n\tdeleteManyEmployeeJobPosts: DeleteManyResponse;\r\n\tupdateOneEmployeeJobPost: EmployeeJobPost;\r\n\tupdateManyEmployeeJobPosts: UpdateManyResponse;\r\n\tcreateOneEmployeeJobPost: EmployeeJobPost;\r\n\tcreateManyEmployeeJobPosts: Array<EmployeeJobPost>;\r\n\tremoveJobPostFromEmployeeJobPost: EmployeeJobPost;\r\n\tremoveEmployeeFromEmployeeJobPost: EmployeeJobPost;\r\n\tsetJobPostOnEmployeeJobPost: EmployeeJobPost;\r\n\tsetEmployeeOnEmployeeJobPost: EmployeeJobPost;\r\n};\r\n\r\nexport type MutationDeleteOneJobPostArgs = {\r\n\tinput: DeleteOneInput;\r\n};\r\n\r\nexport type MutationDeleteManyJobPostsArgs = {\r\n\tinput: DeleteManyJobPostsInput;\r\n};\r\n\r\nexport type MutationUpdateOneJobPostArgs = {\r\n\tinput: UpdateOneJobPostInput;\r\n};\r\n\r\nexport type MutationUpdateManyJobPostsArgs = {\r\n\tinput: UpdateManyJobPostsInput;\r\n};\r\n\r\nexport type MutationCreateOneJobPostArgs = {\r\n\tinput: CreateOneJobPostInput;\r\n};\r\n\r\nexport type MutationCreateManyJobPostsArgs = {\r\n\tinput: CreateManyJobPostsInput;\r\n};\r\n\r\nexport type MutationDeleteOneUpworkJobsSearchCriterionArgs = {\r\n\tinput: DeleteOneInput;\r\n};\r\n\r\nexport type MutationDeleteManyUpworkJobsSearchCriteriaArgs = {\r\n\tinput: DeleteManyUpworkJobsSearchCriteriaInput;\r\n};\r\n\r\nexport type MutationUpdateOneUpworkJobsSearchCriterionArgs = {\r\n\tinput: UpdateOneUpworkJobsSearchCriterionInput;\r\n};\r\n\r\nexport type MutationUpdateManyUpworkJobsSearchCriteriaArgs = {\r\n\tinput: UpdateManyUpworkJobsSearchCriteriaInput;\r\n};\r\n\r\nexport type MutationCreateOneUpworkJobsSearchCriterionArgs = {\r\n\tinput: CreateOneUpworkJobsSearchCriterionInput;\r\n};\r\n\r\nexport type MutationCreateManyUpworkJobsSearchCriteriaArgs = {\r\n\tinput: CreateManyUpworkJobsSearchCriteriaInput;\r\n};\r\n\r\nexport type MutationRemoveEmployeeFromUpworkJobsSearchCriterionArgs = {\r\n\tinput: RelationInput;\r\n};\r\n\r\nexport type MutationSetEmployeeOnUpworkJobsSearchCriterionArgs = {\r\n\tinput: RelationInput;\r\n};\r\n\r\nexport type MutationDeleteOneEmployeeArgs = {\r\n\tinput: DeleteOneInput;\r\n};\r\n\r\nexport type MutationDeleteManyEmployeesArgs = {\r\n\tinput: DeleteManyEmployeesInput;\r\n};\r\n\r\nexport type MutationUpdateOneEmployeeArgs = {\r\n\tinput: UpdateOneEmployeeInput;\r\n};\r\n\r\nexport type MutationUpdateManyEmployeesArgs = {\r\n\tinput: UpdateManyEmployeesInput;\r\n};\r\n\r\nexport type MutationCreateOneEmployeeArgs = {\r\n\tinput: CreateOneEmployeeInput;\r\n};\r\n\r\nexport type MutationCreateManyEmployeesArgs = {\r\n\tinput: CreateManyEmployeesInput;\r\n};\r\n\r\nexport type MutationRemoveUpworkJobSearchCriteriaFromEmployeeArgs = {\r\n\tinput: RelationsInput;\r\n};\r\n\r\nexport type MutationAddUpworkJobSearchCriteriaToEmployeeArgs = {\r\n\tinput: RelationsInput;\r\n};\r\n\r\nexport type MutationDeleteOneEmployeeJobPostArgs = {\r\n\tinput: DeleteOneInput;\r\n};\r\n\r\nexport type MutationDeleteManyEmployeeJobPostsArgs = {\r\n\tinput: DeleteManyEmployeeJobPostsInput;\r\n};\r\n\r\nexport type MutationUpdateOneEmployeeJobPostArgs = {\r\n\tinput: UpdateOneEmployeeJobPostInput;\r\n};\r\n\r\nexport type MutationUpdateManyEmployeeJobPostsArgs = {\r\n\tinput: UpdateManyEmployeeJobPostsInput;\r\n};\r\n\r\nexport type MutationCreateOneEmployeeJobPostArgs = {\r\n\tinput: CreateOneEmployeeJobPostInput;\r\n};\r\n\r\nexport type MutationCreateManyEmployeeJobPostsArgs = {\r\n\tinput: CreateManyEmployeeJobPostsInput;\r\n};\r\n\r\nexport type MutationRemoveJobPostFromEmployeeJobPostArgs = {\r\n\tinput: RelationInput;\r\n};\r\n\r\nexport type MutationRemoveEmployeeFromEmployeeJobPostArgs = {\r\n\tinput: RelationInput;\r\n};\r\n\r\nexport type MutationSetJobPostOnEmployeeJobPostArgs = {\r\n\tinput: RelationInput;\r\n};\r\n\r\nexport type MutationSetEmployeeOnEmployeeJobPostArgs = {\r\n\tinput: RelationInput;\r\n};\r\n\r\nexport type DeleteOneInput = {\r\n\t/** The id of the record to delete. */\r\n\tid: Scalars['ID'];\r\n};\r\n\r\nexport type DeleteManyJobPostsInput = {\r\n\t/** Filter to find records to delete */\r\n\tfilter: JobPostDeleteFilter;\r\n};\r\n\r\nexport type JobPostDeleteFilter = {\r\n\tand?: Maybe<Array<JobPostDeleteFilter>>;\r\n\tor?: Maybe<Array<JobPostDeleteFilter>>;\r\n\tid?: Maybe<IdFilterComparison>;\r\n\tproviderCode?: Maybe<StringFieldComparison>;\r\n\tproviderJobId?: Maybe<StringFieldComparison>;\r\n\tjobDateCreated?: Maybe<DateFieldComparison>;\r\n\tjobStatus?: Maybe<StringFieldComparison>;\r\n\tjobType?: Maybe<StringFieldComparison>;\r\n\tcountry?: Maybe<StringFieldComparison>;\r\n\tcreatedAt?: Maybe<DateFieldComparison>;\r\n\tupdatedAt?: Maybe<DateFieldComparison>;\r\n\tisActive?: Maybe<BooleanFieldComparison>;\r\n\tisArchived?: Maybe<BooleanFieldComparison>;\r\n};\r\n\r\nexport type UpdateOneJobPostInput = {\r\n\t/** The id of the record to update */\r\n\tid: Scalars['ID'];\r\n\t/** The update to apply. */\r\n\tupdate: UpdateJobPost;\r\n};\r\n\r\nexport type UpdateJobPost = {\r\n\tid?: Maybe<Scalars['ID']>;\r\n\tproviderCode?: Maybe<Scalars['String']>;\r\n\tproviderJobId?: Maybe<Scalars['String']>;\r\n\ttitle?: Maybe<Scalars['String']>;\r\n\tdescription?: Maybe<Scalars['String']>;\r\n\tjobDateCreated?: Maybe<Scalars['DateTime']>;\r\n\tjobStatus?: Maybe<Scalars['String']>;\r\n\tjobType?: Maybe<Scalars['String']>;\r\n\turl?: Maybe<Scalars['String']>;\r\n\tbudget?: Maybe<Scalars['String']>;\r\n\tduration?: Maybe<Scalars['String']>;\r\n\tworkload?: Maybe<Scalars['String']>;\r\n\tskills?: Maybe<Scalars['String']>;\r\n\tcategory?: Maybe<Scalars['String']>;\r\n\tsubcategory?: Maybe<Scalars['String']>;\r\n\tcountry?: Maybe<Scalars['String']>;\r\n\tclientFeedback?: Maybe<Scalars['String']>;\r\n\tclientReviewsCount?: Maybe<Scalars['Float']>;\r\n\tclientJobsPosted?: Maybe<Scalars['Float']>;\r\n\tclientPastHires?: Maybe<Scalars['Float']>;\r\n\tclientPaymentVerificationStatus?: Maybe<Scalars['Boolean']>;\r\n\tsearchCategory?: Maybe<Scalars['String']>;\r\n\tsearchCategoryId?: Maybe<Scalars['String']>;\r\n\tsearchOccupation?: Maybe<Scalars['String']>;\r\n\tsearchOccupationId?: Maybe<Scalars['String']>;\r\n\tsearchJobType?: Maybe<Scalars['String']>;\r\n\tsearchKeyword?: Maybe<Scalars['String']>;\r\n\tcreatedAt?: Maybe<Scalars['DateTime']>;\r\n\tupdatedAt?: Maybe<Scalars['DateTime']>;\r\n\tisActive?: Maybe<Scalars['Boolean']>;\r\n\tisArchived?: Maybe<Scalars['Boolean']>;\r\n};\r\n\r\nexport type UpdateManyJobPostsInput = {\r\n\t/** Filter used to find fields to update */\r\n\tfilter: JobPostUpdateFilter;\r\n\t/** The update to apply to all records found using the filter */\r\n\tupdate: UpdateJobPost;\r\n};\r\n\r\nexport type JobPostUpdateFilter = {\r\n\tand?: Maybe<Array<JobPostUpdateFilter>>;\r\n\tor?: Maybe<Array<JobPostUpdateFilter>>;\r\n\tid?: Maybe<IdFilterComparison>;\r\n\tproviderCode?: Maybe<StringFieldComparison>;\r\n\tproviderJobId?: Maybe<StringFieldComparison>;\r\n\tjobDateCreated?: Maybe<DateFieldComparison>;\r\n\tjobStatus?: Maybe<StringFieldComparison>;\r\n\tjobType?: Maybe<StringFieldComparison>;\r\n\tcountry?: Maybe<StringFieldComparison>;\r\n\tcreatedAt?: Maybe<DateFieldComparison>;\r\n\tupdatedAt?: Maybe<DateFieldComparison>;\r\n\tisActive?: Maybe<BooleanFieldComparison>;\r\n\tisArchived?: Maybe<BooleanFieldComparison>;\r\n};\r\n\r\nexport type CreateOneJobPostInput = {\r\n\t/** The record to create */\r\n\tjobPost: CreateJobPost;\r\n};\r\n\r\nexport type CreateJobPost = {\r\n\tid?: Maybe<Scalars['ID']>;\r\n\tproviderCode?: Maybe<Scalars['String']>;\r\n\tproviderJobId?: Maybe<Scalars['String']>;\r\n\ttitle?: Maybe<Scalars['String']>;\r\n\tdescription?: Maybe<Scalars['String']>;\r\n\tjobDateCreated?: Maybe<Scalars['DateTime']>;\r\n\tjobStatus?: Maybe<Scalars['String']>;\r\n\tjobType?: Maybe<Scalars['String']>;\r\n\turl?: Maybe<Scalars['String']>;\r\n\tbudget?: Maybe<Scalars['String']>;\r\n\tduration?: Maybe<Scalars['String']>;\r\n\tworkload?: Maybe<Scalars['String']>;\r\n\tskills?: Maybe<Scalars['String']>;\r\n\tcategory?: Maybe<Scalars['String']>;\r\n\tsubcategory?: Maybe<Scalars['String']>;\r\n\tcountry?: Maybe<Scalars['String']>;\r\n\tclientFeedback?: Maybe<Scalars['String']>;\r\n\tclientReviewsCount?: Maybe<Scalars['Float']>;\r\n\tclientJobsPosted?: Maybe<Scalars['Float']>;\r\n\tclientPastHires?: Maybe<Scalars['Float']>;\r\n\tclientPaymentVerificationStatus?: Maybe<Scalars['Boolean']>;\r\n\tsearchCategory?: Maybe<Scalars['String']>;\r\n\tsearchCategoryId?: Maybe<Scalars['String']>;\r\n\tsearchOccupation?: Maybe<Scalars['String']>;\r\n\tsearchOccupationId?: Maybe<Scalars['String']>;\r\n\tsearchJobType?: Maybe<Scalars['String']>;\r\n\tsearchKeyword?: Maybe<Scalars['String']>;\r\n\tcreatedAt?: Maybe<Scalars['DateTime']>;\r\n\tupdatedAt?: Maybe<Scalars['DateTime']>;\r\n\tisActive?: Maybe<Scalars['Boolean']>;\r\n\tisArchived?: Maybe<Scalars['Boolean']>;\r\n};\r\n\r\nexport type CreateManyJobPostsInput = {\r\n\t/** Array of records to create */\r\n\tjobPosts: Array<CreateJobPost>;\r\n};\r\n\r\nexport type DeleteManyUpworkJobsSearchCriteriaInput = {\r\n\t/** Filter to find records to delete */\r\n\tfilter: UpworkJobsSearchCriterionDeleteFilter;\r\n};\r\n\r\nexport type UpworkJobsSearchCriterionDeleteFilter = {\r\n\tand?: Maybe<Array<UpworkJobsSearchCriterionDeleteFilter>>;\r\n\tor?: Maybe<Array<UpworkJobsSearchCriterionDeleteFilter>>;\r\n\tid?: Maybe<IdFilterComparison>;\r\n\temployeeId?: Maybe<StringFieldComparison>;\r\n\tjobType?: Maybe<StringFieldComparison>;\r\n\tisActive?: Maybe<BooleanFieldComparison>;\r\n\tisArchived?: Maybe<BooleanFieldComparison>;\r\n};\r\n\r\nexport type UpdateOneUpworkJobsSearchCriterionInput = {\r\n\t/** The id of the record to update */\r\n\tid: Scalars['ID'];\r\n\t/** The update to apply. */\r\n\tupdate: UpdateUpworkJobsSearchCriterion;\r\n};\r\n\r\nexport type UpdateUpworkJobsSearchCriterion = {\r\n\tid?: Maybe<Scalars['ID']>;\r\n\temployeeId?: Maybe<Scalars['String']>;\r\n\tcategory?: Maybe<Scalars['String']>;\r\n\tcategoryId?: Maybe<Scalars['String']>;\r\n\toccupation?: Maybe<Scalars['String']>;\r\n\toccupationId?: Maybe<Scalars['String']>;\r\n\tjobType?: Maybe<Scalars['String']>;\r\n\tkeyword?: Maybe<Scalars['String']>;\r\n\tcreatedAt?: Maybe<Scalars['DateTime']>;\r\n\tupdatedAt?: Maybe<Scalars['DateTime']>;\r\n\tisActive?: Maybe<Scalars['Boolean']>;\r\n\tisArchived?: Maybe<Scalars['Boolean']>;\r\n};\r\n\r\nexport type UpdateManyUpworkJobsSearchCriteriaInput = {\r\n\t/** Filter used to find fields to update */\r\n\tfilter: UpworkJobsSearchCriterionUpdateFilter;\r\n\t/** The update to apply to all records found using the filter */\r\n\tupdate: UpdateUpworkJobsSearchCriterion;\r\n};\r\n\r\nexport type UpworkJobsSearchCriterionUpdateFilter = {\r\n\tand?: Maybe<Array<UpworkJobsSearchCriterionUpdateFilter>>;\r\n\tor?: Maybe<Array<UpworkJobsSearchCriterionUpdateFilter>>;\r\n\tid?: Maybe<IdFilterComparison>;\r\n\temployeeId?: Maybe<StringFieldComparison>;\r\n\tjobType?: Maybe<StringFieldComparison>;\r\n\tisActive?: Maybe<BooleanFieldComparison>;\r\n\tisArchived?: Maybe<BooleanFieldComparison>;\r\n};\r\n\r\nexport type CreateOneUpworkJobsSearchCriterionInput = {\r\n\t/** The record to create */\r\n\tupworkJobsSearchCriterion: CreateUpworkJobsSearchCriterion;\r\n};\r\n\r\nexport type CreateUpworkJobsSearchCriterion = {\r\n\tid?: Maybe<Scalars['ID']>;\r\n\temployeeId?: Maybe<Scalars['String']>;\r\n\tcategory?: Maybe<Scalars['String']>;\r\n\tcategoryId?: Maybe<Scalars['String']>;\r\n\toccupation?: Maybe<Scalars['String']>;\r\n\toccupationId?: Maybe<Scalars['String']>;\r\n\tjobType?: Maybe<Scalars['String']>;\r\n\tkeyword?: Maybe<Scalars['String']>;\r\n\tcreatedAt?: Maybe<Scalars['DateTime']>;\r\n\tupdatedAt?: Maybe<Scalars['DateTime']>;\r\n\tisActive?: Maybe<Scalars['Boolean']>;\r\n\tisArchived?: Maybe<Scalars['Boolean']>;\r\n};\r\n\r\nexport type CreateManyUpworkJobsSearchCriteriaInput = {\r\n\t/** Array of records to create */\r\n\tupworkJobsSearchCriteria: Array<CreateUpworkJobsSearchCriterion>;\r\n};\r\n\r\nexport type RelationInput = {\r\n\t/** The id of the record. */\r\n\tid: Scalars['ID'];\r\n\t/** The id of relation. */\r\n\trelationId: Scalars['ID'];\r\n};\r\n\r\nexport type DeleteManyEmployeesInput = {\r\n\t/** Filter to find records to delete */\r\n\tfilter: EmployeeDeleteFilter;\r\n};\r\n\r\nexport type EmployeeDeleteFilter = {\r\n\tand?: Maybe<Array<EmployeeDeleteFilter>>;\r\n\tor?: Maybe<Array<EmployeeDeleteFilter>>;\r\n\tid?: Maybe<IdFilterComparison>;\r\n\texternalEmployeeId?: Maybe<StringFieldComparison>;\r\n\tfirstName?: Maybe<StringFieldComparison>;\r\n\tlastName?: Maybe<StringFieldComparison>;\r\n\tjobType?: Maybe<StringFieldComparison>;\r\n\tcreatedAt?: Maybe<DateFieldComparison>;\r\n\tupdatedAt?: Maybe<DateFieldComparison>;\r\n\tisActive?: Maybe<BooleanFieldComparison>;\r\n\tisArchived?: Maybe<BooleanFieldComparison>;\r\n};\r\n\r\nexport type UpdateOneEmployeeInput = {\r\n\t/** The id of the record to update */\r\n\tid: Scalars['ID'];\r\n\t/** The update to apply. */\r\n\tupdate: UpdateEmployee;\r\n};\r\n\r\nexport type UpdateEmployee = {\r\n\tid?: Maybe<Scalars['ID']>;\r\n\texternalEmployeeId?: Maybe<Scalars['String']>;\r\n\tfirstName?: Maybe<Scalars['String']>;\r\n\tlastName?: Maybe<Scalars['String']>;\r\n\tname?: Maybe<Scalars['String']>;\r\n\tjobType?: Maybe<Scalars['String']>;\r\n\tcreatedAt?: Maybe<Scalars['DateTime']>;\r\n\tupdatedAt?: Maybe<Scalars['DateTime']>;\r\n\tisActive?: Maybe<Scalars['Boolean']>;\r\n\tisArchived?: Maybe<Scalars['Boolean']>;\r\n};\r\n\r\nexport type UpdateManyEmployeesInput = {\r\n\t/** Filter used to find fields to update */\r\n\tfilter: EmployeeUpdateFilter;\r\n\t/** The update to apply to all records found using the filter */\r\n\tupdate: UpdateEmployee;\r\n};\r\n\r\nexport type EmployeeUpdateFilter = {\r\n\tand?: Maybe<Array<EmployeeUpdateFilter>>;\r\n\tor?: Maybe<Array<EmployeeUpdateFilter>>;\r\n\tid?: Maybe<IdFilterComparison>;\r\n\texternalEmployeeId?: Maybe<StringFieldComparison>;\r\n\tfirstName?: Maybe<StringFieldComparison>;\r\n\tlastName?: Maybe<StringFieldComparison>;\r\n\tjobType?: Maybe<StringFieldComparison>;\r\n\tcreatedAt?: Maybe<DateFieldComparison>;\r\n\tupdatedAt?: Maybe<DateFieldComparison>;\r\n\tisActive?: Maybe<BooleanFieldComparison>;\r\n\tisArchived?: Maybe<BooleanFieldComparison>;\r\n};\r\n\r\nexport type CreateOneEmployeeInput = {\r\n\t/** The record to create */\r\n\temployee: CreateEmployee;\r\n};\r\n\r\nexport type CreateEmployee = {\r\n\tid?: Maybe<Scalars['ID']>;\r\n\texternalEmployeeId?: Maybe<Scalars['String']>;\r\n\tfirstName?: Maybe<Scalars['String']>;\r\n\tlastName?: Maybe<Scalars['String']>;\r\n\tname?: Maybe<Scalars['String']>;\r\n\tjobType?: Maybe<Scalars['String']>;\r\n\tcreatedAt?: Maybe<Scalars['DateTime']>;\r\n\tupdatedAt?: Maybe<Scalars['DateTime']>;\r\n\tisActive?: Maybe<Scalars['Boolean']>;\r\n\tisArchived?: Maybe<Scalars['Boolean']>;\r\n};\r\n\r\nexport type CreateManyEmployeesInput = {\r\n\t/** Array of records to create */\r\n\temployees: Array<CreateEmployee>;\r\n};\r\n\r\nexport type RelationsInput = {\r\n\t/** The id of the record. */\r\n\tid: Scalars['ID'];\r\n\t/** The ids of the relations. */\r\n\trelationIds: Array<Scalars['ID']>;\r\n};\r\n\r\nexport type DeleteManyEmployeeJobPostsInput = {\r\n\t/** Filter to find records to delete */\r\n\tfilter: EmployeeJobPostDeleteFilter;\r\n};\r\n\r\nexport type EmployeeJobPostDeleteFilter = {\r\n\tand?: Maybe<Array<EmployeeJobPostDeleteFilter>>;\r\n\tor?: Maybe<Array<EmployeeJobPostDeleteFilter>>;\r\n\tid?: Maybe<IdFilterComparison>;\r\n\temployeeId?: Maybe<StringFieldComparison>;\r\n\tjobPostId?: Maybe<StringFieldComparison>;\r\n\tjobDateCreated?: Maybe<DateFieldComparison>;\r\n\tjobStatus?: Maybe<StringFieldComparison>;\r\n\tjobType?: Maybe<StringFieldComparison>;\r\n\tproviderCode?: Maybe<StringFieldComparison>;\r\n\tproviderJobId?: Maybe<StringFieldComparison>;\r\n\tisApplied?: Maybe<BooleanFieldComparison>;\r\n\tappliedDate?: Maybe<DateFieldComparison>;\r\n\tcreatedAt?: Maybe<DateFieldComparison>;\r\n\tupdatedAt?: Maybe<DateFieldComparison>;\r\n\tisActive?: Maybe<BooleanFieldComparison>;\r\n\tisArchived?: Maybe<BooleanFieldComparison>;\r\n};\r\n\r\nexport type UpdateOneEmployeeJobPostInput = {\r\n\t/** The id of the record to update */\r\n\tid: Scalars['ID'];\r\n\t/** The update to apply. */\r\n\tupdate: UpdateEmployeeJobPost;\r\n};\r\n\r\nexport type UpdateEmployeeJobPost = {\r\n\tid?: Maybe<Scalars['ID']>;\r\n\temployeeId?: Maybe<Scalars['String']>;\r\n\tjobPostId?: Maybe<Scalars['String']>;\r\n\tjobDateCreated?: Maybe<Scalars['DateTime']>;\r\n\tjobStatus?: Maybe<Scalars['String']>;\r\n\tjobType?: Maybe<Scalars['String']>;\r\n\tproviderCode?: Maybe<Scalars['String']>;\r\n\tproviderJobId?: Maybe<Scalars['String']>;\r\n\tisApplied?: Maybe<Scalars['Boolean']>;\r\n\tappliedDate?: Maybe<Scalars['DateTime']>;\r\n\tcreatedAt?: Maybe<Scalars['DateTime']>;\r\n\tupdatedAt?: Maybe<Scalars['DateTime']>;\r\n\tisActive?: Maybe<Scalars['Boolean']>;\r\n\tisArchived?: Maybe<Scalars['Boolean']>;\r\n};\r\n\r\nexport type UpdateManyEmployeeJobPostsInput = {\r\n\t/** Filter used to find fields to update */\r\n\tfilter: EmployeeJobPostUpdateFilter;\r\n\t/** The update to apply to all records found using the filter */\r\n\tupdate: UpdateEmployeeJobPost;\r\n};\r\n\r\nexport type EmployeeJobPostUpdateFilter = {\r\n\tand?: Maybe<Array<EmployeeJobPostUpdateFilter>>;\r\n\tor?: Maybe<Array<EmployeeJobPostUpdateFilter>>;\r\n\tid?: Maybe<IdFilterComparison>;\r\n\temployeeId?: Maybe<StringFieldComparison>;\r\n\tjobPostId?: Maybe<StringFieldComparison>;\r\n\tjobDateCreated?: Maybe<DateFieldComparison>;\r\n\tjobStatus?: Maybe<StringFieldComparison>;\r\n\tjobType?: Maybe<StringFieldComparison>;\r\n\tproviderCode?: Maybe<StringFieldComparison>;\r\n\tproviderJobId?: Maybe<StringFieldComparison>;\r\n\tisApplied?: Maybe<BooleanFieldComparison>;\r\n\tappliedDate?: Maybe<DateFieldComparison>;\r\n\tcreatedAt?: Maybe<DateFieldComparison>;\r\n\tupdatedAt?: Maybe<DateFieldComparison>;\r\n\tisActive?: Maybe<BooleanFieldComparison>;\r\n\tisArchived?: Maybe<BooleanFieldComparison>;\r\n};\r\n\r\nexport type CreateOneEmployeeJobPostInput = {\r\n\t/** The record to create */\r\n\temployeeJobPost: CreateEmployeeJobPost;\r\n};\r\n\r\nexport type CreateEmployeeJobPost = {\r\n\tid?: Maybe<Scalars['ID']>;\r\n\temployeeId?: Maybe<Scalars['String']>;\r\n\tjobPostId?: Maybe<Scalars['String']>;\r\n\tjobDateCreated?: Maybe<Scalars['DateTime']>;\r\n\tjobStatus?: Maybe<Scalars['String']>;\r\n\tjobType?: Maybe<Scalars['String']>;\r\n\tproviderCode?: Maybe<Scalars['String']>;\r\n\tproviderJobId?: Maybe<Scalars['String']>;\r\n\tisApplied?: Maybe<Scalars['Boolean']>;\r\n\tappliedDate?: Maybe<Scalars['DateTime']>;\r\n\tcreatedAt?: Maybe<Scalars['DateTime']>;\r\n\tupdatedAt?: Maybe<Scalars['DateTime']>;\r\n\tisActive?: Maybe<Scalars['Boolean']>;\r\n\tisArchived?: Maybe<Scalars['Boolean']>;\r\n};\r\n\r\nexport type CreateManyEmployeeJobPostsInput = {\r\n\t/** Array of records to create */\r\n\temployeeJobPosts: Array<CreateEmployeeJobPost>;\r\n};\r\n\r\nexport type Subscription = {\r\n\t__typename?: 'Subscription';\r\n\tdeletedOneJobPost: JobPostDeleteResponse;\r\n\tdeletedManyJobPosts: DeleteManyResponse;\r\n\tupdatedOneJobPost: JobPost;\r\n\tupdatedManyJobPosts: UpdateManyResponse;\r\n\tcreatedJobPost: JobPost;\r\n\tdeletedOneUpworkJobsSearchCriterion: UpworkJobsSearchCriterionDeleteResponse;\r\n\tdeletedManyUpworkJobsSearchCriteria: DeleteManyResponse;\r\n\tupdatedOneUpworkJobsSearchCriterion: UpworkJobsSearchCriterion;\r\n\tupdatedManyUpworkJobsSearchCriteria: UpdateManyResponse;\r\n\tcreatedUpworkJobsSearchCriterion: UpworkJobsSearchCriterion;\r\n\tdeletedOneEmployee: EmployeeDeleteResponse;\r\n\tdeletedManyEmployees: DeleteManyResponse;\r\n\tupdatedOneEmployee: Employee;\r\n\tupdatedManyEmployees: UpdateManyResponse;\r\n\tcreatedEmployee: Employee;\r\n\tdeletedOneEmployeeJobPost: EmployeeJobPostDeleteResponse;\r\n\tdeletedManyEmployeeJobPosts: DeleteManyResponse;\r\n\tupdatedOneEmployeeJobPost: EmployeeJobPost;\r\n\tupdatedManyEmployeeJobPosts: UpdateManyResponse;\r\n\tcreatedEmployeeJobPost: EmployeeJobPost;\r\n};\r\n\r\nexport type SubscriptionDeletedOneJobPostArgs = {\r\n\tinput?: Maybe<DeleteOneJobPostSubscriptionFilterInput>;\r\n};\r\n\r\nexport type SubscriptionUpdatedOneJobPostArgs = {\r\n\tinput?: Maybe<UpdateOneJobPostSubscriptionFilterInput>;\r\n};\r\n\r\nexport type SubscriptionCreatedJobPostArgs = {\r\n\tinput?: Maybe<CreateJobPostSubscriptionFilterInput>;\r\n};\r\n\r\nexport type SubscriptionDeletedOneUpworkJobsSearchCriterionArgs = {\r\n\tinput?: Maybe<DeleteOneUpworkJobsSearchCriterionSubscriptionFilterInput>;\r\n};\r\n\r\nexport type SubscriptionUpdatedOneUpworkJobsSearchCriterionArgs = {\r\n\tinput?: Maybe<UpdateOneUpworkJobsSearchCriterionSubscriptionFilterInput>;\r\n};\r\n\r\nexport type SubscriptionCreatedUpworkJobsSearchCriterionArgs = {\r\n\tinput?: Maybe<CreateUpworkJobsSearchCriterionSubscriptionFilterInput>;\r\n};\r\n\r\nexport type SubscriptionDeletedOneEmployeeArgs = {\r\n\tinput?: Maybe<DeleteOneEmployeeSubscriptionFilterInput>;\r\n};\r\n\r\nexport type SubscriptionUpdatedOneEmployeeArgs = {\r\n\tinput?: Maybe<UpdateOneEmployeeSubscriptionFilterInput>;\r\n};\r\n\r\nexport type SubscriptionCreatedEmployeeArgs = {\r\n\tinput?: Maybe<CreateEmployeeSubscriptionFilterInput>;\r\n};\r\n\r\nexport type SubscriptionDeletedOneEmployeeJobPostArgs = {\r\n\tinput?: Maybe<DeleteOneEmployeeJobPostSubscriptionFilterInput>;\r\n};\r\n\r\nexport type SubscriptionUpdatedOneEmployeeJobPostArgs = {\r\n\tinput?: Maybe<UpdateOneEmployeeJobPostSubscriptionFilterInput>;\r\n};\r\n\r\nexport type SubscriptionCreatedEmployeeJobPostArgs = {\r\n\tinput?: Maybe<CreateEmployeeJobPostSubscriptionFilterInput>;\r\n};\r\n\r\nexport type DeleteOneJobPostSubscriptionFilterInput = {\r\n\t/** Specify to filter the records returned. */\r\n\tfilter: JobPostSubscriptionFilter;\r\n};\r\n\r\nexport type JobPostSubscriptionFilter = {\r\n\tand?: Maybe<Array<JobPostSubscriptionFilter>>;\r\n\tor?: Maybe<Array<JobPostSubscriptionFilter>>;\r\n\tid?: Maybe<IdFilterComparison>;\r\n\tproviderCode?: Maybe<StringFieldComparison>;\r\n\tproviderJobId?: Maybe<StringFieldComparison>;\r\n\tjobDateCreated?: Maybe<DateFieldComparison>;\r\n\tjobStatus?: Maybe<StringFieldComparison>;\r\n\tjobType?: Maybe<StringFieldComparison>;\r\n\tcountry?: Maybe<StringFieldComparison>;\r\n\tcreatedAt?: Maybe<DateFieldComparison>;\r\n\tupdatedAt?: Maybe<DateFieldComparison>;\r\n\tisActive?: Maybe<BooleanFieldComparison>;\r\n\tisArchived?: Maybe<BooleanFieldComparison>;\r\n};\r\n\r\nexport type UpdateOneJobPostSubscriptionFilterInput = {\r\n\t/** Specify to filter the records returned. */\r\n\tfilter: JobPostSubscriptionFilter;\r\n};\r\n\r\nexport type CreateJobPostSubscriptionFilterInput = {\r\n\t/** Specify to filter the records returned. */\r\n\tfilter: JobPostSubscriptionFilter;\r\n};\r\n\r\nexport type DeleteOneUpworkJobsSearchCriterionSubscriptionFilterInput = {\r\n\t/** Specify to filter the records returned. */\r\n\tfilter: UpworkJobsSearchCriterionSubscriptionFilter;\r\n};\r\n\r\nexport type UpworkJobsSearchCriterionSubscriptionFilter = {\r\n\tand?: Maybe<Array<UpworkJobsSearchCriterionSubscriptionFilter>>;\r\n\tor?: Maybe<Array<UpworkJobsSearchCriterionSubscriptionFilter>>;\r\n\tid?: Maybe<IdFilterComparison>;\r\n\temployeeId?: Maybe<StringFieldComparison>;\r\n\tjobType?: Maybe<StringFieldComparison>;\r\n\tisActive?: Maybe<BooleanFieldComparison>;\r\n\tisArchived?: Maybe<BooleanFieldComparison>;\r\n};\r\n\r\nexport type UpdateOneUpworkJobsSearchCriterionSubscriptionFilterInput = {\r\n\t/** Specify to filter the records returned. */\r\n\tfilter: UpworkJobsSearchCriterionSubscriptionFilter;\r\n};\r\n\r\nexport type CreateUpworkJobsSearchCriterionSubscriptionFilterInput = {\r\n\t/** Specify to filter the records returned. */\r\n\tfilter: UpworkJobsSearchCriterionSubscriptionFilter;\r\n};\r\n\r\nexport type DeleteOneEmployeeSubscriptionFilterInput = {\r\n\t/** Specify to filter the records returned. */\r\n\tfilter: EmployeeSubscriptionFilter;\r\n};\r\n\r\nexport type EmployeeSubscriptionFilter = {\r\n\tand?: Maybe<Array<EmployeeSubscriptionFilter>>;\r\n\tor?: Maybe<Array<EmployeeSubscriptionFilter>>;\r\n\tid?: Maybe<IdFilterComparison>;\r\n\texternalEmployeeId?: Maybe<StringFieldComparison>;\r\n\tfirstName?: Maybe<StringFieldComparison>;\r\n\tlastName?: Maybe<StringFieldComparison>;\r\n\tjobType?: Maybe<StringFieldComparison>;\r\n\tcreatedAt?: Maybe<DateFieldComparison>;\r\n\tupdatedAt?: Maybe<DateFieldComparison>;\r\n\tisActive?: Maybe<BooleanFieldComparison>;\r\n\tisArchived?: Maybe<BooleanFieldComparison>;\r\n};\r\n\r\nexport type UpdateOneEmployeeSubscriptionFilterInput = {\r\n\t/** Specify to filter the records returned. */\r\n\tfilter: EmployeeSubscriptionFilter;\r\n};\r\n\r\nexport type CreateEmployeeSubscriptionFilterInput = {\r\n\t/** Specify to filter the records returned. */\r\n\tfilter: EmployeeSubscriptionFilter;\r\n};\r\n\r\nexport type DeleteOneEmployeeJobPostSubscriptionFilterInput = {\r\n\t/** Specify to filter the records returned. */\r\n\tfilter: EmployeeJobPostSubscriptionFilter;\r\n};\r\n\r\nexport type EmployeeJobPostSubscriptionFilter = {\r\n\tand?: Maybe<Array<EmployeeJobPostSubscriptionFilter>>;\r\n\tor?: Maybe<Array<EmployeeJobPostSubscriptionFilter>>;\r\n\tid?: Maybe<IdFilterComparison>;\r\n\temployeeId?: Maybe<StringFieldComparison>;\r\n\tjobPostId?: Maybe<StringFieldComparison>;\r\n\tjobDateCreated?: Maybe<DateFieldComparison>;\r\n\tjobStatus?: Maybe<StringFieldComparison>;\r\n\tjobType?: Maybe<StringFieldComparison>;\r\n\tproviderCode?: Maybe<StringFieldComparison>;\r\n\tproviderJobId?: Maybe<StringFieldComparison>;\r\n\tisApplied?: Maybe<BooleanFieldComparison>;\r\n\tappliedDate?: Maybe<DateFieldComparison>;\r\n\tcreatedAt?: Maybe<DateFieldComparison>;\r\n\tupdatedAt?: Maybe<DateFieldComparison>;\r\n\tisActive?: Maybe<BooleanFieldComparison>;\r\n\tisArchived?: Maybe<BooleanFieldComparison>;\r\n};\r\n\r\nexport type UpdateOneEmployeeJobPostSubscriptionFilterInput = {\r\n\t/** Specify to filter the records returned. */\r\n\tfilter: EmployeeJobPostSubscriptionFilter;\r\n};\r\n\r\nexport type CreateEmployeeJobPostSubscriptionFilterInput = {\r\n\t/** Specify to filter the records returned. */\r\n\tfilter: EmployeeJobPostSubscriptionFilter;\r\n};\r\n\r\nexport type EmployeeJobPostsQueryVariables = Exact<{\r\n\tafter: Scalars['ConnectionCursor'];\r\n\tfirst: Scalars['Int'];\r\n\tfilter: EmployeeJobPostFilter;\r\n\tsorting?: Maybe<Array<EmployeeJobPostSort>>;\r\n}>;\r\n\r\nexport type EmployeeJobPostsQuery = { __typename?: 'Query' } & {\r\n\temployeeJobPosts: { __typename?: 'EmployeeJobPostConnection' } & Pick<\r\n\t\tEmployeeJobPostConnection,\r\n\t\t'totalCount'\r\n\t> & {\r\n\t\t\tpageInfo: { __typename?: 'PageInfo' } & Pick<\r\n\t\t\t\tPageInfo,\r\n\t\t\t\t'hasNextPage' | 'hasPreviousPage' | 'startCursor' | 'endCursor'\r\n\t\t\t>;\r\n\t\t\tedges: Array<\r\n\t\t\t\t{ __typename?: 'EmployeeJobPostEdge' } & {\r\n\t\t\t\t\tnode: { __typename?: 'EmployeeJobPost' } & Pick<\r\n\t\t\t\t\t\tEmployeeJobPost,\r\n\t\t\t\t\t\t| 'id'\r\n\t\t\t\t\t\t| 'isApplied'\r\n\t\t\t\t\t\t| 'appliedDate'\r\n\t\t\t\t\t\t| 'createdAt'\r\n\t\t\t\t\t\t| 'updatedAt'\r\n\t\t\t\t\t\t| 'isActive'\r\n\t\t\t\t\t\t| 'isArchived'\r\n\t\t\t\t\t\t| 'providerCode'\r\n\t\t\t\t\t\t| 'providerJobId'\r\n\t\t\t\t\t\t| 'jobDateCreated'\r\n\t\t\t\t\t\t| 'jobStatus'\r\n\t\t\t\t\t\t| 'jobType'\r\n\t\t\t\t\t> & {\r\n\t\t\t\t\t\t\temployee: { __typename?: 'Employee' } & Pick<\r\n\t\t\t\t\t\t\t\tEmployee,\r\n\t\t\t\t\t\t\t\t'id' | 'externalEmployeeId'\r\n\t\t\t\t\t\t\t>;\r\n\t\t\t\t\t\t\tjobPost: { __typename?: 'JobPost' } & Pick<\r\n\t\t\t\t\t\t\t\tJobPost,\r\n\t\t\t\t\t\t\t\t| 'id'\r\n\t\t\t\t\t\t\t\t| 'providerCode'\r\n\t\t\t\t\t\t\t\t| 'providerJobId'\r\n\t\t\t\t\t\t\t\t| 'title'\r\n\t\t\t\t\t\t\t\t| 'description'\r\n\t\t\t\t\t\t\t\t| 'jobDateCreated'\r\n\t\t\t\t\t\t\t\t| 'jobStatus'\r\n\t\t\t\t\t\t\t\t| 'jobType'\r\n\t\t\t\t\t\t\t\t| 'url'\r\n\t\t\t\t\t\t\t\t| 'budget'\r\n\t\t\t\t\t\t\t\t| 'duration'\r\n\t\t\t\t\t\t\t\t| 'workload'\r\n\t\t\t\t\t\t\t\t| 'skills'\r\n\t\t\t\t\t\t\t\t| 'category'\r\n\t\t\t\t\t\t\t\t| 'subcategory'\r\n\t\t\t\t\t\t\t\t| 'country'\r\n\t\t\t\t\t\t\t\t| 'clientFeedback'\r\n\t\t\t\t\t\t\t\t| 'clientReviewsCount'\r\n\t\t\t\t\t\t\t\t| 'clientJobsPosted'\r\n\t\t\t\t\t\t\t\t| 'clientPastHires'\r\n\t\t\t\t\t\t\t\t| 'clientPaymentVerificationStatus'\r\n\t\t\t\t\t\t\t>;\r\n\t\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t>;\r\n\t\t};\r\n};\r\n\r\nexport type EmployeeJobPostsByEmployeeIdJobPostIdQueryVariables = Exact<{\r\n\temployeeIdFilter: Scalars['String'];\r\n\tjobPostIdFilter: Scalars['String'];\r\n}>;\r\n\r\nexport type EmployeeJobPostsByEmployeeIdJobPostIdQuery = {\r\n\t__typename?: 'Query';\r\n} & {\r\n\temployeeJobPosts: { __typename?: 'EmployeeJobPostConnection' } & {\r\n\t\tedges: Array<\r\n\t\t\t{ __typename?: 'EmployeeJobPostEdge' } & {\r\n\t\t\t\tnode: { __typename?: 'EmployeeJobPost' } & Pick<\r\n\t\t\t\t\tEmployeeJobPost,\r\n\t\t\t\t\t'id' | 'isActive' | 'isArchived'\r\n\t\t\t\t>;\r\n\t\t\t}\r\n\t\t>;\r\n\t};\r\n};\r\n\r\nexport type EmployeeQueryVariables = Exact<{ [key: string]: never }>;\r\n\r\nexport type EmployeeQuery = { __typename?: 'Query' } & {\r\n\temployees: { __typename?: 'EmployeeConnection' } & {\r\n\t\tpageInfo: { __typename?: 'PageInfo' } & Pick<\r\n\t\t\tPageInfo,\r\n\t\t\t'hasNextPage' | 'hasPreviousPage' | 'startCursor' | 'endCursor'\r\n\t\t>;\r\n\t\tedges: Array<\r\n\t\t\t{ __typename?: 'EmployeeEdge' } & {\r\n\t\t\t\tnode: { __typename?: 'Employee' } & Pick<\r\n\t\t\t\t\tEmployee,\r\n\t\t\t\t\t'id' | 'externalEmployeeId' | 'firstName' | 'lastName'\r\n\t\t\t\t>;\r\n\t\t\t}\r\n\t\t>;\r\n\t};\r\n};\r\n\r\nexport type EmployeeByExternalEmployeeIdQueryVariables = Exact<{\r\n\texternalEmployeeIdFilter: Scalars['String'];\r\n}>;\r\n\r\nexport type EmployeeByExternalEmployeeIdQuery = { __typename?: 'Query' } & {\r\n\temployees: { __typename?: 'EmployeeConnection' } & Pick<\r\n\t\tEmployeeConnection,\r\n\t\t'totalCount'\r\n\t> & {\r\n\t\t\tedges: Array<\r\n\t\t\t\t{ __typename?: 'EmployeeEdge' } & {\r\n\t\t\t\t\tnode: { __typename?: 'Employee' } & Pick<\r\n\t\t\t\t\t\tEmployee,\r\n\t\t\t\t\t\t'id' | 'externalEmployeeId'\r\n\t\t\t\t\t>;\r\n\t\t\t\t}\r\n\t\t\t>;\r\n\t\t};\r\n};\r\n\r\nexport type EmployeeByNameQueryVariables = Exact<{\r\n\tfirstNameFilter: Scalars['String'];\r\n\tlastNameFilter: Scalars['String'];\r\n}>;\r\n\r\nexport type EmployeeByNameQuery = { __typename?: 'Query' } & {\r\n\temployees: { __typename?: 'EmployeeConnection' } & Pick<\r\n\t\tEmployeeConnection,\r\n\t\t'totalCount'\r\n\t> & {\r\n\t\t\tedges: Array<\r\n\t\t\t\t{ __typename?: 'EmployeeEdge' } & {\r\n\t\t\t\t\tnode: { __typename?: 'Employee' } & Pick<\r\n\t\t\t\t\t\tEmployee,\r\n\t\t\t\t\t\t'id' | 'firstName' | 'lastName' | 'externalEmployeeId'\r\n\t\t\t\t\t>;\r\n\t\t\t\t}\r\n\t\t\t>;\r\n\t\t};\r\n};\r\n\r\nexport type UpdateOneEmployeeMutationVariables = Exact<{\r\n\tinput: UpdateOneEmployeeInput;\r\n}>;\r\n\r\nexport type UpdateOneEmployeeMutation = { __typename?: 'Mutation' } & {\r\n\tupdateOneEmployee: { __typename?: 'Employee' } & Pick<\r\n\t\tEmployee,\r\n\t\t| 'externalEmployeeId'\r\n\t\t| 'isActive'\r\n\t\t| 'isArchived'\r\n\t\t| 'firstName'\r\n\t\t| 'lastName'\r\n\t>;\r\n};\r\n\r\nexport type UpdateOneEmployeeJobPostMutationVariables = Exact<{\r\n\tinput: UpdateOneEmployeeJobPostInput;\r\n}>;\r\n\r\nexport type UpdateOneEmployeeJobPostMutation = { __typename?: 'Mutation' } & {\r\n\tupdateOneEmployeeJobPost: { __typename?: 'EmployeeJobPost' } & Pick<\r\n\t\tEmployeeJobPost,\r\n\t\t| 'employeeId'\r\n\t\t| 'jobPostId'\r\n\t\t| 'isActive'\r\n\t\t| 'isArchived'\r\n\t\t| 'isApplied'\r\n\t\t| 'appliedDate'\r\n\t>;\r\n};\r\n\r\nexport type DeleteManyUpworkJobsSearchCriteriaMutationVariables = Exact<{\r\n\tinput: DeleteManyUpworkJobsSearchCriteriaInput;\r\n}>;\r\n\r\nexport type DeleteManyUpworkJobsSearchCriteriaMutation = {\r\n\t__typename?: 'Mutation';\r\n} & {\r\n\tdeleteManyUpworkJobsSearchCriteria: {\r\n\t\t__typename?: 'DeleteManyResponse';\r\n\t} & Pick<DeleteManyResponse, 'deletedCount'>;\r\n};\r\n\r\nexport type CreateManyUpworkJobsSearchCriteriaMutationVariables = Exact<{\r\n\tinput: CreateManyUpworkJobsSearchCriteriaInput;\r\n}>;\r\n\r\nexport type CreateManyUpworkJobsSearchCriteriaMutation = {\r\n\t__typename?: 'Mutation';\r\n} & {\r\n\tcreateManyUpworkJobsSearchCriteria: Array<\r\n\t\t{ __typename?: 'UpworkJobsSearchCriterion' } & Pick<\r\n\t\t\tUpworkJobsSearchCriterion,\r\n\t\t\t'id'\r\n\t\t>\r\n\t>;\r\n};\r\n\r\nexport type JobPostsQueryVariables = Exact<{\r\n\tproviderCodeFilter: Scalars['String'];\r\n\tproviderJobIdFilter: Scalars['String'];\r\n}>;\r\n\r\nexport type JobPostsQuery = { __typename?: 'Query' } & {\r\n\tjobPosts: { __typename?: 'JobPostConnection' } & {\r\n\t\tedges: Array<\r\n\t\t\t{ __typename?: 'JobPostEdge' } & {\r\n\t\t\t\tnode: { __typename?: 'JobPost' } & Pick<\r\n\t\t\t\t\tJobPost,\r\n\t\t\t\t\t'id' | 'isActive' | 'isArchived'\r\n\t\t\t\t>;\r\n\t\t\t}\r\n\t\t>;\r\n\t};\r\n};\r\n\r\nexport const EmployeeJobPostsDocument: DocumentNode<\r\n\tEmployeeJobPostsQuery,\r\n\tEmployeeJobPostsQueryVariables\r\n> = {\r\n\tkind: 'Document',\r\n\tdefinitions: [\r\n\t\t{\r\n\t\t\tkind: 'OperationDefinition',\r\n\t\t\toperation: 'query',\r\n\t\t\tname: { kind: 'Name', value: 'employeeJobPosts' },\r\n\t\t\tvariableDefinitions: [\r\n\t\t\t\t{\r\n\t\t\t\t\tkind: 'VariableDefinition',\r\n\t\t\t\t\tvariable: {\r\n\t\t\t\t\t\tkind: 'Variable',\r\n\t\t\t\t\t\tname: { kind: 'Name', value: 'after' }\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttype: {\r\n\t\t\t\t\t\tkind: 'NonNullType',\r\n\t\t\t\t\t\ttype: {\r\n\t\t\t\t\t\t\tkind: 'NamedType',\r\n\t\t\t\t\t\t\tname: { kind: 'Name', value: 'ConnectionCursor' }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdirectives: []\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tkind: 'VariableDefinition',\r\n\t\t\t\t\tvariable: {\r\n\t\t\t\t\t\tkind: 'Variable',\r\n\t\t\t\t\t\tname: { kind: 'Name', value: 'first' }\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttype: {\r\n\t\t\t\t\t\tkind: 'NonNullType',\r\n\t\t\t\t\t\ttype: {\r\n\t\t\t\t\t\t\tkind: 'NamedType',\r\n\t\t\t\t\t\t\tname: { kind: 'Name', value: 'Int' }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdirectives: []\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tkind: 'VariableDefinition',\r\n\t\t\t\t\tvariable: {\r\n\t\t\t\t\t\tkind: 'Variable',\r\n\t\t\t\t\t\tname: { kind: 'Name', value: 'filter' }\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttype: {\r\n\t\t\t\t\t\tkind: 'NonNullType',\r\n\t\t\t\t\t\ttype: {\r\n\t\t\t\t\t\t\tkind: 'NamedType',\r\n\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\tvalue: 'EmployeeJobPostFilter'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdirectives: []\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tkind: 'VariableDefinition',\r\n\t\t\t\t\tvariable: {\r\n\t\t\t\t\t\tkind: 'Variable',\r\n\t\t\t\t\t\tname: { kind: 'Name', value: 'sorting' }\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttype: {\r\n\t\t\t\t\t\tkind: 'ListType',\r\n\t\t\t\t\t\ttype: {\r\n\t\t\t\t\t\t\tkind: 'NonNullType',\r\n\t\t\t\t\t\t\ttype: {\r\n\t\t\t\t\t\t\t\tkind: 'NamedType',\r\n\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\tvalue: 'EmployeeJobPostSort'\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdirectives: []\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\tdirectives: [],\r\n\t\t\tselectionSet: {\r\n\t\t\t\tkind: 'SelectionSet',\r\n\t\t\t\tselections: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\tname: { kind: 'Name', value: 'employeeJobPosts' },\r\n\t\t\t\t\t\targuments: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tkind: 'Argument',\r\n\t\t\t\t\t\t\t\tname: { kind: 'Name', value: 'paging' },\r\n\t\t\t\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\t\t\t\tkind: 'ObjectValue',\r\n\t\t\t\t\t\t\t\t\tfields: [\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tkind: 'ObjectField',\r\n\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'after'\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Variable',\r\n\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'after'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tkind: 'ObjectField',\r\n\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'first'\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Variable',\r\n\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'first'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tkind: 'Argument',\r\n\t\t\t\t\t\t\t\tname: { kind: 'Name', value: 'filter' },\r\n\t\t\t\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\t\t\t\tkind: 'Variable',\r\n\t\t\t\t\t\t\t\t\tname: { kind: 'Name', value: 'filter' }\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tkind: 'Argument',\r\n\t\t\t\t\t\t\t\tname: { kind: 'Name', value: 'sorting' },\r\n\t\t\t\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\t\t\t\tkind: 'Variable',\r\n\t\t\t\t\t\t\t\t\tname: { kind: 'Name', value: 'sorting' }\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tdirectives: [],\r\n\t\t\t\t\t\tselectionSet: {\r\n\t\t\t\t\t\t\tkind: 'SelectionSet',\r\n\t\t\t\t\t\t\tselections: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\tname: { kind: 'Name', value: 'totalCount' },\r\n\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\tname: { kind: 'Name', value: 'pageInfo' },\r\n\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\tdirectives: [],\r\n\t\t\t\t\t\t\t\t\tselectionSet: {\r\n\t\t\t\t\t\t\t\t\t\tkind: 'SelectionSet',\r\n\t\t\t\t\t\t\t\t\t\tselections: [\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'hasNextPage'\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'hasPreviousPage'\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'startCursor'\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'endCursor'\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\tname: { kind: 'Name', value: 'edges' },\r\n\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\tdirectives: [],\r\n\t\t\t\t\t\t\t\t\tselectionSet: {\r\n\t\t\t\t\t\t\t\t\t\tkind: 'SelectionSet',\r\n\t\t\t\t\t\t\t\t\t\tselections: [\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'node'\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\tdirectives: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\tselectionSet: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'SelectionSet',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tselections: [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'id'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'isApplied'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'appliedDate'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'createdAt'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'updatedAt'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'isActive'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'isArchived'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'employee'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirectives: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselectionSet: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'SelectionSet',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselections: [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'id'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'externalEmployeeId'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'providerCode'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'providerJobId'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'jobDateCreated'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'jobStatus'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'jobType'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'jobPost'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirectives: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselectionSet: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'SelectionSet',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselections: [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'id'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'providerCode'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'providerJobId'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'title'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'description'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'jobDateCreated'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'jobStatus'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'jobType'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'url'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'budget'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'duration'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'workload'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'skills'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'category'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'subcategory'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'country'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'clientFeedback'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'clientReviewsCount'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'clientJobsPosted'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'clientPastHires'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'clientPaymentVerificationStatus'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n};\r\nexport const EmployeeJobPostsByEmployeeIdJobPostIdDocument: DocumentNode<\r\n\tEmployeeJobPostsByEmployeeIdJobPostIdQuery,\r\n\tEmployeeJobPostsByEmployeeIdJobPostIdQueryVariables\r\n> = {\r\n\tkind: 'Document',\r\n\tdefinitions: [\r\n\t\t{\r\n\t\t\tkind: 'OperationDefinition',\r\n\t\t\toperation: 'query',\r\n\t\t\tname: {\r\n\t\t\t\tkind: 'Name',\r\n\t\t\t\tvalue: 'employeeJobPostsByEmployeeIdJobPostId'\r\n\t\t\t},\r\n\t\t\tvariableDefinitions: [\r\n\t\t\t\t{\r\n\t\t\t\t\tkind: 'VariableDefinition',\r\n\t\t\t\t\tvariable: {\r\n\t\t\t\t\t\tkind: 'Variable',\r\n\t\t\t\t\t\tname: { kind: 'Name', value: 'employeeIdFilter' }\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttype: {\r\n\t\t\t\t\t\tkind: 'NonNullType',\r\n\t\t\t\t\t\ttype: {\r\n\t\t\t\t\t\t\tkind: 'NamedType',\r\n\t\t\t\t\t\t\tname: { kind: 'Name', value: 'String' }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdirectives: []\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tkind: 'VariableDefinition',\r\n\t\t\t\t\tvariable: {\r\n\t\t\t\t\t\tkind: 'Variable',\r\n\t\t\t\t\t\tname: { kind: 'Name', value: 'jobPostIdFilter' }\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttype: {\r\n\t\t\t\t\t\tkind: 'NonNullType',\r\n\t\t\t\t\t\ttype: {\r\n\t\t\t\t\t\t\tkind: 'NamedType',\r\n\t\t\t\t\t\t\tname: { kind: 'Name', value: 'String' }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdirectives: []\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\tdirectives: [],\r\n\t\t\tselectionSet: {\r\n\t\t\t\tkind: 'SelectionSet',\r\n\t\t\t\tselections: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\tname: { kind: 'Name', value: 'employeeJobPosts' },\r\n\t\t\t\t\t\targuments: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tkind: 'Argument',\r\n\t\t\t\t\t\t\t\tname: { kind: 'Name', value: 'filter' },\r\n\t\t\t\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\t\t\t\tkind: 'ObjectValue',\r\n\t\t\t\t\t\t\t\t\tfields: [\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tkind: 'ObjectField',\r\n\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'employeeId'\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tkind: 'ObjectValue',\r\n\t\t\t\t\t\t\t\t\t\t\t\tfields: [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'ObjectField',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'eq'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Variable',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'employeeIdFilter'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tkind: 'ObjectField',\r\n\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'jobPostId'\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tkind: 'ObjectValue',\r\n\t\t\t\t\t\t\t\t\t\t\t\tfields: [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'ObjectField',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'eq'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Variable',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'jobPostIdFilter'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tdirectives: [],\r\n\t\t\t\t\t\tselectionSet: {\r\n\t\t\t\t\t\t\tkind: 'SelectionSet',\r\n\t\t\t\t\t\t\tselections: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\tname: { kind: 'Name', value: 'edges' },\r\n\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\tdirectives: [],\r\n\t\t\t\t\t\t\t\t\tselectionSet: {\r\n\t\t\t\t\t\t\t\t\t\tkind: 'SelectionSet',\r\n\t\t\t\t\t\t\t\t\t\tselections: [\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'node'\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\tdirectives: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\tselectionSet: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'SelectionSet',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tselections: [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'id'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'isActive'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'isArchived'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n};\r\nexport const EmployeeDocument: DocumentNode<\r\n\tEmployeeQuery,\r\n\tEmployeeQueryVariables\r\n> = {\r\n\tkind: 'Document',\r\n\tdefinitions: [\r\n\t\t{\r\n\t\t\tkind: 'OperationDefinition',\r\n\t\t\toperation: 'query',\r\n\t\t\tname: { kind: 'Name', value: 'employee' },\r\n\t\t\tvariableDefinitions: [],\r\n\t\t\tdirectives: [],\r\n\t\t\tselectionSet: {\r\n\t\t\t\tkind: 'SelectionSet',\r\n\t\t\t\tselections: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\tname: { kind: 'Name', value: 'employees' },\r\n\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\tdirectives: [],\r\n\t\t\t\t\t\tselectionSet: {\r\n\t\t\t\t\t\t\tkind: 'SelectionSet',\r\n\t\t\t\t\t\t\tselections: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\tname: { kind: 'Name', value: 'pageInfo' },\r\n\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\tdirectives: [],\r\n\t\t\t\t\t\t\t\t\tselectionSet: {\r\n\t\t\t\t\t\t\t\t\t\tkind: 'SelectionSet',\r\n\t\t\t\t\t\t\t\t\t\tselections: [\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'hasNextPage'\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'hasPreviousPage'\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'startCursor'\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'endCursor'\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\tname: { kind: 'Name', value: 'edges' },\r\n\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\tdirectives: [],\r\n\t\t\t\t\t\t\t\t\tselectionSet: {\r\n\t\t\t\t\t\t\t\t\t\tkind: 'SelectionSet',\r\n\t\t\t\t\t\t\t\t\t\tselections: [\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'node'\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\tdirectives: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\tselectionSet: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'SelectionSet',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tselections: [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'id'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'externalEmployeeId'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'firstName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'lastName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n};\r\nexport const EmployeeByExternalEmployeeIdDocument: DocumentNode<\r\n\tEmployeeByExternalEmployeeIdQuery,\r\n\tEmployeeByExternalEmployeeIdQueryVariables\r\n> = {\r\n\tkind: 'Document',\r\n\tdefinitions: [\r\n\t\t{\r\n\t\t\tkind: 'OperationDefinition',\r\n\t\t\toperation: 'query',\r\n\t\t\tname: { kind: 'Name', value: 'employeeByExternalEmployeeId' },\r\n\t\t\tvariableDefinitions: [\r\n\t\t\t\t{\r\n\t\t\t\t\tkind: 'VariableDefinition',\r\n\t\t\t\t\tvariable: {\r\n\t\t\t\t\t\tkind: 'Variable',\r\n\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\tvalue: 'externalEmployeeIdFilter'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttype: {\r\n\t\t\t\t\t\tkind: 'NonNullType',\r\n\t\t\t\t\t\ttype: {\r\n\t\t\t\t\t\t\tkind: 'NamedType',\r\n\t\t\t\t\t\t\tname: { kind: 'Name', value: 'String' }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdirectives: []\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\tdirectives: [],\r\n\t\t\tselectionSet: {\r\n\t\t\t\tkind: 'SelectionSet',\r\n\t\t\t\tselections: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\tname: { kind: 'Name', value: 'employees' },\r\n\t\t\t\t\t\targuments: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tkind: 'Argument',\r\n\t\t\t\t\t\t\t\tname: { kind: 'Name', value: 'filter' },\r\n\t\t\t\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\t\t\t\tkind: 'ObjectValue',\r\n\t\t\t\t\t\t\t\t\tfields: [\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tkind: 'ObjectField',\r\n\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'externalEmployeeId'\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tkind: 'ObjectValue',\r\n\t\t\t\t\t\t\t\t\t\t\t\tfields: [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'ObjectField',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'eq'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Variable',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'externalEmployeeIdFilter'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tdirectives: [],\r\n\t\t\t\t\t\tselectionSet: {\r\n\t\t\t\t\t\t\tkind: 'SelectionSet',\r\n\t\t\t\t\t\t\tselections: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\tname: { kind: 'Name', value: 'edges' },\r\n\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\tdirectives: [],\r\n\t\t\t\t\t\t\t\t\tselectionSet: {\r\n\t\t\t\t\t\t\t\t\t\tkind: 'SelectionSet',\r\n\t\t\t\t\t\t\t\t\t\tselections: [\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'node'\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\tdirectives: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\tselectionSet: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'SelectionSet',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tselections: [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'id'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'externalEmployeeId'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\tname: { kind: 'Name', value: 'totalCount' },\r\n\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n};\r\nexport const EmployeeByNameDocument: DocumentNode<\r\n\tEmployeeByNameQuery,\r\n\tEmployeeByNameQueryVariables\r\n> = {\r\n\tkind: 'Document',\r\n\tdefinitions: [\r\n\t\t{\r\n\t\t\tkind: 'OperationDefinition',\r\n\t\t\toperation: 'query',\r\n\t\t\tname: { kind: 'Name', value: 'employeeByName' },\r\n\t\t\tvariableDefinitions: [\r\n\t\t\t\t{\r\n\t\t\t\t\tkind: 'VariableDefinition',\r\n\t\t\t\t\tvariable: {\r\n\t\t\t\t\t\tkind: 'Variable',\r\n\t\t\t\t\t\tname: { kind: 'Name', value: 'firstNameFilter' }\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttype: {\r\n\t\t\t\t\t\tkind: 'NonNullType',\r\n\t\t\t\t\t\ttype: {\r\n\t\t\t\t\t\t\tkind: 'NamedType',\r\n\t\t\t\t\t\t\tname: { kind: 'Name', value: 'String' }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdirectives: []\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tkind: 'VariableDefinition',\r\n\t\t\t\t\tvariable: {\r\n\t\t\t\t\t\tkind: 'Variable',\r\n\t\t\t\t\t\tname: { kind: 'Name', value: 'lastNameFilter' }\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttype: {\r\n\t\t\t\t\t\tkind: 'NonNullType',\r\n\t\t\t\t\t\ttype: {\r\n\t\t\t\t\t\t\tkind: 'NamedType',\r\n\t\t\t\t\t\t\tname: { kind: 'Name', value: 'String' }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdirectives: []\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\tdirectives: [],\r\n\t\t\tselectionSet: {\r\n\t\t\t\tkind: 'SelectionSet',\r\n\t\t\t\tselections: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\tname: { kind: 'Name', value: 'employees' },\r\n\t\t\t\t\t\targuments: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tkind: 'Argument',\r\n\t\t\t\t\t\t\t\tname: { kind: 'Name', value: 'filter' },\r\n\t\t\t\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\t\t\t\tkind: 'ObjectValue',\r\n\t\t\t\t\t\t\t\t\tfields: [\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tkind: 'ObjectField',\r\n\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'firstName'\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tkind: 'ObjectValue',\r\n\t\t\t\t\t\t\t\t\t\t\t\tfields: [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'ObjectField',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'eq'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Variable',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'firstNameFilter'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tkind: 'ObjectField',\r\n\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'lastName'\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tkind: 'ObjectValue',\r\n\t\t\t\t\t\t\t\t\t\t\t\tfields: [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'ObjectField',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'eq'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Variable',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'lastNameFilter'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tdirectives: [],\r\n\t\t\t\t\t\tselectionSet: {\r\n\t\t\t\t\t\t\tkind: 'SelectionSet',\r\n\t\t\t\t\t\t\tselections: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\tname: { kind: 'Name', value: 'edges' },\r\n\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\tdirectives: [],\r\n\t\t\t\t\t\t\t\t\tselectionSet: {\r\n\t\t\t\t\t\t\t\t\t\tkind: 'SelectionSet',\r\n\t\t\t\t\t\t\t\t\t\tselections: [\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'node'\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\tdirectives: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\tselectionSet: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'SelectionSet',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tselections: [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'id'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'firstName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'lastName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'externalEmployeeId'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\tname: { kind: 'Name', value: 'totalCount' },\r\n\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n};\r\nexport const UpdateOneEmployeeDocument: DocumentNode<\r\n\tUpdateOneEmployeeMutation,\r\n\tUpdateOneEmployeeMutationVariables\r\n> = {\r\n\tkind: 'Document',\r\n\tdefinitions: [\r\n\t\t{\r\n\t\t\tkind: 'OperationDefinition',\r\n\t\t\toperation: 'mutation',\r\n\t\t\tname: { kind: 'Name', value: 'updateOneEmployee' },\r\n\t\t\tvariableDefinitions: [\r\n\t\t\t\t{\r\n\t\t\t\t\tkind: 'VariableDefinition',\r\n\t\t\t\t\tvariable: {\r\n\t\t\t\t\t\tkind: 'Variable',\r\n\t\t\t\t\t\tname: { kind: 'Name', value: 'input' }\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttype: {\r\n\t\t\t\t\t\tkind: 'NonNullType',\r\n\t\t\t\t\t\ttype: {\r\n\t\t\t\t\t\t\tkind: 'NamedType',\r\n\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\tvalue: 'UpdateOneEmployeeInput'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdirectives: []\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\tdirectives: [],\r\n\t\t\tselectionSet: {\r\n\t\t\t\tkind: 'SelectionSet',\r\n\t\t\t\tselections: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\tname: { kind: 'Name', value: 'updateOneEmployee' },\r\n\t\t\t\t\t\targuments: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tkind: 'Argument',\r\n\t\t\t\t\t\t\t\tname: { kind: 'Name', value: 'input' },\r\n\t\t\t\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\t\t\t\tkind: 'Variable',\r\n\t\t\t\t\t\t\t\t\tname: { kind: 'Name', value: 'input' }\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tdirectives: [],\r\n\t\t\t\t\t\tselectionSet: {\r\n\t\t\t\t\t\t\tkind: 'SelectionSet',\r\n\t\t\t\t\t\t\tselections: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\tvalue: 'externalEmployeeId'\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\tname: { kind: 'Name', value: 'isActive' },\r\n\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\tname: { kind: 'Name', value: 'isArchived' },\r\n\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\tname: { kind: 'Name', value: 'firstName' },\r\n\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\tname: { kind: 'Name', value: 'lastName' },\r\n\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n};\r\nexport const UpdateOneEmployeeJobPostDocument: DocumentNode<\r\n\tUpdateOneEmployeeJobPostMutation,\r\n\tUpdateOneEmployeeJobPostMutationVariables\r\n> = {\r\n\tkind: 'Document',\r\n\tdefinitions: [\r\n\t\t{\r\n\t\t\tkind: 'OperationDefinition',\r\n\t\t\toperation: 'mutation',\r\n\t\t\tname: { kind: 'Name', value: 'updateOneEmployeeJobPost' },\r\n\t\t\tvariableDefinitions: [\r\n\t\t\t\t{\r\n\t\t\t\t\tkind: 'VariableDefinition',\r\n\t\t\t\t\tvariable: {\r\n\t\t\t\t\t\tkind: 'Variable',\r\n\t\t\t\t\t\tname: { kind: 'Name', value: 'input' }\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttype: {\r\n\t\t\t\t\t\tkind: 'NonNullType',\r\n\t\t\t\t\t\ttype: {\r\n\t\t\t\t\t\t\tkind: 'NamedType',\r\n\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\tvalue: 'UpdateOneEmployeeJobPostInput'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdirectives: []\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\tdirectives: [],\r\n\t\t\tselectionSet: {\r\n\t\t\t\tkind: 'SelectionSet',\r\n\t\t\t\tselections: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\tvalue: 'updateOneEmployeeJobPost'\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\targuments: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tkind: 'Argument',\r\n\t\t\t\t\t\t\t\tname: { kind: 'Name', value: 'input' },\r\n\t\t\t\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\t\t\t\tkind: 'Variable',\r\n\t\t\t\t\t\t\t\t\tname: { kind: 'Name', value: 'input' }\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tdirectives: [],\r\n\t\t\t\t\t\tselectionSet: {\r\n\t\t\t\t\t\t\tkind: 'SelectionSet',\r\n\t\t\t\t\t\t\tselections: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\tname: { kind: 'Name', value: 'employeeId' },\r\n\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\tname: { kind: 'Name', value: 'jobPostId' },\r\n\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\tname: { kind: 'Name', value: 'isActive' },\r\n\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\tname: { kind: 'Name', value: 'isArchived' },\r\n\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\tname: { kind: 'Name', value: 'isApplied' },\r\n\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\tvalue: 'appliedDate'\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n};\r\nexport const DeleteManyUpworkJobsSearchCriteriaDocument: DocumentNode<\r\n\tDeleteManyUpworkJobsSearchCriteriaMutation,\r\n\tDeleteManyUpworkJobsSearchCriteriaMutationVariables\r\n> = {\r\n\tkind: 'Document',\r\n\tdefinitions: [\r\n\t\t{\r\n\t\t\tkind: 'OperationDefinition',\r\n\t\t\toperation: 'mutation',\r\n\t\t\tname: { kind: 'Name', value: 'deleteManyUpworkJobsSearchCriteria' },\r\n\t\t\tvariableDefinitions: [\r\n\t\t\t\t{\r\n\t\t\t\t\tkind: 'VariableDefinition',\r\n\t\t\t\t\tvariable: {\r\n\t\t\t\t\t\tkind: 'Variable',\r\n\t\t\t\t\t\tname: { kind: 'Name', value: 'input' }\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttype: {\r\n\t\t\t\t\t\tkind: 'NonNullType',\r\n\t\t\t\t\t\ttype: {\r\n\t\t\t\t\t\t\tkind: 'NamedType',\r\n\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\tvalue: 'DeleteManyUpworkJobsSearchCriteriaInput'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdirectives: []\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\tdirectives: [],\r\n\t\t\tselectionSet: {\r\n\t\t\t\tkind: 'SelectionSet',\r\n\t\t\t\tselections: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\tvalue: 'deleteManyUpworkJobsSearchCriteria'\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\targuments: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tkind: 'Argument',\r\n\t\t\t\t\t\t\t\tname: { kind: 'Name', value: 'input' },\r\n\t\t\t\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\t\t\t\tkind: 'Variable',\r\n\t\t\t\t\t\t\t\t\tname: { kind: 'Name', value: 'input' }\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tdirectives: [],\r\n\t\t\t\t\t\tselectionSet: {\r\n\t\t\t\t\t\t\tkind: 'SelectionSet',\r\n\t\t\t\t\t\t\tselections: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\tvalue: 'deletedCount'\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n};\r\nexport const CreateManyUpworkJobsSearchCriteriaDocument: DocumentNode<\r\n\tCreateManyUpworkJobsSearchCriteriaMutation,\r\n\tCreateManyUpworkJobsSearchCriteriaMutationVariables\r\n> = {\r\n\tkind: 'Document',\r\n\tdefinitions: [\r\n\t\t{\r\n\t\t\tkind: 'OperationDefinition',\r\n\t\t\toperation: 'mutation',\r\n\t\t\tname: { kind: 'Name', value: 'createManyUpworkJobsSearchCriteria' },\r\n\t\t\tvariableDefinitions: [\r\n\t\t\t\t{\r\n\t\t\t\t\tkind: 'VariableDefinition',\r\n\t\t\t\t\tvariable: {\r\n\t\t\t\t\t\tkind: 'Variable',\r\n\t\t\t\t\t\tname: { kind: 'Name', value: 'input' }\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttype: {\r\n\t\t\t\t\t\tkind: 'NonNullType',\r\n\t\t\t\t\t\ttype: {\r\n\t\t\t\t\t\t\tkind: 'NamedType',\r\n\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\tvalue: 'CreateManyUpworkJobsSearchCriteriaInput'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdirectives: []\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\tdirectives: [],\r\n\t\t\tselectionSet: {\r\n\t\t\t\tkind: 'SelectionSet',\r\n\t\t\t\tselections: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\tvalue: 'createManyUpworkJobsSearchCriteria'\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\targuments: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tkind: 'Argument',\r\n\t\t\t\t\t\t\t\tname: { kind: 'Name', value: 'input' },\r\n\t\t\t\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\t\t\t\tkind: 'Variable',\r\n\t\t\t\t\t\t\t\t\tname: { kind: 'Name', value: 'input' }\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tdirectives: [],\r\n\t\t\t\t\t\tselectionSet: {\r\n\t\t\t\t\t\t\tkind: 'SelectionSet',\r\n\t\t\t\t\t\t\tselections: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\tname: { kind: 'Name', value: 'id' },\r\n\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n};\r\nexport const JobPostsDocument: DocumentNode<\r\n\tJobPostsQuery,\r\n\tJobPostsQueryVariables\r\n> = {\r\n\tkind: 'Document',\r\n\tdefinitions: [\r\n\t\t{\r\n\t\t\tkind: 'OperationDefinition',\r\n\t\t\toperation: 'query',\r\n\t\t\tname: { kind: 'Name', value: 'jobPosts' },\r\n\t\t\tvariableDefinitions: [\r\n\t\t\t\t{\r\n\t\t\t\t\tkind: 'VariableDefinition',\r\n\t\t\t\t\tvariable: {\r\n\t\t\t\t\t\tkind: 'Variable',\r\n\t\t\t\t\t\tname: { kind: 'Name', value: 'providerCodeFilter' }\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttype: {\r\n\t\t\t\t\t\tkind: 'NonNullType',\r\n\t\t\t\t\t\ttype: {\r\n\t\t\t\t\t\t\tkind: 'NamedType',\r\n\t\t\t\t\t\t\tname: { kind: 'Name', value: 'String' }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdirectives: []\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tkind: 'VariableDefinition',\r\n\t\t\t\t\tvariable: {\r\n\t\t\t\t\t\tkind: 'Variable',\r\n\t\t\t\t\t\tname: { kind: 'Name', value: 'providerJobIdFilter' }\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttype: {\r\n\t\t\t\t\t\tkind: 'NonNullType',\r\n\t\t\t\t\t\ttype: {\r\n\t\t\t\t\t\t\tkind: 'NamedType',\r\n\t\t\t\t\t\t\tname: { kind: 'Name', value: 'String' }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdirectives: []\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\tdirectives: [],\r\n\t\t\tselectionSet: {\r\n\t\t\t\tkind: 'SelectionSet',\r\n\t\t\t\tselections: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\tname: { kind: 'Name', value: 'jobPosts' },\r\n\t\t\t\t\t\targuments: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tkind: 'Argument',\r\n\t\t\t\t\t\t\t\tname: { kind: 'Name', value: 'filter' },\r\n\t\t\t\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\t\t\t\tkind: 'ObjectValue',\r\n\t\t\t\t\t\t\t\t\tfields: [\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tkind: 'ObjectField',\r\n\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'providerCode'\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tkind: 'ObjectValue',\r\n\t\t\t\t\t\t\t\t\t\t\t\tfields: [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'ObjectField',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'eq'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Variable',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'providerCodeFilter'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tkind: 'ObjectField',\r\n\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'providerJobId'\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tkind: 'ObjectValue',\r\n\t\t\t\t\t\t\t\t\t\t\t\tfields: [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'ObjectField',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'eq'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Variable',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'providerJobIdFilter'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tdirectives: [],\r\n\t\t\t\t\t\tselectionSet: {\r\n\t\t\t\t\t\t\tkind: 'SelectionSet',\r\n\t\t\t\t\t\t\tselections: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\tname: { kind: 'Name', value: 'edges' },\r\n\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\tdirectives: [],\r\n\t\t\t\t\t\t\t\t\tselectionSet: {\r\n\t\t\t\t\t\t\t\t\t\tkind: 'SelectionSet',\r\n\t\t\t\t\t\t\t\t\t\tselections: [\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'node'\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\tdirectives: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\tselectionSet: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'SelectionSet',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tselections: [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'id'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'isActive'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Field',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: 'Name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'isArchived'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\targuments: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirectives: []\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n};\r\n","export * from './lib/hubstaff-entity-settings';\r\n","import { IntegrationEntity } from '@gauzy/models';\r\n\r\nexport const DEFAULT_ENTITY_SETTINGS = [\r\n\t{\r\n\t\tentity: IntegrationEntity.ORGANIZATION,\r\n\t\tsync: true\r\n\t},\r\n\t{\r\n\t\tentity: IntegrationEntity.PROJECT,\r\n\t\tsync: true\r\n\t},\r\n\t{\r\n\t\tentity: IntegrationEntity.CLIENT,\r\n\t\tsync: true\r\n\t}\r\n];\r\n\r\nexport const PROJECT_TIED_ENTITIES = [\r\n\t{\r\n\t\tentity: IntegrationEntity.TASK,\r\n\t\tsync: true\r\n\t},\r\n\t{\r\n\t\tentity: IntegrationEntity.ACTIVITY,\r\n\t\tsync: true\r\n\t},\r\n\t{\r\n\t\tentity: IntegrationEntity.SCREENSHOT,\r\n\t\tsync: true\r\n\t}\r\n];\r\n","export * from './lib/upwork-job.service';\r\nexport * from './lib/upwork-offers.service';\r\nexport * from './lib/upwork-report.service';\r\n","import { Injectable, BadRequestException } from '@nestjs/common';\r\nimport * as UpworkApi from 'upwork-api';\r\nimport { Profile } from 'upwork-api/lib/routers/jobs/profile.js';\r\nimport { IUpworkApiConfig } from '@gauzy/models';\r\n\r\n@Injectable()\r\nexport class UpworkJobService {\r\n\tconstructor() {}\r\n\r\n\t/*\r\n\t * Get job by key\r\n\t * This call returns the complete job object by job key. It's only available for users with `manage_recruiting` permissions within the team that the job is posted in.\r\n\t */\r\n\tpublic async getJobProfileByKey(\r\n\t\tconfig: IUpworkApiConfig,\r\n\t\tjobKey: string\r\n\t): Promise<any> {\r\n\t\ttry {\r\n\t\t\tconst api = new UpworkApi(config);\r\n\t\t\tconst profile = new Profile(api);\r\n\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tapi.setAccessToken(\r\n\t\t\t\t\tconfig.accessToken,\r\n\t\t\t\t\tconfig.accessSecret,\r\n\t\t\t\t\t() => {\r\n\t\t\t\t\t\tprofile.getSpecific(jobKey, (err, data) =>\r\n\t\t\t\t\t\t\terr ? reject(err) : resolve(data)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tthrow new BadRequestException('Cannot get job by key');\r\n\t\t}\r\n\t}\r\n}\r\n","import { Injectable, BadRequestException } from '@nestjs/common';\r\nimport * as UpworkApi from 'upwork-api';\r\nimport { Offers } from 'upwork-api/lib/routers/hr/freelancers/offers.js';\r\nimport { Applications } from 'upwork-api/lib/routers/hr/freelancers/applications.js';\r\nimport {\r\n\tIUpworkApiConfig,\r\n\tIUpworkProposalStatusEnum,\r\n\tIUpworkOfferStatusEnum\r\n} from '@gauzy/models';\r\n\r\n@Injectable()\r\nexport class UpworkOffersService {\r\n\tconstructor() {}\r\n\r\n\t/**\r\n\t * List freelancer’s offers\r\n\t * This call retrieves a list of offers received by a freelancer.\r\n\t */\r\n\tpublic async getOffersListByFreelancer(\r\n\t\tconfig: IUpworkApiConfig,\r\n\t\tstatus: IUpworkOfferStatusEnum\r\n\t): Promise<any> {\r\n\t\ttry {\r\n\t\t\tconst api = new UpworkApi(config);\r\n\t\t\tconst offers = new Offers(api);\r\n\t\t\tconst params = {\r\n\t\t\t\tstatus,\r\n\t\t\t\toffset: 0\r\n\t\t\t};\r\n\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tapi.setAccessToken(\r\n\t\t\t\t\tconfig.accessToken,\r\n\t\t\t\t\tconfig.accessSecret,\r\n\t\t\t\t\t() => {\r\n\t\t\t\t\t\toffers.getList(params, (err, data) =>\r\n\t\t\t\t\t\t\terr ? reject(err) : resolve(data)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tthrow new BadRequestException('Cannot get offers list');\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get freelancer’s offer\r\n\t * This call retrieves details about a specific offer received by a freelancer.\r\n\t */\r\n\tpublic async getOfferByKey(\r\n\t\tconfig: IUpworkApiConfig,\r\n\t\tofferKey: string\r\n\t): Promise<any> {\r\n\t\ttry {\r\n\t\t\tconst api = new UpworkApi(config);\r\n\t\t\tconst offers = new Offers(api);\r\n\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tapi.setAccessToken(\r\n\t\t\t\t\tconfig.accessToken,\r\n\t\t\t\t\tconfig.accessSecret,\r\n\t\t\t\t\t() => {\r\n\t\t\t\t\t\toffers.getSpecific(offerKey, (err, data) =>\r\n\t\t\t\t\t\t\terr ? reject(err) : resolve(data)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tthrow new BadRequestException('Cannot get freelancer offers');\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * List job applications as freelancer\r\n\t * This call lists all job applications made by a freelancer.\r\n\t */\r\n\tpublic async getProposalLisByFreelancer(\r\n\t\tconfig: IUpworkApiConfig,\r\n\t\tstatus: IUpworkProposalStatusEnum\r\n\t): Promise<any> {\r\n\t\ttry {\r\n\t\t\tconst api = new UpworkApi(config);\r\n\t\t\tconst applications = new Applications(api);\r\n\t\t\tconst params = {\r\n\t\t\t\tstatus,\r\n\t\t\t\toffset: 0\r\n\t\t\t};\r\n\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tapi.setAccessToken(\r\n\t\t\t\t\tconfig.accessToken,\r\n\t\t\t\t\tconfig.accessSecret,\r\n\t\t\t\t\t() => {\r\n\t\t\t\t\t\tapplications.getList(params, (err, data) =>\r\n\t\t\t\t\t\t\terr ? reject(err) : resolve(data)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tthrow new BadRequestException('Cannot get proposal list');\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get job application as freelancer\r\n\t * This call retrieves details about a specific job application made by a freelancer.\r\n\t */\r\n\tpublic getProposalBykey(\r\n\t\tconfig: IUpworkApiConfig,\r\n\t\tapplicationId: string\r\n\t): Promise<any> {\r\n\t\ttry {\r\n\t\t\tconst api = new UpworkApi(config);\r\n\t\t\tconst applications = new Applications(api);\r\n\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tapi.setAccessToken(\r\n\t\t\t\t\tconfig.accessToken,\r\n\t\t\t\t\tconfig.accessSecret,\r\n\t\t\t\t\t() => {\r\n\t\t\t\t\t\tapplications.getSpecific(applicationId, (err, data) =>\r\n\t\t\t\t\t\t\terr ? reject(err) : resolve(data)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tthrow new BadRequestException(\r\n\t\t\t\t'Cannot get proposal by applicationId'\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n","import { Injectable, BadRequestException } from '@nestjs/common';\r\nimport * as moment from 'moment';\r\nimport * as UpworkApi from 'upwork-api';\r\nimport { Billings } from 'upwork-api/lib/routers/reports/finance/billings.js';\r\nimport { Earnings } from 'upwork-api/lib/routers/reports/finance/earnings.js';\r\nimport { Time } from 'upwork-api/lib/routers/reports/time.js';\r\nimport { IUpworkApiConfig, IUpworkDateRange } from '@gauzy/models';\r\n\r\nconst DEFAULT_DATE_RANGE = {\r\n\tstart: moment()\r\n\t\t.quarter(moment().quarter())\r\n\t\t.startOf('quarter')\r\n\t\t.format('YYYY-MM-DD'),\r\n\tend: moment()\r\n\t\t.quarter(moment().quarter())\r\n\t\t.endOf('quarter')\r\n\t\t.format('YYYY-MM-DD')\r\n};\r\n\r\n@Injectable()\r\nexport class UpworkReportService {\r\n\tconstructor() {}\r\n\r\n\t/*\r\n\t * Get freelancer specific time reports\r\n\t * Description : This call allows callers to generate time reports for themselves, including monetary information. The caller must be the freelancer himself.\r\n\t */\r\n\tpublic async getFullReportByFreelancer(\r\n\t\tconfig: IUpworkApiConfig,\r\n\t\tproviderId,\r\n\t\tdateRange: IUpworkDateRange\r\n\t): Promise<any> {\r\n\t\ttry {\r\n\t\t\tconst api = new UpworkApi(config);\r\n\t\t\tconst reports = new Time(api);\r\n\t\t\tconst { start, end } = dateRange;\r\n\r\n\t\t\tconst select = `SELECT \r\n\t\t\t\t\t\t\tworked_on,\r\n\t\t\t\t\t\t\tcompany_id,\r\n\t\t\t\t\t\t\tcompany_name,\r\n\t\t\t\t\t\t\tassignment_name, \r\n\t\t\t\t\t\t\tassignment_team_id,\r\n\t\t\t\t\t\t\tassignment_ref,\r\n\t\t\t\t\t\t\tassignment_rate,\r\n\t\t\t\t\t\t\thours, \r\n\t\t\t\t\t\t\tmemo,\r\n\t\t\t\t\t\t\tcontract_type\r\n\t\t\t\t\t\tWHERE \r\n\t\t\t\t\t\t\tworked_on > '${start || DEFAULT_DATE_RANGE.start}' AND \r\n\t\t\t\t\t\t\tworked_on <= '${end || DEFAULT_DATE_RANGE.end}'\r\n\t\t\t\t\t\tORDER BY \r\n\t\t\t\t\t\t\tworked_on,\r\n\t\t\t\t\t\t\tassignment_ref`;\r\n\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tapi.setAccessToken(\r\n\t\t\t\t\tconfig.accessToken,\r\n\t\t\t\t\tconfig.accessSecret,\r\n\t\t\t\t\t() => {\r\n\t\t\t\t\t\treports.getByFreelancerFull(\r\n\t\t\t\t\t\t\tproviderId,\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\ttq: select\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t(err, data) => (err ? reject(err) : resolve(data))\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t} catch {\r\n\t\t\tthrow new BadRequestException(\r\n\t\t\t\t'Cannot get freelancer income report'\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\t/*\r\n\t * Get freelancer specific time reports (hours only)\r\n\t * Description : This call allows callers to generate time reports for themselves. No monetary fields, such as charges, are supported. The caller must be the freelancer himself.\r\n\t */\r\n\tpublic async getLimitedReportByFreelance(\r\n\t\tconfig: IUpworkApiConfig,\r\n\t\tproviderId,\r\n\t\tdateRange: IUpworkDateRange\r\n\t): Promise<any> {\r\n\t\ttry {\r\n\t\t\tconst api = new UpworkApi(config);\r\n\t\t\tconst reports = new Time(api);\r\n\t\t\tconst { start, end } = dateRange;\r\n\r\n\t\t\tconst select = `SELECT \r\n\t\t\t\t\t\t\tworked_on,\r\n\t\t\t\t\t\t\tcompany_id,\r\n\t\t\t\t\t\t\tcompany_name, \r\n\t\t\t\t\t\t\tassignment_name, \r\n\t\t\t\t\t\t\tassignment_team_id,\r\n\t\t\t\t\t\t\tassignment_ref,\r\n\t\t\t\t\t\t\tassignment_rate,\r\n\t\t\t\t\t\t\thours, \r\n\t\t\t\t\t\t\tmemo,\r\n\t\t\t\t\t\t\tcontract_type\r\n\t\t\t\t\t\tWHERE\r\n\t\t\t\t\t\t\tworked_on > '${start || DEFAULT_DATE_RANGE.start}' AND \r\n\t\t\t\t\t\t\tworked_on <= '${end || DEFAULT_DATE_RANGE.end}'\r\n\t\t\t\t\t\tORDER BY \r\n\t\t\t\t\t\t\tworked_on,\r\n\t\t\t\t\t\t\tassignment_ref`;\r\n\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tapi.setAccessToken(\r\n\t\t\t\t\tconfig.accessToken,\r\n\t\t\t\t\tconfig.accessSecret,\r\n\t\t\t\t\t() => {\r\n\t\t\t\t\t\treports.getByFreelancerLimited(\r\n\t\t\t\t\t\t\tproviderId,\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\ttq: select\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t(err, data) => (err ? reject(err) : resolve(data))\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tthrow new BadRequestException(\r\n\t\t\t\t'Cannot get freelancer income report'\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\t/*\r\n\t * Get billing reports for a freelancer\r\n\t * Description: This call allows freelancers to find out what clients are paying for their services.\r\n\t */\r\n\tpublic async getBillingReportByFreelancer(\r\n\t\tconfig: IUpworkApiConfig,\r\n\t\tproviderRefernceId,\r\n\t\tdateRange: IUpworkDateRange\r\n\t) {\r\n\t\ttry {\r\n\t\t\tconst api = new UpworkApi(config);\r\n\t\t\tconst billings = new Billings(api);\r\n\t\t\tconst { start, end } = dateRange;\r\n\r\n\t\t\tconst select = `SELECT \r\n\t\t\t\t\t\t\t\tamount,\r\n\t\t\t\t\t\t\t\tdate,\r\n\t\t\t\t\t\t\t\ttype,\r\n\t\t\t\t\t\t\t\tsubtype\r\n\t\t\t\t\t\t\tWHERE \r\n\t\t\t\t\t\t\t\tdate > '${start || DEFAULT_DATE_RANGE.start}' AND \r\n\t\t\t\t\t\t\t\tdate <= '${end || DEFAULT_DATE_RANGE.end}'`;\r\n\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tapi.setAccessToken(\r\n\t\t\t\t\tconfig.accessToken,\r\n\t\t\t\t\tconfig.accessSecret,\r\n\t\t\t\t\t() => {\r\n\t\t\t\t\t\tbillings.getByFreelancer(\r\n\t\t\t\t\t\t\tproviderRefernceId,\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\ttq: select\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t(err, data) => (err ? reject(err) : resolve(data))\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tthrow new BadRequestException(\r\n\t\t\t\t'Cannot get freelancer billing report'\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\t/*\r\n\t * Get earning reports for a freelancer\r\n\t * Description: This call allows freelancers to find out what they are being paid for their services.\r\n\t */\r\n\tpublic async getEarningReportByFreelancer(\r\n\t\tconfig: IUpworkApiConfig,\r\n\t\tproviderRefernceId,\r\n\t\tdateRange: IUpworkDateRange\r\n\t): Promise<any> {\r\n\t\ttry {\r\n\t\t\tconst api = new UpworkApi(config);\r\n\t\t\tconst earnings = new Earnings(api);\r\n\t\t\tconst { start, end } = dateRange;\r\n\r\n\t\t\tconst select = `SELECT \r\n\t\t\t\t\t\t\t\tamount,\r\n\t\t\t\t\t\t\t\tdate,\r\n\t\t\t\t\t\t\t\ttype,\r\n\t\t\t\t\t\t\t\tsubtype,\r\n\t\t\t\t\t\t\t\tdescription,\r\n\t\t\t\t\t\t\t\tassignment_name,\r\n\t\t\t\t\t\t\t\tassignment__reference,\r\n\t\t\t\t\t\t\t\tprovider__reference,\r\n\t\t\t\t\t\t\t\treference\r\n\t\t\t\t\t\t\tWHERE \r\n\t\t\t\t\t\t\t\tdate > '${start || DEFAULT_DATE_RANGE.start}' AND \r\n\t\t\t\t\t\t\t\tdate <= '${end || DEFAULT_DATE_RANGE.end}'`;\r\n\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tapi.setAccessToken(\r\n\t\t\t\t\tconfig.accessToken,\r\n\t\t\t\t\tconfig.accessSecret,\r\n\t\t\t\t\t() => {\r\n\t\t\t\t\t\tearnings.getByFreelancer(\r\n\t\t\t\t\t\t\tproviderRefernceId,\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\ttq: select\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t(err, data) => (err ? reject(err) : resolve(data))\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tthrow new BadRequestException(\r\n\t\t\t\t'Cannot get freelancer earning report'\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n","export * from './lib/appointment-employees.model';\r\nexport * from './lib/approval-policy.model';\r\nexport * from './lib/availability-slots.model';\r\nexport * from './lib/candidate-criterions-rating.model';\r\nexport * from './lib/candidate-document.model';\r\nexport * from './lib/candidate-education.model';\r\nexport * from './lib/candidate-experience.model';\r\nexport * from './lib/candidate-feedback.model';\r\nexport * from './lib/candidate-interview.model';\r\nexport * from './lib/candidate-interviewers.model';\r\nexport * from './lib/candidate-personal-qualities.model';\r\nexport * from './lib/candidate-skill.model';\r\nexport * from './lib/candidate-source.model';\r\nexport * from './lib/candidate-technologies.model';\r\nexport * from './lib/candidate.model';\r\nexport * from './lib/chart.model';\r\nexport * from './lib/contact.model';\r\nexport * from './lib/core.model';\r\nexport * from './lib/country.model';\r\nexport * from './lib/currency.model';\r\nexport * from './lib/custom-smtp.model';\r\nexport * from './lib/deal.model';\r\nexport * from './lib/email-template.model';\r\nexport * from './lib/email.model';\r\nexport * from './lib/employee-appointment.model';\r\nexport * from './lib/employee-award.model';\r\nexport * from './lib/employee-job.model';\r\nexport * from './lib/employee-proposal-template.model';\r\nexport * from './lib/employee-recurring-expense.model';\r\nexport * from './lib/employee-settings.model';\r\nexport * from './lib/employee-statistics.model';\r\nexport * from './lib/employee.model';\r\nexport * from './lib/entity-with-members.model';\r\nexport * from './lib/equipment-sharing-policy.model';\r\nexport * from './lib/equipment-sharing.model';\r\nexport * from './lib/equipment.model';\r\nexport * from './lib/estimate-email.model';\r\nexport * from './lib/event-type.model';\r\nexport * from './lib/expense-category.model';\r\nexport * from './lib/expense-category.model';\r\nexport * from './lib/expense.model';\r\nexport * from './lib/feature.model';\r\nexport * from './lib/file-provider';\r\nexport * from './lib/geo-location.model';\r\nexport * from './lib/goal-settings.model';\r\nexport * from './lib/goals.model';\r\nexport * from './lib/help-center-article.model';\r\nexport * from './lib/help-center-menu.model';\r\nexport * from './lib/http-status.enum';\r\nexport * from './lib/hubstaff.model';\r\nexport * from './lib/income.model';\r\nexport * from './lib/integration.model';\r\nexport * from './lib/invite.model';\r\nexport * from './lib/invoice-estimate-history.model';\r\nexport * from './lib/invoice-item.model';\r\nexport * from './lib/invoice.model';\r\nexport * from './lib/job-matching.model';\r\nexport * from './lib/job-search-category.model';\r\nexport * from './lib/job-search-occupation.model';\r\nexport * from './lib/language.model';\r\nexport * from './lib/organization-awards.model';\r\nexport * from './lib/organization-contact.model';\r\nexport * from './lib/organization-department.model';\r\nexport * from './lib/organization-document.model';\r\nexport * from './lib/organization-employment-type.model';\r\nexport * from './lib/organization-expense-category.model';\r\nexport * from './lib/organization-languages.model';\r\nexport * from './lib/organization-positions.model';\r\nexport * from './lib/organization-projects.model';\r\nexport * from './lib/organization-recurring-expense.model';\r\nexport * from './lib/organization-sprint.model';\r\nexport * from './lib/organization-team-employee-model';\r\nexport * from './lib/organization-team-model';\r\nexport * from './lib/organization-vendors.model';\r\nexport * from './lib/organization.model';\r\nexport * from './lib/payment.model';\r\nexport * from './lib/pipeline-stage.model';\r\nexport * from './lib/pipeline.model';\r\nexport * from './lib/product.model';\r\nexport * from './lib/proposal.model';\r\nexport * from './lib/recurring-expense.model';\r\nexport * from './lib/report.model';\r\nexport * from './lib/request-approval-employee.model';\r\nexport * from './lib/request-approval-team.model';\r\nexport * from './lib/request-approval.model';\r\nexport * from './lib/role-permission.model';\r\nexport * from './lib/seed.model';\r\nexport * from './lib/skill-entity.model';\r\nexport * from './lib/sms.model';\r\nexport * from './lib/tag-entity.model';\r\nexport * from './lib/task-entity.model';\r\nexport * from './lib/tenant.model';\r\nexport * from './lib/time-off.model';\r\nexport * from './lib/timesheet-statistics.model';\r\nexport * from './lib/timesheet.model';\r\nexport * from './lib/translation.model';\r\nexport * from './lib/tree-node.model';\r\nexport * from './lib/upwork.model';\r\nexport * from './lib/user-organization.model';\r\nexport * from './lib/user.model';\r\n\r\nexport { IRole, RolesEnum } from './lib/role.model';\r\nexport { IBaseEntityModel as BaseEntityModel } from './lib/base-entity.model';\r\nexport {\r\n\tIBasePerTenantAndOrganizationEntityModel,\r\n\tIBasePerTenantEntityModel\r\n} from './lib/base-entity.model';\r\n","import { IBasePerTenantAndOrganizationEntityModel } from './base-entity.model';\r\n\r\nexport interface IApprovalPolicy\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tname?: string;\r\n\tdescription?: string;\r\n\tapprovalType?: string;\r\n}\r\n\r\nexport interface IApprovalPolicyCreateInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tname?: string;\r\n\tdescription?: string;\r\n\tapprovalType?: string;\r\n}\r\n\r\nexport interface IApprovalPolicyUpdateInput extends IApprovalPolicyCreateInput {\r\n\tid?: string;\r\n}\r\n\r\nexport interface IApprovalPolicyFindInput {\r\n\tname?: string;\r\n\tdescription?: string;\r\n\tnameConstapprovalType?: string;\r\n}\r\n\r\nexport enum ApprovalPolicyTypesEnum {\r\n\tTIME_OFF = 1,\r\n\tEQUIPMENT_SHARING = 2,\r\n\tBUSINESS_TRIP = 3\r\n}\r\n\r\nexport enum ApprovalPolicyTypesStringEnum {\r\n\tTIME_OFF = 'TIME_OFF',\r\n\tEQUIPMENT_SHARING = 'EQUIPMENT_SHARING',\r\n\tBUSINESS_TRIP = 'EQUIPMENT_SHARING'\r\n}\r\n","import { IBasePerTenantAndOrganizationEntityModel } from './base-entity.model';\r\nimport { IEmployee, IEmployeeFindInput } from './employee.model';\r\n\r\nexport interface IAvailabilitySlot\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tstartTime: Date;\r\n\tendTime: Date;\r\n\tallDay: boolean;\r\n\ttype: AvailabilitySlotType;\r\n\temployeeId?: string;\r\n\temployee?: IEmployee;\r\n}\r\n\r\nexport interface IAvailabilitySlotsFindInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\ttype?: string;\r\n\temployee?: IEmployeeFindInput;\r\n}\r\n\r\nexport interface IAvailabilitySlotsCreateInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\ttype: AvailabilitySlotType;\r\n\tallDay: boolean;\r\n\tstartTime: Date;\r\n\tendTime: Date;\r\n\temployeeId?: string;\r\n}\r\n\r\nexport interface IAvailabilitySlotsView\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tid?: string;\r\n\tstartTime: Date;\r\n\tendTime: Date;\r\n\tallDay: boolean;\r\n\ttype?: AvailabilitySlotType;\r\n\temployeeId?: string;\r\n\temployee?: IEmployee;\r\n}\r\n\r\nexport enum AvailabilitySlotType {\r\n\tDEFAULT = 'Default',\r\n\tRECURRING = 'Recurring'\r\n}\r\n\r\nexport interface IGetAvailabilitySlotsConflictInput {\r\n\trelations?: string[];\r\n\tignoreId?: string | string[];\r\n\tstartTime: Date;\r\n\tendTime: Date;\r\n\temployeeId?: string;\r\n\ttype?: AvailabilitySlotType;\r\n}\r\n\r\nexport enum AvailabilityMergeType {\r\n\tMERGE = 'merge',\r\n\tREMOVE = 'remove',\r\n\tSKIP = 'skip'\r\n}\r\n","import { ICandidateInterview } from './candidate-interview.model';\r\nimport { ICandidateFeedback } from './candidate-feedback.model';\r\nimport { ICandidateSource } from './candidate-source.model';\r\nimport { IOrganization } from './organization.model';\r\nimport { IBasePerTenantAndOrganizationEntityModel } from './base-entity.model';\r\nimport { IUserFindInput, IUser } from './user.model';\r\nimport { IOrganizationTeam } from './organization-team-model';\r\nimport {\r\n\tIOrganizationDepartment,\r\n\tIOrganizationPosition,\r\n\tITag,\r\n\tIContact\r\n} from '@gauzy/models';\r\nimport { IOrganizationEmploymentType } from './organization-employment-type.model';\r\nimport { ICandidateExperience } from './candidate-experience.model';\r\nimport { ICandidateSkill } from './candidate-skill.model';\r\nimport { ICandidateEducation } from './candidate-education.model';\r\nimport { ICandidateDocument } from './candidate-document.model';\r\n\r\nexport interface ICandidate extends IBasePerTenantAndOrganizationEntityModel {\r\n\tuser: IUser;\r\n\tuserId: string;\r\n\tstatus?: string;\r\n\tteams?: IOrganizationTeam[];\r\n\torganizationDepartments?: IOrganizationDepartment[];\r\n\torganizationPosition?: IOrganizationPosition;\r\n\ttags: ITag[];\r\n\tappliedDate?: Date;\r\n\thiredDate?: Date;\r\n\trejectDate?: Date;\r\n\tcandidateLevel?: string;\r\n\torganizationEmploymentTypes?: IOrganizationEmploymentType[];\r\n\texperience?: ICandidateExperience[];\r\n\tskills?: ICandidateSkill[];\r\n\tpayPeriod?: string;\r\n\tbillRateValue?: number;\r\n\tbillRateCurrency?: string;\r\n\treWeeklyLimit?: number;\r\n\tdocuments?: ICandidateDocument[];\r\n\teducations?: ICandidateEducation[];\r\n\tsource?: ICandidateSource;\r\n\tcvUrl?: string;\r\n\tfeedbacks?: ICandidateFeedback[];\r\n\trating?: number;\r\n\tisArchived?: boolean;\r\n\tinterview?: ICandidateInterview[];\r\n\tcontact: IContact;\r\n\tratings?: number;\r\n}\r\n\r\nexport enum CandidateStatus {\r\n\tAPPLIED = 'APPLIED',\r\n\tREJECTED = 'REJECTED',\r\n\tHIRED = 'HIRED'\r\n}\r\n\r\nexport interface ICandidateFindInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tid?: string;\r\n\tuser?: IUserFindInput;\r\n\tvalueDate?: Date;\r\n}\r\n\r\nexport interface ICandidateUpdateInput {\r\n\tid?: string;\r\n\tpayPeriod?: string;\r\n\tbillRateValue?: number;\r\n\tbillRateCurrency?: string;\r\n\treWeeklyLimit?: number;\r\n\torganizationDepartment?: IOrganizationDepartment[];\r\n\torganizationPosition?: IOrganizationPosition;\r\n\torganizationEmploymentTypes?: IOrganizationEmploymentType[];\r\n\ttags?: ITag[];\r\n\tcontact?: IContact;\r\n\tappliedDate?: Date;\r\n\thiredDate?: Date;\r\n\trejectDate?: Date;\r\n\tcvUrl?: string;\r\n\tcandidateLevel?: string;\r\n}\r\n\r\nexport interface ICandidateCreateInput {\r\n\tuser: IUser;\r\n\torganization: IOrganization;\r\n\tpassword?: string;\r\n\tappliedDate?: Date;\r\n\thiredDate?: Date;\r\n\tsource?: ICandidateSource;\r\n\trejectDate?: Date;\r\n\tcvUrl?: string;\r\n\tmembers?: ICandidate[];\r\n\ttags?: ITag[];\r\n\tdocuments: ICandidateDocument[];\r\n}\r\nexport interface ICandidateLevel {\r\n\tid: string;\r\n\tlevel: string;\r\n\torganizationId: string;\r\n}\r\nexport interface ICandidateLevelInput {\r\n\tlevel: string;\r\n\torganizationId: string;\r\n}\r\n\r\nexport interface ICandidateViewModel {\r\n\tfullName: string;\r\n\temail: string;\r\n\tid: string;\r\n\timageUrl: string;\r\n\tsource?: ICandidateSource;\r\n\trating?: number;\r\n\tisArchived?: boolean;\r\n\tstatus?: string;\r\n}\r\n","import { IBaseEntityModel } from './base-entity.model';\r\n\r\nexport interface ICurrency extends IBaseEntityModel {\r\n\tisoCode: string;\r\n\tcurrency: string;\r\n}\r\n\r\nexport const DEFAULT_CURRENCIES = {\r\n\tAFN: 'Afghan Afghani',\r\n\tAFA: 'Afghan Afghani (1927\\u20132002)',\r\n\tALL: 'Albanian Lek',\r\n\tALK: 'Albanian Lek (1946\\u20131965)',\r\n\tDZD: 'Algerian Dinar',\r\n\tADP: 'Andorran Peseta',\r\n\tAOA: 'Angolan Kwanza',\r\n\tAOK: 'Angolan Kwanza (1977\\u20131991)',\r\n\tAON: 'Angolan New Kwanza (1990\\u20132000)',\r\n\tAOR: 'Angolan Readjusted Kwanza (1995\\u20131999)',\r\n\tARA: 'Argentine Austral',\r\n\tARS: 'Argentine Peso',\r\n\tARM: 'Argentine Peso (1881\\u20131970)',\r\n\tARP: 'Argentine Peso (1983\\u20131985)',\r\n\tARL: 'Argentine Peso Ley (1970\\u20131983)',\r\n\tAMD: 'Armenian Dram',\r\n\tAWG: 'Aruban Florin',\r\n\tAUD: 'Australian Dollar',\r\n\tATS: 'Austrian Schilling',\r\n\tAZN: 'Azerbaijani Manat',\r\n\tAZM: 'Azerbaijani Manat (1993\\u20132006)',\r\n\tBSD: 'Bahamian Dollar',\r\n\tBHD: 'Bahraini Dinar',\r\n\tBDT: 'Bangladeshi Taka',\r\n\tBBD: 'Barbadian Dollar',\r\n\tBYN: 'Belarusian Ruble',\r\n\tBYB: 'Belarusian Ruble (1994\\u20131999)',\r\n\tBYR: 'Belarusian Ruble (2000\\u20132016)',\r\n\tBEF: 'Belgian Franc',\r\n\tBEC: 'Belgian Franc (convertible)',\r\n\tBEL: 'Belgian Franc (financial)',\r\n\tBZD: 'Belize Dollar',\r\n\tBMD: 'Bermudan Dollar',\r\n\tBTN: 'Bhutanese Ngultrum',\r\n\tBOB: 'Bolivian Boliviano',\r\n\tBOL: 'Bolivian Boliviano (1863\\u20131963)',\r\n\tBOV: 'Bolivian Mvdol',\r\n\tBOP: 'Bolivian Peso',\r\n\tBAM: 'Bosnia-Herzegovina Convertible Mark',\r\n\tBAD: 'Bosnia-Herzegovina Dinar (1992\\u20131994)',\r\n\tBAN: 'Bosnia-Herzegovina New Dinar (1994\\u20131997)',\r\n\tBWP: 'Botswanan Pula',\r\n\tBRC: 'Brazilian Cruzado (1986\\u20131989)',\r\n\tBRZ: 'Brazilian Cruzeiro (1942\\u20131967)',\r\n\tBRE: 'Brazilian Cruzeiro (1990\\u20131993)',\r\n\tBRR: 'Brazilian Cruzeiro (1993\\u20131994)',\r\n\tBRN: 'Brazilian New Cruzado (1989\\u20131990)',\r\n\tBRB: 'Brazilian New Cruzeiro (1967\\u20131986)',\r\n\tBRL: 'Brazilian Real',\r\n\tGBP: 'British Pound',\r\n\tBND: 'Brunei Dollar',\r\n\tBGL: 'Bulgarian Hard Lev',\r\n\tBGN: 'Bulgarian Lev',\r\n\tBGO: 'Bulgarian Lev (1879\\u20131952)',\r\n\tBGM: 'Bulgarian Socialist Lev',\r\n\tBUK: 'Burmese Kyat',\r\n\tBIF: 'Burundian Franc',\r\n\tXPF: 'CFP Franc',\r\n\tKHR: 'Cambodian Riel',\r\n\tCAD: 'Canadian Dollar',\r\n\tCVE: 'Cape Verdean Escudo',\r\n\tKYD: 'Cayman Islands Dollar',\r\n\tXAF: 'Central African CFA Franc',\r\n\tCLE: 'Chilean Escudo',\r\n\tCLP: 'Chilean Peso',\r\n\tCLF: 'Chilean Unit of Account (UF)',\r\n\tCNX: 'Chinese People\\u2019s Bank Dollar',\r\n\tCNY: 'Chinese Yuan',\r\n\tCOP: 'Colombian Peso',\r\n\tCOU: 'Colombian Real Value Unit',\r\n\tKMF: 'Comorian Franc',\r\n\tCDF: 'Congolese Franc',\r\n\tCRC: 'Costa Rican Col\\u00f3n',\r\n\tHRD: 'Croatian Dinar',\r\n\tHRK: 'Croatian Kuna',\r\n\tCUC: 'Cuban Convertible Peso',\r\n\tCUP: 'Cuban Peso',\r\n\tCYP: 'Cypriot Pound',\r\n\tCZK: 'Czech Koruna',\r\n\tCSK: 'Czechoslovak Hard Koruna',\r\n\tDKK: 'Danish Krone',\r\n\tDJF: 'Djiboutian Franc',\r\n\tDOP: 'Dominican Peso',\r\n\tNLG: 'Dutch Guilder',\r\n\tXCD: 'East Caribbean Dollar',\r\n\tDDM: 'East German Mark',\r\n\tECS: 'Ecuadorian Sucre',\r\n\tECV: 'Ecuadorian Unit of Constant Value',\r\n\tEGP: 'Egyptian Pound',\r\n\tGQE: 'Equatorial Guinean Ekwele',\r\n\tERN: 'Eritrean Nakfa',\r\n\tEEK: 'Estonian Kroon',\r\n\tETB: 'Ethiopian Birr',\r\n\tEUR: 'Euro',\r\n\tXEU: 'European Currency Unit',\r\n\tFKP: 'Falkland Islands Pound',\r\n\tFJD: 'Fijian Dollar',\r\n\tFIM: 'Finnish Markka',\r\n\tFRF: 'French Franc',\r\n\tXFO: 'French Gold Franc',\r\n\tXFU: 'French UIC-Franc',\r\n\tGMD: 'Gambian Dalasi',\r\n\tGEK: 'Georgian Kupon Larit',\r\n\tGEL: 'Georgian Lari',\r\n\tDEM: 'German Mark',\r\n\tGHS: 'Ghanaian Cedi',\r\n\tGHC: 'Ghanaian Cedi (1979\\u20132007)',\r\n\tGIP: 'Gibraltar Pound',\r\n\tGRD: 'Greek Drachma',\r\n\tGTQ: 'Guatemalan Quetzal',\r\n\tGWP: 'Guinea-Bissau Peso',\r\n\tGNF: 'Guinean Franc',\r\n\tGNS: 'Guinean Syli',\r\n\tGYD: 'Guyanaese Dollar',\r\n\tHTG: 'Haitian Gourde',\r\n\tHNL: 'Honduran Lempira',\r\n\tHKD: 'Hong Kong Dollar',\r\n\tHUF: 'Hungarian Forint',\r\n\tISK: 'Icelandic Kr\\u00f3na',\r\n\tISJ: 'Icelandic Kr\\u00f3na (1918\\u20131981)',\r\n\tINR: 'Indian Rupee',\r\n\tIDR: 'Indonesian Rupiah',\r\n\tIRR: 'Iranian Rial',\r\n\tIQD: 'Iraqi Dinar',\r\n\tIEP: 'Irish Pound',\r\n\tILS: 'Israeli New Shekel',\r\n\tILP: 'Israeli Pound',\r\n\tILR: 'Israeli Shekel (1980\\u20131985)',\r\n\tITL: 'Italian Lira',\r\n\tJMD: 'Jamaican Dollar',\r\n\tJPY: 'Japanese Yen',\r\n\tJOD: 'Jordanian Dinar',\r\n\tKZT: 'Kazakhstani Tenge',\r\n\tKES: 'Kenyan Shilling',\r\n\tKWD: 'Kuwaiti Dinar',\r\n\tKGS: 'Kyrgystani Som',\r\n\tLAK: 'Laotian Kip',\r\n\tLVL: 'Latvian Lats',\r\n\tLVR: 'Latvian Ruble',\r\n\tLBP: 'Lebanese Pound',\r\n\tLSL: 'Lesotho Loti',\r\n\tLRD: 'Liberian Dollar',\r\n\tLYD: 'Libyan Dinar',\r\n\tLTL: 'Lithuanian Litas',\r\n\tLTT: 'Lithuanian Talonas',\r\n\tLUL: 'Luxembourg Financial Franc',\r\n\tLUC: 'Luxembourgian Convertible Franc',\r\n\tLUF: 'Luxembourgian Franc',\r\n\tMOP: 'Macanese Pataca',\r\n\tMKD: 'Macedonian Denar',\r\n\tMKN: 'Macedonian Denar (1992\\u20131993)',\r\n\tMGA: 'Malagasy Ariary',\r\n\tMGF: 'Malagasy Franc',\r\n\tMWK: 'Malawian Kwacha',\r\n\tMYR: 'Malaysian Ringgit',\r\n\tMVR: 'Maldivian Rufiyaa',\r\n\tMVP: 'Maldivian Rupee (1947\\u20131981)',\r\n\tMLF: 'Malian Franc',\r\n\tMTL: 'Maltese Lira',\r\n\tMTP: 'Maltese Pound',\r\n\tMRO: 'Mauritanian Ouguiya',\r\n\tMUR: 'Mauritian Rupee',\r\n\tMXV: 'Mexican Investment Unit',\r\n\tMXN: 'Mexican Peso',\r\n\tMXP: 'Mexican Silver Peso (1861\\u20131992)',\r\n\tMDC: 'Moldovan Cupon',\r\n\tMDL: 'Moldovan Leu',\r\n\tMCF: 'Monegasque Franc',\r\n\tMNT: 'Mongolian Tugrik',\r\n\tMAD: 'Moroccan Dirham',\r\n\tMAF: 'Moroccan Franc',\r\n\tMZE: 'Mozambican Escudo',\r\n\tMZN: 'Mozambican Metical',\r\n\tMZM: 'Mozambican Metical (1980\\u20132006)',\r\n\tMMK: 'Myanmar Kyat',\r\n\tNAD: 'Namibian Dollar',\r\n\tNPR: 'Nepalese Rupee',\r\n\tANG: 'Netherlands Antillean Guilder',\r\n\tTWD: 'New Taiwan Dollar',\r\n\tNZD: 'New Zealand Dollar',\r\n\tNIO: 'Nicaraguan C\\u00f3rdoba',\r\n\tNIC: 'Nicaraguan C\\u00f3rdoba (1988\\u20131991)',\r\n\tNGN: 'Nigerian Naira',\r\n\tKPW: 'North Korean Won',\r\n\tNOK: 'Norwegian Krone',\r\n\tOMR: 'Omani Rial',\r\n\tPKR: 'Pakistani Rupee',\r\n\tPAB: 'Panamanian Balboa',\r\n\tPGK: 'Papua New Guinean Kina',\r\n\tPYG: 'Paraguayan Guarani',\r\n\tPEI: 'Peruvian Inti',\r\n\tPEN: 'Peruvian Sol',\r\n\tPES: 'Peruvian Sol (1863\\u20131965)',\r\n\tPHP: 'Philippine Peso',\r\n\tPLN: 'Polish Zloty',\r\n\tPLZ: 'Polish Zloty (1950\\u20131995)',\r\n\tPTE: 'Portuguese Escudo',\r\n\tGWE: 'Portuguese Guinea Escudo',\r\n\tQAR: 'Qatari Rial',\r\n\tXRE: 'RINET Funds',\r\n\tRHD: 'Rhodesian Dollar',\r\n\tRON: 'Romanian Leu',\r\n\tROL: 'Romanian Leu (1952\\u20132006)',\r\n\tRUB: 'Russian Ruble',\r\n\tRUR: 'Russian Ruble (1991\\u20131998)',\r\n\tRWF: 'Rwandan Franc',\r\n\tSVC: 'Salvadoran Col\\u00f3n',\r\n\tWST: 'Samoan Tala',\r\n\tSAR: 'Saudi Riyal',\r\n\tRSD: 'Serbian Dinar',\r\n\tCSD: 'Serbian Dinar (2002\\u20132006)',\r\n\tSCR: 'Seychellois Rupee',\r\n\tSLL: 'Sierra Leonean Leone',\r\n\tSGD: 'Singapore Dollar',\r\n\tSKK: 'Slovak Koruna',\r\n\tSIT: 'Slovenian Tolar',\r\n\tSBD: 'Solomon Islands Dollar',\r\n\tSOS: 'Somali Shilling',\r\n\tZAR: 'South African Rand',\r\n\tZAL: 'South African Rand (financial)',\r\n\tKRH: 'South Korean Hwan (1953\\u20131962)',\r\n\tKRW: 'South Korean Won',\r\n\tKRO: 'South Korean Won (1945\\u20131953)',\r\n\tSSP: 'South Sudanese Pound',\r\n\tSUR: 'Soviet Rouble',\r\n\tESP: 'Spanish Peseta',\r\n\tESA: 'Spanish Peseta (A account)',\r\n\tESB: 'Spanish Peseta (convertible account)',\r\n\tLKR: 'Sri Lankan Rupee',\r\n\tSHP: 'St. Helena Pound',\r\n\tSDD: 'Sudanese Dinar (1992\\u20132007)',\r\n\tSDG: 'Sudanese Pound',\r\n\tSDP: 'Sudanese Pound (1957\\u20131998)',\r\n\tSRD: 'Surinamese Dollar',\r\n\tSRG: 'Surinamese Guilder',\r\n\tSZL: 'Swazi Lilangeni',\r\n\tSEK: 'Swedish Krona',\r\n\tCHF: 'Swiss Franc',\r\n\tSYP: 'Syrian Pound',\r\n\tSTD: 'S\\u00e3o Tom\\u00e9 & Pr\\u00edncipe Dobra',\r\n\tTJR: 'Tajikistani Ruble',\r\n\tTJS: 'Tajikistani Somoni',\r\n\tTZS: 'Tanzanian Shilling',\r\n\tTHB: 'Thai Baht',\r\n\tTPE: 'Timorese Escudo',\r\n\tTOP: 'Tongan Pa\\u02bbanga',\r\n\tTTD: 'Trinidad & Tobago Dollar',\r\n\tTND: 'Tunisian Dinar',\r\n\tTRY: 'Turkish Lira',\r\n\tTRL: 'Turkish Lira (1922\\u20132005)',\r\n\tTMT: 'Turkmenistani Manat',\r\n\tTMM: 'Turkmenistani Manat (1993\\u20132009)',\r\n\tUSD: 'US Dollar',\r\n\tUSN: 'US Dollar (Next day)',\r\n\tUSS: 'US Dollar (Same day)',\r\n\tUGX: 'Ugandan Shilling',\r\n\tUGS: 'Ugandan Shilling (1966\\u20131987)',\r\n\tUAH: 'Ukrainian Hryvnia',\r\n\tUAK: 'Ukrainian Karbovanets',\r\n\tAED: 'United Arab Emirates Dirham',\r\n\tUYU: 'Uruguayan Peso',\r\n\tUYP: 'Uruguayan Peso (1975\\u20131993)',\r\n\tUYI: 'Uruguayan Peso (Indexed Units)',\r\n\tUZS: 'Uzbekistani Som',\r\n\tVUV: 'Vanuatu Vatu',\r\n\tVEF: 'Venezuelan Bol\\u00edvar',\r\n\tVEB: 'Venezuelan Bol\\u00edvar (1871\\u20132008)',\r\n\tVND: 'Vietnamese Dong',\r\n\tVNN: 'Vietnamese Dong (1978\\u20131985)',\r\n\tCHE: 'WIR Euro',\r\n\tCHW: 'WIR Franc',\r\n\tXOF: 'West African CFA Franc',\r\n\tYDD: 'Yemeni Dinar',\r\n\tYER: 'Yemeni Rial',\r\n\tYUN: 'Yugoslavian Convertible Dinar (1990\\u20131992)',\r\n\tYUD: 'Yugoslavian Hard Dinar (1966\\u20131990)',\r\n\tYUM: 'Yugoslavian New Dinar (1994\\u20132002)',\r\n\tYUR: 'Yugoslavian Reformed Dinar (1992\\u20131993)',\r\n\tZRN: 'Zairean New Zaire (1993\\u20131998)',\r\n\tZRZ: 'Zairean Zaire (1971\\u20131993)',\r\n\tZMW: 'Zambian Kwacha',\r\n\tZMK: 'Zambian Kwacha (1968\\u20132012)',\r\n\tZWD: 'Zimbabwean Dollar (1980\\u20132008)',\r\n\tZWR: 'Zimbabwean Dollar (2008)',\r\n\tZWL: 'Zimbabwean Dollar (2009)'\r\n};\r\n\r\nexport enum CurrenciesEnum {\r\n\tAFN = 'AFN',\r\n\tAFA = 'AFA',\r\n\tALL = 'ALL',\r\n\tALK = 'ALK',\r\n\tDZD = 'DZD',\r\n\tADP = 'ADP',\r\n\tAOA = 'AOA',\r\n\tAOK = 'AOK',\r\n\tAON = 'AON',\r\n\tAOR = 'AOR',\r\n\tARA = 'ARA',\r\n\tARS = 'ARS',\r\n\tARM = 'ARM',\r\n\tARP = 'ARP',\r\n\tARL = 'ARL',\r\n\tAMD = 'AMD',\r\n\tAWG = 'AWG',\r\n\tAUD = 'AUD',\r\n\tATS = 'ATS',\r\n\tAZN = 'AZN',\r\n\tAZM = 'AZM',\r\n\tBSD = 'BSD',\r\n\tBHD = 'BHD',\r\n\tBDT = 'BDT',\r\n\tBBD = 'BBD',\r\n\tBYN = 'BYN',\r\n\tBYB = 'BYB',\r\n\tBYR = 'BYR',\r\n\tBEF = 'BEF',\r\n\tBEC = 'BEC',\r\n\tBEL = 'BEL',\r\n\tBZD = 'BZD',\r\n\tBMD = 'BMD',\r\n\tBTN = 'BTN',\r\n\tBOB = 'BOB',\r\n\tBOL = 'BOL',\r\n\tBOV = 'BOV',\r\n\tBOP = 'BOP',\r\n\tBAM = 'BAM',\r\n\tBAD = 'BAD',\r\n\tBAN = 'BAN',\r\n\tBWP = 'BWP',\r\n\tBRC = 'BRC',\r\n\tBRZ = 'BRZ',\r\n\tBRE = 'BRE',\r\n\tBRR = 'BRR',\r\n\tBRN = 'BRN',\r\n\tBRB = 'BRB',\r\n\tBRL = 'BRL',\r\n\tGBP = 'GBP',\r\n\tBND = 'BND',\r\n\tBGL = 'BGL',\r\n\tBGN = 'BGN',\r\n\tBGO = 'BGO',\r\n\tBGM = 'BGM',\r\n\tBUK = 'BUK',\r\n\tBIF = 'BIF',\r\n\tXPF = 'XPF',\r\n\tKHR = 'KHR',\r\n\tCAD = 'CAD',\r\n\tCVE = 'CVE',\r\n\tKYD = 'KYD',\r\n\tXAF = 'XAF',\r\n\tCLE = 'CLE',\r\n\tCLP = 'CLP',\r\n\tCLF = 'CLF',\r\n\tCNX = 'CNX',\r\n\tCNY = 'CNY',\r\n\tCOP = 'COP',\r\n\tCOU = 'COU',\r\n\tKMF = 'KMF',\r\n\tCDF = 'CDF',\r\n\tCRC = 'CRC',\r\n\tHRD = 'HRD',\r\n\tHRK = 'HRK',\r\n\tCUC = 'CUC',\r\n\tCUP = 'CUP',\r\n\tCYP = 'CYP',\r\n\tCZK = 'CZK',\r\n\tCSK = 'CSK',\r\n\tDKK = 'DKK',\r\n\tDJF = 'DJF',\r\n\tDOP = 'DOP',\r\n\tNLG = 'NLG',\r\n\tXCD = 'XCD',\r\n\tDDM = 'DDM',\r\n\tECS = 'ECS',\r\n\tECV = 'ECV',\r\n\tEGP = 'EGP',\r\n\tGQE = 'GQE',\r\n\tERN = 'ERN',\r\n\tEEK = 'EEK',\r\n\tETB = 'ETB',\r\n\tEUR = 'EUR',\r\n\tXEU = 'XEU',\r\n\tFKP = 'FKP',\r\n\tFJD = 'FJD',\r\n\tFIM = 'FIM',\r\n\tFRF = 'FRF',\r\n\tXFO = 'XFO',\r\n\tXFU = 'XFU',\r\n\tGMD = 'GMD',\r\n\tGEK = 'GEK',\r\n\tGEL = 'GEL',\r\n\tDEM = 'DEM',\r\n\tGHS = 'GHS',\r\n\tGHC = 'GHC',\r\n\tGIP = 'GIP',\r\n\tGRD = 'GRD',\r\n\tGTQ = 'GTQ',\r\n\tGWP = 'GWP',\r\n\tGNF = 'GNF',\r\n\tGNS = 'GNS',\r\n\tGYD = 'GYD',\r\n\tHTG = 'HTG',\r\n\tHNL = 'HNL',\r\n\tHKD = 'HKD',\r\n\tHUF = 'HUF',\r\n\tISK = 'ISK',\r\n\tISJ = 'ISJ',\r\n\tINR = 'INR',\r\n\tIDR = 'IDR',\r\n\tIRR = 'IRR',\r\n\tIQD = 'IQD',\r\n\tIEP = 'IEP',\r\n\tILS = 'ILS',\r\n\tILP = 'ILP',\r\n\tILR = 'ILR',\r\n\tITL = 'ITL',\r\n\tJMD = 'JMD',\r\n\tJPY = 'JPY',\r\n\tJOD = 'JOD',\r\n\tKZT = 'KZT',\r\n\tKES = 'KES',\r\n\tKWD = 'KWD',\r\n\tKGS = 'KGS',\r\n\tLAK = 'LAK',\r\n\tLVL = 'LVL',\r\n\tLVR = 'LVR',\r\n\tLBP = 'LBP',\r\n\tLSL = 'LSL',\r\n\tLRD = 'LRD',\r\n\tLYD = 'LYD',\r\n\tLTL = 'LTL',\r\n\tLTT = 'LTT',\r\n\tLUL = 'LUL',\r\n\tLUC = 'LUC',\r\n\tLUF = 'LUF',\r\n\tMOP = 'MOP',\r\n\tMKD = 'MKD',\r\n\tMKN = 'MKN',\r\n\tMGA = 'MGA',\r\n\tMGF = 'MGF',\r\n\tMWK = 'MWK',\r\n\tMYR = 'MYR',\r\n\tMVR = 'MVR',\r\n\tMVP = 'MVP',\r\n\tMLF = 'MLF',\r\n\tMTL = 'MTL',\r\n\tMTP = 'MTP',\r\n\tMRO = 'MRO',\r\n\tMUR = 'MUR',\r\n\tMXV = 'MXV',\r\n\tMXN = 'MXN',\r\n\tMXP = 'MXP',\r\n\tMDC = 'MDC',\r\n\tMDL = 'MDL',\r\n\tMCF = 'MCF',\r\n\tMNT = 'MNT',\r\n\tMAD = 'MAD',\r\n\tMAF = 'MAF',\r\n\tMZE = 'MZE',\r\n\tMZN = 'MZN',\r\n\tMZM = 'MZM',\r\n\tMMK = 'MMK',\r\n\tNAD = 'NAD',\r\n\tNPR = 'NPR',\r\n\tANG = 'ANG',\r\n\tTWD = 'TWD',\r\n\tNZD = 'NZD',\r\n\tNIO = 'NIO',\r\n\tNIC = 'NIC',\r\n\tNGN = 'NGN',\r\n\tKPW = 'KPW',\r\n\tNOK = 'NOK',\r\n\tOMR = 'OMR',\r\n\tPKR = 'PKR',\r\n\tPAB = 'PAB',\r\n\tPGK = 'PGK',\r\n\tPYG = 'PYG',\r\n\tPEI = 'PEI',\r\n\tPEN = 'PEN',\r\n\tPES = 'PES',\r\n\tPHP = 'PHP',\r\n\tPLN = 'PLN',\r\n\tPLZ = 'PLZ',\r\n\tPTE = 'PTE',\r\n\tGWE = 'GWE',\r\n\tQAR = 'QAR',\r\n\tXRE = 'XRE',\r\n\tRHD = 'RHD',\r\n\tRON = 'RON',\r\n\tROL = 'ROL',\r\n\tRUB = 'RUB',\r\n\tRUR = 'RUR',\r\n\tRWF = 'RWF',\r\n\tSVC = 'SVC',\r\n\tWST = 'WST',\r\n\tSAR = 'SAR',\r\n\tRSD = 'RSD',\r\n\tCSD = 'CSD',\r\n\tSCR = 'SCR',\r\n\tSLL = 'SLL',\r\n\tSGD = 'SGD',\r\n\tSKK = 'SKK',\r\n\tSIT = 'SIT',\r\n\tSBD = 'SBD',\r\n\tSOS = 'SOS',\r\n\tZAR = 'ZAR',\r\n\tZAL = 'ZAL',\r\n\tKRH = 'KRH',\r\n\tKRW = 'KRW',\r\n\tKRO = 'KRO',\r\n\tSSP = 'SSP',\r\n\tSUR = 'SUR',\r\n\tESP = 'ESP',\r\n\tESA = 'ESA',\r\n\tESB = 'ESB',\r\n\tLKR = 'LKR',\r\n\tSHP = 'SHP',\r\n\tSDD = 'SDD',\r\n\tSDG = 'SDG',\r\n\tSDP = 'SDP',\r\n\tSRD = 'SRD',\r\n\tSRG = 'SRG',\r\n\tSZL = 'SZL',\r\n\tSEK = 'SEK',\r\n\tCHF = 'CHF',\r\n\tSYP = 'SYP',\r\n\tSTD = 'STD',\r\n\tTJR = 'TJR',\r\n\tTJS = 'TJS',\r\n\tTZS = 'TZS',\r\n\tTHB = 'THB',\r\n\tTPE = 'TPE',\r\n\tTOP = 'TOP',\r\n\tTTD = 'TTD',\r\n\tTND = 'TND',\r\n\tTRY = 'TRY',\r\n\tTRL = 'TRL',\r\n\tTMT = 'TMT',\r\n\tTMM = 'TMM',\r\n\tUSD = 'USD',\r\n\tUSN = 'USN',\r\n\tUSS = 'USS',\r\n\tUGX = 'UGX',\r\n\tUGS = 'UGS',\r\n\tUAH = 'UAH',\r\n\tUAK = 'UAK',\r\n\tAED = 'AED',\r\n\tUYU = 'UYU',\r\n\tUYP = 'UYP',\r\n\tUYI = 'UYI',\r\n\tUZS = 'UZS',\r\n\tVUV = 'VUV',\r\n\tVEF = 'VEF',\r\n\tVEB = 'VEB',\r\n\tVND = 'VND',\r\n\tVNN = 'VNN',\r\n\tCHE = 'CHE',\r\n\tCHW = 'CHW',\r\n\tXOF = 'XOF',\r\n\tYDD = 'YDD',\r\n\tYER = 'YER',\r\n\tYUN = 'YUN',\r\n\tYUD = 'YUD',\r\n\tYUM = 'YUM',\r\n\tYUR = 'YUR',\r\n\tZRN = 'ZRN',\r\n\tZRZ = 'ZRZ',\r\n\tZMW = 'ZMW',\r\n\tZMK = 'ZMK',\r\n\tZWD = 'ZWD',\r\n\tZWR = 'ZWR',\r\n\tZWL = 'ZWL'\r\n}\r\n","import { IBasePerTenantAndOrganizationEntityModel } from './base-entity.model';\r\n\r\nexport interface ICustomSmtp extends IBasePerTenantAndOrganizationEntityModel {\r\n\thost: string;\r\n\tport: number;\r\n\tsecure: boolean;\r\n\tusername: string;\r\n\tpassword: string;\r\n\tisValidate?: boolean;\r\n}\r\n\r\nexport interface ICustomSmtpFindInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tid?: string;\r\n}\r\n\r\nexport interface ICustomSmtpCreateInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\thost: string;\r\n\tport: number;\r\n\tsecure: boolean;\r\n\tusername: string;\r\n\tpassword: string;\r\n}\r\n\r\nexport interface ICustomSmtpUpdateInput extends ICustomSmtpCreateInput {\r\n\tid: string;\r\n}\r\n\r\nexport enum SMTPSecureEnum {\r\n\tTRUE = 'True',\r\n\tFALSE = 'False'\r\n}\r\n","import { IBasePerTenantAndOrganizationEntityModel } from './base-entity.model';\r\nimport { LanguagesEnum } from './user.model';\r\n\r\nexport interface IEmailTemplate\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tname: string;\r\n\tmjml?: string;\r\n\thbs: string;\r\n\tlanguageCode: string;\r\n}\r\n\r\nexport interface IEmailTemplateFindInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tname?: string;\r\n\tlanguageCode?: string;\r\n}\r\n\r\nexport enum EmailTemplateNameEnum {\r\n\tPASSWORD_RESET = 'password',\r\n\tAPPOINTMENT_CONFIRMATION = 'appointment-confirmation',\r\n\tAPPOINTMENT_CANCELLATION = 'appointment-cancellation',\r\n\tTIME_OFF_POLICY_ACTION = 'time-off-report-action',\r\n\tTASK_UPDATE = 'task-update',\r\n\tEQUIPMENT = 'equipment',\r\n\tEQUIPMENT_REQUEST = 'equipment-request',\r\n\tTIME_SHEET_OVERVIEW = 'timesheet-overview',\r\n\tTIME_SHEET_SUBMIT = 'timesheet-submit',\r\n\tTIME_SHEET_ACTION = 'timesheet-action',\r\n\tTIME_SHEET_DELETE = 'timesheet-delete',\r\n\tCANDIDATE_INTERVIEW_SCHEDULE = 'candidate-schedule-interview',\r\n\tINTERVIEWER_INTERVIEW_SCHEDULE = 'interviewer-interview-schedule',\r\n\tWELCOME_USER = 'welcome-user',\r\n\tINVITE_ORGANIZATION_CLIENT = 'invite-organization-client',\r\n\tINVITE_EMPLOYEE = 'invite-employee',\r\n\tINVITE_USER = 'invite-user',\r\n\tEMAIL_INVOICE = 'email-invoice',\r\n\tEMAIL_ESTIMATE = 'email-estimate'\r\n}\r\n\r\nexport interface ICustomizeEmailTemplateFindInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tname: EmailTemplateNameEnum;\r\n\tlanguageCode: LanguagesEnum;\r\n}\r\n\r\nexport interface ICustomizableEmailTemplate {\r\n\ttemplate: string;\r\n\tsubject: string;\r\n}\r\n\r\nexport interface IEmailTemplateSaveInput\r\n\textends ICustomizeEmailTemplateFindInput {\r\n\tmjml: string;\r\n\tsubject: string;\r\n}\r\n","import { IEmployee } from './employee.model';\r\n\r\nexport interface IGetEmployeeJobPostInput {\r\n\tpage?: number;\r\n\torder?: 'ASC' | 'DESC';\r\n\torderBy?: string;\r\n\tlimit?: number;\r\n\tfilters: IGetEmployeeJobPostFilters;\r\n}\r\n\r\nexport interface IApplyJobPostInput {\r\n\tapplied: boolean;\r\n\temployeeId: string;\r\n\tproviderCode: string;\r\n\tproviderJobId: string;\r\n}\r\n\r\nexport interface IVisibilityJobPostInput {\r\n\thide: boolean;\r\n\temployeeId?: string | undefined;\r\n\tproviderCode?: string | undefined;\r\n\tproviderJobId?: string | undefined;\r\n}\r\n\r\nexport interface IEmployeeJobsStatistics {\r\n\temployeeId: string;\r\n\tavailableJobs: number;\r\n\tappliedJobs: number;\r\n}\r\n\r\nexport interface IGetEmployeeJobPostFilters {\r\n\tsearch?: string;\r\n\temployeeIds?: string[];\r\n\tbudget?: string[];\r\n\tjobStatus?: JobPostStatusEnum[];\r\n\tjobSource?: JobPostSourceEnum[];\r\n\tjobType?: JobPostTypeEnum[];\r\n}\r\n\r\nexport interface IEmployeeJobPost {\r\n\temployeeId: string;\r\n\temployee: IEmployee;\r\n\tjobPostId: string;\r\n\tisApplied?: boolean;\r\n\tappliedDate?: Date;\r\n\tjobPost: IJobPost;\r\n\r\n\t// we de-normalize this fields for faster processing\r\n\tjobDateCreated?: Date;\r\n\tjobStatus?: JobPostStatusEnum;\r\n\tjobSource?: JobPostSourceEnum;\r\n\tproviderCode: string; // same as jobSource field, but as a string, e.g. 'upwork'\r\n\t// unique ID of job in the source (e.g. in Upwork)\r\n\tproviderJobId: string;\r\n\tjobType?: JobPostTypeEnum;\r\n\r\n\tcreatedAt?: Date;\r\n\tupdatedAt?: Date;\r\n\tisActive: boolean;\r\n\tisArchived: boolean;\r\n}\r\n\r\nexport interface IJobPost {\r\n\tjobPostId: string;\r\n\tid?: string;\r\n\tproviderCode: string; // same as jobSource field, but as a string, e.g. 'upwork'\r\n\tproviderJobId: string; // unique ID of job in the source (e.g. in Upwork)\r\n\ttitle: string;\r\n\tdescription: string;\r\n\tjobDateCreated?: Date;\r\n\tjobStatus?: JobPostStatusEnum;\r\n\tjobSource?: JobPostSourceEnum;\r\n\tjobType?: JobPostTypeEnum;\r\n\turl?: string;\r\n\tbudget?: string;\r\n\tduration?: string;\r\n\tworkload?: string;\r\n\tskills?: string;\r\n\tcategory?: string;\r\n\tsubcategory?: string;\r\n\tcountry?: string;\r\n\tclientFeedback?: string;\r\n\tclientReviewsCount?: number;\r\n\tclientJobsPosted?: number;\r\n\tclientPastHires?: number;\r\n\tclientPaymentVerificationStatus?: boolean;\r\n\r\n\tsearchCategory?: string;\r\n\tsearchCategoryId?: string;\r\n\tsearchOccupation?: string;\r\n\tsearchOccupationId?: string;\r\n\tsearchJobType?: string;\r\n\tsearchKeyword?: string;\r\n\r\n\tcreatedAt?: Date;\r\n\tupdatedAt?: Date;\r\n\tisActive: boolean;\r\n\tisArchived: boolean;\r\n}\r\n\r\nexport enum JobPostSourceEnum {\r\n\tUPWORK = 'UPWORK',\r\n\tWEB = 'WEB'\r\n}\r\n\r\nexport enum JobPostStatusEnum {\r\n\tOPEN = 'OPEN',\r\n\tAPPLIED = 'APPLIED',\r\n\tCLOSED = 'CLOSED'\r\n}\r\n\r\nexport enum JobPostTypeEnum {\r\n\tHOURLY = 'HOURLY',\r\n\tFIX_PRICE = 'FIX_PRICE'\r\n}\r\n\r\nexport interface IUpdateEmployeeJobPostAppliedResult {\r\n\tisRedirectRequired: boolean;\r\n}\r\n","import { IUser } from './user.model';\r\nimport { IExpense } from './expense.model';\r\nimport { IOrganizationRecurringExpense } from './organization-recurring-expense.model';\r\nimport { IBasePerTenantAndOrganizationEntityModel } from './base-entity.model';\r\n\r\nexport interface IEmployeeStatisticsFindInput {\r\n\tvalueDate: Date;\r\n}\r\n\r\nexport interface IEmployeeStatistics {\r\n\texpenseStatistics: number[];\r\n\tincomeStatistics: number[];\r\n\tprofitStatistics: number[];\r\n\tbonusStatistics: number[];\r\n}\r\nexport interface IMonthAggregatedEmployeeStatisticsFindInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\temployeeId: string;\r\n\tvalueDate: Date;\r\n\tmonths: number;\r\n}\r\n\r\nexport interface IMonthAggregatedEmployeeStatistics {\r\n\tmonth: number;\r\n\tyear: number;\r\n\tincome: number;\r\n\texpenseWithoutSalary: number;\r\n\texpense: number;\r\n\tprofit: number;\r\n\tbonus: number;\r\n\tdirectIncomeBonus: number;\r\n}\r\n\r\nexport interface IMonthAggregatedSplitExpense {\r\n\tmonth: number;\r\n\tyear: number;\r\n\texpense?: IExpense[];\r\n\trecurringExpense?: IOrganizationRecurringExpense[];\r\n\tsplitExpense: number;\r\n\tsplitAmong: number;\r\n\tvalueDate?: Date;\r\n}\r\n\r\nexport interface IAggregatedEmployeeStatisticFindInput {\r\n\torganizationId: string;\r\n\ttenantId: string;\r\n\tfilterDate: Date;\r\n}\r\n\r\nexport interface IStatisticSum {\r\n\texpense: number;\r\n\tincome: number;\r\n\tprofit: number;\r\n\tbonus: number;\r\n}\r\n\r\nexport interface IEmployeeStatisticSum extends IStatisticSum {\r\n\temployee: {\r\n\t\tid: string;\r\n\t\tuser: IUser;\r\n\t};\r\n}\r\n\r\nexport interface IAggregatedEmployeeStatistic {\r\n\ttotal: IStatisticSum;\r\n\temployees: IEmployeeStatisticSum[];\r\n}\r\n\r\nexport enum EmployeeStatisticsHistoryEnum {\r\n\tINCOME = 'INCOME',\r\n\tEXPENSES = 'EXPENSES',\r\n\tEXPENSES_WITHOUT_SALARY = 'EXPENSES_WITHOUT_SALARY',\r\n\tNON_BONUS_INCOME = 'NON_BONUS_INCOME',\r\n\tBONUS_INCOME = 'BONUS_INCOME',\r\n\tPROFIT = 'PROFIT'\r\n}\r\n\r\nexport interface IEmployeeStatisticsHistory {\r\n\tvalueDate: Date;\r\n\tamount: number;\r\n\tnotes?: string;\r\n\tvendorName?: string;\r\n\tclientName?: string;\r\n\tcategoryName?: string;\r\n\tisRecurring?: boolean;\r\n\tisBonus?: boolean;\r\n\tisSalary?: boolean;\r\n\tsource?: 'employee' | 'org';\r\n\tsplitExpense?: ISplitExpense;\r\n}\r\nexport interface ISplitExpense {\r\n\toriginalValue: number;\r\n\temployeeCount: number;\r\n}\r\n\r\nexport interface IEmployeeStatisticsHistoryFindInput\r\n\textends IMonthAggregatedEmployeeStatisticsFindInput {\r\n\ttype: EmployeeStatisticsHistoryEnum;\r\n}\r\n","import {\r\n\tIUser,\r\n\tITag,\r\n\tISkill,\r\n\tIOrganizationDepartment,\r\n\tIOrganizationPosition,\r\n\tIEmployeeJobsStatistics\r\n} from '..';\r\nimport { IOrganizationFindInput } from './organization.model';\r\nimport { IBasePerTenantAndOrganizationEntityModel } from './base-entity.model';\r\nimport { IUserFindInput } from './user.model';\r\nimport { IOrganizationTeam } from './organization-team-model';\r\nimport { IContact } from './contact.model';\r\nimport { IOrganizationEmploymentType } from './organization-employment-type.model';\r\nimport { IRequestApprovalEmployee } from './request-approval-employee.model';\r\n\r\nexport interface IEmployee extends IBasePerTenantAndOrganizationEntityModel {\r\n\t[x: string]: any;\r\n\tendWork?: any;\r\n\tstartedWorkOn?: any;\r\n\tuser: IUser;\r\n\tuserId: string;\r\n\tvalueDate?: Date;\r\n\tisActive: boolean;\r\n\tshort_description?: string;\r\n\tdescription?: string;\r\n\tteams?: IOrganizationTeam[];\r\n\tpayPeriod?: string;\r\n\tbillRateValue?: number;\r\n\tbillRateCurrency?: string;\r\n\treWeeklyLimit?: number;\r\n\torganizationDepartments?: IOrganizationDepartment[];\r\n\torganizationPosition?: IOrganizationPosition;\r\n\ttags: ITag[];\r\n\tskills: ISkill[];\r\n\tofferDate?: Date;\r\n\tacceptDate?: Date;\r\n\trejectDate?: Date;\r\n\temployeeLevel?: string;\r\n\tanonymousBonus?: boolean;\r\n\torganizationEmploymentTypes?: IOrganizationEmploymentType[];\r\n\trequestApprovalEmployee?: IRequestApprovalEmployee[];\r\n\tcontact: IContact;\r\n\taverageIncome?: number;\r\n\ttotalWorkHours?: number;\r\n\taverageExpenses?: number;\r\n\taverageBonus?: number;\r\n\tshow_anonymous_bonus?: boolean;\r\n\tshow_average_bonus?: boolean;\r\n\tshow_average_expenses?: boolean;\r\n\tshow_average_income?: boolean;\r\n\tshow_billrate?: boolean;\r\n\tshow_payperiod?: boolean;\r\n\tisJobSearchActive?: boolean;\r\n\tlinkedInUrl?: string;\r\n\tfacebookUrl?: string;\r\n\tinstagramUrl?: string;\r\n\ttwitterUrl?: string;\r\n\tgithubUrl?: string;\r\n\tgitlabUrl?: string;\r\n\tupworkUrl?: string;\r\n\tjobSuccess?: number;\r\n\tisVerified?: boolean;\r\n\tisVetted?: boolean;\r\n\ttotalJobs?: number;\r\n}\r\n\r\nexport type IEmployeeJobsStatisticsResponse = IEmployee &\r\n\tIEmployeeJobsStatistics;\r\n\r\nexport interface UpdateEmployeeJobsStatistics {\r\n\tisJobSearchActive?: boolean;\r\n}\r\n\r\nexport interface IEmployeeFindInput {\r\n\tid?: string;\r\n\torganization?: IOrganizationFindInput;\r\n\tuser?: IUserFindInput;\r\n\tvalueDate?: Date;\r\n\torganizationId?: string;\r\n\ttenantId?: string;\r\n\ttags?: ITag[];\r\n\tskills?: ISkill[];\r\n}\r\n\r\nexport interface IEmployeeUpdateInput {\r\n\tpayPeriod?: string;\r\n\tbillRateValue?: number;\r\n\tbillRateCurrency?: string;\r\n\treWeeklyLimit?: number;\r\n\torganizationDepartment?: IOrganizationDepartment;\r\n\torganizationPosition?: IOrganizationPosition;\r\n\tofferDate?: Date;\r\n\tacceptDate?: Date;\r\n\trejectDate?: Date;\r\n\tshort_description?: string;\r\n\tdescription?: string;\r\n\taverageIncome?: number;\r\n\taverageExpenses?: number;\r\n\taverageBonus?: number;\r\n\tskills?: ISkill[];\r\n\tisJobSearchActive?: boolean;\r\n\tcontact?: IContact;\r\n\tlinkedInUrl?: string;\r\n\tfacebookUrl?: string;\r\n\tinstagramUrl?: string;\r\n\ttwitterUrl?: string;\r\n\tgithubUrl?: string;\r\n\tgitlabUrl?: string;\r\n\tupworkUrl?: string;\r\n}\r\n\r\nexport interface IEmployeeCreateInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tuser: IUser;\r\n\tpassword?: string;\r\n\tofferDate?: Date;\r\n\tacceptDate?: Date;\r\n\trejectDate?: Date;\r\n\tmembers?: IEmployee[];\r\n\ttags?: ITag[];\r\n\tskills?: ISkill[];\r\n\tstartedWorkOn?: any;\r\n\tshort_description?: string;\r\n\tdescription?: string;\r\n\toriginalUrl?: string;\r\n\tisActive?: boolean;\r\n}\r\n\r\nexport enum PayPeriodEnum {\r\n\tNONE = 'NONE',\r\n\tBI_WEEKLY = 'BI_WEEKLY',\r\n\tWEEKLY = 'WEEKLY',\r\n\tTWICE_PER_MONTH = 'TWICE_PER_MONTH',\r\n\tMONTHLY = 'MONTHLY'\r\n}\r\nexport interface IEmployeeLevel {\r\n\tid: string;\r\n\tlevel: string;\r\n\torganizationId: string;\r\n\ttag?: ITag[];\r\n\tskills?: ISkill[];\r\n}\r\n\r\nexport interface IEmployeeLevelInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tlevel: string;\r\n\ttags?: ITag[];\r\n\tskills?: ISkill[];\r\n}\r\n\r\nexport interface IEmployeeLevelFindInput {\r\n\torganizationId?: string;\r\n\ttenantId: string;\r\n}\r\nexport interface EmployeeViewModel {\r\n\tfullName: string;\r\n\temail: string;\r\n\tbonus?: number;\r\n\tendWork?: any;\r\n\tid: string;\r\n\timageUrl?: string;\r\n\taverageIncome?: number;\r\n\taverageExpenses?: number;\r\n\taverageBonus?: number;\r\n\tworkStatus?: string;\r\n\tstartedWorkOn?: string;\r\n\tisActive?: boolean;\r\n\ttags?: ITag[];\r\n}\r\n\r\nexport interface IEmployeeStoreState {\r\n\temployee?: IEmployee;\r\n\taction: EmployeeAction;\r\n}\r\n\r\nexport enum EmployeeAction {\r\n\tCREATED = 'CREATED',\r\n\tUPDATED = 'UPDATED',\r\n\tDELETED = 'DELETED'\r\n}\r\n","import { IBasePerTenantAndOrganizationEntityModel } from './base-entity.model';\r\nimport { IEmployee } from './employee.model';\r\nimport { IOrganizationTeam } from './organization-team-model';\r\nimport { IEquipment } from './equipment.model';\r\n\r\nexport interface IEquipmentSharing\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tequipmentId?: string;\r\n\tshareRequestDay?: Date;\r\n\tshareStartDay?: Date;\r\n\tshareEndDay?: Date;\r\n\tstatus?: number;\r\n\tequipmentSharingPolicyId?: string;\r\n\temployees?: IEmployee[];\r\n\tteams?: IOrganizationTeam[];\r\n\tequipment?: IEquipment;\r\n\tname?: string;\r\n\tcreatedBy?: string;\r\n\tcreatedByName?: string;\r\n}\r\n\r\nexport interface IEquipmentSharingRequest {\r\n\tequipmentId: string;\r\n\tequipment: string;\r\n\tshareRequestDay: Date;\r\n\tshareStartDay: Date;\r\n\tshareEndDay: Date;\r\n\tstatus: number;\r\n\tequipmentSharingPolicyId?: string;\r\n\temployees?: string[];\r\n\tteams?: string[];\r\n\torganizationId?: string;\r\n}\r\n\r\nexport enum EquipmentSharingStatusEnum {\r\n\tACTIVE = 'Active',\r\n\tREQUESTED = 'Requested',\r\n\tAPPROVED = 'Approved'\r\n}\r\n\r\nexport interface ISelectedEquipmentSharing {\r\n\tdata: IEquipmentSharing;\r\n\tisSelected: boolean;\r\n}\r\n","import { IBasePerTenantAndOrganizationEntityModel } from './base-entity.model';\r\n\r\nexport interface IExpenseCategory\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tname: string;\r\n}\r\n\r\nexport enum ExpenseCategoriesEnum {\r\n\tSOFTWARE = 'Software',\r\n\tEMPLOYEES_BENEFITS = 'Employees Benefits',\r\n\tCOURSES = 'Courses',\r\n\tSUBSCRIPTIONS = 'Subscriptions',\r\n\tRENT = 'Rent',\r\n\tSERVICE_FEE = 'Service Fee'\r\n}\r\n","import { IEmployee, IEmployeeFindInput } from './employee.model';\r\nimport { IBasePerTenantAndOrganizationEntityModel } from './base-entity.model';\r\nimport { ITag } from './tag-entity.model';\r\nimport { IExpenseCategory } from './expense-category.model';\r\nimport { IOrganizationVendor } from './organization-vendors.model';\r\nimport { IOrganizationProject } from './organization-projects.model';\r\nimport { IPaginationInput } from './core.model';\r\n\r\nexport interface IExpense extends IBasePerTenantAndOrganizationEntityModel {\r\n\temployee?: IEmployee;\r\n\temployeeId?: string;\r\n\tamount: number;\r\n\tvendor: IOrganizationVendor;\r\n\tvendorId: string;\r\n\ttypeOfExpense?: string;\r\n\tcategory: IExpenseCategory;\r\n\tcategoryId: string;\r\n\torganizationContactId?: string;\r\n\torganizationContactName?: string;\r\n\tprojectId?: string;\r\n\tproject?: IOrganizationProject;\r\n\tprojectName?: string;\r\n\tnotes?: string;\r\n\tvalueDate?: Date;\r\n\tcurrency: string;\r\n\tpurpose?: string;\r\n\ttaxType?: string;\r\n\ttaxLabel?: string;\r\n\trateValue?: number;\r\n\treceipt?: string;\r\n\tsplitExpense?: boolean;\r\n\ttags?: ITag[];\r\n\tstatus?: string;\r\n}\r\n\r\nexport interface IExpenseCreateInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\temployeeId?: string;\r\n\tamount: number;\r\n\ttypeOfExpense?: string;\r\n\tcategory: IExpenseCategory;\r\n\tvendor: IOrganizationVendor;\r\n\torganizationContactId?: string;\r\n\torganizationContactName?: string;\r\n\tprojectId?: string;\r\n\tprojectName?: string;\r\n\tnotes?: string;\r\n\tvalueDate: Date;\r\n\tcurrency?: string;\r\n\tpurpose?: string;\r\n\ttaxType?: string;\r\n\ttaxLabel?: string;\r\n\trateValue?: number;\r\n\treceipt?: string;\r\n\tsplitExpense?: boolean;\r\n\treference?: string;\r\n\ttags?: ITag[];\r\n\tstatus?: string;\r\n}\r\n\r\nexport interface IExpenseFindInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\temployee?: IEmployeeFindInput;\r\n\tvendorName?: string;\r\n\tvendorId?: string;\r\n\ttypeOfExpense?: string;\r\n\tcategoryName?: string;\r\n\tcategoryId?: string;\r\n\tamount?: number;\r\n\torganizationContactId?: string;\r\n\torganizationContactName?: string;\r\n\tprojectId?: string;\r\n\tprojectName?: string;\r\n\tnotes?: string;\r\n\tvalueDate?: Date;\r\n\tcurrency?: string;\r\n\tpurpose?: string;\r\n\ttaxType?: string;\r\n\ttaxLabel?: string;\r\n\trateValue?: number;\r\n\treceipt?: string;\r\n\tsplitExpense?: boolean;\r\n\ttags?: ITag[];\r\n\tstatus?: string;\r\n}\r\n\r\nexport interface IExpenseUpdateInput {\r\n\temployeeId?: string;\r\n\torganizationId?: string;\r\n\tamount?: number;\r\n\tvendorName?: string;\r\n\tvendorId?: string;\r\n\ttypeOfExpense?: string;\r\n\tcategory: IExpenseCategory;\r\n\torganizationContactId?: string;\r\n\torganizationContactName?: string;\r\n\tprojectId?: string;\r\n\tprojectName?: string;\r\n\tnotes?: string;\r\n\tvalueDate?: Date;\r\n\tcurrency?: string;\r\n\tpurpose?: string;\r\n\ttaxType?: string;\r\n\ttaxLabel?: string;\r\n\trateValue?: number;\r\n\treceipt?: string;\r\n\tsplitExpense?: boolean;\r\n\ttags?: ITag[];\r\n\tstatus?: string;\r\n}\r\n\r\nexport interface ISplitExpenseOutput extends IExpense {\r\n\toriginalValue?: number;\r\n\temployeeCount?: number;\r\n}\r\n\r\nexport interface ISplitExpenseFindInput {\r\n\trelations?: string[];\r\n\tfilterDate?: string;\r\n\temployeeId: string;\r\n}\r\n\r\nexport enum ExpenseTypesEnum {\r\n\tTAX_DEDUCTIBLE = 'Tax Deductible',\r\n\tNOT_TAX_DEDUCTIBLE = 'Not Tax Deductible',\r\n\tBILLABLE_TO_CONTACT = 'Billable to Contact'\r\n}\r\n\r\nexport enum TaxTypesEnum {\r\n\tPERCENTAGE = 'Percentage',\r\n\tVALUE = 'Value'\r\n}\r\n\r\nexport enum ExpenseStatusesEnum {\r\n\tINVOICED = 'Invoiced',\r\n\tUNINVOICED = 'Uninvoiced',\r\n\tPAID = 'Paid'\r\n}\r\n\r\nexport interface IExpenseViewModel {\r\n\tid: string;\r\n\tvalueDate: Date;\r\n\tvendorId: string;\r\n\tvendorName: string;\r\n\tvendor: IOrganizationVendor;\r\n\ttypeOfExpense: string;\r\n\tcategoryId: string;\r\n\tcategoryName: string;\r\n\tcategory: IExpenseCategory;\r\n\torganizationContactId: string;\r\n\torganizationContactName: string;\r\n\tprojectId: string;\r\n\tprojectName: string;\r\n\tcurrency: string;\r\n\tamount: number;\r\n\tnotes: string;\r\n\tpurpose: string;\r\n\ttaxType: string;\r\n\ttaxLabel: string;\r\n\temployee: IEmployee;\r\n\temployeeName: string;\r\n\trateValue: number;\r\n\treceipt: string;\r\n\tsplitExpense: boolean;\r\n\ttags: ITag[];\r\n\tstatus: string;\r\n}\r\n\r\nexport interface IGetExpenseInput\r\n\textends IPaginationInput,\r\n\t\tIBasePerTenantAndOrganizationEntityModel {\r\n\trelations?: string[];\r\n\ttypes?: string[];\r\n\ttitles?: string[];\r\n\tgroupBy?: string;\r\n\tdate?: Date | string;\r\n\tstartDate?: Date | string;\r\n\tendDate?: Date | string;\r\n\tprojectIds?: string[];\r\n\temployeeIds?: string[];\r\n}\r\n\r\nexport interface IExpenseReportGroupByDate {\r\n\tdate: string;\r\n\temployees: {\r\n\t\temployee: IEmployee;\r\n\t\tprojects: {\r\n\t\t\tproject: IOrganizationProject;\r\n\t\t\texpanse: IExpense;\r\n\t\t\tsum: number;\r\n\t\t}[];\r\n\t}[];\r\n}\r\n\r\nexport interface IExpenseReportGroupByEmployee {\r\n\temployee: IEmployee;\r\n\tdates: {\r\n\t\tdate: string;\r\n\t\tprojects: {\r\n\t\t\tproject: IOrganizationProject;\r\n\t\t\texpanse: IExpense;\r\n\t\t\tsum: number;\r\n\t\t}[];\r\n\t}[];\r\n}\r\n\r\nexport interface IExpenseReportGroupByProject {\r\n\tproject: IOrganizationProject;\r\n\tdates: {\r\n\t\tdate: string;\r\n\t\temployees: {\r\n\t\t\temployee: IEmployee;\r\n\t\t\texpanse: IExpense;\r\n\t\t\tsum: number;\r\n\t\t}[];\r\n\t}[];\r\n}\r\n\r\nexport type IExpenseReportData =\r\n\t| IExpenseReportGroupByDate\r\n\t| IExpenseReportGroupByEmployee\r\n\t| IExpenseReportGroupByProject;\r\n","import { IBasePerTenantAndOrganizationEntityModel } from './base-entity.model';\r\nexport interface IFeature extends IBasePerTenantAndOrganizationEntityModel {\r\n\tcode: string;\r\n\tdescription: string;\r\n\tfeatureOrganizations?: IFeatureOrganization[];\r\n\timage: string;\r\n\treadonly imageUrl?: string;\r\n\tlink: string;\r\n\tname: string;\r\n\tstatus: string;\r\n\ticon: string;\r\n\tisEnabled?: boolean;\r\n\tisPaid?: boolean;\r\n\treadonly parentId?: string;\r\n\tparent?: IFeature;\r\n\tchildren?: IFeature[];\r\n}\r\nexport interface IFeatureCreateInput extends IFeature {\r\n\tisEnabled: boolean;\r\n}\r\n\r\nexport interface IFeatureOrganization\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tfeature: IFeature;\r\n\tfeatureId?: string;\r\n\tisEnabled: boolean;\r\n}\r\n\r\nexport interface IFeatureOrganizationUpdateInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tfeatureId: string;\r\n\tisEnabled: boolean;\r\n}\r\n\r\nexport interface IFeatureOrganizationFindInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tfeatureId?: string;\r\n}\r\n\r\nexport enum FeatureStatusEnum {\r\n\tINFO = 'info',\r\n\tPRIMARY = 'primary',\r\n\tSUCCESS = 'success',\r\n\tWARNING = 'warning'\r\n}\r\n\r\nexport enum IFeatureToggleTypeEnum {\r\n\tRELEASE = 'release',\r\n\tKILL_SWITCH = 'kill-switch',\r\n\tEXPERIMENT = 'experiment',\r\n\tOPERATIONAL = 'operational',\r\n\tPERMISSION = 'permission'\r\n}\r\n\r\nexport interface IFeatureToggleVariant {\r\n\tname?: string;\r\n\tweight?: number;\r\n\tweightType?: string;\r\n\tpayload?: IFeatureTogglePayload;\r\n\toverrides?: IFeatureToggleOverride[];\r\n}\r\n\r\nexport interface IFeatureToggleOverride {\r\n\tcontextName?: string;\r\n\tvalues?: string[];\r\n}\r\n\r\nexport interface IFeatureTogglePayload {\r\n\ttype?: string;\r\n\tvalue?: string;\r\n}\r\n\r\nexport interface IFeatureToggle {\r\n\tname: string;\r\n\tdescription?: string;\r\n\ttype: IFeatureToggleTypeEnum;\r\n\tproject?: string;\r\n\tenabled: boolean;\r\n\tstale?: boolean;\r\n\tstrategies?: any;\r\n\tvariants?: IFeatureToggleVariant[];\r\n\tcreatedAt?: string;\r\n\tlastSeenAt?: string | null;\r\n}\r\n\r\nexport enum FeatureEnum {\r\n\tFEATURE_DASHBOARD = 'FEATURE_DASHBOARD',\r\n\tFEATURE_TIME_TRACKING = 'FEATURE_TIME_TRACKING',\r\n\tFEATURE_ESTIMATE = 'FEATURE_ESTIMATE',\r\n\tFEATURE_ESTIMATE_RECEIVED = 'FEATURE_ESTIMATE_RECEIVED',\r\n\tFEATURE_INVOICE = 'FEATURE_INVOICE',\r\n\tFEATURE_INVOICE_RECURRING = 'FEATURE_INVOICE_RECURRING',\r\n\tFEATURE_INVOICE_RECEIVED = 'FEATURE_INVOICE_RECEIVED',\r\n\tFEATURE_INCOME = 'FEATURE_INCOME',\r\n\tFEATURE_EXPENSE = 'FEATURE_EXPENSE',\r\n\tFEATURE_PAYMENT = 'FEATURE_PAYMENT',\r\n\tFEATURE_PROPOSAL = 'FEATURE_PROPOSAL',\r\n\tFEATURE_PROPOSAL_TEMPLATE = 'FEATURE_PROPOSAL_TEMPLATE',\r\n\tFEATURE_PIPELINE = 'FEATURE_PIPELINE',\r\n\tFEATURE_PIPELINE_DEAL = 'FEATURE_PIPELINE_DEAL',\r\n\tFEATURE_DASHBOARD_TASK = 'FEATURE_DASHBOARD_TASK',\r\n\tFEATURE_TEAM_TASK = 'FEATURE_TEAM_TASK',\r\n\tFEATURE_MY_TASK = 'FEATURE_MY_TASK',\r\n\tFEATURE_JOB = 'FEATURE_JOB',\r\n\tFEATURE_EMPLOYEES = 'FEATURE_EMPLOYEES',\r\n\tFEATURE_EMPLOYEE_TIME_ACTIVITY = 'FEATURE_EMPLOYEE_TIME_ACTIVITY',\r\n\tFEATURE_EMPLOYEE_TIMESHEETS = 'FEATURE_EMPLOYEE_TIMESHEETS',\r\n\tFEATURE_EMPLOYEE_APPOINTMENT = 'FEATURE_EMPLOYEE_APPOINTMENT',\r\n\tFEATURE_EMPLOYEE_APPROVAL = 'FEATURE_EMPLOYEE_APPROVAL',\r\n\tFEATURE_EMPLOYEE_APPROVAL_POLICY = 'FEATURE_EMPLOYEE_APPROVAL_POLICY',\r\n\tFEATURE_EMPLOYEE_LEVEL = 'FEATURE_EMPLOYEE_LEVEL',\r\n\tFEATURE_EMPLOYEE_POSITION = 'FEATURE_EMPLOYEE_POSITION',\r\n\tFEATURE_EMPLOYEE_TIMEOFF = 'FEATURE_EMPLOYEE_TIMEOFF',\r\n\tFEATURE_EMPLOYEE_RECURRING_EXPENSE = 'FEATURE_EMPLOYEE_RECURRING_EXPENSE',\r\n\tFEATURE_EMPLOYEE_CANDIDATE = 'FEATURE_EMPLOYEE_CANDIDATE',\r\n\tFEATURE_MANAGE_INTERVIEW = 'FEATURE_MANAGE_INTERVIEW',\r\n\tFEATURE_MANAGE_INVITE = 'FEATURE_MANAGE_INVITE',\r\n\tFEATURE_ORGANIZATION = 'FEATURE_ORGANIZATION',\r\n\tFEATURE_ORGANIZATION_EQUIPMENT = 'FEATURE_ORGANIZATION_EQUIPMENT',\r\n\tFEATURE_ORGANIZATION_INVENTORY = 'FEATURE_ORGANIZATION_INVENTORY',\r\n\tFEATURE_ORGANIZATION_TAG = 'FEATURE_ORGANIZATION_TAG',\r\n\tFEATURE_ORGANIZATION_VENDOR = 'FEATURE_ORGANIZATION_VENDOR',\r\n\tFEATURE_ORGANIZATION_PROJECT = 'FEATURE_ORGANIZATION_PROJECT',\r\n\tFEATURE_ORGANIZATION_DEPARTMENT = 'FEATURE_ORGANIZATION_DEPARTMENT',\r\n\tFEATURE_ORGANIZATION_TEAM = 'FEATURE_ORGANIZATION_TEAM',\r\n\tFEATURE_ORGANIZATION_DOCUMENT = 'FEATURE_ORGANIZATION_DOCUMENT',\r\n\tFEATURE_ORGANIZATION_EMPLOYMENT_TYPE = 'FEATURE_ORGANIZATION_EMPLOYMENT_TYPE',\r\n\tFEATURE_ORGANIZATION_RECURRING_EXPENSE = 'FEATURE_ORGANIZATION_RECURRING_EXPENSE',\r\n\tFEATURE_ORGANIZATION_HELP_CENTER = 'FEATURE_ORGANIZATION_HELP_CENTER',\r\n\tFEATURE_CONTACT = 'FEATURE_CONTACT',\r\n\tFEATURE_GOAL = 'FEATURE_GOAL',\r\n\tFEATURE_GOAL_REPORT = 'FEATURE_GOAL_REPORT',\r\n\tFEATURE_GOAL_SETTING = 'FEATURE_GOAL_SETTING',\r\n\tFEATURE_REPORT = 'FEATURE_REPORT',\r\n\tFEATURE_USER = 'FEATURE_USER',\r\n\tFEATURE_ORGANIZATIONS = 'FEATURE_ORGANIZATIONS',\r\n\tFEATURE_APP_INTEGRATION = 'FEATURE_APP_INTEGRATION',\r\n\tFEATURE_SETTING = 'FEATURE_SETTING',\r\n\tFEATURE_EMAIL_HISTORY = 'FEATURE_EMAIL_HISTORY',\r\n\tFEATURE_EMAIL_TEMPLATE = 'FEATURE_EMAIL_TEMPLATE',\r\n\tFEATURE_IMPORT_EXPORT = 'FEATURE_IMPORT_EXPORT',\r\n\tFEATURE_FILE_STORAGE = 'FEATURE_FILE_STORAGE',\r\n\tFEATURE_PAYMENT_GATEWAY = 'FEATURE_PAYMENT_GATEWAY',\r\n\tFEATURE_SMS_GATEWAY = 'FEATURE_SMS_GATEWAY',\r\n\tFEATURE_SMTP = 'FEATURE_SMTP',\r\n\tFEATURE_ROLES_PERMISSION = 'FEATURE_ROLES_PERMISSION'\r\n}\r\n","export interface FileStorageOption {\r\n\tdest: string | CallableFunction;\r\n\tprovider?: FileStorageProviderEnum;\r\n\tprefix?: string;\r\n\tfilename?: string | CallableFunction;\r\n}\r\n\r\nexport interface FileSystem {\r\n\trootPath: string;\r\n\tbaseUrl?: string;\r\n}\r\n\r\nexport enum FileStorageProviderEnum {\r\n\tLOCAL = 'local',\r\n\tS3 = 's3'\r\n}\r\n\r\nexport interface UploadedFile {\r\n\tfieldname: string;\r\n\tkey: string; // path of the file in storage\r\n\toriginalname: string; // orignal file name\r\n\tsize: number; // files in bytes\r\n\tencoding?: string;\r\n\tmimetype?: string;\r\n\tfilename: string;\r\n\turl: string; // file public url\r\n\tpath: string; // Full path of the file\r\n}\r\n\r\nexport interface S3FileStorageProviderConfig {\r\n\taws_access_key_id?: string;\r\n\taws_secret_access_key?: string;\r\n\taws_default_region?: string;\r\n\taws_bucket?: string;\r\n}\r\n","export interface ILocation {\r\n\ttype: 'Point';\r\n\tcoordinates: [number, number];\r\n}\r\n\r\nexport interface IAddress {\r\n\tcountry: string | null;\r\n\tcity: string | null;\r\n\tpostcode?: number | null;\r\n\taddress: string | null;\r\n\taddress2: string | null;\r\n}\r\n\r\nexport function getEmptyAddress(): IAddress {\r\n\treturn {\r\n\t\tcountry: null,\r\n\t\tcity: null,\r\n\t\tpostcode: null,\r\n\t\taddress: null,\r\n\t\taddress2: null\r\n\t};\r\n}\r\n\r\nexport interface IGeoLocationCreateObject extends IAddress {\r\n\tloc?: ILocation;\r\n}\r\n\r\nexport interface IGeolocationUpdateObject extends IAddress {\r\n\tloc?: ILocation;\r\n}\r\n","import { IBasePerTenantAndOrganizationEntityModel } from './base-entity.model';\r\nimport { IOrganizationFindInput } from './organization.model';\r\nimport { IEmployee, IEmployeeFindInput } from './employee.model';\r\n\r\nexport interface IGoalTimeFrame\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tname: string;\r\n\tstatus: string;\r\n\tstartDate: Date;\r\n\tendDate: Date;\r\n}\r\n\r\nexport interface IGoalGeneralSetting\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tmaxObjectives: number;\r\n\tmaxKeyResults: number;\r\n\temployeeCanCreateObjective: boolean;\r\n\tcanOwnObjectives: string;\r\n\tcanOwnKeyResult: string;\r\n\tkrTypeKPI: boolean;\r\n\tkrTypeTask: boolean;\r\n}\r\n\r\nexport interface IKPI extends IBasePerTenantAndOrganizationEntityModel {\r\n\tname: string;\r\n\tdescription: string;\r\n\ttype: string;\r\n\tunit?: string;\r\n\tcurrentValue: number;\r\n\ttargetValue: number;\r\n\tlead?: IEmployee;\r\n\toperator: string;\r\n}\r\n\r\nexport interface IGoalTemplate\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tname: string;\r\n\tlevel: string;\r\n\tkeyResults?: Array<IKeyResultTemplate>;\r\n\tcategory?: string;\r\n}\r\n\r\nexport interface IGoalTemplateFind\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tid?: string;\r\n}\r\n\r\nexport interface IKeyResultTemplate\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tname: string;\r\n\ttype: string;\r\n\tunit?: string;\r\n\tdeadline: string;\r\n\ttargetValue?: number;\r\n\tinitialValue?: number;\r\n\thardDeadline?: Date;\r\n\tsoftDeadline?: Date;\r\n\tgoal: IGoalTemplate;\r\n\tgoalId?: string;\r\n\tkpi?: IGoalKPITemplate;\r\n\tkpiId?: string;\r\n}\r\n\r\nexport interface IGoalKPITemplate\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tname: string;\r\n\tdescription: string;\r\n\ttype: string;\r\n\tunit?: string;\r\n\tcurrentValue?: number;\r\n\ttargetValue?: number;\r\n\tlead?: IEmployee;\r\n\toperator: string;\r\n}\r\n\r\nexport enum TimeFrameStatusEnum {\r\n\tACTIVE = 'Active',\r\n\tINACTIVE = 'Inactive'\r\n}\r\n\r\nexport enum KpiMetricEnum {\r\n\tNUMERICAL = 'Numerical',\r\n\tPERCENTAGE = 'Percentage',\r\n\tCURRENCY = 'Currency'\r\n}\r\n\r\nexport enum GoalTemplateCategoriesEnum {\r\n\tPRODUCT_MANAGEMENT = 'Product Management',\r\n\tSALES = 'Sales',\r\n\tHR = 'HR',\r\n\tMARKETING = 'Marketing'\r\n}\r\n\r\nexport enum KpiOperatorEnum {\r\n\tGREATER_THAN_EQUAL_TO = '>=',\r\n\tLESSER_THAN_EQUAL_TO = '<='\r\n}\r\n\r\nexport interface ISettingFindInput {\r\n\tid?: string;\r\n\temployee?: IEmployeeFindInput;\r\n\torganization?: IOrganizationFindInput;\r\n\ttenantId?: string;\r\n}\r\n\r\nexport interface IGoalTimeFrameFindInput {\r\n\tname?: string;\r\n\torganization?: IOrganizationFindInput;\r\n}\r\n\r\nexport enum GoalOwnershipEnum {\r\n\tEMPLOYEES = 'Employees',\r\n\tTEAMS = 'Teams',\r\n\tEMPLOYEES_AND_TEAMS = 'Employees and Teams'\r\n}\r\n\r\nexport interface IGoalTimeFrameResponse {\r\n\titems: IGoalTimeFrame[];\r\n\tcount: number;\r\n}\r\n\r\nexport interface IKpiResponse {\r\n\titems: IKPI[];\r\n\tcount: number;\r\n}\r\n\r\nexport interface IGeneralSettingResponse {\r\n\titems: IGoalGeneralSetting[];\r\n\tcount: number;\r\n}\r\n","import { IBasePerTenantAndOrganizationEntityModel } from './base-entity.model';\r\nimport { IEmployee, IEmployeeFindInput } from './employee.model';\r\nimport { IOrganizationProject } from './organization-projects.model';\r\nimport { ITask } from './task-entity.model';\r\nimport { IOrganizationTeam } from './organization-team-model';\r\nimport { IKPI } from './goal-settings.model';\r\n\r\nexport interface IGoal extends IBasePerTenantAndOrganizationEntityModel {\r\n\tname: string;\r\n\tdescription?: string;\r\n\townerTeam?: IOrganizationTeam;\r\n\townerEmployee?: IEmployee;\r\n\tlead?: IEmployee;\r\n\tdeadline: string;\r\n\tlevel: string;\r\n\tprogress: number;\r\n\tkeyResults?: Array<IKeyResult>;\r\n\talignedKeyResult?: IKeyResult;\r\n}\r\n\r\nexport interface IKeyResult extends IBasePerTenantAndOrganizationEntityModel {\r\n\tid?: string;\r\n\tname: string;\r\n\tdescription?: string;\r\n\ttype: string;\r\n\tunit?: string;\r\n\ttargetValue?: number;\r\n\tinitialValue?: number;\r\n\tupdate: number;\r\n\tprogress: number;\r\n\towner: IEmployee;\r\n\tlead?: IEmployee;\r\n\tdeadline: string;\r\n\thardDeadline?: Date;\r\n\tsoftDeadline?: Date;\r\n\tstatus?: string;\r\n\tweight?: string;\r\n\tgoalId?: string;\r\n\tgoal?: IGoal;\r\n\tproject?: IOrganizationProject;\r\n\tprojectId?: string;\r\n\ttask?: ITask;\r\n\ttaskId?: string;\r\n\tupdates?: Array<IKeyResultUpdate>;\r\n\tkpi?: IKPI;\r\n\tkpiId?: string;\r\n}\r\n\r\nexport interface IKeyResultUpdate\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tid?: string;\r\n\tkeyResultId?: string;\r\n\towner: string;\r\n\tprogress: number;\r\n\tupdate: number;\r\n\tstatus: string;\r\n}\r\n\r\nexport enum KeyResultNumberUnitsEnum {\r\n\tSALES = 'sales',\r\n\tVISITORS = 'visitors',\r\n\tPEOPLE = 'people',\r\n\tITEMS = 'items',\r\n\tCLIENTS = 'clients'\r\n}\r\n\r\nexport enum KeyResultWeightEnum {\r\n\tDEFAULT = '1',\r\n\tINCREASE_BY_2X = '2',\r\n\tINCREASE_BY_4X = '4'\r\n}\r\n\r\nexport interface IGoalFindInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\temployee?: IEmployeeFindInput;\r\n}\r\n\r\nexport enum KeyResultTypeEnum {\r\n\tNUMERICAL = 'Numerical',\r\n\tTRUE_OR_FALSE = 'True/False',\r\n\tCURRENCY = 'Currency',\r\n\tTASK = 'Task',\r\n\tKPI = 'KPI'\r\n}\r\n\r\nexport enum KeyResultDeadlineEnum {\r\n\tNO_CUSTOM_DEADLINE = 'No Custom Deadline',\r\n\tHARD_DEADLINE = 'Hard Deadline',\r\n\tHARD_AND_SOFT_DEADLINE = 'Hard and Soft Deadline'\r\n}\r\n\r\nexport enum GoalLevelEnum {\r\n\tORGANIZATION = 'Organization',\r\n\tTEAM = 'Team',\r\n\tEMPLOYEE = 'Employee'\r\n}\r\n\r\nexport enum KeyResultUpdateStatusEnum {\r\n\tON_TRACK = 'on track',\r\n\tNEEDS_ATTENTION = 'needs attention',\r\n\tOFF_TRACK = 'off track',\r\n\tNONE = 'none'\r\n}\r\n\r\nexport interface IGoalResponse {\r\n\titems: IGoal[];\r\n\tcount: number;\r\n}\r\n","export enum HttpStatus {\r\n\tCONTINUE = 100,\r\n\tSWITCHING_PROTOCOLS = 101,\r\n\tPROCESSING = 102,\r\n\tOK = 200,\r\n\tCREATED = 201,\r\n\tACCEPTED = 202,\r\n\tNON_AUTHORITATIVE_INFORMATION = 203,\r\n\tNO_CONTENT = 204,\r\n\tRESET_CONTENT = 205,\r\n\tPARTIAL_CONTENT = 206,\r\n\tAMBIGUOUS = 300,\r\n\tMOVED_PERMANENTLY = 301,\r\n\tFOUND = 302,\r\n\tSEE_OTHER = 303,\r\n\tNOT_MODIFIED = 304,\r\n\tTEMPORARY_REDIRECT = 307,\r\n\tPERMANENT_REDIRECT = 308,\r\n\tBAD_REQUEST = 400,\r\n\tUNAUTHORIZED = 401,\r\n\tPAYMENT_REQUIRED = 402,\r\n\tFORBIDDEN = 403,\r\n\tNOT_FOUND = 404,\r\n\tMETHOD_NOT_ALLOWED = 405,\r\n\tNOT_ACCEPTABLE = 406,\r\n\tPROXY_AUTHENTICATION_REQUIRED = 407,\r\n\tREQUEST_TIMEOUT = 408,\r\n\tCONFLICT = 409,\r\n\tGONE = 410,\r\n\tLENGTH_REQUIRED = 411,\r\n\tPRECONDITION_FAILED = 412,\r\n\tPAYLOAD_TOO_LARGE = 413,\r\n\tURI_TOO_LONG = 414,\r\n\tUNSUPPORTED_MEDIA_TYPE = 415,\r\n\tREQUESTED_RANGE_NOT_SATISFIABLE = 416,\r\n\tEXPECTATION_FAILED = 417,\r\n\tI_AM_A_TEAPOT = 418,\r\n\tUNPROCESSABLE_ENTITY = 422,\r\n\tFAILED_DEPENDENCY = 424,\r\n\tTOO_MANY_REQUESTS = 429,\r\n\tINTERNAL_SERVER_ERROR = 500,\r\n\tNOT_IMPLEMENTED = 501,\r\n\tBAD_GATEWAY = 502,\r\n\tSERVICE_UNAVAILABLE = 503,\r\n\tGATEWAY_TIMEOUT = 504,\r\n\tHTTP_VERSION_NOT_SUPPORTED = 505\r\n}\r\n\r\nexport enum RequestMethodEnum {\r\n\tGET = 'GET',\r\n\tPOST = 'POST',\r\n\tPUT = 'PUT',\r\n\tDELETE = 'DELETE',\r\n\tPATCH = 'PATCH',\r\n\tALL = 'ALL',\r\n\tOPTIONS = 'OPTIONS',\r\n\tHEAD = 'HEAD'\r\n}\r\n","import { IEmployee, IEmployeeFindInput } from './employee.model';\r\nimport { IOrganizationFindInput } from './organization.model';\r\nimport { IBasePerTenantAndOrganizationEntityModel } from './base-entity.model';\r\nimport { ITag } from './tag-entity.model';\r\n\r\nexport interface IIncome extends IBasePerTenantAndOrganizationEntityModel {\r\n\temployee?: IEmployee;\r\n\temployeeId?: string;\r\n\tamount: number;\r\n\tclientId?: string;\r\n\tclientName: string;\r\n\tcurrency: string;\r\n\tvalueDate?: Date;\r\n\tnotes?: string;\r\n\tisBonus?: boolean;\r\n\ttags: ITag[];\r\n}\r\n\r\nexport interface IIncomeCreateInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tamount: number;\r\n\tclientName: string;\r\n\tclientId: string;\r\n\tvalueDate: Date;\r\n\tcurrency?: string;\r\n\temployeeId?: string;\r\n\tnotes?: string;\r\n\torganizationId?: string;\r\n\tisBonus?: boolean;\r\n\treference?: string;\r\n\ttags: ITag[];\r\n}\r\n\r\nexport interface IIncomeUpdateInput {\r\n\tamount?: number;\r\n\tclientName?: string;\r\n\tclientId?: string;\r\n\tvalueDate?: Date;\r\n\temployeeId?: string;\r\n\tcurrency?: string;\r\n\tnotes?: string;\r\n\tisBonus?: boolean;\r\n\ttags: ITag[];\r\n}\r\n\r\nexport interface IIncomeFindInput {\r\n\temployee?: IEmployeeFindInput;\r\n\torganization?: IOrganizationFindInput;\r\n\ttenantId?: string;\r\n\tamount?: number;\r\n\tisBonus?: boolean;\r\n\tclientId?: string;\r\n\tclientName?: string;\r\n\tvalueDate?: Date;\r\n\tcurrency?: string;\r\n}\r\n\r\nexport enum IncomeTypeEnum {\r\n\tHOURLY = 'Hourly'\r\n}\r\n","import { SafeResourceUrl } from '@angular/platform-browser';\r\nimport {\r\n\tIBaseEntityModel,\r\n\tIBasePerTenantAndOrganizationEntityModel,\r\n\tIBasePerTenantEntityModel\r\n} from './base-entity.model';\r\nimport { IOrganizationProjectsCreateInput } from './organization-projects.model';\r\nimport { ITag } from './tag-entity.model';\r\n\r\nexport interface IIntegrationSetting\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tintegration?: IIntegrationTenant;\r\n\tsettingsName: string;\r\n\tsettingsValue: string;\r\n}\r\n\r\nexport interface IIntegrationEntitySetting\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tintegration?: IIntegrationTenant;\r\n\treadonly integrationId?: string;\r\n\tentity: string;\r\n\tsync: boolean;\r\n\ttiedEntities?: any[];\r\n}\r\n\r\nexport interface IIntegrationEntitySettingTied\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tentity: string;\r\n\tsync: boolean;\r\n\tintegrationEntitySetting?: IIntegrationEntitySetting;\r\n\treadonly integrationEntitySettingId?: string;\r\n}\r\n\r\nexport interface IIntegrationMap\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tintegration: IIntegrationTenant;\r\n\tsourceId: string;\r\n\tgauzyId: string;\r\n}\r\n\r\nexport interface IIntegrationViewModel {\r\n\tname: string;\r\n\timgSrc: string | SafeResourceUrl;\r\n\tnavigation_url: string;\r\n\tisComingSoon?: boolean;\r\n}\r\n\r\nexport interface IIntegrationTenant extends IBasePerTenantEntityModel {\r\n\tname: string;\r\n\tentitySettings?: IIntegrationEntitySetting[];\r\n}\r\n\r\nexport interface IIntegration {\r\n\tname: string;\r\n\timgSrc: string;\r\n\tisComingSoon?: boolean;\r\n\tisPaid?: boolean;\r\n\tversion?: string;\r\n\tdocUrl?: string;\r\n\tisFreeTrial?: boolean;\r\n\tfreeTrialPeriod?: number;\r\n\torder?: number;\r\n\tintegrationTypes?: IIntegrationType[];\r\n\ttags?: ITag[];\r\n}\r\n\r\nexport interface IIntegrationType extends IBaseEntityModel {\r\n\tname: string;\r\n\tgroupName: string;\r\n\torder: number;\r\n}\r\n\r\nexport interface IIntegrationFilter {\r\n\tintegrationTypeId: string;\r\n\tsearchQuery: string;\r\n\tfilter: string;\r\n}\r\n\r\nexport interface IIntegrationMapSyncProject {\r\n\torganizationProjectCreateInput: IOrganizationProjectsCreateInput;\r\n\tintegrationId: string;\r\n\tsourceId: string;\r\n}\r\n\r\nexport interface IIntegrationMapSyncEntityInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tintegrationId: string;\r\n\tsourceId: string;\r\n\tgauzyId: string;\r\n\tentity: string;\r\n}\r\n\r\nexport interface IIntegrationTenantCreateDto\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tname: string;\r\n\tentitySettings?: IIntegrationEntitySetting[];\r\n\tsettings?: IIntegrationSetting[];\r\n}\r\n\r\nexport enum IntegrationEnum {\r\n\tUPWORK = 'Upwork',\r\n\tHUBSTAFF = 'Hubstaff'\r\n}\r\n\r\nexport enum IntegrationEntity {\r\n\tPROJECT = 'Project',\r\n\tORGANIZATION = 'Organization',\r\n\tNOTE = 'Note',\r\n\tCLIENT = 'Client',\r\n\tTASK = 'Task',\r\n\tACTIVITY = 'Activity',\r\n\tUSER = 'User',\r\n\tEMPLOYEE = 'Employee',\r\n\tTIME_LOG = 'TimeLog',\r\n\tTIME_SLOT = 'TimeSlot',\r\n\tSCREENSHOT = 'Screenshot',\r\n\tINCOME = 'Income',\r\n\tEXPENSE = 'Expense',\r\n\tPROPOSAL = 'Proposal'\r\n}\r\n\r\nexport enum IntegrationTypeGroupEnum {\r\n\tFEATURED = 'Featured',\r\n\tCATEGORIES = 'Categories'\r\n}\r\n\r\nexport enum IntegrationTypeNameEnum {\r\n\tALL_INTEGRATIONS = 'All Integrations',\r\n\tFOR_SALES_TEAMS = 'For Sales Teams',\r\n\tFOR_ACCOUNTANTS = 'For Accountants',\r\n\tFOR_SUPPORT_TEAMS = 'For Support Teams',\r\n\tCRM = 'CRM',\r\n\tSCHEDULING = 'Scheduling',\r\n\tTOOLS = 'Tools'\r\n}\r\n\r\nexport enum IntegrationFilterEnum {\r\n\tALL = 'All',\r\n\tFREE = 'Free',\r\n\tPAID = 'Paid'\r\n}\r\n\r\nexport const DEFAULT_INTEGRATION_PAID_FILTERS = [\r\n\t{\r\n\t\tlabel: IntegrationFilterEnum.ALL,\r\n\t\tvalue: 'all'\r\n\t},\r\n\t{\r\n\t\tlabel: IntegrationFilterEnum.FREE,\r\n\t\tvalue: 'false'\r\n\t},\r\n\t{\r\n\t\tlabel: IntegrationFilterEnum.PAID,\r\n\t\tvalue: 'true'\r\n\t}\r\n];\r\n\r\nexport const DEFAULT_INTEGRATIONS = [\r\n\t{\r\n\t\tname: IntegrationEnum.HUBSTAFF,\r\n\t\timgSrc: 'assets/images/integrations/hubstaff.svg',\r\n\t\tintegrationTypesMap: <string[]>[\r\n\t\t\tIntegrationTypeNameEnum.ALL_INTEGRATIONS\r\n\t\t],\r\n\t\torder: 1\r\n\t},\r\n\t{\r\n\t\tname: IntegrationEnum.UPWORK,\r\n\t\timgSrc: 'assets/images/integrations/upwork.svg',\r\n\t\tintegrationTypesMap: <string[]>[\r\n\t\t\tIntegrationTypeNameEnum.ALL_INTEGRATIONS\r\n\t\t],\r\n\t\torder: 2\r\n\t},\r\n\t{\r\n\t\tname: 'Import/Export',\r\n\t\timgSrc: 'assets/images/integrations/import-export.svg',\r\n\t\tisComingSoon: true,\r\n\t\tintegrationTypesMap: <string[]>[\r\n\t\t\tIntegrationTypeNameEnum.ALL_INTEGRATIONS,\r\n\t\t\tIntegrationTypeNameEnum.CRM\r\n\t\t],\r\n\t\torder: 3\r\n\t}\r\n];\r\n","// Modified code from https://github.com/xmlking/ngx-starter-kit.\r\n// MIT License, see https://github.com/xmlking/ngx-starter-kit/blob/develop/LICENSE\r\n// Copyright (c) 2018 Sumanth Chinthagunta\r\n\r\nimport { IRole } from './role.model';\r\nimport { IBasePerTenantAndOrganizationEntityModel } from './base-entity.model';\r\nimport { IUser, IUserRegistrationInput, LanguagesEnum } from './user.model';\r\nimport { IOrganizationProject } from './organization-projects.model';\r\nimport { IOrganization } from './organization.model';\r\nimport { IOrganizationContact } from './organization-contact.model';\r\nimport { IOrganizationDepartment } from './organization-department.model';\r\n\r\nexport interface IInvite extends IBasePerTenantAndOrganizationEntityModel {\r\n\ttoken: string;\r\n\temail: string;\r\n\troleId: string;\r\n\tinvitedById: string;\r\n\tstatus: string;\r\n\texpireDate: Date;\r\n\trole?: IRole;\r\n\tinvitedBy?: IUser;\r\n\tprojects?: IOrganizationProject[];\r\n\torganizationContacts?: IOrganizationContact[];\r\n\tdepartments?: IOrganizationDepartment[];\r\n}\r\n\r\nexport interface IInviteAcceptInput extends IUserRegistrationInput {\r\n\tinviteId: string;\r\n\torganization: IOrganization;\r\n\toriginalUrl?: string;\r\n}\r\n\r\nexport interface IInviteResendInput {\r\n\tid: string;\r\n\tinvitedById: string;\r\n}\r\n\r\nexport interface ICreateEmailInvitesInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\temailIds: string[];\r\n\tprojectIds?: string[];\r\n\torganizationContactIds?: string[];\r\n\tdepartmentIds?: string[];\r\n\troleId: string;\r\n\tinvitedById: string;\r\n\tinviteType: any;\r\n\tstartedWorkOn: string;\r\n}\r\n\r\nexport interface ICreateOrganizationContactInviteInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\temailId: string;\r\n\torganizationContactId: string;\r\n\troleId: string;\r\n\tinvitedById: string;\r\n\toriginalUrl: string;\r\n\tlanguageCode: LanguagesEnum;\r\n}\r\n\r\nexport interface ICreateEmailInvitesOutput {\r\n\titems: IInvite[];\r\n\ttotal: number;\r\n\tignored: number;\r\n}\r\n\r\nexport interface IInviteFindInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tinvitationType?: InvitationTypeEnum;\r\n}\r\n\r\nexport interface IPublicInviteFindInput {\r\n\temail: string;\r\n\ttoken: string;\r\n}\r\n\r\nexport interface IInviteUpdateInput {\r\n\tstatus: InviteStatusEnum;\r\n}\r\n\r\nexport enum InviteStatusEnum {\r\n\tINVITED = 'INVITED',\r\n\tACCEPTED = 'ACCEPTED'\r\n}\r\n\r\nexport enum InvitationTypeEnum {\r\n\tUSER = 'USER',\r\n\tEMPLOYEE = 'EMPLOYEE',\r\n\tCANDIDATE = 'CANDIDATE'\r\n}\r\nexport interface IInviteViewModel {\r\n\temail: string;\r\n\texpireDate: string;\r\n\timageUrl: string;\r\n\tfullName: string;\r\n\troleName?: string;\r\n\tstatus: string;\r\n\tprojectNames: string[];\r\n\tclientNames: string[];\r\n\tdepartmentNames: string[];\r\n\tid: string;\r\n\tinviteUrl: string;\r\n}\r\n\r\nexport interface IInviteUserModel\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\temail: string;\r\n\trole: string;\r\n\tregisterUrl: string;\r\n\tlanguageCode: LanguagesEnum;\r\n\tinvitedBy: IUser;\r\n\toriginUrl?: string;\r\n}\r\nexport interface IInviteEmployeeModel\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\temail: string;\r\n\tregisterUrl: string;\r\n\tlanguageCode: LanguagesEnum;\r\n\tinvitedBy: IUser;\r\n\tprojects?: IOrganizationProject[];\r\n\torganizationContacts?: IOrganizationContact[];\r\n\tdepartments?: IOrganizationDepartment[];\r\n\toriginUrl?: string;\r\n}\r\n","import { IBasePerTenantAndOrganizationEntityModel } from './base-entity.model';\r\nimport { IOrganization } from './organization.model';\r\nimport { IOrganizationContact } from './organization-contact.model';\r\nimport { IInvoiceItem } from './invoice-item.model';\r\nimport { ITag } from './tag-entity.model';\r\nimport { IPayment } from './payment.model';\r\nimport { IInvoiceEstimateHistory } from './invoice-estimate-history.model';\r\n\r\nexport interface IInvoice extends IBasePerTenantAndOrganizationEntityModel {\r\n\tinvoiceDate: Date;\r\n\tinvoiceNumber: number;\r\n\tdueDate: Date;\r\n\tcurrency: string;\r\n\tdiscountValue: number;\r\n\tdiscountType: string;\r\n\tpaid: boolean;\r\n\ttax: number;\r\n\ttaxType: string;\r\n\ttax2: number;\r\n\ttax2Type: string;\r\n\tterms?: string;\r\n\ttotalValue?: number;\r\n\torganizationContactId?: string;\r\n\torganizationContactName?: string;\r\n\tfromOrganization?: IOrganization;\r\n\ttoContact?: IOrganizationContact;\r\n\tinvoiceItems?: IInvoiceItem[];\r\n\tinvoiceType?: string;\r\n\tsentTo?: string;\r\n\ttags?: ITag[];\r\n\tisEstimate?: boolean;\r\n\tstatus?: string;\r\n\tpayments?: IPayment[];\r\n\tisAccepted?: boolean;\r\n\thistoryRecords?: IInvoiceEstimateHistory[];\r\n\tinternalNote?: string;\r\n}\r\n\r\nexport interface IInvoiceCreateInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tinvoiceDate?: Date;\r\n\tinvoiceNumber?: number;\r\n\tdueDate?: Date;\r\n\tcurrency?: string;\r\n\tdiscountValue?: number;\r\n\tdiscountType?: string;\r\n\tpaid?: boolean;\r\n\ttax?: number;\r\n\ttax2?: number;\r\n\ttaxType?: string;\r\n\ttax2Type?: string;\r\n\tterms?: string;\r\n\ttotalValue?: number;\r\n\torganizationContactId?: string;\r\n\torganizationContactName?: string;\r\n\tfromOrganization?: IOrganization;\r\n\ttoContact?: IOrganizationContact;\r\n\tinvoiceType?: string;\r\n\tsentTo?: string;\r\n\ttags?: ITag[];\r\n\tstatus?: string;\r\n\tisAccepted?: boolean;\r\n\tisEstimate?: boolean;\r\n}\r\n\r\nexport interface IInvoiceUpdateInput extends IInvoiceCreateInput {\r\n\tid?: string;\r\n\tinternalNote?: string;\r\n}\r\nexport interface IInvoiceFindInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\torganizationContactId?: string;\r\n\tinvoiceId?: string;\r\n\tsentTo?: string;\r\n\tinvoiceNumber?: string;\r\n\ttags?: ITag[];\r\n\tisEstimate?: boolean;\r\n}\r\n\r\nexport enum InvoiceTypeEnum {\r\n\tBY_EMPLOYEE_HOURS = 'BY_EMPLOYEE_HOURS',\r\n\tBY_PROJECT_HOURS = 'BY_PROJECT_HOURS',\r\n\tBY_TASK_HOURS = 'BY_TASK_HOURS',\r\n\tBY_PRODUCTS = 'BY_PRODUCTS',\r\n\tBY_EXPENSES = 'BY_EXPENSES',\r\n\tDETAILED_ITEMS = 'DETAILED_ITEMS'\r\n}\r\n\r\nexport enum DiscountTaxTypeEnum {\r\n\tPERCENT = 'PERCENT',\r\n\tFLAT_VALUE = 'FLAT'\r\n}\r\n\r\nexport enum InvoiceStatusTypesEnum {\r\n\tDRAFT = 'DRAFT',\r\n\tSENT = 'SENT',\r\n\tVIEWED = 'VIEWED',\r\n\tFULLY_PAID = 'FULLY_PAID',\r\n\tPARTIALLY_PAID = 'PARTIALLY_PAID',\r\n\tOVERPAID = 'OVERPAID',\r\n\tVOID = 'VOID'\r\n}\r\n\r\nexport enum EstimateStatusTypesEnum {\r\n\tDRAFT = 'DRAFT',\r\n\tSENT = 'SENT',\r\n\tVIEWED = 'VIEWED',\r\n\tACCEPTED = 'ACCEPTED',\r\n\tREJECTED = 'REJECTED',\r\n\tVOID = 'VOID'\r\n}\r\n\r\nexport enum InvoiceColumnsEnum {\r\n\tINVOICE_DATE = 'INVOICE_DATE',\r\n\tDUE_DATE = 'DUE_DATE',\r\n\tSTATUS = 'STATUS',\r\n\tTOTAL_VALUE = 'TOTAL_VALUE',\r\n\tCURRENCY = 'CURRENCY',\r\n\tTAX = 'TAX',\r\n\tTAX_2 = 'TAX_2',\r\n\tDISCOUNT = 'DISCOUNT',\r\n\tCONTACT = 'CONTACT',\r\n\tPAID_STATUS = 'PAID_STATUS'\r\n}\r\n\r\nexport enum EstimateColumnsEnum {\r\n\tESTIMATE_DATE = 'ESTIMATE_DATE',\r\n\tDUE_DATE = 'DUE_DATE',\r\n\tSTATUS = 'STATUS',\r\n\tTOTAL_VALUE = 'TOTAL_VALUE',\r\n\tCURRENCY = 'CURRENCY',\r\n\tTAX = 'TAX',\r\n\tTAX_2 = 'TAX_2',\r\n\tDISCOUNT = 'DISCOUNT',\r\n\tCONTACT = 'CONTACT'\r\n}\r\n","import { IOrganizationProject } from './organization-projects.model';\r\nimport { IEmployee } from './employee.model';\r\nimport { IBaseEntityWithMembers } from './entity-with-members.model';\r\nimport { IOrganizationCreateInput } from './organization.model';\r\nimport { IUser, LanguagesEnum } from './user.model';\r\nimport { ITag } from './tag-entity.model';\r\nimport { IContact } from './contact.model';\r\nimport { IBasePerTenantAndOrganizationEntityModel } from './base-entity.model';\r\n\r\nexport interface IOrganizationContact extends IBaseEntityWithMembers {\r\n\tname: string;\r\n\tcontactType: string;\r\n\tprimaryEmail: string;\r\n\temailAddresses?: string[];\r\n\tprimaryPhone: string;\r\n\tphones?: string[];\r\n\tprojects?: IOrganizationProject[];\r\n\tnotes?: string;\r\n\tmembers?: IEmployee[];\r\n\timageUrl?: string;\r\n\tinviteStatus?: string;\r\n\ttags: ITag[];\r\n\tcontact: IContact;\r\n\tcreatedBy?: string;\r\n\tbudget?: number;\r\n\tbudgetType?: OrganizationContactBudgetTypeEnum;\r\n}\r\n\r\nexport enum OrganizationContactBudgetTypeEnum {\r\n\tHOURS = 'hours',\r\n\tCOST = 'cost'\r\n}\r\n\r\nexport interface IOrganizationContactFindInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tname?: string;\r\n\tprimaryEmail?: string;\r\n\tprimaryPhone?: string;\r\n\tnotes?: string;\r\n\timageUrl?: string;\r\n\tcontactType?: string;\r\n\tcreatedBy?: string;\r\n}\r\n\r\nexport interface IOrganizationContactCreateInput extends IContact {\r\n\tname: string;\r\n\torganizationId: string;\r\n\tcontactId?: string;\r\n\tprimaryEmail?: string;\r\n\temailAddresses?: string[];\r\n\tprimaryPhone?: string;\r\n\tphones?: string[];\r\n\tprojects?: IOrganizationProject[];\r\n\tmembers?: IEmployee[];\r\n\tnotes?: string;\r\n\timageUrl?: string;\r\n\tcontactType?: string;\r\n\tcreatedBy?: string;\r\n}\r\n\r\nexport interface IOrganizationContactInviteInput {\r\n\tid: string;\r\n\tlanguageCode: LanguagesEnum;\r\n\toriginalUrl?: string;\r\n\tinviterUser?: IUser;\r\n}\r\nexport interface IOrganizationContactRegistrationInput {\r\n\tuser: IUser;\r\n\tpassword: string;\r\n\tcontactOrganization: IOrganizationCreateInput;\r\n}\r\nexport interface IOrganizationContactAcceptInviteInput\r\n\textends IOrganizationContactRegistrationInput {\r\n\tinviteId: string;\r\n\toriginalUrl?: string;\r\n}\r\n\r\nexport enum ContactOrganizationInviteStatus {\r\n\tNOT_INVITED = 'NOT_INVITED',\r\n\tINVITED = 'INVITED',\r\n\tACCEPTED = 'ACCEPTED'\r\n}\r\n\r\nexport enum ContactType {\r\n\tCLIENT = 'CLIENT',\r\n\tCUSTOMER = 'CUSTOMER',\r\n\tLEAD = 'LEAD'\r\n}\r\n","import { IBasePerTenantAndOrganizationEntityModel } from './base-entity.model';\r\nimport { ICandidate } from './candidate.model';\r\nimport { ITag } from './tag-entity.model';\r\n\r\nexport enum GenericEmploymentTypes {\r\n\tINTERN = 'Intern',\r\n\tCONTRACT = 'Contract',\r\n\tPROBATION = 'Probation',\r\n\tPART_TIME = 'Part-time',\r\n\tFULL_TIME = 'Full-time',\r\n\tCONTRACTOR = 'Contractor'\r\n}\r\n\r\nexport interface IOrganizationEmploymentType\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tname: string;\r\n\ttags: ITag[];\r\n\tcandidates?: ICandidate[];\r\n}\r\n\r\nexport interface IOrganizationEmploymentTypeFindInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\torganizationId?: string;\r\n}\r\n\r\nexport interface IOrganizationEmploymentTypeCreateInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tname: string;\r\n\ttags: ITag[];\r\n}\r\n","import { IBasePerTenantAndOrganizationEntityModel } from './base-entity.model';\r\nimport { ITag } from './tag-entity.model';\r\n\r\nexport interface IOrganizationExpenseCategory\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tname: string;\r\n\ttags?: ITag[];\r\n}\r\n\r\nexport interface IOrganizationExpenseCategoryFindInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tname?: string;\r\n\torganizationId?: string;\r\n}\r\n\r\nexport interface IOrganizationExpenseCategoryCreateInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tname: string;\r\n\ttags?: ITag[];\r\n}\r\n\r\nexport enum OrganizationExpenseCategoryEnum {\r\n\tSOFTWARE = 'Software',\r\n\tEMPLOYEES_BENEFITS = 'Employees Benefits',\r\n\tCOURSES = 'Courses',\r\n\tSUBSCRIPTIONS = 'Subscriptions',\r\n\tRENT = 'Rent',\r\n\tSERVICE_FEE = 'Service Fee'\r\n}\r\n","import { IEmployee } from './employee.model';\r\nimport { IOrganizationContact } from './organization-contact.model';\r\nimport { ProjectBillingEnum, ProjectOwnerEnum } from './organization.model';\r\nimport { CurrenciesEnum } from '@gauzy/models';\r\nimport { IBaseEntityWithMembers } from './entity-with-members.model';\r\nimport { ITag } from './tag-entity.model';\r\nimport { ITask } from './task-entity.model';\r\nimport { IOrganizationSprint } from './organization-sprint.model';\r\nimport { IPayment } from './payment.model';\r\nimport { IBasePerTenantAndOrganizationEntityModel } from './base-entity.model';\r\n\r\nexport interface IOrganizationProject extends IBaseEntityWithMembers {\r\n\tname: string;\r\n\torganizationContact?: IOrganizationContact;\r\n\torganizationContactId?: string;\r\n\tstartDate?: Date;\r\n\tendDate?: Date;\r\n\tbilling: string;\r\n\tcurrency: string;\r\n\tmembers?: IEmployee[];\r\n\tpublic: boolean;\r\n\ttags: ITag[];\r\n\towner: string;\r\n\ttasks?: ITask[];\r\n\torganizationSprints?: IOrganizationSprint[];\r\n\ttaskListType: string;\r\n\tpayments?: IPayment[];\r\n\t// prefix to project tasks / issues, e.g. GA-XXXX (GA is prefix)\r\n\tcode?: string;\r\n\tdescription?: string;\r\n\t// the color of project which is used in UI\r\n\tcolor?: string;\r\n\t// is project billable?\r\n\tbillable?: boolean;\r\n\t// true if the project is flat rate, false if the project is time / materials billable\r\n\tbillingFlat?: boolean;\r\n\topenSource?: boolean;\r\n\tprojectUrl?: string;\r\n\topenSourceProjectUrl?: string;\r\n\tbudget?: number;\r\n\tbudgetType?: OrganizationProjectBudgetTypeEnum;\r\n}\r\n\r\nexport enum TaskListTypeEnum {\r\n\tGRID = 'GRID',\r\n\tSPRINT = 'SPRINT'\r\n}\r\n\r\nexport enum OrganizationProjectBudgetTypeEnum {\r\n\tHOURS = 'hours',\r\n\tCOST = 'cost'\r\n}\r\n\r\nexport interface IOrganizationProjectsFindInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tname?: string;\r\n\torganizationContactId?: string;\r\n\torganizationContact?: IOrganizationContact;\r\n\tmembers?: IEmployee[];\r\n\tpublic?: boolean;\r\n\ttags?: ITag[];\r\n\tbillable?: boolean;\r\n\tbillingFlat?: boolean;\r\n}\r\n\r\nexport interface IOrganizationProjectsCreateInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tname: string;\r\n\torganizationContact?: IOrganizationContact;\r\n\torganizationContactId?: string;\r\n\tstartDate?: Date;\r\n\tendDate?: Date;\r\n\tbilling?: ProjectBillingEnum;\r\n\tcurrency?: CurrenciesEnum;\r\n\tmembers?: IEmployee[];\r\n\tpublic?: boolean;\r\n\ttags?: ITag[];\r\n\towner?: ProjectOwnerEnum;\r\n\tcode?: string;\r\n\tdescription?: string;\r\n\tcolor?: string;\r\n\tbillable?: boolean;\r\n\tbillingFlat?: boolean;\r\n\tstatus?: string;\r\n\topenSource?: boolean;\r\n\tprojectUrl?: string;\r\n\topenSourceProjectUrl?: string;\r\n}\r\n\r\nexport interface IOrganizationProjectsUpdateInput\r\n\textends IOrganizationProjectsCreateInput {\r\n\tid?: string;\r\n}\r\n\r\nexport interface IOrganizationProjectStoreState {\r\n\tproject: IOrganizationProject;\r\n\taction: OrganizationProjectAction;\r\n}\r\n\r\nexport enum OrganizationProjectAction {\r\n\tCREATED = 'CREATED',\r\n\tUPDATED = 'UPDATED',\r\n\tDELETED = 'DELETED'\r\n}\r\n","import { IBasePerTenantAndOrganizationEntityModel } from './base-entity.model';\r\nimport { IOrganizationProject, ITask } from '@gauzy/models';\r\n\r\nexport interface IOrganizationSprint\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tname: string;\r\n\tprojectId: string;\r\n\tgoal?: string;\r\n\tlength: number; // Duration of Sprint. Default value - 7 (days)\r\n\tstartDate?: Date;\r\n\tendDate?: Date;\r\n\tdayStart?: number; // Enum ((Sunday-Saturday) => (0-7))\r\n\tproject?: IOrganizationProject;\r\n\tisActive?: boolean;\r\n\ttasks?: ITask[];\r\n}\r\n\r\nexport enum SprintStartDayEnum {\r\n\tSUNDAY = 1,\r\n\tMONDAY = 2,\r\n\tTUESDAY = 3,\r\n\tWEDNESDAY = 4,\r\n\tTHURSDAY = 5,\r\n\tFRIDAY = 6,\r\n\tSATURDAY = 7\r\n}\r\n\r\nexport interface IOrganizationSprintUpdateInput {\r\n\tname: string;\r\n\tgoal?: string;\r\n\tlength: number;\r\n\tstartDate?: Date;\r\n\tendDate?: Date;\r\n\tdayStart?: number;\r\n\tproject?: IOrganizationProject;\r\n\tisActive?: boolean;\r\n\ttasks?: ITask[];\r\n}\r\n","import { IBasePerTenantAndOrganizationEntityModel } from './base-entity.model';\r\nimport { ITag } from './tag-entity.model';\r\n\r\nexport interface IOrganizationVendor\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tname: string;\r\n\tphone?: string;\r\n\twebsite?: string;\r\n\temail?: string;\r\n\ttags?: ITag[];\r\n}\r\n\r\nexport interface IOrganizationVendorFindInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tname?: string;\r\n\tphone?: string;\r\n\twebsite?: string;\r\n\temail?: string;\r\n\ttags?: ITag[];\r\n}\r\n\r\nexport interface IOrganizationVendorCreateInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tname: string;\r\n\tphone?: string;\r\n\twebsite?: string;\r\n\temail?: string;\r\n\ttags?: ITag[];\r\n}\r\n\r\nexport enum OrganizationVendorEnum {\r\n\tUPWORK = 'Upwork',\r\n\tMICROSOFT = 'Microsoft',\r\n\tBENEFIT_SYSTEMS = 'Benefit Systems',\r\n\tUDEMY = 'Udemy',\r\n\tGOOGLE = 'Google',\r\n\tCO_SHARE = 'CoShare'\r\n}\r\n","import { IBasePerTenantEntityModel } from './base-entity.model';\r\nimport {\r\n\tITenant,\r\n\tITag,\r\n\tISkill,\r\n\tIOrganizationSprint,\r\n\tIEmployee,\r\n\tIOrganizationAwards,\r\n\tIFeatureOrganization\r\n} from '@gauzy/models';\r\nimport { IContact } from './contact.model';\r\nimport { IOrganizationLanguages } from './organization-languages.model';\r\nimport { CurrenciesEnum } from '@gauzy/models';\r\n\r\nexport enum OrganizationPermissionsEnum {\r\n\tALLOW_MANUAL_TIME = 'allowManualTime',\r\n\tALLOW_MODIFY_TIME = 'allowModifyTime',\r\n\tALLOW_DELETE_TIME = 'allowDeleteTime',\r\n\tALLOW_FUTURE_DATE = 'futureDateAllowed'\r\n}\r\n\r\nexport enum ListsInputTypeEnum {\r\n\tDEPARTMENTS = 'DEPARTMENTS',\r\n\tPOSITIONS = 'POSITIONS',\r\n\tVENDORS = 'VENDORS'\r\n}\r\nexport interface IOrganization extends IBasePerTenantEntityModel {\r\n\tname: string;\r\n\tprofile_link: string;\r\n\tvalueDate?: Date;\r\n\ttotalEmployees: number;\r\n\tstatus?: string;\r\n\t// Organization logo Url\r\n\timageUrl?: string;\r\n\tbanner: string;\r\n\tshort_description: string;\r\n\tclient_focus: string;\r\n\tshow_income?: boolean;\r\n\tshow_profits?: boolean;\r\n\tshow_bonuses_paid?: boolean;\r\n\tshow_total_hours?: boolean;\r\n\tshow_minimum_project_size?: boolean;\r\n\tshow_projects_count?: boolean;\r\n\tshow_clients_count?: boolean;\r\n\tshow_employees_count?: boolean;\r\n\toverview: string;\r\n\tskills: ISkill[];\r\n\tcurrency: string;\r\n\tisActive: boolean;\r\n\tdefaultValueDateType: string;\r\n\tdefaultAlignmentType?: string;\r\n\tdateFormat?: string;\r\n\tbrandColor?: string;\r\n\ttimeZone?: string;\r\n\tofficialName?: string;\r\n\tstartWeekOn?: string;\r\n\ttaxId?: string;\r\n\tnumberFormat?: string;\r\n\tbonusType?: string;\r\n\tbonusPercentage?: number;\r\n\temployees?: IEmployee[];\r\n\tinvitesAllowed?: boolean;\r\n\tinviteExpiryPeriod?: number;\r\n\ttags: ITag[];\r\n\tfutureDateAllowed?: boolean;\r\n\tallowManualTime?: boolean;\r\n\tallowModifyTime?: boolean;\r\n\tallowDeleteTime?: boolean;\r\n\tregionCode?: string;\r\n\trequireReason?: boolean;\r\n\trequireDescription?: boolean;\r\n\trequireProject?: boolean;\r\n\trequireTask?: boolean;\r\n\trequireClient?: boolean;\r\n\ttimeFormat?: 12 | 24;\r\n\tdefaultStartTime?: string;\r\n\tdefaultEndTime?: string;\r\n\tregistrationDate?: Date;\r\n\tcontact: IContact;\r\n\tseparateInvoiceItemTaxAndDiscount?: boolean;\r\n\torganizationSprints?: IOrganizationSprint[];\r\n\tminimumProjectSize?: string;\r\n\tshow_clients?: boolean;\r\n\t// \"left\" and \"right\" values, used to know where to put currency symbol relative to amount\r\n\tcurrencyPosition?: string;\r\n\twebsite?: string;\r\n\t// used in invoice headers to display organization details\r\n\tfiscalInformation?: string;\r\n\tfiscalStartDate?: Date;\r\n\tfiscalEndDate?: Date;\r\n\tdiscountAfterTax?: boolean;\r\n\tawards?: IOrganizationAwards[];\r\n\tlanguages?: IOrganizationLanguages[];\r\n\tfeatureOrganizations?: IFeatureOrganization[];\r\n}\r\n\r\nexport interface IOrganizationFindInput {\r\n\tid?: string;\r\n\ttenantId?: string;\r\n\tname?: string;\r\n\tprofile_link?: string;\r\n\tvalueDate?: Date;\r\n\timageUrl?: string;\r\n\tcurrency?: CurrenciesEnum;\r\n\tisActive?: boolean;\r\n\tskills?: ISkill[];\r\n\ttags?: ITag[];\r\n}\r\n\r\nexport interface IOrganizationCreateInput extends IContact {\r\n\tname: string;\r\n\tprofile_link: string;\r\n\tvalueDate?: Date;\r\n\timageUrl: string;\r\n\tcurrency: CurrenciesEnum;\r\n\tclient_focus: string;\r\n\tshow_income?: boolean;\r\n\tshow_profits?: boolean;\r\n\tshow_bonuses_paid?: boolean;\r\n\tshow_total_hours?: boolean;\r\n\tshow_minimum_project_size?: boolean;\r\n\tshow_projects_count?: boolean;\r\n\tshow_clients_count?: boolean;\r\n\tshow_employees_count?: boolean;\r\n\tdefaultValueDateType: DefaultValueDateTypeEnum;\r\n\tdateFormat?: string;\r\n\ttimeZone?: string;\r\n\tofficialName?: string;\r\n\tstartWeekOn?: string;\r\n\ttaxId?: string;\r\n\tnumberFormat?: string;\r\n\tbonusType: BonusTypeEnum;\r\n\tbonusPercentage?: number;\r\n\tinvitesAllowed?: boolean;\r\n\tinviteExpiryPeriod?: number;\r\n\ttags?: ITag[];\r\n\ttenant: ITenant;\r\n\tcontact?: IContact;\r\n\tskills?: ISkill[];\r\n\tminimumProjectSize?: string;\r\n\tshow_clients?: boolean;\r\n\twebsite?: string;\r\n\tfiscalInformation?: string;\r\n}\r\n\r\nexport interface IOrganizationUpdateInput extends IOrganizationCreateInput {\r\n\tgauzyId?: string;\r\n}\r\n\r\nexport enum OrganizationSelectInput {\r\n\tid = 'id',\r\n\tname = 'name',\r\n\tprofile_link = 'profile_link',\r\n\tvalueDate = 'valueDate',\r\n\timageUrl = 'imageUrl',\r\n\tcurrency = 'currency',\r\n\tcreatedAt = 'createdAt',\r\n\tupdatedAt = 'updatedAt',\r\n\tisActive = 'isActive',\r\n\ttags = 'tags'\r\n}\r\n\r\nexport enum RegionsEnum {\r\n\t'EN' = 'English (United States)',\r\n\t'BG' = 'Bulgarian (Bulgaria)',\r\n\t'HE' = 'Hebrew (Israel)',\r\n\t'RU' = 'Rusian (Russia)'\r\n}\r\n\r\nexport enum DefaultValueDateTypeEnum {\r\n\tTODAY = 'TODAY',\r\n\tEND_OF_MONTH = 'END_OF_MONTH',\r\n\tSTART_OF_MONTH = 'START_OF_MONTH'\r\n}\r\n\r\nexport enum ProjectBillingEnum {\r\n\tRATE = 'RATE',\r\n\tFLAT_FEE = 'FLAT_FEE',\r\n\tMILESTONES = 'MILESTONES'\r\n}\r\n\r\nexport enum AlignmentOptions {\r\n\tLEFT = 'LEFT',\r\n\tRIGHT = 'RIGHT',\r\n\tCENTER = 'CENTER'\r\n}\r\n\r\nexport enum CurrencyPosition {\r\n\tLEFT = 'LEFT',\r\n\tRIGHT = 'RIGHT'\r\n}\r\n\r\nexport enum WeekDaysEnum {\r\n\tMONDAY = 'MONDAY',\r\n\tTUESDAY = 'TUESDAY',\r\n\tWEDNESDAY = 'WEDNESDAY',\r\n\tTHURSDAY = 'THURSDAY',\r\n\tFRIDAY = 'FRIDAY',\r\n\tSATURDAY = 'SATURDAY',\r\n\tSUNDAY = 'SUNDAY'\r\n}\r\n\r\nexport enum BonusTypeEnum {\r\n\tPROFIT_BASED_BONUS = 'PROFIT_BASED_BONUS',\r\n\tREVENUE_BASED_BONUS = 'REVENUE_BASED_BONUS'\r\n}\r\n\r\nexport enum ClientFocusEnum {\r\n\tVERY_SMALL_BUSINESSES = 'Very Small Businesses',\r\n\tSMALL_BUSINESSES = 'Small Businesses',\r\n\tMEDIUM_BUSINESSES = 'Medium Businesses',\r\n\tLARGE_BUSINESSES = 'Large Businesses'\r\n}\r\n\r\nexport enum ProjectOwnerEnum {\r\n\tCLIENT = 'CLIENT',\r\n\tINTERNAL = 'INTERNAL'\r\n}\r\n\r\nexport enum MinimumProjectSizeEnum {\r\n\tONE_THOUSAND = '1000+',\r\n\tFIVE_THOUSAND = '5000+',\r\n\tTEN_THOUSAND = '10000+',\r\n\tTWENTY_FIVE_THOUSAND = '25000+',\r\n\tFIFTY_THOUSAND = '50000+',\r\n\tONE_HUNDRED_THOUSAND = '100000+'\r\n}\r\n\r\nexport const DEFAULT_PROFIT_BASED_BONUS = 75;\r\nexport const DEFAULT_REVENUE_BASED_BONUS = 10;\r\n\r\nexport interface IOrganizationStoreState {\r\n\torganization: IOrganization;\r\n\taction: OrganizationAction;\r\n}\r\n\r\nexport enum OrganizationAction {\r\n\tCREATED = 'CREATED',\r\n\tUPDATED = 'UPDATED',\r\n\tDELETED = 'DELETED'\r\n}\r\n","import { IBasePerTenantAndOrganizationEntityModel } from './base-entity.model';\r\nimport { IInvoice } from './invoice.model';\r\nimport { ITag } from './tag-entity.model';\r\nimport { IUser } from './user.model';\r\nimport { IOrganizationContact } from './organization-contact.model';\r\nimport { IOrganizationProject } from './organization-projects.model';\r\nimport { IPaginationInput } from './core.model';\r\nimport { IEmployee } from './employee.model';\r\n\r\nexport interface IPayment extends IBasePerTenantAndOrganizationEntityModel {\r\n\tinvoice?: IInvoice;\r\n\tinvoiceId?: string;\r\n\ttags?: ITag[];\r\n\tnote?: string;\r\n\trecordedBy?: IUser;\r\n\temployeeId?: string;\r\n\temployee?: IEmployee;\r\n\tpaymentDate?: Date;\r\n\tamount?: number;\r\n\tcurrency?: string;\r\n\toverdue?: boolean;\r\n\tpaymentMethod?: string;\r\n\tcontact?: IOrganizationContact;\r\n\tcontactId?: string;\r\n\tproject?: IOrganizationProject;\r\n\tprojectId?: string;\r\n}\r\n\r\nexport interface IPaymentUpdateInput {\r\n\tamount?: number;\r\n\tnote?: string;\r\n\tcurrency?: string;\r\n\tpaymentDate?: Date;\r\n}\r\n\r\nexport interface IPaymentFindInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tinvoiceId?: string;\r\n}\r\n\r\nexport enum PaymentMethodEnum {\r\n\tBANK_TRANSFER = 'BANK_TRANSFER',\r\n\tCASH = 'CASH',\r\n\tCHEQUE = 'CHEQUE',\r\n\tCREDIT_CARD = 'CREDIT_CARD',\r\n\tDEBIT = 'DEBIT',\r\n\tONLINE = 'ONLINE'\r\n}\r\n\r\nexport interface ISelectedPayment {\r\n\tdata: IPayment;\r\n\tisSelected: false;\r\n}\r\nexport interface IPaymentReportChartData {\r\n\tdate: string;\r\n\tvalue: number;\r\n}\r\n\r\nexport interface IGetPaymentInput\r\n\textends IPaginationInput,\r\n\t\tIBasePerTenantAndOrganizationEntityModel {\r\n\trelations?: string[];\r\n\ttypes?: string[];\r\n\ttitles?: string[];\r\n\tgroupBy?: string;\r\n\tdate?: Date | string;\r\n\tstartDate?: Date | string;\r\n\tendDate?: Date | string;\r\n\tprojectIds?: string[];\r\n\temployeeIds?: string[];\r\n}\r\n\r\nexport interface IPaymentReportGroupByDate {\r\n\tdate: string;\r\n\temployees: {\r\n\t\temployee: IEmployee;\r\n\t\tprojects: {\r\n\t\t\tproject: IOrganizationProject;\r\n\t\t\tpayments: IPayment;\r\n\t\t\tsum: number;\r\n\t\t}[];\r\n\t}[];\r\n}\r\n\r\nexport interface IPaymentReportGroupByEmployee {\r\n\temployee: IEmployee;\r\n\tdates: {\r\n\t\tdate: string;\r\n\t\tprojects: {\r\n\t\t\tproject: IOrganizationProject;\r\n\t\t\tpayments: IPayment;\r\n\t\t\tsum: number;\r\n\t\t}[];\r\n\t}[];\r\n}\r\n\r\nexport interface IPaymentReportGroupByProject {\r\n\tproject: IOrganizationProject;\r\n\tdates: {\r\n\t\tdate: string;\r\n\t\temployees: {\r\n\t\t\temployee: IEmployee;\r\n\t\t\tpayments: IPayment;\r\n\t\t\tsum: number;\r\n\t\t}[];\r\n\t}[];\r\n}\r\n\r\nexport interface IPaymentReportGroupByClient {\r\n\tclient: IOrganizationContact;\r\n\tdates: {\r\n\t\tdate: string;\r\n\t\temployees: {\r\n\t\t\temployee: IEmployee;\r\n\t\t\tpayments: IPayment;\r\n\t\t\tsum: number;\r\n\t\t}[];\r\n\t}[];\r\n}\r\n\r\nexport type IPaymentReportData =\r\n\t| IPaymentReportGroupByDate\r\n\t| IPaymentReportGroupByEmployee\r\n\t| IPaymentReportGroupByClient\r\n\t| IPaymentReportGroupByProject;\r\n","import { IBasePerTenantAndOrganizationEntityModel } from './base-entity.model';\r\nimport { ITranslation, ITranslatable } from './translation.model';\r\nimport { ITag } from './tag-entity.model';\r\n\r\nexport interface IProduct extends IBasePerTenantAndOrganizationEntityModel {\r\n\tname: string;\r\n\tdescription: string;\r\n\tenabled: boolean;\r\n\tcode: string;\r\n\timageUrl: string;\r\n\tvariants?: IProductVariant[];\r\n\toptions?: IProductOption[];\r\n\tproductTypeId: string;\r\n\tproductCategoryId: string;\r\n\ttype?: IProductTypeTranslatable;\r\n\tcategory?: IProductCategoryTranslatable;\r\n\ttags?: ITag[];\r\n\tlanguage?: string;\r\n}\r\n\r\nexport interface IProductCreateInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tname: string;\r\n\tdescription: string;\r\n\tenabled: boolean;\r\n\tcode: string;\r\n\timageUrl: string;\r\n\ttype?: IProductTypeTranslatable;\r\n\tcategory?: IProductCategoryTranslatable;\r\n\ttags?: ITag[];\r\n\toptionCreateInputs?: IProductOption[];\r\n\toptionDeleteInputs?: IProductOption[];\r\n\tlanguage?: string;\r\n}\r\n\r\nexport interface IProductFindInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tid?: string;\r\n}\r\n\r\nexport interface IProductTypeTranslatable\r\n\textends ITranslatable<IProductTypeTranslation> {\r\n\ticon: string;\r\n\tname?: string;\r\n\tproducts?: IProduct[];\r\n}\r\n\r\nexport interface IProductTypeTranslation\r\n\textends ITranslation<IProductTypeTranslatable> {\r\n\tname: string;\r\n\tdescription: string;\r\n}\r\n\r\nexport interface IProductTypeTranslated\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\ticon: string;\r\n\tname: string;\r\n\tdescription: string;\r\n}\r\n\r\nexport interface IProductCategoryTranslatable\r\n\textends ITranslatable<IProductCategoryTranslation> {\r\n\timageUrl: string;\r\n\tname?: string;\r\n\tproducts?: IProduct[];\r\n}\r\n\r\nexport interface IProductCategoryTranslation\r\n\textends ITranslation<IProductCategoryTranslatable> {\r\n\tname: string;\r\n\tdescription: string;\r\n}\r\n\r\nexport interface IProductCategoryTranslated\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\timageUrl: string;\r\n\tname: string;\r\n\tdescription: string;\r\n}\r\n\r\nexport interface IProductVariant\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tprice: IProductVariantPrice;\r\n\ttaxes: number;\r\n\tnotes: string;\r\n\tenabled: boolean;\r\n\tproductId: string;\r\n\tquantity: number;\r\n\tbillingInvoicingPolicy: string;\r\n\tinternalReference: string;\r\n\toptions: IProductOption[];\r\n\tsettings: IProductVariantSetting;\r\n\tproduct?: IProduct;\r\n}\r\n\r\nexport interface IVariantCreateInput {\r\n\tproduct: IProduct;\r\n\toptionCombinations: IVariantOptionCombination[];\r\n}\r\n\r\nexport interface IVariantOptionCombination {\r\n\toptions: string[];\r\n}\r\n\r\nexport interface IProductVariantPrice\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tunitCost: number;\r\n\tunitCostCurrency: string;\r\n\tretailPrice: number;\r\n\tretailPriceCurrency: string;\r\n\tproductVariant: IProductVariant;\r\n}\r\n\r\nexport interface IProductVariantSetting\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tisSubscription: boolean;\r\n\tisPurchaseAutomatically: boolean;\r\n\tcanBeSold: boolean;\r\n\tcanBePurchased: boolean;\r\n\tcanBeCharged: boolean;\r\n\tcanBeRented: boolean;\r\n\tisEquipment: boolean;\r\n\ttrackInventory: boolean;\r\n\tproductVariant: IProductVariant;\r\n}\r\n\r\nexport interface IProductOption\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tname: string;\r\n\tcode: string;\r\n\tproduct?: IProduct;\r\n}\r\n\r\nexport enum BillingInvoicingPolicyEnum {\r\n\tQUANTITY_ORDERED = 'Quantity ordered',\r\n\tQUANTITY_DELIVERED = 'Quantity Delivered'\r\n}\r\n\r\nexport enum ProductTypesIconsEnum {\r\n\tBRIEFCASE = 'briefcase-outline',\r\n\tCAR = 'car-outline',\r\n\tCOLOR_PALETTE = 'color-palette-outline',\r\n\tFLASH = 'flash-outline',\r\n\tHOME = 'home-outline',\r\n\tGIFT = 'gift-outline',\r\n\tHEART = 'heart-outline',\r\n\tRADIO_BTN_OFF = 'radio-button-off-outline',\r\n\tPIN = 'pin-outline',\r\n\tSETTINGS = 'settings-outline',\r\n\tSTAR = 'star-outline',\r\n\tSHOPPING_BAG = 'shopping-bag-outline',\r\n\tSHARE = 'share-outline',\r\n\tACTIVITY = 'activity-outline',\r\n\tALERT = 'alert-triangle-outline',\r\n\tBULB = 'bulb-outline',\r\n\tCHECKMARK = 'checkmark-circle-outline',\r\n\tGLOBE = 'globe-2-outline',\r\n\tLAYERS = 'layers-outline',\r\n\tPHONE = 'phone-outline',\r\n\tSHOPPING_CART = 'shopping-cart-outline'\r\n}\r\n","import { IOrganizationContact } from '..';\r\nimport { IBasePerTenantAndOrganizationEntityModel } from './base-entity.model';\r\nimport { IEmployee, IEmployeeFindInput } from './employee.model';\r\nimport { ITag } from './tag-entity.model';\r\n\r\nexport interface IProposal extends IBasePerTenantAndOrganizationEntityModel {\r\n\temployeeId?: string;\r\n\temployee?: IEmployee;\r\n\tjobPostUrl?: string;\r\n\tvalueDate?: Date;\r\n\tjobPostContent?: string;\r\n\tproposalContent?: string;\r\n\tstatus?: string;\r\n\ttags?: ITag[];\r\n\torganizationContact?: IOrganizationContact;\r\n\torganizationContactId?: string;\r\n}\r\n\r\nexport interface IProposalCreateInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\temployeeId?: string;\r\n\tjobPostUrl?: string;\r\n\tvalueDate?: Date;\r\n\tjobPostContent?: string;\r\n\tproposalContent?: string;\r\n\tstatus?: string;\r\n\ttags?: ITag[];\r\n\torganizationContactId?: string;\r\n}\r\n\r\nexport interface IProposalFindInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\temployeeId?: string;\r\n\temployee?: IEmployeeFindInput;\r\n\tjobPostUrl?: string;\r\n\tvalueDate?: Date;\r\n\tjobPostContent?: string;\r\n\tproposalContent?: string;\r\n\tstatus?: string;\r\n\ttags?: ITag[];\r\n}\r\n\r\nexport enum ProposalStatusEnum {\r\n\tSENT = 'SENT',\r\n\tACCEPTED = 'ACCEPTED'\r\n}\r\nexport interface IProposalViewModel\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\ttags?: ITag[];\r\n\tvalueDate: Date;\r\n\tid: string;\r\n\temployeeId?: string;\r\n\temployee?: IEmployee;\r\n\tjobPostUrl?: string;\r\n\tjobPostLink?: string;\r\n\tjobPostContent?: string;\r\n\tproposalContent?: string;\r\n\tstatus?: string;\r\n\tauthor?: string;\r\n\torganizationContact?: IOrganizationContact;\r\n}\r\n","import { IBasePerTenantAndOrganizationEntityModel } from './base-entity.model';\r\nimport { IEmployee } from './employee.model';\r\n\r\nexport interface IRecurringExpenseModel\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tstartDay: number;\r\n\tstartMonth: number;\r\n\tstartYear: number;\r\n\tstartDate: Date;\r\n\tendDay?: number;\r\n\tendMonth?: number;\r\n\tendYear?: number;\r\n\tendDate?: Date;\r\n\tcategoryName: string;\r\n\tvalue: number;\r\n\tcurrency: string;\r\n\tparentRecurringExpenseId?: string;\r\n\temployeeId?: string;\r\n\temployee?: IEmployee;\r\n}\r\n\r\nexport interface IRecurringExpenseByMonthFindInput {\r\n\temployeeId?: string;\r\n\torganizationId?: string;\r\n\tmonth?: number;\r\n\tyear?: number;\r\n}\r\n\r\n/**\r\n * categoryName, value and currency are the new values.\r\n * startDay, startMonth, startYear represent the date when this was edited.\r\n */\r\nexport interface IRecurringExpenseEditInput {\r\n\tstartDay: number;\r\n\tstartMonth: number;\r\n\tstartYear: number;\r\n\tcategoryName: string;\r\n\tvalue: number;\r\n\tcurrency: string;\r\n\tstartDateUpdateType?: string;\r\n}\r\n\r\nexport interface IRecurringExpenseDeleteInput {\r\n\tdeletionType: RecurringExpenseDeletionEnum;\r\n\tmonth: number;\r\n\tyear: number;\r\n}\r\n\r\nexport interface IRecurringExpenseOrderFields {\r\n\tstartDate?: 'ASC' | 'DESC';\r\n}\r\n\r\nexport interface IFindStartDateUpdateTypeInput {\r\n\tnewStartDate: Date;\r\n\trecurringExpenseId: string;\r\n}\r\n\r\nexport interface IStartUpdateTypeInfo {\r\n\tvalue: StartDateUpdateTypeEnum;\r\n\tconflicts: IRecurringExpenseModel[];\r\n}\r\n\r\nexport enum RecurringExpenseDeletionEnum {\r\n\tCURRENT = 'current',\r\n\tFUTURE = 'future',\r\n\tALL = 'all'\r\n}\r\n\r\nexport enum RecurringExpenseDefaultCategoriesEnum {\r\n\tSALARY = 'SALARY',\r\n\tSALARY_TAXES = 'SALARY_TAXES',\r\n\tRENT = 'RENT',\r\n\tEXTRA_BONUS = 'EXTRA_BONUS'\r\n}\r\n\r\nexport enum StartDateUpdateTypeEnum {\r\n\tREDUCE_SAFE = 'REDUCE_SAFE',\r\n\tREDUCE_CONFLICT = 'REDUCE_CONFLICT',\r\n\tINCREASE_SAFE_WITHIN_LIMIT = 'INCREASE_SAFE_WITHIN_LIMIT',\r\n\tINCREASE_SAFE_OUTSIDE_LIMIT = 'INCREASE_SAFE_OUTSIDE_LIMIT',\r\n\tINCREASE_CONFLICT = 'INCREASE_CONFLICT',\r\n\tWITHIN_MONTH = 'WITHIN_MONTH',\r\n\tNO_CHANGE = 'NO_CHANGE'\r\n}\r\n","import { IBasePerTenantAndOrganizationEntityModel } from './base-entity.model';\r\nimport { IRequestApprovalEmployee } from './request-approval-employee.model';\r\nimport { IEmployee } from './employee.model';\r\nimport { IOrganizationTeam } from './organization-team-model';\r\nimport { IRequestApprovalTeam } from './request-approval-team.model';\r\nimport { IApprovalPolicy } from './approval-policy.model';\r\nimport { ITag } from './tag-entity.model';\r\n\r\nexport interface IRequestApproval\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\temployeeApprovals?: IRequestApprovalEmployee[];\r\n\tteamApprovals?: IRequestApprovalTeam[];\r\n\temployees?: IEmployee[];\r\n\tteams?: IOrganizationTeam[];\r\n\tname?: string;\r\n\tmin_count?: number;\r\n\tstatus?: number;\r\n\tapprovalPolicyId?: string;\r\n\tapprovalPolicy?: IApprovalPolicy;\r\n\ttags?: ITag[];\r\n\tcreatedByName?: string;\r\n}\r\n\r\nexport interface IRequestApprovalCreateInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tid?: string;\r\n\temployeeApprovals?: IRequestApprovalEmployee[];\r\n\tteamApprovals?: IRequestApprovalTeam[];\r\n\tteams?: IOrganizationTeam[];\r\n\temployees?: IEmployee[];\r\n\tname?: string;\r\n\tmin_count?: number;\r\n\tstatus?: number;\r\n\tapprovalPolicyId?: string;\r\n\ttags?: ITag[];\r\n}\r\n\r\nexport enum RequestApprovalStatusTypesEnum {\r\n\tREQUESTED = 1,\r\n\tAPPROVED = 2,\r\n\tREFUSED = 3\r\n}\r\n\r\nexport const RequestApprovalStatus = {\r\n\tREQUESTED: 1,\r\n\tAPPROVED: 2,\r\n\tREFUSED: 3\r\n};\r\n\r\nexport interface IRequestApprovalFindInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tid?: string;\r\n}\r\n\r\nexport interface IApprovalsData {\r\n\ticon: string;\r\n\ttitle: string;\r\n}\r\n","import { IBasePerTenantEntityModel } from './base-entity.model';\r\nimport { IRole } from './role.model';\r\nimport { ITenant } from './tenant.model';\r\n\r\nexport interface IRolePermission extends IBasePerTenantEntityModel {\r\n\troleId: string;\r\n\tpermission: string;\r\n\trole: IRole;\r\n\tenabled: boolean;\r\n}\r\n\r\nexport interface IRolePermissionCreateInput {\r\n\troleId: string;\r\n\tpermission: string;\r\n\tenabled: boolean;\r\n\ttenant: ITenant;\r\n}\r\n\r\nexport interface IRolePermissionUpdateInput {\r\n\tenabled: boolean;\r\n}\r\n\r\nexport enum PermissionsEnum {\r\n\tADMIN_DASHBOARD_VIEW = 'ADMIN_DASHBOARD_VIEW',\r\n\tORG_PAYMENT_VIEW = 'ORG_PAYMENT_VIEW',\r\n\tORG_PAYMENT_ADD_EDIT = 'ORG_PAYMENT_ADD_EDIT',\r\n\tORG_INCOMES_VIEW = 'ORG_INCOMES_VIEW',\r\n\tORG_INCOMES_EDIT = 'ORG_INCOMES_EDIT',\r\n\tORG_EXPENSES_VIEW = 'ORG_EXPENSES_VIEW',\r\n\tORG_EXPENSES_EDIT = 'ORG_EXPENSES_EDIT',\r\n\tEMPLOYEE_EXPENSES_VIEW = 'EMPLOYEE_EXPENSES_VIEW',\r\n\tEMPLOYEE_EXPENSES_EDIT = 'EMPLOYEE_EXPENSES_EDIT',\r\n\tORG_PROPOSALS_VIEW = 'ORG_PROPOSALS_VIEW',\r\n\tORG_PROPOSALS_EDIT = 'ORG_PROPOSALS_EDIT',\r\n\tORG_PROPOSAL_TEMPLATES_VIEW = 'ORG_PROPOSAL_TEMPLATES_VIEW',\r\n\tORG_PROPOSAL_TEMPLATES_EDIT = 'ORG_PROPOSAL_TEMPLATES_EDIT',\r\n\tORG_TIME_OFF_VIEW = 'ORG_TIME_OFF_VIEW',\r\n\tORG_EMPLOYEES_VIEW = 'ORG_EMPLOYEES_VIEW',\r\n\tORG_EMPLOYEES_EDIT = 'ORG_EMPLOYEES_EDIT',\r\n\tORG_CANDIDATES_VIEW = 'ORG_CANDIDATES_VIEW',\r\n\tORG_CANDIDATES_EDIT = 'ORG_CANDIDATES_EDIT',\r\n\tORG_CANDIDATES_INTERVIEW_EDIT = 'ORG_CANDIDATES_INTERVIEW_EDIT',\r\n\tORG_CANDIDATES_DOCUMENTS_VIEW = 'ORG_CANDIDATES_DOCUMENTS_VIEW',\r\n\tORG_CANDIDATES_TASK_EDIT = 'ORG_CANDIDATES_TASK_EDIT',\r\n\tORG_CANDIDATES_FEEDBACK_EDIT = 'ORG_CANDIDATES_FEEDBACK_EDIT',\r\n\tORG_INVENTORY_PRODUCT_EDIT = 'ORG_INVENTORY_PRODUCT_EDIT',\r\n\tORG_TAGS_EDIT = 'ORG_TAGS_EDIT',\r\n\tORG_USERS_VIEW = 'ORG_USERS_VIEW',\r\n\tORG_USERS_EDIT = 'ORG_USERS_EDIT',\r\n\tORG_INVITE_VIEW = 'ORG_INVITE_VIEW',\r\n\tORG_INVITE_EDIT = 'ORG_INVITE_EDIT',\r\n\tALL_ORG_VIEW = 'ALL_ORG_VIEW',\r\n\tALL_ORG_EDIT = 'ALL_ORG_EDIT',\r\n\tPOLICY_VIEW = 'POLICY_VIEW',\r\n\tPOLICY_EDIT = 'POLICY_EDIT',\r\n\tTIME_OFF_EDIT = 'TIME_OFF_EDIT',\r\n\tREQUEST_APPROVAL_VIEW = 'REQUEST_APPROVAL_VIEW',\r\n\tREQUEST_APPROVAL_EDIT = 'REQUEST_APPROVAL_EDIT',\r\n\tAPPROVAL_POLICY_VIEW = 'APPROVALS_POLICY_VIEW',\r\n\tAPPROVAL_POLICY_EDIT = 'APPROVALS_POLICY_EDIT',\r\n\tCHANGE_SELECTED_EMPLOYEE = 'CHANGE_SELECTED_EMPLOYEE',\r\n\tCHANGE_SELECTED_CANDIDATE = 'CHANGE_SELECTED_CANDIDATE',\r\n\tCHANGE_SELECTED_ORGANIZATION = 'CHANGE_SELECTED_ORGANIZATION',\r\n\tCHANGE_ROLES_PERMISSIONS = 'CHANGE_ROLES_PERMISSIONS',\r\n\tACCESS_PRIVATE_PROJECTS = 'ACCESS_PRIVATE_PROJECTS',\r\n\tTIMESHEET_EDIT_TIME = 'TIMESHEET_EDIT_TIME',\r\n\tSUPER_ADMIN_EDIT = 'SUPER_ADMIN_EDIT',\r\n\tPUBLIC_PAGE_EDIT = 'PUBLIC_PAGE_EDIT',\r\n\tINVOICES_VIEW = 'INVOICES_VIEW',\r\n\tINVOICES_EDIT = 'INVOICES_EDIT',\r\n\tESTIMATES_VIEW = 'ESTIMATES_VIEW',\r\n\tESTIMATES_EDIT = 'ESTIMATES_EDIT',\r\n\tORG_CANDIDATES_INTERVIEWERS_EDIT = 'ORG_CANDIDATES_INTERVIEWERS_EDIT',\r\n\tPROPOSALS_EDIT = 'PROPOSALS_EDIT',\r\n\tVIEW_ALL_EMAILS = 'VIEW_ALL_EMAILS',\r\n\tVIEW_ALL_EMAIL_TEMPLATES = 'VIEW_ALL_EMAIL_TEMPLATES',\r\n\tORG_HELP_CENTER_EDIT = 'ORG_HELP_CENTER_EDIT',\r\n\tVIEW_SALES_PIPELINES = 'VIEW_SALES_PIPELINES',\r\n\tEDIT_SALES_PIPELINES = 'EDIT_SALES_PIPELINES',\r\n\tCAN_APPROVE_TIMESHEET = 'CAN_APPROVE_TIMESHEET',\r\n\tORG_SPRINT_VIEW = 'ORG_SPRINT_VIEW',\r\n\tORG_SPRINT_EDIT = 'ORG_SPRINT_EDIT',\r\n\tORG_PROJECT_EDIT = 'ORG_PROJECT_EDIT',\r\n\tORG_CONTACT_EDIT = 'ORG_CONTACT_EDIT',\r\n\tORG_CONTACT_VIEW = 'ORG_CONTACT_VIEW',\r\n\tORG_TEAM_EDIT = 'ORG_TEAM_EDIT',\r\n\tORG_CONTRACT_EDIT = 'ORG_CONTRACT_EDIT',\r\n\tEVENT_TYPES_VIEW = 'EVENT_TYPES_VIEW',\r\n\tTIME_TRACKER = 'TIME_TRACKER',\r\n\tTENANT_ADD_EXISTING_USER = 'TENANT_ADD_EXISTING_USER',\r\n\tINTEGRATION_VIEW = 'INTEGRATION_VIEW',\r\n\tFILE_STORAGE_VIEW = 'FILE_STORAGE_VIEW',\r\n\tPAYMENT_GATEWAY_VIEW = 'PAYMENT_GATEWAY_VIEW',\r\n\tSMS_GATEWAY_VIEW = 'SMS_GATEWAY_VIEW',\r\n\tCUSTOM_SMTP_VIEW = 'CUSTOM_SMTP_VIEW',\r\n\tIMPORT_EXPORT_VIEW = 'IMPORT_EXPORT_VIEW',\r\n\tORG_JOB_EMPLOYEE_VIEW = 'ORG_JOB_EMPLOYEE_VIEW',\r\n\tORG_JOB_MATCHING_VIEW = 'ORG_JOB_MATCHING_VIEW'\r\n}\r\n\r\nexport const PermissionGroups = {\r\n\t//Permissions which can be given to any role\r\n\tGENERAL: [\r\n\t\tPermissionsEnum.ADMIN_DASHBOARD_VIEW,\r\n\t\tPermissionsEnum.ORG_PAYMENT_VIEW,\r\n\t\tPermissionsEnum.ORG_PAYMENT_ADD_EDIT,\r\n\t\tPermissionsEnum.ORG_EXPENSES_VIEW,\r\n\t\tPermissionsEnum.ORG_EXPENSES_EDIT,\r\n\t\tPermissionsEnum.EMPLOYEE_EXPENSES_VIEW,\r\n\t\tPermissionsEnum.EMPLOYEE_EXPENSES_EDIT,\r\n\t\tPermissionsEnum.ORG_INCOMES_EDIT,\r\n\t\tPermissionsEnum.ORG_INCOMES_VIEW,\r\n\t\tPermissionsEnum.ORG_PROPOSALS_EDIT,\r\n\t\tPermissionsEnum.ORG_PROPOSALS_VIEW,\r\n\t\tPermissionsEnum.ORG_PROPOSAL_TEMPLATES_VIEW,\r\n\t\tPermissionsEnum.ORG_PROPOSAL_TEMPLATES_EDIT,\r\n\t\tPermissionsEnum.ORG_TIME_OFF_VIEW,\r\n\t\tPermissionsEnum.ORG_INVITE_VIEW,\r\n\t\tPermissionsEnum.ORG_INVITE_EDIT,\r\n\t\tPermissionsEnum.POLICY_VIEW,\r\n\t\tPermissionsEnum.POLICY_EDIT,\r\n\t\tPermissionsEnum.TIME_OFF_EDIT,\r\n\t\tPermissionsEnum.APPROVAL_POLICY_EDIT,\r\n\t\tPermissionsEnum.APPROVAL_POLICY_VIEW,\r\n\t\tPermissionsEnum.REQUEST_APPROVAL_EDIT,\r\n\t\tPermissionsEnum.REQUEST_APPROVAL_VIEW,\r\n\t\tPermissionsEnum.ACCESS_PRIVATE_PROJECTS,\r\n\t\tPermissionsEnum.TIMESHEET_EDIT_TIME,\r\n\t\tPermissionsEnum.INVOICES_VIEW,\r\n\t\tPermissionsEnum.INVOICES_EDIT,\r\n\t\tPermissionsEnum.ESTIMATES_VIEW,\r\n\t\tPermissionsEnum.ESTIMATES_EDIT,\r\n\t\tPermissionsEnum.ORG_CANDIDATES_DOCUMENTS_VIEW,\r\n\t\tPermissionsEnum.ORG_CANDIDATES_TASK_EDIT,\r\n\t\tPermissionsEnum.ORG_CANDIDATES_INTERVIEW_EDIT,\r\n\t\tPermissionsEnum.ORG_CANDIDATES_INTERVIEWERS_EDIT,\r\n\t\tPermissionsEnum.ORG_CANDIDATES_FEEDBACK_EDIT,\r\n\t\tPermissionsEnum.ORG_INVENTORY_PRODUCT_EDIT,\r\n\t\tPermissionsEnum.ORG_TAGS_EDIT,\r\n\t\tPermissionsEnum.VIEW_ALL_EMAILS,\r\n\t\tPermissionsEnum.VIEW_ALL_EMAIL_TEMPLATES,\r\n\t\tPermissionsEnum.ORG_HELP_CENTER_EDIT,\r\n\t\tPermissionsEnum.VIEW_SALES_PIPELINES,\r\n\t\tPermissionsEnum.EDIT_SALES_PIPELINES,\r\n\t\tPermissionsEnum.CAN_APPROVE_TIMESHEET,\r\n\t\tPermissionsEnum.ORG_SPRINT_EDIT,\r\n\t\tPermissionsEnum.ORG_SPRINT_VIEW,\r\n\t\tPermissionsEnum.ORG_PROJECT_EDIT,\r\n\t\tPermissionsEnum.ORG_CONTACT_EDIT,\r\n\t\tPermissionsEnum.ORG_CONTACT_VIEW,\r\n\t\tPermissionsEnum.ORG_TEAM_EDIT,\r\n\t\tPermissionsEnum.ORG_CONTRACT_EDIT,\r\n\t\tPermissionsEnum.EVENT_TYPES_VIEW\r\n\t],\r\n\r\n\t//Readonly permissions, are only enabled for admin role\r\n\tADMINISTRATION: [\r\n\t\tPermissionsEnum.ORG_EMPLOYEES_VIEW,\r\n\t\tPermissionsEnum.ORG_EMPLOYEES_EDIT,\r\n\t\tPermissionsEnum.ORG_CANDIDATES_VIEW,\r\n\t\tPermissionsEnum.ORG_CANDIDATES_EDIT,\r\n\t\tPermissionsEnum.ORG_USERS_VIEW,\r\n\t\tPermissionsEnum.ORG_USERS_EDIT,\r\n\t\tPermissionsEnum.ALL_ORG_VIEW,\r\n\t\tPermissionsEnum.ALL_ORG_EDIT,\r\n\t\tPermissionsEnum.CHANGE_SELECTED_EMPLOYEE,\r\n\t\tPermissionsEnum.CHANGE_SELECTED_CANDIDATE,\r\n\t\tPermissionsEnum.CHANGE_SELECTED_ORGANIZATION,\r\n\t\tPermissionsEnum.CHANGE_ROLES_PERMISSIONS,\r\n\t\tPermissionsEnum.SUPER_ADMIN_EDIT,\r\n\t\tPermissionsEnum.PUBLIC_PAGE_EDIT,\r\n\t\tPermissionsEnum.ORG_INVENTORY_PRODUCT_EDIT,\r\n\t\tPermissionsEnum.APPROVAL_POLICY_EDIT,\r\n\t\tPermissionsEnum.APPROVAL_POLICY_VIEW,\r\n\t\tPermissionsEnum.TIME_OFF_EDIT,\r\n\t\tPermissionsEnum.REQUEST_APPROVAL_EDIT,\r\n\t\tPermissionsEnum.REQUEST_APPROVAL_VIEW,\r\n\t\tPermissionsEnum.TENANT_ADD_EXISTING_USER,\r\n\t\tPermissionsEnum.INTEGRATION_VIEW,\r\n\t\tPermissionsEnum.FILE_STORAGE_VIEW,\r\n\t\tPermissionsEnum.PAYMENT_GATEWAY_VIEW,\r\n\t\tPermissionsEnum.SMS_GATEWAY_VIEW,\r\n\t\tPermissionsEnum.CUSTOM_SMTP_VIEW,\r\n\t\tPermissionsEnum.IMPORT_EXPORT_VIEW,\r\n\t\tPermissionsEnum.ORG_JOB_EMPLOYEE_VIEW,\r\n\t\tPermissionsEnum.ORG_JOB_MATCHING_VIEW\r\n\t]\r\n};\r\n","import { IBasePerTenantEntityModel } from './base-entity.model';\r\nimport { IRolePermission } from './role-permission.model';\r\n\r\nexport interface IRole extends IBasePerTenantEntityModel {\r\n\tname: string;\r\n\trolePermissions: IRolePermission[];\r\n}\r\n\r\nexport enum RolesEnum {\r\n\tSUPER_ADMIN = 'SUPER_ADMIN',\r\n\tADMIN = 'ADMIN',\r\n\tDATA_ENTRY = 'DATA_ENTRY',\r\n\tEMPLOYEE = 'EMPLOYEE',\r\n\tCANDIDATE = 'CANDIDATE',\r\n\tMANAGER = 'MANAGER',\r\n\tVIEWER = 'VIEWER'\r\n}\r\n","export enum SMSProviderEnum {\r\n\tTWILIO = 'Twilio'\r\n}\r\n","import { IBasePerTenantAndOrganizationEntityModel } from './base-entity.model';\r\nimport {\r\n\tIOrganizationProject,\r\n\tITag,\r\n\tIInvoiceItem,\r\n\tIOrganizationSprint\r\n} from '..';\r\nimport { IEmployee } from './employee.model';\r\nimport { IOrganizationTeam } from './organization-team-model';\r\n\r\nexport interface ITask extends IBasePerTenantAndOrganizationEntityModel {\r\n\ttitle: string;\r\n\tdescription?: string;\r\n\tstatus?: string;\r\n\tdueDate?: Date;\r\n\testimate?: number;\r\n\tproject?: IOrganizationProject;\r\n\tprojectId?: string;\r\n\ttags?: ITag[];\r\n\tmembers?: IEmployee[];\r\n\tinvoiceItems?: IInvoiceItem[];\r\n\tteams?: IOrganizationTeam[];\r\n\torganizationSprint?: IOrganizationSprint;\r\n\torganizationSprintId?: string;\r\n}\r\n\r\nexport interface IGetTaskOptions\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tprojectId?: string;\r\n}\r\nexport interface IGetTaskByEmployeeOptions {\r\n\trelations?: string[];\r\n\twhere?: IGetTaskOptions;\r\n}\r\n\r\nexport interface IGetSprintsOptions\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tprojectId?: string;\r\n}\r\n\r\nexport enum TaskStatusEnum {\r\n\tTODO = 'Todo',\r\n\tIN_PROGRESS = 'In Progress',\r\n\tFOR_TESTING = 'For Testing',\r\n\tCOMPLETED = 'Completed'\r\n}\r\n\r\nexport interface ITaskCreateInput extends ITask {\r\n\tcreatorId?: string;\r\n}\r\nexport interface ITaskUpdateInput extends ITaskCreateInput {\r\n\tid?: string;\r\n}\r\n\r\nexport interface ITaskResponse {\r\n\titems: ITask[];\r\n\tcount: number;\r\n}\r\n","import { IBasePerTenantAndOrganizationEntityModel } from './base-entity.model';\r\nimport { IEmployee } from './employee.model';\r\n\r\nexport interface ITimeOffPolicy\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\temployees?: IEmployee[];\r\n\t// teams?: OrganizationTeams[];\r\n\tname?: string;\r\n\trequiresApproval?: boolean;\r\n\tpaid?: boolean;\r\n}\r\n\r\nexport interface ITimeOffPolicyCreateInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\temployees?: IEmployee[];\r\n\t// teams?: OrganizationTeams[];\r\n\tname?: string;\r\n\trequiresApproval?: boolean;\r\n\tpaid?: boolean;\r\n}\r\n\r\nexport interface ITimeOffPolicyUpdateInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\temployees?: IEmployee[];\r\n\t// teams?: OrganizationTeams[];\r\n\tname?: string;\r\n\trequiresApproval?: boolean;\r\n\tpaid?: boolean;\r\n}\r\n\r\nexport interface ITimeOffPolicyFindInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\temployees?: IEmployee[];\r\n\t// teams?: OrganizationTeams[];\r\n\tname?: string;\r\n\trequiresApproval?: boolean;\r\n\tpaid?: boolean;\r\n}\r\n\r\nexport interface ITimeOff extends IBasePerTenantAndOrganizationEntityModel {\r\n\temployees?: IEmployee[];\r\n\tdescription?: string;\r\n\tpolicy?: ITimeOffPolicy;\r\n\tstart?: Date;\r\n\tend?: Date;\r\n\trequestDate?: Date;\r\n\tstatus?: string;\r\n\tisHoliday?: boolean;\r\n\tdocumentUrl?: string;\r\n\tfullName?: string;\r\n\timageUrl?: string;\r\n}\r\n\r\nexport interface ITimeOffFindInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\temployeeId?: string;\r\n}\r\n\r\nexport interface ITimeOffUpdateInput {\r\n\tstatus?: string;\r\n}\r\n\r\nexport interface ITimeOffCreateInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\temployees?: IEmployee[];\r\n\tdescription?: string;\r\n\tpolicy?: ITimeOffPolicy;\r\n\tstart?: Date;\r\n\tend?: Date;\r\n\trequestDate?: Date;\r\n\tstatus?: string;\r\n\tisHoliday?: boolean;\r\n\tdocumentUrl?: string;\r\n}\r\n\r\nexport enum StatusTypesEnum {\r\n\tREQUESTED = 'Requested',\r\n\tAPPROVED = 'Approved',\r\n\tDENIED = 'Denied',\r\n\tALL = 'All'\r\n}\r\n\r\nexport enum StatusTypesMapRequestApprovalEnum {\r\n\tRequested = 1,\r\n\tApproved = 2,\r\n\tDenied = 3\r\n}\r\nexport interface ITimeOffPolicyVM {\r\n\tid: string;\r\n\tname: string;\r\n\trequiresApproval: boolean;\r\n\tpaid: boolean;\r\n\temployees: IEmployee[];\r\n}\r\n","import { IBasePerTenantAndOrganizationEntityModel } from './base-entity.model';\r\nimport {\r\n\tIOrganizationContact,\r\n\tOrganizationContactBudgetTypeEnum\r\n} from './organization-contact.model';\r\nimport {\r\n\tIOrganizationProject,\r\n\tOrganizationProjectBudgetTypeEnum\r\n} from './organization-projects.model';\r\nimport { IEmployee, IEmployeeFindInput } from './employee.model';\r\nimport { ITask } from './task-entity.model';\r\nimport { ITag } from './tag-entity.model';\r\nimport { IPaginationInput } from './core.model';\r\n\r\nexport interface ITimesheet extends IBasePerTenantAndOrganizationEntityModel {\r\n\temployee: IEmployee;\r\n\tapprovedBy?: IEmployee;\r\n\ttimeLogs?: ITimeLog[];\r\n\tduration?: number;\r\n\tkeyboard?: number;\r\n\tmouse?: number;\r\n\toverall?: number;\r\n\tstartedAt?: Date;\r\n\tstoppedAt?: Date;\r\n\tapprovedAt?: Date;\r\n\tsubmittedAt?: Date;\r\n\tlockedAt?: Date;\r\n\tisBilled?: boolean;\r\n\tstatus: string;\r\n}\r\n\r\nexport interface ITimesheetCreateInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\temployeeId: string;\r\n\tapprovedById?: string;\r\n\tduration: number;\r\n\tkeyboard: number;\r\n\tmouse: number;\r\n\toverall?: number;\r\n\tstartedAt: Date;\r\n\tstoppedAt?: Date;\r\n\tapprovedAt?: Date;\r\n\tsubmittedAt?: Date;\r\n\tlockedAt?: Date;\r\n\tisBilled?: boolean;\r\n\tstatus?: string;\r\n}\r\n\r\nexport interface ITimeSheetFindInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\temployeeId: string;\r\n\tapprovedById?: string;\r\n\temployee: IEmployeeFindInput;\r\n\tisBilled?: boolean;\r\n\tstatus?: string;\r\n\tstartedAt: Date;\r\n\tstoppedAt?: Date;\r\n\tapprovedAt?: Date;\r\n\tsubmittedAt?: Date;\r\n}\r\n\r\nexport enum TimesheetStatus {\r\n\tDRAFT = 'DRAFT',\r\n\tPENDING = 'PENDING',\r\n\tIN_REVIEW = 'IN_REVIEW',\r\n\tDENIED = 'DENIED',\r\n\tAPPROVED = 'APPROVED'\r\n}\r\n\r\nexport interface IUpdateTimesheetStatusInput {\r\n\tids: string | string[];\r\n\tstatus?: TimesheetStatus;\r\n}\r\n\r\nexport interface ISubmitTimesheetInput {\r\n\tids: string | string[];\r\n\tstatus: 'submit' | 'unsubmit';\r\n}\r\n\r\nexport interface IGetTimesheetInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tstartDate?: string;\r\n\tendDate?: string;\r\n\tprojectIds?: string[];\r\n\tclientId?: string[];\r\n\temployeeIds?: string[];\r\n}\r\n\r\nexport interface IDateRange {\r\n\tstart: Date;\r\n\tend: Date;\r\n}\r\nexport interface ITimeLog extends IBasePerTenantAndOrganizationEntityModel {\r\n\t[x: string]: any;\r\n\temployee: IEmployee;\r\n\ttimesheet?: ITimesheet;\r\n\ttask?: ITask;\r\n\ttimeSlots?: ITimeSlot[];\r\n\tproject?: IOrganizationProject;\r\n\torganizationContact?: IOrganizationContact;\r\n\tsource?: string;\r\n\tstartedAt?: Date;\r\n\tstoppedAt?: Date;\r\n\tlogType: string;\r\n\tdescription?: string;\r\n\treason?: string;\r\n\tduration: number;\r\n\tisBillable: boolean;\r\n\temployeeId: string;\r\n\tprojectId?: string;\r\n\torganizationContactId?: string;\r\n\ttaskId?: string;\r\n\ttags?: string[];\r\n}\r\n\r\nexport interface ITimeLogCreateInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\temployeeId: string;\r\n\ttimesheetId?: string;\r\n\ttaskId?: string;\r\n\tprojectId: string;\r\n\tstartedAt?: Date;\r\n\tstoppedAt?: Date;\r\n\tlogType: TimeLogType;\r\n\tdescription?: string;\r\n\tduration: number;\r\n\tisBillable?: boolean;\r\n\tisBilled?: boolean;\r\n}\r\n\r\nexport interface ITimeSlotCreateInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\temployeeId: string;\r\n\tduration: number;\r\n\tkeyboard: number;\r\n\tmouse: number;\r\n\toverall: number;\r\n\tstartedAt: Date;\r\n\ttime_slot: Date;\r\n}\r\n\r\nexport enum TimeLogType {\r\n\tTRACKED = 'TRACKED',\r\n\tMANUAL = 'MANUAL',\r\n\tIDEAL = 'IDEAL',\r\n\tRESUMED = 'RESUMED'\r\n}\r\n\r\nexport enum TimeLogSourceEnum {\r\n\tMOBILE = 'MOBILE',\r\n\tWEB_TIMER = 'WEB_TIMER',\r\n\tDESKTOP = 'DESKTOP',\r\n\tBROWSER = 'BROWSER',\r\n\tHUBSTAFF = 'HUBSTAFF',\r\n\tUPWORK = 'UPWORK'\r\n}\r\n\r\nexport interface ITimeLogFilters\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tdate?: Date | string;\r\n\tstartDate?: Date | string;\r\n\tendDate?: Date | string;\r\n\tprojectIds?: string[];\r\n\temployeeIds?: string[];\r\n\tlogType?: TimeLogType[];\r\n\tsource?: TimeLogSourceEnum[];\r\n\tactivityLevel?: {\r\n\t\tstart: number;\r\n\t\tend: number;\r\n\t};\r\n}\r\n\r\nexport interface ITimeSlot extends IBasePerTenantAndOrganizationEntityModel {\r\n\t[x: string]: any;\r\n\temployeeId: string;\r\n\temployee?: IEmployee;\r\n\tactivities?: IActivity[];\r\n\tscreenshots?: IScreenshot[];\r\n\ttimeLogs?: ITimeLog[];\r\n\ttimeSlotMinutes?: ITimeSlotMinute[];\r\n\tproject?: IOrganizationProject;\r\n\tprojectId?: string;\r\n\tduration?: number;\r\n\tkeyboard?: number;\r\n\tmouse?: number;\r\n\toverall?: number;\r\n\tstartedAt: Date;\r\n\tstoppedAt?: Date;\r\n\ttags?: ITag[];\r\n}\r\n\r\nexport interface ITimeSlotTimeLogs\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\ttimeLogs: ITimeLog[];\r\n\ttimeSlots: ITimeSlot[];\r\n\ttimeLogId: string;\r\n\ttimeSlotId: string;\r\n}\r\n\r\nexport interface ITimeSlotMinute\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\ttimeSlot?: ITimeSlot;\r\n\ttimeSlotId?: string;\r\n\tkeyboard?: number;\r\n\tmouse?: number;\r\n\tdatetime?: Date;\r\n}\r\n\r\nexport interface IActivity extends IBasePerTenantAndOrganizationEntityModel {\r\n\ttitle: string;\r\n\tdescription?: string;\r\n\temployee?: IEmployee;\r\n\temployeeId?: string;\r\n\ttimeSlot?: ITimeSlot;\r\n\ttimeSlotId?: string;\r\n\tproject?: IOrganizationProject;\r\n\tprojectId?: string;\r\n\ttask?: ITask;\r\n\ttaskId?: string;\r\n\tmetaData?: string | IURLMetaData;\r\n\tdate: string;\r\n\ttime: string;\r\n\tduration?: number;\r\n\ttype?: string;\r\n\tsource?: string;\r\n\tid?: string;\r\n}\r\n\r\nexport interface IDailyActivity {\r\n\t[x: string]: any;\r\n\tsessions?: number;\r\n\tduration?: number;\r\n\temployeeId?: string;\r\n\tdate?: string;\r\n\ttitle?: string;\r\n\tdescription?: string;\r\n\tdurationPercentage?: number;\r\n\tchildItems?: IDailyActivity[];\r\n}\r\n\r\nexport interface ICreateActivityInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\temployeeId?: string;\r\n\tprojectId?: string;\r\n\tduration?: number;\r\n\tkeyboard?: number;\r\n\tmouse?: number;\r\n\toverall?: number;\r\n\tstartedAt?: Date;\r\n\tstoppedAt?: Date;\r\n\ttimeSlotId?: string;\r\n\ttype: string;\r\n\ttitle: string;\r\n\tdata?: string;\r\n}\r\n\r\nexport enum ActivityType {\r\n\tURL = 'URL',\r\n\tAPP = 'APP'\r\n}\r\n\r\nexport interface IURLMetaData {\r\n\ttitle?: string;\r\n\tdescription?: string;\r\n\timage?: string;\r\n}\r\n\r\nexport interface ICreateScreenshotInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tactivityTimestamp: string;\r\n\temployeeId?: string;\r\n\tfile: string;\r\n\tthumb?: string;\r\n\trecordedAt: Date | string;\r\n}\r\n\r\nexport interface IScreenshot extends IBasePerTenantAndOrganizationEntityModel {\r\n\t[x: string]: any;\r\n\ttimeSlot?: ITimeSlot;\r\n\ttimeSlotId?: string;\r\n\tfile: string;\r\n\tthumb?: string;\r\n\tfileUrl?: string;\r\n\tthumbUrl?: string;\r\n\trecordedAt?: Date;\r\n}\r\n\r\nexport interface IScreenshotMap {\r\n\tstartTime: string;\r\n\tendTime: string;\r\n\ttimeSlots: ITimeSlot[];\r\n}\r\n\r\nexport interface ITimerStatusInput {\r\n\tsource?: TimeLogSourceEnum;\r\n}\r\nexport interface ITimerStatus {\r\n\tduration: number;\r\n\trunning: boolean;\r\n\tlastLog?: ITimeLog;\r\n}\r\nexport interface TimerState {\r\n\tshowTimerWindow: boolean;\r\n\tduration: number;\r\n\tcurrent_session_duration: number;\r\n\trunning: boolean;\r\n\ttimerConfig: ITimerToggleInput;\r\n}\r\n\r\nexport interface ITimerToggleInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tprojectId?: string;\r\n\ttaskId?: string;\r\n\torganizationContactId?: string;\r\n\tdescription?: string;\r\n\tlogType?: TimeLogType;\r\n\tsource?: TimeLogSourceEnum;\r\n\ttags?: string[];\r\n\tisBillable?: boolean;\r\n\tmanualTimeSlot?: boolean;\r\n}\r\n\r\nexport interface IManualTimeInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tid?: string;\r\n\temployeeId?: string;\r\n\tprojectId?: string;\r\n\ttaskId?: string;\r\n\torganizationContactId?: string;\r\n\tlogType?: TimeLogType;\r\n\tdescription?: string;\r\n\treason?: string;\r\n\tstartedAt?: Date;\r\n\tstoppedAt?: Date;\r\n\ttags?: string[];\r\n\tisBillable?: boolean;\r\n}\r\n\r\nexport interface IGetTimeLogInput extends ITimeLogFilters {\r\n\ttimesheetId?: string;\r\n}\r\n\r\nexport interface IGetTimeLogReportInput extends IGetTimeLogInput {\r\n\tgroupBy?: 'date' | 'employee' | 'project' | 'client';\r\n\trelations?: string[];\r\n}\r\n\r\nexport interface IGetTimeLogConflictInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\tignoreId?: string | string[];\r\n\tstartDate: string | Date;\r\n\tendDate: string | Date;\r\n\temployeeId: string;\r\n\trelations?: string[];\r\n}\r\n\r\nexport interface IGetTimeSlotInput extends ITimeLogFilters {\r\n\trelations?: string[];\r\n}\r\n\r\nexport interface IGetActivitiesInput extends ITimeLogFilters, IPaginationInput {\r\n\trelations?: string[];\r\n\ttypes?: string[];\r\n\ttitles?: string[];\r\n\tgroupBy?: string;\r\n}\r\n\r\nexport interface IBulkActivitiesInput\r\n\textends IBasePerTenantAndOrganizationEntityModel {\r\n\temployeeId: string;\r\n\tprojectId?: string;\r\n\tactivities: IActivity[];\r\n}\r\n\r\nexport interface IReportDayGroupByDate {\r\n\tdate: string;\r\n\tlogs: {\r\n\t\tproject: IOrganizationProject;\r\n\t\temployeeLogs: {\r\n\t\t\ttask: ITask;\r\n\t\t\temployee: IEmployee;\r\n\t\t\tsum: number;\r\n\t\t\tactivity: number;\r\n\t\t}[];\r\n\t}[];\r\n}\r\n\r\nexport interface IAmountOwedReport {\r\n\tdate: string;\r\n\temployees: {\r\n\t\temployee: IEmployee;\r\n\t\tduration: number;\r\n\t\tamount: number;\r\n\t}[];\r\n}\r\n\r\nexport interface IReportDayGroupByDate {\r\n\tdate: string;\r\n\tlogs: {\r\n\t\tproject: IOrganizationProject;\r\n\t\temployeeLogs: {\r\n\t\t\ttask: ITask;\r\n\t\t\temployee: IEmployee;\r\n\t\t\tsum: number;\r\n\t\t\tactivity: number;\r\n\t\t}[];\r\n\t}[];\r\n}\r\n\r\nexport interface IReportDayGroupByEmployee {\r\n\temployee: IEmployee;\r\n\tlogs: {\r\n\t\tdate: string;\r\n\t\temployeeLogs: {\r\n\t\t\tsum: number;\r\n\t\t\tactivity: number;\r\n\t\t\tproject: IOrganizationProject;\r\n\t\t\ttask: ITask;\r\n\t\t}[];\r\n\t}[];\r\n}\r\n\r\nexport interface IReportDayGroupByProject {\r\n\tproject: IOrganizationProject;\r\n\tlogs: {\r\n\t\tdate: string;\r\n\t\temployeeLogs: {\r\n\t\t\ttask: ITask;\r\n\t\t\temployee: IEmployee;\r\n\t\t\tsum: number;\r\n\t\t\tactivity: number;\r\n\t\t}[];\r\n\t}[];\r\n}\r\n\r\nexport interface IReportDayGroupByClient {\r\n\tclient: IOrganizationContact;\r\n\tlogs: {\r\n\t\tproject: IOrganizationProject;\r\n\t\tlogs: {\r\n\t\t\tdate: string;\r\n\t\t\temployeeLogs: {\r\n\t\t\t\ttask: ITask;\r\n\t\t\t\temployee: IEmployee;\r\n\t\t\t\tsum: number;\r\n\t\t\t\tactivity: number;\r\n\t\t\t}[];\r\n\t\t}[];\r\n\t};\r\n}\r\n\r\nexport type IReportDayData =\r\n\t| IReportDayGroupByDate\r\n\t| IReportDayGroupByEmployee\r\n\t| IReportDayGroupByProject\r\n\t| IReportDayGroupByClient;\r\n\r\nexport interface IGetTimeLimitReportInput {\r\n\torganizationId?: string;\r\n\tstartDate?: string | Date;\r\n\tendDate?: string | Date;\r\n\temployeeId?: string;\r\n\trelations?: string[];\r\n\tduration?: 'day' | 'week' | 'month';\r\n}\r\n\r\nexport interface ITimeLimitReport {\r\n\tdate: string;\r\n\temployeeLogs: {\r\n\t\temployee: IEmployee;\r\n\t\tduration: number;\r\n\t\tdurationPercentage: number;\r\n\t\tlimit: number;\r\n\t}[];\r\n}\r\n\r\nexport interface IProjectBudgetLimitReportInput {\r\n\torganizationId?: string;\r\n\tstartDate?: string | Date;\r\n\tendDate?: string | Date;\r\n\temployeeId?: string;\r\n}\r\n\r\nexport interface IProjectBudgetLimitReport {\r\n\tproject?: IOrganizationProject;\r\n\tbudgetType?: OrganizationProjectBudgetTypeEnum;\r\n\tbudget?: number;\r\n\tspent?: number;\r\n\tspentPercentage?: number;\r\n\treamingBudget?: number;\r\n}\r\n\r\nexport interface IClientBudgetLimitReportInput {\r\n\torganizationId?: string;\r\n\tstartDate?: string | Date;\r\n\tendDate?: string | Date;\r\n\temployeeId?: string;\r\n}\r\n\r\nexport interface IClientBudgetLimitReport {\r\n\torganizationContact?: IOrganizationContact;\r\n\tbudgetType?: OrganizationContactBudgetTypeEnum;\r\n\tbudget?: number;\r\n\tspent?: number;\r\n\tspentPercentage?: number;\r\n\treamingBudget?: number;\r\n}\r\n","export interface IAccessTokenDto {\r\n\trequestToken: string;\r\n\trequestTokenSecret?: string;\r\n\tverifier: string;\r\n}\r\n\r\nexport interface IAccessToken {\r\n\tintegrationId: string;\r\n\taccessToken: string;\r\n\taccessTokenSecret: string;\r\n}\r\n\r\nexport interface IAccessTokenSecretPair {\r\n\tintegrationId?: string;\r\n\torganizationId?: string;\r\n\turl: string;\r\n\trequestToken: string;\r\n\trequestTokenSecret?: string;\r\n\taccessTokenSecret?: string;\r\n\taccessToken?: string;\r\n}\r\n\r\nexport interface IGetWorkDiaryDto {\r\n\tconfig: IUpworkApiConfig;\r\n\tcontractId: string;\r\n\tforDate: Date;\r\n}\r\n\r\nexport interface IGetContractsDto {\r\n\tconfig: IUpworkApiConfig;\r\n}\r\n\r\nexport interface IEngagement {\r\n\tengagement_start_date: string;\r\n\tjob_ref_ciphertext: string;\r\n\tstatus: string;\r\n\tprovider__reference: string;\r\n\tengagement_job_type: string;\r\n\toffer_id: string;\r\n\tjob__title: string;\r\n\tcj_job_application_uid: string;\r\n\tprovider_team__id: string;\r\n\tfixed_charge_amount_agreed: string;\r\n\tjob_application_ref: string;\r\n\tdev_recno_ciphertext: string;\r\n\treference: string; // USED AS CONTRACT ID TO GET WORKDAYS\r\n\tactive_milestone: string;\r\n\tengagement_end_ts: string;\r\n\tprovider__id: string;\r\n\tcreated_time: string;\r\n\tengagement_end_date: string;\r\n\tprovider_team__reference: string;\r\n\tengagement_start_ts: string;\r\n\tbuyer_team__reference: string;\r\n\tfixed_price_upfront_payment: string;\r\n\thourly_charge_rate: string;\r\n}\r\n\r\nexport interface IUpworkApiConfig extends IUpworkClientSecretPair {\r\n\taccessToken: string;\r\n\taccessSecret: string;\r\n}\r\n\r\nexport interface IUpworkClientSecretPair {\r\n\tconsumerKey: string;\r\n\tconsumerSecret: string;\r\n}\r\n\r\nexport interface IUpworkDateRange {\r\n\tstart: Date;\r\n\tend: Date;\r\n}\r\n\r\nexport enum IUpworkOfferStatusEnum {\r\n\tACCEPTED = 'accepted',\r\n\tNEW = 'new',\r\n\tDECLINED = 'declined',\r\n\tEXPIRED = 'expired',\r\n\tWITHDRAWN = 'withdrawn',\r\n\tCANCELLED = 'cancelled',\r\n\tCHANGED = 'changed'\r\n}\r\n\r\nexport enum IUpworkProposalStatusEnum {\r\n\tACTIVE = 'active',\r\n\tSUBMITTED = 'submitted',\r\n\tARCHIVED = 'archived'\r\n}\r\n","// Modified code from https://github.com/xmlking/ngx-starter-kit.\r\n// MIT License, see https://github.com/xmlking/ngx-starter-kit/blob/develop/LICENSE\r\n// Copyright (c) 2018 Sumanth Chinthagunta\r\n\r\nimport { IRole } from './role.model';\r\nimport { IBasePerTenantEntityModel } from './base-entity.model';\r\nimport { ITag } from './tag-entity.model';\r\nimport { IEmployee } from './employee.model';\r\nimport { IPayment } from './payment.model';\r\n\r\nexport interface IUser extends IBasePerTenantEntityModel {\r\n\tthirdPartyId?: string;\r\n\tname?: string;\r\n\tfirstName?: string;\r\n\tlastName?: string;\r\n\temail?: string;\r\n\tusername?: string;\r\n\trole?: IRole;\r\n\troleId?: string;\r\n\thash?: string;\r\n\timageUrl?: string;\r\n\temployee?: IEmployee;\r\n\temployeeId?: string;\r\n\ttags?: ITag[];\r\n\tpreferredLanguage?: string;\r\n\tpayments?: IPayment[];\r\n\tpaymentsId?: string;\r\n\tpreferredComponentLayout?: string;\r\n\tfullName?: string;\r\n}\r\n\r\nexport interface IUserFindInput {\r\n\tthirdPartyId?: string;\r\n\tfirstName?: string;\r\n\tlastName?: string;\r\n\temail?: string;\r\n\tusername?: string;\r\n\trole?: IRole;\r\n\troleId?: string;\r\n\thash?: string;\r\n\timageUrl?: string;\r\n\ttags?: ITag[];\r\n\tpreferredLanguage?: LanguagesEnum;\r\n}\r\n\r\nexport interface IUserRegistrationInput {\r\n\tuser: IUser;\r\n\tpassword?: string;\r\n\toriginalUrl?: string;\r\n\torganizationId?: string;\r\n\tcreatedById?: string;\r\n}\r\n\r\nexport interface IAuthLoginInput {\r\n\tfindObj: {\r\n\t\temail: string;\r\n\t};\r\n\tpassword: string;\r\n}\r\nexport interface IAuthResponse {\r\n\tuser: IUser;\r\n\ttoken: string;\r\n}\r\nexport interface IUserCreateInput {\r\n\tfirstName?: string;\r\n\tlastName?: string;\r\n\temail?: string;\r\n\tusername?: string;\r\n\trole?: IRole;\r\n\troleId?: string;\r\n\thash?: string;\r\n\timageUrl?: string;\r\n\ttags?: ITag[];\r\n\tpreferredLanguage?: LanguagesEnum;\r\n\tpreferredComponentLayout?: ComponentLayoutStyleEnum;\r\n}\r\n\r\nexport interface IUserUpdateInput {\r\n\tfirstName?: string;\r\n\tlastName?: string;\r\n\temail?: string;\r\n\tusername?: string;\r\n\trole?: IRole;\r\n\troleId?: string;\r\n\thash?: string;\r\n\timageUrl?: string;\r\n\ttags?: ITag[];\r\n\tpreferredLanguage?: LanguagesEnum;\r\n\tpreferredComponentLayout?: ComponentLayoutStyleEnum;\r\n}\r\n\r\nexport enum LanguagesEnum {\r\n\tENGLISH = 'en',\r\n\tBULGARIAN = 'bg',\r\n\tHEBREW = 'he',\r\n\tRUSSIAN = 'ru'\r\n}\r\n\r\nexport enum ComponentLayoutStyleEnum {\r\n\tCARDS_GRID = 'CARDS_GRID',\r\n\tTABLE = 'TABLE',\r\n\tSPRINT_VIEW = 'SPRINT_VIEW'\r\n}\r\n\r\nexport enum ProviderEnum {\r\n\tGOOGLE = 'google',\r\n\tFACEBOOK = 'facebook'\r\n}\r\nexport interface IUserViewModel extends IBasePerTenantEntityModel {\r\n\tfullName: string;\r\n\temail: string;\r\n\tbonus?: number;\r\n\tendWork?: any;\r\n\tid: string;\r\n\troleName?: string;\r\n\trole?: string;\r\n\ttags?: ITag[];\r\n}\r\n","export * from './lib/utils';\r\n","import * as moment from 'moment';\r\nimport * as timezone from 'moment-timezone';\r\nimport { HttpParams } from '@angular/common/http';\r\n\r\nexport function toUTC(data: string | Date | moment.Moment): moment.Moment {\r\n\treturn moment(data).utc();\r\n}\r\n\r\nexport function toLocal(data: string | Date | moment.Moment): moment.Moment {\r\n\treturn moment.utc(data).local();\r\n}\r\n\r\n// convert local time to another timezone\r\nexport function convertLocalToTimezone(\r\n\tlocalDt: string | Date,\r\n\tlocalDtFormat: string,\r\n\ttimeZone: string,\r\n\tformat = 'YYYY-MM-DD hh:mm:ss'\r\n) {\r\n\treturn timezone(localDt, localDtFormat).tz(timeZone).format(format);\r\n}\r\n\r\nexport function getContrastColor(hex: string) {\r\n\tconst threshold = 130;\r\n\tconst hexToRGB = (h) => {\r\n\t\tconst hexValue = h.charAt(0) === '#' ? h.substring(1, 7) : h;\r\n\t\treturn {\r\n\t\t\tred: parseInt(hexValue.substring(0, 2), 16),\r\n\t\t\tblue: parseInt(hexValue.substring(2, 4), 16),\r\n\t\t\tgreen: parseInt(hexValue.substring(4, 6), 16)\r\n\t\t};\r\n\t};\r\n\tconst { red, green, blue } = hexToRGB(hex);\r\n\tconst cBrightness = (red * 299 + green * 587 + blue * 114) / 1000;\r\n\r\n\treturn cBrightness > threshold ? '#000000' : '#ffffff';\r\n}\r\n\r\n// It will use when file uploading from angular, just pass object of with file it will convert it to from data\r\nexport function toFormData(obj: any, form?: any, namespace?: any) {\r\n\tconst fd = form || new FormData();\r\n\tlet formKey;\r\n\tfor (const property in obj) {\r\n\t\tif (obj.hasOwnProperty(property) && obj[property]) {\r\n\t\t\tif (namespace) {\r\n\t\t\t\tformKey = namespace + '[' + property + ']';\r\n\t\t\t} else {\r\n\t\t\t\tformKey = property;\r\n\t\t\t}\r\n\r\n\t\t\t// if the property is an object, but not a File, use recursivity.\r\n\t\t\tif (obj[property] instanceof Date) {\r\n\t\t\t\tfd.append(formKey, obj[property].toISOString());\r\n\t\t\t} else if (\r\n\t\t\t\ttypeof obj[property] === 'object' &&\r\n\t\t\t\t!(obj[property] instanceof File)\r\n\t\t\t) {\r\n\t\t\t\ttoFormData(obj[property], fd, formKey);\r\n\t\t\t} else {\r\n\t\t\t\t// if it's a string or a File object\r\n\t\t\t\tfd.append(formKey, obj[property]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn fd;\r\n}\r\n\r\nexport function progressStatus(value) {\r\n\tif (value >= 75) {\r\n\t\treturn 'success';\r\n\t} else if (value >= 50) {\r\n\t\treturn 'warning';\r\n\t} else if (value >= 25) {\r\n\t\treturn 'info';\r\n\t} else {\r\n\t\treturn 'danger';\r\n\t}\r\n}\r\n\r\n// It will use for pass nested object or array in query params in get method.\r\nexport function toParams(query) {\r\n\tlet params: HttpParams = new HttpParams();\r\n\tObject.keys(query).forEach((key) => {\r\n\t\tif (isJsObject(query[key])) {\r\n\t\t\tparams = toSubParams(params, key, query[key]);\r\n\t\t} else {\r\n\t\t\tparams = params.append(key.toString(), query[key]);\r\n\t\t}\r\n\t});\r\n\treturn params;\r\n}\r\n\r\nfunction toSubParams(params: HttpParams, key: string, object: any) {\r\n\tObject.keys(object).forEach((childKey) => {\r\n\t\tif (isJsObject(object[childKey])) {\r\n\t\t\tparams = toSubParams(\r\n\t\t\t\tparams,\r\n\t\t\t\t`${key}[${childKey}]`,\r\n\t\t\t\tobject[childKey]\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tparams = params.append(`${key}[${childKey}]`, object[childKey]);\r\n\t\t}\r\n\t});\r\n\r\n\treturn params;\r\n}\r\n\r\nexport function isJsObject(object: any) {\r\n\treturn (\r\n\t\tobject !== null && object !== undefined && typeof object === 'object'\r\n\t);\r\n}\r\n\r\nexport function isEmpty(value: any) {\r\n\tif (value instanceof Array) {\r\n\t\tvalue = value.filter((val) => !isEmpty(val));\r\n\t\treturn value.length === 0;\r\n\t} else if (value && typeof value === 'object') {\r\n\t\treturn Object.keys(value).length === 0;\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t!value ||\r\n\t\t\t(value + '').toLocaleLowerCase() === 'null' ||\r\n\t\t\t(value + '').toLocaleLowerCase() === 'undefined'\r\n\t\t);\r\n\t}\r\n}\r\n\r\n/*\r\n * Get average value column in array object\r\n */\r\nexport function average(items: any, column: string) {\r\n\tlet sum = 0;\r\n\tif (items.length > 0) {\r\n\t\titems.forEach((item) => {\r\n\t\t\tsum += parseFloat(item[column]);\r\n\t\t});\r\n\t}\r\n\treturn sum / items.length;\r\n}\r\n\r\n/**\r\n * The precision for a decimal (exact numeric applies only for decimal column), which is the maximum\r\n * number of digits that are stored.\r\n */\r\nexport function convertPrecisionFloatDigit(val: number, digit: number = 6) {\r\n\treturn parseFloat(parseFloat(val.toString()).toFixed(digit));\r\n}\r\n\r\n/*\r\n * Retrieve name from email address\r\n */\r\nexport function retrieveNameFromEmail(email: string): string {\r\n\treturn ucFirst(email.substring(0, email.lastIndexOf('@')), true);\r\n}\r\n\r\n/*\r\n * Capitalize the first letter of a string being\r\n */\r\nexport function ucFirst(str: string, force: boolean): string {\r\n\tstr = force ? str.toLowerCase() : str;\r\n\treturn str.replace(/(\\b)([a-zA-Z])/, function (firstLetter: string) {\r\n\t\treturn firstLetter.toUpperCase();\r\n\t});\r\n}\r\n","import { Controller } from '@nestjs/common';\r\nimport { AppService } from './app.service';\r\n\r\n@Controller()\r\nexport class AppController {\r\n\tconstructor(private readonly appService: AppService) {}\r\n}\r\n","import { CandidateInterviewersModule } from './candidate-interviewers/candidate-interviewers.module';\r\nimport { CandidateSkillModule } from './candidate-skill/candidate-skill.module';\r\nimport { InvoiceModule } from './invoice/invoice.module';\r\nimport { InvoiceItemModule } from './invoice-item/invoice-item.module';\r\nimport { TagModule } from './tags/tag.module';\r\nimport { SkillModule } from './skills/skill.module';\r\nimport { LanguageModule } from './language/language.module';\r\nimport { Module } from '@nestjs/common';\r\nimport { RouterModule } from 'nest-router';\r\nimport { AppController } from './app.controller';\r\nimport { AppService } from './app.service';\r\nimport { UserModule } from './user/user.module';\r\nimport { HomeModule } from './home/home.module';\r\nimport { EmployeeModule } from './employee/employee.module';\r\nimport { RoleModule } from './role/role.module';\r\nimport { OrganizationModule } from './organization/organization.module';\r\nimport { IncomeModule } from './income/income.module';\r\nimport { ExpenseModule } from './expense/expense.module';\r\nimport { EmployeeSettingModule } from './employee-setting';\r\nimport { EmployeeJobPostModule } from './employee-job';\r\nimport { EmployeeAppointmentModule } from './employee-appointment';\r\nimport { CoreModule } from './core';\r\nimport { AuthModule } from './auth/auth.module';\r\nimport { SeedDataService } from './core/seeds/seed-data.service';\r\nimport { UserOrganizationModule } from './user-organization/user-organization.module';\r\nimport { EmployeeStatisticsModule } from './employee-statistics/employee-statistics.module';\r\nimport { OrganizationDepartmentModule } from './organization-department/organization-department.module';\r\nimport { OrganizationRecurringExpenseModule } from './organization-recurring-expense/organization-recurring-expense.module';\r\nimport { EmployeeRecurringExpenseModule } from './employee-recurring-expense/employee-recurring-expense.module';\r\nimport { OrganizationContactModule } from './organization-contact/organization-contact.module';\r\nimport { OrganizationPositionsModule } from './organization-positions/organization-positions.module';\r\nimport { OrganizationProjectsModule } from './organization-projects/organization-projects.module';\r\nimport { OrganizationVendorsModule } from './organization-vendors/organization-vendors.module';\r\nimport { OrganizationTeamModule } from './organization-team/organization-team.module';\r\nimport { OrganizationTeamEmployeeModule } from './organization-team-employee/organization-team-employee.module';\r\nimport { OrganizationAwardsModule } from './organization-awards/organization-awards.module';\r\nimport { OrganizationLanguagesModule } from './organization-languages/organization-languages.module';\r\nimport { OrganizationDocumentsModule } from './organization-documents/organization-documents.module';\r\nimport { ProposalModule } from './proposal/proposal.module';\r\nimport { CountryModule } from './country';\r\nimport { CurrencyModule } from './currency';\r\nimport { InviteModule } from './invite/invite.module';\r\nimport { EmailModule } from './email/email.module';\r\nimport { TimeOffPolicyModule } from './time-off-policy/time-off-policy.module';\r\nimport { RolePermissionsModule } from './role-permissions/role-permissions.module';\r\nimport { TenantModule } from './tenant/tenant.module';\r\nimport { EmailTemplateModule } from './email-template/email-template.module';\r\nimport { EquipmentModule } from './equipment/equipment.module';\r\nimport { EmployeeLevelModule } from './organization_employee-level/organization-employee-level.module';\r\nimport { ExportAllModule } from './export_import/export-all.module';\r\nimport { ImportAllModule } from './export_import/import/import-all.module';\r\nimport * as Sentry from '@sentry/node';\r\nimport * as Tracing from '@sentry/tracing';\r\nimport { SentryModule } from '@ntegral/nestjs-sentry';\r\nimport { environment } from '@env-api/environment';\r\nimport { LogLevel } from '@sentry/types';\r\nimport { TaskModule } from './tasks/task.module';\r\nimport { EquipmentSharingModule } from './equipment-sharing/equipment-sharing.module';\r\nimport { OrganizationEmploymentTypeModule } from './organization-employment-type/organization-employment-type.module';\r\nimport { TimesheetModule } from './timesheet/timesheet.module';\r\nimport { ExpenseCategoriesModule } from './expense-categories/expense-categories.module';\r\nimport { UpworkModule } from './upwork/upwork.module';\r\nimport { HubstaffModule } from './hubstaff/hubstaff.module';\r\nimport { CandidateModule } from './candidate/candidate.module';\r\nimport { ProductCategoriesModule } from './product-category/product-category.module';\r\nimport { ProductTypesModule } from './product-type/product-type.module';\r\nimport { ProductModule } from './product/product.module';\r\nimport { IntegrationSettingModule } from './integration-setting/integration-setting.module';\r\nimport { IntegrationMapModule } from './integration-map/integration-map.module';\r\nimport { ProductVariantPriceModule } from './product-variant-price/product-variant-price-module';\r\nimport { ProductVariantModule } from './product-variant/product-variant.module';\r\nimport { IntegrationEntitySettingModule } from './integration-entity-setting/integration-entity-setting.module';\r\nimport { IntegrationEntitySettingTiedEntityModule } from './integration-entity-setting-tied-entity/integration-entity-setting-tied-entity.module';\r\nimport { CandidateEducationModule } from './candidate-education/candidate-education.module';\r\nimport { CandidateSourceModule } from './candidate-source/candidate-source.module';\r\nimport { CandidateDocumentsModule } from './candidate-documents/candidate-documents.module';\r\nimport { CandidateExperienceModule } from './candidate-experience/candidate-experience.module';\r\nimport { CandidateFeedbacksModule } from './candidate-feedbacks/candidate-feedbacks.module';\r\nimport { ProductVariantSettingsModule } from './product-settings/product-settings.module';\r\nimport { IntegrationModule } from './integration/integration.module';\r\nimport { IntegrationTenantModule } from './integration-tenant/integration-tenant.module';\r\nimport { CandidateInterviewModule } from './candidate-interview/candidate-interview.module';\r\nimport { AppointmentEmployeesModule } from './appointment-employees/appointment-employees.module';\r\nimport { ApprovalPolicyModule } from './approval-policy/approval-policy.module';\r\nimport { RequestApprovalEmployeeModule } from './request-approval-employee/request-approval-employee.module';\r\nimport { RequestApprovalModule } from './request-approval/request-approval.module';\r\nimport * as path from 'path';\r\nimport { HeaderResolver, I18nJsonParser, I18nModule } from 'nestjs-i18n';\r\nimport { LanguagesEnum } from '@gauzy/models';\r\nimport { EventTypeModule } from './event-types/event-type.module';\r\nimport { AvailabilitySlotsModule } from './availability-slots/availability-slots.module';\r\nimport { HelpCenterModule } from './help-center/help-center.module';\r\nimport { PipelineModule } from './pipeline/pipeline.module';\r\nimport { PaymentModule } from './payment/payment.module';\r\nimport { CandidatePersonalQualitiesModule } from './candidate-personal-qualities/candidate-personal-qualities.module';\r\nimport { StageModule } from './pipeline-stage/pipeline-stage.module';\r\nimport { CandidateTechnologiesModule } from './candidate-technologies/candidate-technologies.module';\r\nimport { GoalModule } from './goal/goal.module';\r\nimport { KeyResultModule } from './keyresult/keyresult.module';\r\nimport { RequestApprovalTeamModule } from './request-approval-team/request-approval-team.module';\r\nimport { KeyResultUpdateModule } from './keyresult-update/keyresult-update.module';\r\nimport { CandidateCriterionsRatingModule } from './candidate-criterions-rating/candidate-criterion-rating.module';\r\nimport { HelpCenterArticleModule } from './help-center-article/help-center-article.module';\r\nimport { GoalTimeFrameModule } from './goal-time-frame/goal-time-frame.module';\r\nimport { EstimateEmail } from './estimate-email/estimate-email.entity';\r\nimport { EstimateEmailModule } from './estimate-email/estimate-email.module';\r\nimport { ServeStaticModule } from '@nestjs/serve-static';\r\nimport { TimeOffRequestModule } from './time-off-request/time-off-request.module';\r\nimport { DealModule } from './deal/deal.module';\r\nimport { HelpCenterAuthorModule } from './help-center-author/help-center-author.module';\r\nimport { OrganizationSprintModule } from './organization-sprint/organization-sprint.module';\r\nimport { GoalKpiModule } from './goal-kpi/goal-kpi.module';\r\nimport { MulterModule } from '@nestjs/platform-express';\r\nimport { GoalGeneralSettingModule } from './goal-general-setting/goal-general-setting.module';\r\nimport { EquipmentSharingPolicyModule } from './equipment-sharing-policy/equipment-sharing-policy.module';\r\nimport { GoalTemplateModule } from './goal-template/goal-template.module';\r\nimport { KeyresultTemplateModule } from './keyresult-template/keyresult-template.module';\r\nimport * as moment from 'moment';\r\nimport { EmployeeAwardModule } from './employee-award/employee-award.module';\r\nimport { InvoiceEstimateHistoryModule } from './invoice-estimate-history/invoice-estimate-history.module';\r\nimport { GoalKpiTemplateModule } from './goal-kpi-template/goal-kpi-template.module';\r\nimport { TenantSettingModule } from './tenant/tenant-setting/tenant-setting.module';\r\nimport { EmployeeJobPresetModule } from './employee-job-preset/employee-job-preset.module';\r\nimport { ReportModule } from './reports/report.module';\r\nimport { EmployeeProposalTemplateModule } from './employee-proposal-template/employee-proposal-template.module';\r\nimport { CustomSmtpModule } from './custom-smtp/custom-smtp.module';\r\nimport { FeatureModule } from './feature/feature.module';\r\nimport * as unleash from 'unleash-client';\r\n\r\nconst { unleashConfig } = environment;\r\n\r\nif (unleashConfig.url) {\r\n\tconst instance = unleash.initialize({\r\n\t\tappName: unleashConfig.appName,\r\n\t\turl: unleashConfig.url,\r\n\t\tinstanceId: unleashConfig.instanceId,\r\n\t\trefreshInterval: unleashConfig.refreshInterval,\r\n\t\tmetricsInterval: unleashConfig.metricsInterval\r\n\t});\r\n\r\n\t// metrics hooks\r\n\tinstance.on('registered', (client) => console.log('registered', client));\r\n}\r\n\r\nconst sentryIntegrations = [];\r\n\r\nsentryIntegrations.push(\r\n\t// enable HTTP calls tracing\r\n\tnew Sentry.Integrations.Http({ tracing: true })\r\n);\r\n\r\nif (process.env.DB_TYPE === 'postgres') {\r\n\tsentryIntegrations.push(new Tracing.Integrations.Postgres());\r\n}\r\n\r\n@Module({\r\n\timports: [\r\n\t\tServeStaticModule.forRoot({\r\n\t\t\trootPath: environment.isElectron\r\n\t\t\t\t? path.resolve(environment.gauzyUserPath, 'public')\r\n\t\t\t\t: path.resolve(process.cwd(), 'apps', 'api', 'public'),\r\n\t\t\tserveRoot: '/public/'\r\n\t\t}),\r\n\t\tMulterModule.register(),\r\n\t\tRouterModule.forRoutes([\r\n\t\t\t{\r\n\t\t\t\tpath: '',\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{ path: '/', module: HomeModule },\r\n\t\t\t\t\t{ path: '/auth', module: AuthModule },\r\n\t\t\t\t\t{ path: '/user', module: UserModule },\r\n\t\t\t\t\t{ path: '/employee', module: EmployeeModule },\r\n\t\t\t\t\t{ path: '/candidate', module: CandidateModule },\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/candidate-educations',\r\n\t\t\t\t\t\tmodule: CandidateEducationModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/candidate-documents',\r\n\t\t\t\t\t\tmodule: CandidateDocumentsModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/candidate-feedbacks',\r\n\t\t\t\t\t\tmodule: CandidateFeedbacksModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/candidate-interview',\r\n\t\t\t\t\t\tmodule: CandidateInterviewModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/candidate-interviewers',\r\n\t\t\t\t\t\tmodule: CandidateInterviewersModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/candidate-experience',\r\n\t\t\t\t\t\tmodule: CandidateExperienceModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/candidate-skills',\r\n\t\t\t\t\t\tmodule: CandidateSkillModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/candidate-source',\r\n\t\t\t\t\t\tmodule: CandidateSourceModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/candidate-personal-qualities',\r\n\t\t\t\t\t\tmodule: CandidatePersonalQualitiesModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/candidate-technologies',\r\n\t\t\t\t\t\tmodule: CandidateTechnologiesModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/candidate-criterions-rating',\r\n\t\t\t\t\t\tmodule: CandidateCriterionsRatingModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{ path: '/download', module: ExportAllModule },\r\n\t\t\t\t\t{ path: '/import', module: ImportAllModule },\r\n\t\t\t\t\t{ path: '/role', module: RoleModule },\r\n\t\t\t\t\t{ path: '/organization', module: OrganizationModule },\r\n\t\t\t\t\t{ path: '/income', module: IncomeModule },\r\n\t\t\t\t\t{ path: '/expense', module: ExpenseModule },\r\n\t\t\t\t\t{ path: '/help-center', module: HelpCenterModule },\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/help-center-article',\r\n\t\t\t\t\t\tmodule: HelpCenterArticleModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/help-center-author',\r\n\t\t\t\t\t\tmodule: HelpCenterAuthorModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{ path: '/equipment', module: EquipmentModule },\r\n\t\t\t\t\t{ path: '/employee-level', module: EmployeeLevelModule },\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/job-preset',\r\n\t\t\t\t\t\tmodule: EmployeeJobPresetModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/employee-job',\r\n\t\t\t\t\t\tmodule: EmployeeJobPostModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/employee-settings',\r\n\t\t\t\t\t\tmodule: EmployeeSettingModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/employee-statistics',\r\n\t\t\t\t\t\tmodule: EmployeeStatisticsModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/employee-appointment',\r\n\t\t\t\t\t\tmodule: EmployeeAppointmentModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/employee-award',\r\n\t\t\t\t\t\tmodule: EmployeeAwardModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/appointment-employees',\r\n\t\t\t\t\t\tmodule: AppointmentEmployeesModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/user-organization',\r\n\t\t\t\t\t\tmodule: UserOrganizationModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/organization-department',\r\n\t\t\t\t\t\tmodule: OrganizationDepartmentModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/organization-contact',\r\n\t\t\t\t\t\tmodule: OrganizationContactModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/organization-positions',\r\n\t\t\t\t\t\tmodule: OrganizationPositionsModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/organization-awards',\r\n\t\t\t\t\t\tmodule: OrganizationAwardsModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/organization-languages',\r\n\t\t\t\t\t\tmodule: OrganizationLanguagesModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/organization-projects',\r\n\t\t\t\t\t\tmodule: OrganizationProjectsModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/organization-vendors',\r\n\t\t\t\t\t\tmodule: OrganizationVendorsModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/organization-recurring-expense',\r\n\t\t\t\t\t\tmodule: OrganizationRecurringExpenseModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/organization-documents',\r\n\t\t\t\t\t\tmodule: OrganizationDocumentsModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/employee-recurring-expense',\r\n\t\t\t\t\t\tmodule: EmployeeRecurringExpenseModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/organization-team',\r\n\t\t\t\t\t\tmodule: OrganizationTeamModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/organization-sprint',\r\n\t\t\t\t\t\tmodule: OrganizationSprintModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/proposal',\r\n\t\t\t\t\t\tmodule: ProposalModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/country',\r\n\t\t\t\t\t\tmodule: CountryModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/currency',\r\n\t\t\t\t\t\tmodule: CurrencyModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/invite',\r\n\t\t\t\t\t\tmodule: InviteModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/email',\r\n\t\t\t\t\t\tmodule: EmailModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/email-template',\r\n\t\t\t\t\t\tmodule: EmailTemplateModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/estimate-email',\r\n\t\t\t\t\t\tmodule: EstimateEmailModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: 'time-off-request',\r\n\t\t\t\t\t\tmodule: TimeOffRequestModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: 'time-off-policy',\r\n\t\t\t\t\t\tmodule: TimeOffPolicyModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/approval-policy',\r\n\t\t\t\t\t\tmodule: ApprovalPolicyModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/request-approval',\r\n\t\t\t\t\t\tmodule: RequestApprovalModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: 'role-permissions',\r\n\t\t\t\t\t\tmodule: RolePermissionsModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/tenant-setting',\r\n\t\t\t\t\t\tmodule: TenantSettingModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/tenant',\r\n\t\t\t\t\t\tmodule: TenantModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/tags',\r\n\t\t\t\t\t\tmodule: TagModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/skills',\r\n\t\t\t\t\t\tmodule: SkillModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/languages',\r\n\t\t\t\t\t\tmodule: LanguageModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/tasks',\r\n\t\t\t\t\t\tmodule: TaskModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/equipment-sharing',\r\n\t\t\t\t\t\tmodule: EquipmentSharingModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/equipment-sharing-policy',\r\n\t\t\t\t\t\tmodule: EquipmentSharingPolicyModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/organization-employment-type',\r\n\t\t\t\t\t\tmodule: OrganizationEmploymentTypeModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/expense-categories',\r\n\t\t\t\t\t\tmodule: ExpenseCategoriesModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/timesheet',\r\n\t\t\t\t\t\tmodule: TimesheetModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/integrations/upwork',\r\n\t\t\t\t\t\tmodule: UpworkModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/integrations/hubstaff',\r\n\t\t\t\t\t\tmodule: HubstaffModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/integration-tenant',\r\n\t\t\t\t\t\tmodule: IntegrationTenantModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/integration-entity-setting',\r\n\t\t\t\t\t\tmodule: IntegrationEntitySettingModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/integration',\r\n\t\t\t\t\t\tmodule: IntegrationModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/invoices',\r\n\t\t\t\t\t\tmodule: InvoiceModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/invoice-item',\r\n\t\t\t\t\t\tmodule: InvoiceItemModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/products',\r\n\t\t\t\t\t\tmodule: ProductModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/product-categories',\r\n\t\t\t\t\t\tmodule: ProductCategoriesModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/product-types',\r\n\t\t\t\t\t\tmodule: ProductTypesModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/product-variant-prices',\r\n\t\t\t\t\t\tmodule: ProductVariantPriceModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/product-variants',\r\n\t\t\t\t\t\tmodule: ProductVariantModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/product-variant-settings',\r\n\t\t\t\t\t\tmodule: ProductVariantSettingsModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/event-type',\r\n\t\t\t\t\t\tmodule: EventTypeModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/availability-slots',\r\n\t\t\t\t\t\tmodule: AvailabilitySlotsModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/pipelines',\r\n\t\t\t\t\t\tmodule: PipelineModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/deals',\r\n\t\t\t\t\t\tmodule: DealModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/payments',\r\n\t\t\t\t\t\tmodule: PaymentModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/goals',\r\n\t\t\t\t\t\tmodule: GoalModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/goal-time-frame',\r\n\t\t\t\t\t\tmodule: GoalTimeFrameModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/goal-general-settings',\r\n\t\t\t\t\t\tmodule: GoalGeneralSettingModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/goal-kpi',\r\n\t\t\t\t\t\tmodule: GoalKpiModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/goal-kpi-template',\r\n\t\t\t\t\t\tmodule: GoalKpiTemplateModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/goal-templates',\r\n\t\t\t\t\t\tmodule: GoalTemplateModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/key-results',\r\n\t\t\t\t\t\tmodule: KeyResultModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/key-result-updates',\r\n\t\t\t\t\t\tmodule: KeyResultUpdateModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/key-result-templates',\r\n\t\t\t\t\t\tmodule: KeyresultTemplateModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/invoice-estimate-history',\r\n\t\t\t\t\t\tmodule: InvoiceEstimateHistoryModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/report',\r\n\t\t\t\t\t\tmodule: ReportModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/smtp',\r\n\t\t\t\t\t\tmodule: CustomSmtpModule\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/feature/toggle',\r\n\t\t\t\t\t\tmodule: FeatureModule\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t]),\r\n\t\tI18nModule.forRoot({\r\n\t\t\tfallbackLanguage: LanguagesEnum.ENGLISH,\r\n\t\t\tparser: I18nJsonParser,\r\n\t\t\tparserOptions: {\r\n\t\t\t\tpath: path.join(__dirname, '/assets/i18n/'),\r\n\t\t\t\twatch: !environment.production\r\n\t\t\t},\r\n\t\t\tresolvers: [new HeaderResolver(['language'])]\r\n\t\t}),\r\n\t\t...(environment.sentry\r\n\t\t\t? [\r\n\t\t\t\t\tSentryModule.forRoot({\r\n\t\t\t\t\t\tdsn: environment.sentry.dns,\r\n\t\t\t\t\t\tdebug: !environment.production,\r\n\t\t\t\t\t\tenvironment: environment.production\r\n\t\t\t\t\t\t\t? 'production'\r\n\t\t\t\t\t\t\t: 'development',\r\n\t\t\t\t\t\t// TODO: we should use some internal function which returns version of Gauzy\r\n\t\t\t\t\t\trelease: 'gauzy@' + process.env.npm_package_version,\r\n\t\t\t\t\t\tlogLevel: LogLevel.Error,\r\n\t\t\t\t\t\tintegrations: sentryIntegrations,\r\n\t\t\t\t\t\ttracesSampleRate: 1.0\r\n\t\t\t\t\t})\r\n\t\t\t  ]\r\n\t\t\t: []),\r\n\t\tCoreModule,\r\n\t\tAuthModule,\r\n\t\tUserModule,\r\n\t\tHomeModule,\r\n\t\tEmployeeModule,\r\n\t\tEmployeeRecurringExpenseModule,\r\n\t\tEmployeeAwardModule,\r\n\t\tCandidateModule,\r\n\t\tCandidateDocumentsModule,\r\n\t\tCandidateSourceModule,\r\n\t\tCandidateEducationModule,\r\n\t\tCandidateExperienceModule,\r\n\t\tCandidateSkillModule,\r\n\t\tCandidateFeedbacksModule,\r\n\t\tCandidateInterviewModule,\r\n\t\tCandidateInterviewersModule,\r\n\t\tCandidatePersonalQualitiesModule,\r\n\t\tCandidateTechnologiesModule,\r\n\t\tCandidateCriterionsRatingModule,\r\n\t\tCustomSmtpModule,\r\n\t\tExportAllModule,\r\n\t\tImportAllModule,\r\n\t\tEmployeeSettingModule,\r\n\t\tEmployeeJobPresetModule,\r\n\t\tEmployeeJobPostModule,\r\n\t\tEmployeeProposalTemplateModule,\r\n\t\tEmployeeStatisticsModule,\r\n\t\tEmployeeAppointmentModule,\r\n\t\tAppointmentEmployeesModule,\r\n\t\tRoleModule,\r\n\t\tOrganizationModule,\r\n\t\tIncomeModule,\r\n\t\tExpenseModule,\r\n\t\tUserOrganizationModule,\r\n\t\tOrganizationDepartmentModule,\r\n\t\tOrganizationRecurringExpenseModule,\r\n\t\tOrganizationContactModule,\r\n\t\tOrganizationPositionsModule,\r\n\t\tOrganizationProjectsModule,\r\n\t\tOrganizationVendorsModule,\r\n\t\tOrganizationAwardsModule,\r\n\t\tOrganizationLanguagesModule,\r\n\t\tOrganizationSprintModule,\r\n\t\tOrganizationTeamModule,\r\n\t\tOrganizationTeamEmployeeModule,\r\n\t\tOrganizationDocumentsModule,\r\n\t\tRequestApprovalEmployeeModule,\r\n\t\tRequestApprovalTeamModule,\r\n\t\tProposalModule,\r\n\t\tEmailModule,\r\n\t\tEmailTemplateModule,\r\n\t\tCountryModule,\r\n\t\tCurrencyModule,\r\n\t\tInviteModule,\r\n\t\tTimeOffPolicyModule,\r\n\t\tTimeOffRequestModule,\r\n\t\tApprovalPolicyModule,\r\n\t\tEquipmentSharingPolicyModule,\r\n\t\tRequestApprovalModule,\r\n\t\tRolePermissionsModule,\r\n\t\tHelpCenterArticleModule,\r\n\t\tTenantModule,\r\n\t\tTenantSettingModule,\r\n\t\tTagModule,\r\n\t\tSkillModule,\r\n\t\tLanguageModule,\r\n\t\tInvoiceModule,\r\n\t\tInvoiceItemModule,\r\n\t\tPaymentModule,\r\n\t\tEstimateEmail,\r\n\t\tGoalModule,\r\n\t\tGoalTimeFrameModule,\r\n\t\tGoalGeneralSettingModule,\r\n\t\tKeyResultModule,\r\n\t\tKeyResultUpdateModule,\r\n\t\tEmployeeLevelModule,\r\n\t\tEventTypeModule,\r\n\t\tAvailabilitySlotsModule,\r\n\t\tPipelineModule,\r\n\t\tStageModule,\r\n\t\tDealModule,\r\n\t\tInvoiceEstimateHistoryModule,\r\n\t\tHelpCenterModule,\r\n\t\tHelpCenterAuthorModule,\r\n\t\tEquipmentModule,\r\n\t\tEquipmentSharingModule,\r\n\t\tTaskModule,\r\n\t\tOrganizationEmploymentTypeModule,\r\n\t\tTimesheetModule,\r\n\t\tFeatureModule,\r\n\t\tReportModule,\r\n\t\tUpworkModule,\r\n\t\tHubstaffModule,\r\n\t\tExpenseCategoriesModule,\r\n\t\tProductCategoriesModule,\r\n\t\tProductTypesModule,\r\n\t\tProductModule,\r\n\t\tIntegrationModule,\r\n\t\tIntegrationSettingModule,\r\n\t\tIntegrationTenantModule,\r\n\t\tIntegrationMapModule,\r\n\t\tProductVariantPriceModule,\r\n\t\tProductVariantModule,\r\n\t\tProductVariantSettingsModule,\r\n\t\tIntegrationEntitySettingModule,\r\n\t\tIntegrationEntitySettingTiedEntityModule,\r\n\t\tGoalKpiModule,\r\n\t\tGoalTemplateModule,\r\n\t\tKeyresultTemplateModule,\r\n\t\tGoalKpiTemplateModule\r\n\t],\r\n\tcontrollers: [AppController],\r\n\tproviders: [AppService, SeedDataService],\r\n\texports: []\r\n})\r\nexport class AppModule {\r\n\tconstructor() {\r\n\t\t// Set Monday as start of the week\r\n\t\tmoment.locale('en', {\r\n\t\t\tweek: {\r\n\t\t\t\tdow: 1\r\n\t\t\t}\r\n\t\t});\r\n\t\tmoment.locale('en');\r\n\t}\r\n}\r\n","import { forwardRef, Inject, Injectable } from '@nestjs/common';\r\nimport { SeedDataService } from './core/seeds/seed-data.service';\r\nimport { UserService } from './user/user.service';\r\n\r\n@Injectable()\r\nexport class AppService {\r\n\t/**\r\n\t * Seed DB if no users exists (for simplicity and safety we only re-seed DB if no users found)\r\n\t * TODO: this should actually include more checks, e.g. if schema migrated and many other things\r\n\t */\r\n\tasync seedDBIfEmpty() {\r\n\t\tconst count = await this.userService.count();\r\n\t\tconsole.log(`Found ${count} users in DB`);\r\n\t\tif (count === 0) {\r\n\t\t\tawait this.seedDataService.runDefaultSeed();\r\n\t\t}\r\n\t}\r\n\r\n\tconstructor(\r\n\t\t@Inject(forwardRef(() => SeedDataService))\r\n\t\tprivate readonly seedDataService: SeedDataService,\r\n\r\n\t\t@Inject(forwardRef(() => UserService))\r\n\t\tprivate readonly userService: UserService\r\n\t) {}\r\n}\r\n","import { CrudController } from '../core';\r\nimport { AppointmentEmployee } from './appointment-employees.entity';\r\nimport { AppointmentEmployeesService } from './appointment-employees.service';\r\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport { Controller, UseGuards, HttpStatus, Get, Param } from '@nestjs/common';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { UUIDValidationPipe } from '../shared';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('AppointmentEmployee')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class AppointmentEmployeesController extends CrudController<\r\n\tAppointmentEmployee\r\n> {\r\n\tconstructor(\r\n\t\tprivate appointmentEmployeesService: AppointmentEmployeesService\r\n\t) {\r\n\t\tsuper(appointmentEmployeesService);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find appointment employees by appointment id.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found one record',\r\n\t\ttype: AppointmentEmployee\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@UseGuards(AuthGuard('jwt'))\r\n\t@Get(':appointmentid')\r\n\tasync findOneById(\r\n\t\t@Param('appointmentid', UUIDValidationPipe) appointmentid: string\r\n\t): Promise<AppointmentEmployee[]> {\r\n\t\treturn (\r\n\t\t\tawait this.appointmentEmployeesService.findAll({\r\n\t\t\t\twhere: {\r\n\t\t\t\t\tappointmentId: appointmentid\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t).items;\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find appointments based on employee id.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found records',\r\n\t\ttype: AppointmentEmployee\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Records not found'\r\n\t})\r\n\t@UseGuards(AuthGuard('jwt'))\r\n\t@Get('findEmployeeAppointments/:employeeId')\r\n\tasync findEmployeeAppointments(\r\n\t\t@Param('employeeId', UUIDValidationPipe) employeeId: string\r\n\t): Promise<AppointmentEmployee[]> {\r\n\t\treturn (\r\n\t\t\tawait this.appointmentEmployeesService.findAll({\r\n\t\t\t\twhere: {\r\n\t\t\t\t\temployeeId: employeeId\r\n\t\t\t\t},\r\n\t\t\t\trelations: ['employeeAppointment']\r\n\t\t\t})\r\n\t\t).items;\r\n\t}\r\n}\r\n","import { IAppointmentEmployee, IEmployeeAppointment } from '@gauzy/models';\r\nimport { Entity, Column, ManyToOne, JoinColumn } from 'typeorm';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsString, IsNotEmpty } from 'class-validator';\r\nimport { EmployeeAppointment } from '../employee-appointment';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('appointment_employee')\r\nexport class AppointmentEmployee extends TenantOrganizationBase\r\n\timplements IAppointmentEmployee {\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Column()\r\n\tpublic appointmentId!: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Column()\r\n\tpublic employeeId!: string;\r\n\r\n\t@ApiProperty({ type: EmployeeAppointment })\r\n\t@ManyToOne(\r\n\t\t(type) => EmployeeAppointment,\r\n\t\t(employeeAppointment) => employeeAppointment,\r\n\t\t{ onDelete: 'SET NULL' }\r\n\t)\r\n\t@JoinColumn()\r\n\temployeeAppointment: IEmployeeAppointment;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { AppointmentEmployee } from './appointment-employees.entity';\r\nimport { AppointmentEmployeesController } from './appointment-employees.controller';\r\nimport { AppointmentEmployeesService } from './appointment-employees.service';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [TypeOrmModule.forFeature([AppointmentEmployee]), TenantModule],\r\n\tcontrollers: [AppointmentEmployeesController],\r\n\tproviders: [AppointmentEmployeesService],\r\n\texports: [AppointmentEmployeesService]\r\n})\r\nexport class AppointmentEmployeesModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { IEmployee } from '@gauzy/models';\r\nimport { AppointmentEmployee } from './appointment-employees.entity';\r\nimport * as faker from 'faker';\r\n\r\nexport const createRandomAppointmentEmployees = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantEmployeeMap: Map<Tenant, IEmployee[]>\r\n): Promise<AppointmentEmployee[]> => {\r\n\tif (!tenantEmployeeMap) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: tenantEmployeeMap not found, Appointment Employees  will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst appointEmployees: AppointmentEmployee[] = [];\r\n\r\n\tfor (const tenant of tenants) {\r\n\t\tconst tenantEmployees = tenantEmployeeMap.get(tenant);\r\n\t\tfor (const tenantEmployee of tenantEmployees) {\r\n\t\t\tfor (let i = 0; i < faker.random.number(15); i++) {\r\n\t\t\t\tconst appointemployee = new AppointmentEmployee();\r\n\t\t\t\t//todo: need to verify appointmentId is used anywhere else or not\r\n\t\t\t\tappointemployee.appointmentId = faker.random\r\n\t\t\t\t\t.number({ min: 100000, max: 1000000 })\r\n\t\t\t\t\t.toString();\r\n\t\t\t\tappointemployee.employeeId = tenantEmployee.id;\r\n\t\t\t\tappointemployee.organization = tenantEmployee.organization;\r\n\t\t\t\tappointemployee.tenant = tenant;\r\n\r\n\t\t\t\tappointEmployees.push(appointemployee);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tawait connection.manager.save(appointEmployees);\r\n};\r\n","import { CrudService } from '../core';\r\nimport { AppointmentEmployee } from './appointment-employees.entity';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { Injectable } from '@nestjs/common';\r\n\r\n@Injectable()\r\nexport class AppointmentEmployeesService extends CrudService<\r\n\tAppointmentEmployee\r\n> {\r\n\tconstructor(\r\n\t\t@InjectRepository(AppointmentEmployee)\r\n\t\tprivate readonly appointmentEmployeesRepository: Repository<\r\n\t\t\tAppointmentEmployee\r\n\t\t>\r\n\t) {\r\n\t\tsuper(appointmentEmployeesRepository);\r\n\t}\r\n}\r\n","import { CrudController } from '../core';\r\nimport { ApprovalPolicy } from './approval-policy.entity';\r\nimport { ApprovalPolicyService } from './approval-policy.service';\r\nimport {\r\n\tPermissionsEnum,\r\n\tIApprovalPolicyCreateInput,\r\n\tIApprovalPolicyUpdateInput,\r\n\tIPagination,\r\n\tIApprovalPolicy,\r\n\tIListQueryInput,\r\n\tIRequestApprovalFindInput\r\n} from '@gauzy/models';\r\nimport {\r\n\tQuery,\r\n\tHttpStatus,\r\n\tUseGuards,\r\n\tGet,\r\n\tPost,\r\n\tBody,\r\n\tHttpCode,\r\n\tPut,\r\n\tParam,\r\n\tController\r\n} from '@nestjs/common';\r\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\r\nimport { PermissionGuard } from '../shared/guards/auth/permission.guard';\r\nimport { Permissions } from '../shared/decorators/permissions';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\nimport { ParseJsonPipe } from '../shared/pipes/parse-json.pipe';\r\nimport { CommandBus } from '@nestjs/cqrs';\r\nimport {\r\n\tApprovalPolicyCreateCommand,\r\n\tApprovalPolicyGetCommand,\r\n\tApprovalPolicyUpdateCommand,\r\n\tRequestApprovalPolicyGetCommand\r\n} from './commands';\r\nimport { UUIDValidationPipe } from '../shared';\r\n@ApiTags('ApprovalPolicy')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard, PermissionGuard)\r\n@Controller()\r\nexport class ApprovalPolicyController extends CrudController<ApprovalPolicy> {\r\n\tconstructor(\r\n\t\tprivate readonly approvalPolicyService: ApprovalPolicyService,\r\n\t\tprivate readonly commandBus: CommandBus\r\n\t) {\r\n\t\tsuper(approvalPolicyService);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find all approval policies.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found policies',\r\n\t\ttype: ApprovalPolicy\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Permissions(PermissionsEnum.APPROVAL_POLICY_VIEW)\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Get()\r\n\tfindAllApprovalPolicies(\r\n\t\t@Query('data', ParseJsonPipe)\r\n\t\tdata: IListQueryInput<IRequestApprovalFindInput>\r\n\t): Promise<IPagination<IApprovalPolicy>> {\r\n\t\treturn this.commandBus.execute(new ApprovalPolicyGetCommand(data));\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary:\r\n\t\t\t'Find all approval policies except time off and equipment sharing policy.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found policies',\r\n\t\ttype: ApprovalPolicy\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Permissions(PermissionsEnum.APPROVAL_POLICY_VIEW)\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Get('/request-approval')\r\n\tfindApprovalPoliciesForRequestApproval(\r\n\t\t@Query('data', ParseJsonPipe)\r\n\t\tdata: IListQueryInput<IRequestApprovalFindInput>\r\n\t): Promise<IPagination<IApprovalPolicy>> {\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew RequestApprovalPolicyGetCommand(data)\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Create new record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully created.' /*, type: T*/\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@Permissions(PermissionsEnum.APPROVAL_POLICY_EDIT)\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Post()\r\n\tasync createApprovalPolicy(\r\n\t\t@Body() entity: IApprovalPolicyCreateInput\r\n\t): Promise<ApprovalPolicy> {\r\n\t\treturn this.commandBus.execute(new ApprovalPolicyCreateCommand(entity));\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Update record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully edited.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Permissions(PermissionsEnum.APPROVAL_POLICY_EDIT)\r\n\t@Put(':id')\r\n\tasync updateApprovalPolicy(\r\n\t\t@Param('id', UUIDValidationPipe) id: string,\r\n\t\t@Body() entity: IApprovalPolicyUpdateInput\r\n\t): Promise<ApprovalPolicy> {\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew ApprovalPolicyUpdateCommand({ id, ...entity })\r\n\t\t);\r\n\t}\r\n}\r\n","/*\r\n  Approval Policy is predefined approval types for the organization.\r\nE.g. for example, \"Business Trip\", \"Borrow Items\", ...\r\n  Approval Policy table has the many to one relationship to the Organization table and Tenant by organizationId and tenantId\r\n*/\r\nimport { Entity, Index, Column } from 'typeorm';\r\nimport { IApprovalPolicy, ApprovalPolicyTypesStringEnum } from '@gauzy/models';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsString, IsNotEmpty, IsEnum } from 'class-validator';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('approval_policy')\r\nexport class ApprovalPolicy extends TenantOrganizationBase\r\n\timplements IApprovalPolicy {\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Index()\r\n\t@Column()\r\n\tname: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@Column({ nullable: true })\r\n\tdescription: string;\r\n\r\n\t@ApiProperty({ type: String, enum: ApprovalPolicyTypesStringEnum })\r\n\t@IsEnum(ApprovalPolicyTypesStringEnum)\r\n\t@Column({ nullable: true })\r\n\tapprovalType: string;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { ApprovalPolicy } from './approval-policy.entity';\r\nimport { ApprovalPolicyController } from './approval-policy.controller';\r\nimport { ApprovalPolicyService } from './approval-policy.service';\r\nimport { User } from '../user/user.entity';\r\nimport { UserService } from '../user/user.service';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\nimport { CommandHandlers } from './commands/handlers';\r\nimport { CqrsModule } from '@nestjs/cqrs';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([User, ApprovalPolicy]),\r\n\t\tTenantModule,\r\n\t\tCqrsModule\r\n\t],\r\n\tcontrollers: [ApprovalPolicyController],\r\n\tproviders: [ApprovalPolicyService, UserService, ...CommandHandlers],\r\n\texports: [TypeOrmModule, ApprovalPolicyService]\r\n})\r\nexport class ApprovalPolicyModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { IOrganization } from '@gauzy/models';\r\nimport { ApprovalPolicy } from './approval-policy.entity';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { DEFAULT_APPROVAL_POLICIES } from './default-approval-policies';\r\n\r\nexport const createDefaultApprovalPolicyForOrg = async (\r\n\tconnection: Connection,\r\n\tdefaultData: {\r\n\t\torgs: IOrganization[];\r\n\t}\r\n): Promise<void> => {\r\n\tconst promises = [];\r\n\r\n\tdefaultData.orgs.forEach((org) => {\r\n\t\tconst defaultApprovalPolicy = new ApprovalPolicy();\r\n\t\tdefaultApprovalPolicy.name = 'Default Approval Policy';\r\n\t\tdefaultApprovalPolicy.organization = org;\r\n\t\tdefaultApprovalPolicy.tenant = org.tenant;\r\n\t\tdefaultApprovalPolicy.description = 'Default approval policy';\r\n\t\tdefaultApprovalPolicy.approvalType = 'DEFAULT_APPROVAL_POLICY';\r\n\t\tpromises.push(insertDefaultPolicy(connection, defaultApprovalPolicy));\r\n\t});\r\n\r\n\tawait Promise.all(promises);\r\n};\r\n\r\nconst insertDefaultPolicy = async (\r\n\tconnection: Connection,\r\n\tdefaultPolicy: ApprovalPolicy\r\n): Promise<void> => {\r\n\tawait connection\r\n\t\t.createQueryBuilder()\r\n\t\t.insert()\r\n\t\t.into(ApprovalPolicy)\r\n\t\t.values(defaultPolicy)\r\n\t\t.execute();\r\n};\r\n\r\nexport const createRandomApprovalPolicyForOrg = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantOrganizationsMap: Map<Tenant, IOrganization[]>\r\n): Promise<ApprovalPolicy[]> => {\r\n\tconst policies: ApprovalPolicy[] = [];\r\n\tfor (const tenant of tenants) {\r\n\t\tconst orgs = tenantOrganizationsMap.get(tenant);\r\n\t\torgs.forEach((org) => {\r\n\t\t\tDEFAULT_APPROVAL_POLICIES.forEach((name) => {\r\n\t\t\t\tconst policy = new ApprovalPolicy();\r\n\t\t\t\tpolicy.description = name;\r\n\t\t\t\tpolicy.name = name;\r\n\t\t\t\tpolicy.tenant = tenant;\r\n\t\t\t\tpolicy.organizationId = org.id;\r\n\t\t\t\tpolicy.approvalType = name.replace(/\\s+/g, '_').toUpperCase();\r\n\t\t\t\tpolicies.push(policy);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\tawait connection\r\n\t\t.createQueryBuilder()\r\n\t\t.insert()\r\n\t\t.into(ApprovalPolicy)\r\n\t\t.values(policies)\r\n\t\t.execute();\r\n\r\n\treturn policies;\r\n};\r\n","import { TenantAwareCrudService, IPagination } from '../core';\r\nimport { ApprovalPolicy } from './approval-policy.entity';\r\nimport { Injectable, BadRequestException } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository, Not, In } from 'typeorm';\r\nimport {\r\n\tIApprovalPolicy,\r\n\tIApprovalPolicyCreateInput,\r\n\tApprovalPolicyTypesStringEnum,\r\n\tIListQueryInput,\r\n\tIRequestApprovalFindInput\r\n} from '@gauzy/models';\r\nimport { RequestContext } from '../core/context';\r\n\r\n@Injectable()\r\nexport class ApprovalPolicyService extends TenantAwareCrudService<\r\n\tApprovalPolicy\r\n> {\r\n\tconstructor(\r\n\t\t@InjectRepository(ApprovalPolicy)\r\n\t\tprivate readonly approvalPolicyRepository: Repository<ApprovalPolicy>\r\n\t) {\r\n\t\tsuper(approvalPolicyRepository);\r\n\t}\r\n\r\n\t/*\r\n\t * Get all approval policies\r\n\t */\r\n\tasync findAllApprovalPolicies({\r\n\t\tfindInput: where,\r\n\t\trelations\r\n\t}: IListQueryInput<IRequestApprovalFindInput>): Promise<\r\n\t\tIPagination<IApprovalPolicy>\r\n\t> {\r\n\t\tconst query = { where, relations };\r\n\t\treturn await super.findAll(query);\r\n\t}\r\n\r\n\t/*\r\n\t * Get all request approval policies\r\n\t */\r\n\tasync findApprovalPoliciesForRequestApproval({\r\n\t\tfindInput,\r\n\t\trelations\r\n\t}: IListQueryInput<IRequestApprovalFindInput>): Promise<\r\n\t\tIPagination<IApprovalPolicy>\r\n\t> {\r\n\t\tconst query = {\r\n\t\t\twhere: {\r\n\t\t\t\tapprovalType: Not(\r\n\t\t\t\t\tIn([\r\n\t\t\t\t\t\tApprovalPolicyTypesStringEnum.EQUIPMENT_SHARING,\r\n\t\t\t\t\t\tApprovalPolicyTypesStringEnum.TIME_OFF\r\n\t\t\t\t\t])\r\n\t\t\t\t),\r\n\t\t\t\t...findInput\r\n\t\t\t},\r\n\t\t\trelations\r\n\t\t};\r\n\t\treturn await super.findAll(query);\r\n\t}\r\n\r\n\t/*\r\n\t * Create approval policy\r\n\t */\r\n\tasync create(entity: IApprovalPolicyCreateInput): Promise<ApprovalPolicy> {\r\n\t\ttry {\r\n\t\t\tconst approvalPolicy = new ApprovalPolicy();\r\n\t\t\tapprovalPolicy.name = entity.name;\r\n\t\t\tapprovalPolicy.organizationId = entity.organizationId;\r\n\t\t\tapprovalPolicy.tenantId = RequestContext.currentTenantId();\r\n\t\t\tapprovalPolicy.description = entity.description;\r\n\t\t\tapprovalPolicy.approvalType = entity.name\r\n\t\t\t\t? entity.name.replace(/\\s+/g, '_').toUpperCase()\r\n\t\t\t\t: null;\r\n\t\t\treturn this.approvalPolicyRepository.save(approvalPolicy);\r\n\t\t} catch (error /*: WriteError*/) {\r\n\t\t\tthrow new BadRequestException(error);\r\n\t\t}\r\n\t}\r\n\r\n\t/*\r\n\t * Update approval policy\r\n\t */\r\n\tasync update(\r\n\t\tid: string,\r\n\t\tentity: IApprovalPolicyCreateInput\r\n\t): Promise<ApprovalPolicy> {\r\n\t\ttry {\r\n\t\t\tconst approvalPolicy = await this.approvalPolicyRepository.findOne(\r\n\t\t\t\tid\r\n\t\t\t);\r\n\t\t\tapprovalPolicy.name = entity.name;\r\n\t\t\tapprovalPolicy.organizationId = entity.organizationId;\r\n\t\t\tapprovalPolicy.tenantId = RequestContext.currentTenantId();\r\n\t\t\tapprovalPolicy.description = entity.description;\r\n\t\t\tapprovalPolicy.approvalType = entity.name\r\n\t\t\t\t? entity.name.replace(/\\s+/g, '_').toUpperCase()\r\n\t\t\t\t: null;\r\n\t\t\treturn this.approvalPolicyRepository.save(approvalPolicy);\r\n\t\t} catch (error /*: WriteError*/) {\r\n\t\t\tthrow new BadRequestException(error);\r\n\t\t}\r\n\t}\r\n}\r\n","import { IApprovalPolicyCreateInput } from '@gauzy/models';\r\nimport { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class ApprovalPolicyCreateCommand implements ICommand {\r\n\tstatic readonly type = '[ApprovalPolicy] Create';\r\n\r\n\tconstructor(public readonly input: IApprovalPolicyCreateInput) {}\r\n}\r\n","import { IListQueryInput, IRequestApprovalFindInput } from '@gauzy/models';\r\nimport { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class ApprovalPolicyGetCommand implements ICommand {\r\n\tstatic readonly type = '[ApprovalPolicy] Get';\r\n\r\n\tconstructor(\r\n\t\tpublic readonly input: IListQueryInput<IRequestApprovalFindInput>\r\n\t) {}\r\n}\r\n","import { IApprovalPolicyUpdateInput } from '@gauzy/models';\r\nimport { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class ApprovalPolicyUpdateCommand implements ICommand {\r\n\tstatic readonly type = '[ApprovalPolicy] Update';\r\n\r\n\tconstructor(public readonly input: IApprovalPolicyUpdateInput) {}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { ApprovalPolicyService } from '../../approval-policy.service';\r\nimport { ApprovalPolicyCreateCommand } from '../approval-policy.create.command';\r\n\r\n@CommandHandler(ApprovalPolicyCreateCommand)\r\nexport class ApprovalPolicyCreateHandler\r\n\timplements ICommandHandler<ApprovalPolicyCreateCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly approvalPolicyService: ApprovalPolicyService\r\n\t) {}\r\n\r\n\tpublic async execute(command: ApprovalPolicyCreateCommand): Promise<any> {\r\n\t\tconst { input } = command;\r\n\t\treturn this.approvalPolicyService.create(input);\r\n\t}\r\n}\r\n","import { IApprovalPolicy, IPagination } from '@gauzy/models';\r\nimport { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { ApprovalPolicyService } from '../../approval-policy.service';\r\nimport { ApprovalPolicyGetCommand } from '../approval-policy.get.command';\r\n\r\n@CommandHandler(ApprovalPolicyGetCommand)\r\nexport class ApprovalPolicyGetHandler\r\n\timplements ICommandHandler<ApprovalPolicyGetCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly approvalPolicyService: ApprovalPolicyService\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: ApprovalPolicyGetCommand\r\n\t): Promise<IPagination<IApprovalPolicy>> {\r\n\t\tconst { input } = command;\r\n\t\treturn this.approvalPolicyService.findAllApprovalPolicies(input);\r\n\t}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { ApprovalPolicyService } from '../../approval-policy.service';\r\nimport { ApprovalPolicyUpdateCommand } from '../approval-policy.update.command';\r\n\r\n@CommandHandler(ApprovalPolicyUpdateCommand)\r\nexport class ApprovalPolicyUpdateHandler\r\n\timplements ICommandHandler<ApprovalPolicyUpdateCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly approvalPolicyService: ApprovalPolicyService\r\n\t) {}\r\n\r\n\tpublic async execute(command: ApprovalPolicyUpdateCommand): Promise<any> {\r\n\t\tconst { input } = command;\r\n\t\tconst { id } = input;\r\n\t\treturn this.approvalPolicyService.update(id, input);\r\n\t}\r\n}\r\n","import { ApprovalPolicyCreateHandler } from './approval-policy.create.handler';\r\nimport { ApprovalPolicyGetHandler } from './approval-policy.get.handler';\r\nimport { ApprovalPolicyUpdateHandler } from './approval-policy.update.handler';\r\nimport { RequestApprovalPolicyGetHandler } from './request-approval-policy.get.handler';\r\n\r\nexport const CommandHandlers = [\r\n\tApprovalPolicyCreateHandler,\r\n\tApprovalPolicyGetHandler,\r\n\tRequestApprovalPolicyGetHandler,\r\n\tApprovalPolicyUpdateHandler\r\n];\r\n","import { IApprovalPolicy, IPagination } from '@gauzy/models';\r\nimport { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { ApprovalPolicyService } from '../../approval-policy.service';\r\nimport { RequestApprovalPolicyGetCommand } from '../request-approval-policy.get.command';\r\n\r\n@CommandHandler(RequestApprovalPolicyGetCommand)\r\nexport class RequestApprovalPolicyGetHandler\r\n\timplements ICommandHandler<RequestApprovalPolicyGetCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly approvalPolicyService: ApprovalPolicyService\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: RequestApprovalPolicyGetCommand\r\n\t): Promise<IPagination<IApprovalPolicy>> {\r\n\t\tconst { input } = command;\r\n\t\treturn this.approvalPolicyService.findApprovalPoliciesForRequestApproval(\r\n\t\t\tinput\r\n\t\t);\r\n\t}\r\n}\r\n","export { ApprovalPolicyCreateCommand } from './approval-policy.create.command';\r\nexport { ApprovalPolicyGetCommand } from './approval-policy.get.command';\r\nexport { ApprovalPolicyUpdateCommand } from './approval-policy.update.command';\r\nexport { RequestApprovalPolicyGetCommand } from './request-approval-policy.get.command';\r\n","import { IListQueryInput, IRequestApprovalFindInput } from '@gauzy/models';\r\nimport { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class RequestApprovalPolicyGetCommand implements ICommand {\r\n\tstatic readonly type = '[RequestApprovalPolicy] Get';\r\n\r\n\tconstructor(\r\n\t\tpublic readonly input: IListQueryInput<IRequestApprovalFindInput>\r\n\t) {}\r\n}\r\n","export const DEFAULT_APPROVAL_POLICIES: string[] = [\r\n\t'Trade Policy',\r\n\t'Union Budget',\r\n\t'Definition, Licensing Policies and Registration',\r\n\t'State Government Industrial Policies',\r\n\t'Reservation Policy',\r\n\t'National Policies',\r\n\t'International Policies',\r\n\t'Time Off',\r\n\t'Equipment Sharing'\r\n];\r\n","import {\r\n\tController,\r\n\tPost,\r\n\tHttpStatus,\r\n\tHttpCode,\r\n\tBody,\r\n\tGet,\r\n\tRes,\r\n\tReq,\r\n\tQuery,\r\n\tUseGuards\r\n} from '@nestjs/common';\r\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport { AuthService } from './auth.service';\r\nimport { User as IUser } from '../user/user.entity';\r\nimport { CommandBus } from '@nestjs/cqrs';\r\nimport { AuthRegisterCommand } from './commands';\r\nimport { RequestContext } from '../core/context';\r\nimport {\r\n\tIAuthLoginInput,\r\n\tIAuthResponse,\r\n\tIUserRegistrationInput,\r\n\tLanguagesEnum\r\n} from '@gauzy/models';\r\nimport { getUserDummyImage } from '../core';\r\nimport { environment as env } from '@env-api/environment';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { Request } from 'express';\r\nimport { I18nLang } from 'nestjs-i18n';\r\nimport { AuthLoginCommand } from './commands/auth.login.command';\r\n\r\n@ApiTags('Auth')\r\n@Controller()\r\nexport class AuthController {\r\n\tconstructor(\r\n\t\tprivate readonly authService: AuthService,\r\n\t\tprivate readonly commandBus: CommandBus\r\n\t) {}\r\n\r\n\t@ApiOperation({ summary: 'Is authenticated' })\r\n\t@ApiResponse({ status: HttpStatus.OK })\r\n\t@ApiResponse({ status: HttpStatus.BAD_REQUEST })\r\n\t@Get('/authenticated')\r\n\tasync authenticated(): Promise<boolean> {\r\n\t\tconst token = RequestContext.currentToken();\r\n\r\n\t\treturn this.authService.isAuthenticated(token);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Has role?' })\r\n\t@ApiResponse({ status: HttpStatus.OK })\r\n\t@ApiResponse({ status: HttpStatus.BAD_REQUEST })\r\n\t@Get('/role')\r\n\tasync hasRole(@Query('roles') roles: string[]): Promise<boolean> {\r\n\t\tconst token = RequestContext.currentToken();\r\n\t\treturn this.authService.hasRole(token, roles);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Create new record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully created.' /*, type: T*/\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@Post('/register')\r\n\tasync create(\r\n\t\t@Body() entity: IUserRegistrationInput,\r\n\t\t@Req() request: Request,\r\n\t\t@I18nLang() languageCode: LanguagesEnum,\r\n\t\t...options: any[]\r\n\t): Promise<IUser> {\r\n\t\tif (!entity.user.imageUrl) {\r\n\t\t\tentity.user.imageUrl = getUserDummyImage(entity.user);\r\n\t\t}\r\n\t\tentity.originalUrl = request.get('Origin');\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew AuthRegisterCommand(entity, languageCode)\r\n\t\t);\r\n\t}\r\n\r\n\t@HttpCode(HttpStatus.OK)\r\n\t@Post('/login')\r\n\tasync login(\r\n\t\t@Body() entity: IAuthLoginInput,\r\n\t\t...options: any[]\r\n\t): Promise<IAuthResponse | null> {\r\n\t\treturn this.commandBus.execute(new AuthLoginCommand(entity));\r\n\t}\r\n\r\n\t@Post('/reset-password')\r\n\tasync resetPassword(@Body() findObject, ...options: any[]) {\r\n\t\treturn await this.authService.resetPassword(findObject);\r\n\t}\r\n\r\n\t@Post('/request-password')\r\n\tasync requestPass(\r\n\t\t@Body() findObj,\r\n\t\t@Req() request: Request,\r\n\t\t@I18nLang() languageCode: LanguagesEnum,\r\n\t\t...options: any[]\r\n\t): Promise<{ id: string; token: string } | null> {\r\n\t\treturn await this.authService.requestPassword(\r\n\t\t\tfindObj,\r\n\t\t\tlanguageCode,\r\n\t\t\trequest.get('Origin')\r\n\t\t);\r\n\t}\r\n\r\n\t@Get('google')\r\n\t@UseGuards(AuthGuard('google'))\r\n\tgoogleLogin() {}\r\n\r\n\t@Get('google/callback')\r\n\t@UseGuards(AuthGuard('google'))\r\n\tgoogleLoginCallback(@Req() req, @Res() res) {\r\n\t\tconst {\r\n\t\t\tsuccess,\r\n\t\t\tauthData: { jwt, userId }\r\n\t\t} = req.user;\r\n\r\n\t\tif (success) {\r\n\t\t\treturn res.redirect(\r\n\t\t\t\t`${env.host}:${env.port}/#/sign-in/success?jwt=${jwt}&userId=${userId}`\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn res.redirect(`${env.host}:${env.port}/#/auth/register`);\r\n\t\t}\r\n\t}\r\n\r\n\t@Get('linkedin')\r\n\t@UseGuards(AuthGuard('linkedin'))\r\n\tlinkedinLogin() {}\r\n\r\n\t@Get('linkedin/callback')\r\n\t@UseGuards(AuthGuard('linkedin'))\r\n\tlinkedinLoginCallback(@Req() req, @Res() res) {\r\n\t\tconst {\r\n\t\t\tsuccess,\r\n\t\t\tauthData: { jwt, userId }\r\n\t\t} = req.user;\r\n\r\n\t\tif (success) {\r\n\t\t\treturn res.redirect(\r\n\t\t\t\t`${env.host}:${env.port}/#/sign-in/success?jwt=${jwt}&userId=${userId}`\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn res.redirect(`${env.host}:${env.port}/#/auth/register`);\r\n\t\t}\r\n\t}\r\n\r\n\t@Get('github')\r\n\t@UseGuards(AuthGuard('github'))\r\n\tgithubLogin() {}\r\n\r\n\t@Get('github/callback')\r\n\t@UseGuards(AuthGuard('github'))\r\n\tgithubLoginCallback(@Req() req, @Res() res) {\r\n\t\tconst {\r\n\t\t\tsuccess,\r\n\t\t\tauthData: { jwt, userId }\r\n\t\t} = req.user;\r\n\r\n\t\tif (success) {\r\n\t\t\treturn res.redirect(\r\n\t\t\t\t`${env.host}:${env.port}/#/sign-in/success?jwt=${jwt}&userId=${userId}`\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn res.redirect(`${env.host}:${env.port}/#/auth/register`);\r\n\t\t}\r\n\t}\r\n\r\n\t@Get('facebook')\r\n\tasync requestFacebookRedirectUrl(@Res() res) {\r\n\t\tconst {\r\n\t\t\tredirectUri\r\n\t\t} = await this.authService.requestFacebookRedirectUri();\r\n\t\treturn res.redirect(redirectUri);\r\n\t}\r\n\r\n\t@Get('facebook/callback')\r\n\tasync facebookCallback(@Req() req, @Res() res): Promise<any> {\r\n\t\tconst { code } = req.query;\r\n\t\treturn await this.authService.facebookSignIn(code, res);\r\n\t}\r\n\r\n\t@Post('facebook/token')\r\n\trequestJsonWebTokenAfterFacebookSignIn(@Req() req, @Res() res) {\r\n\t\tconst {\r\n\t\t\tsuccess,\r\n\t\t\tauthData: { jwt, userId }\r\n\t\t} = req.user;\r\n\r\n\t\tif (success) {\r\n\t\t\treturn res.redirect(\r\n\t\t\t\t`${env.host}:${env.port}/#/sign-in/success?jwt=${jwt}&userId=${userId}`\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn res.redirect(`${env.host}:${env.port}/#/auth/register`);\r\n\t\t}\r\n\t}\r\n\r\n\t@Get('twitter')\r\n\t@UseGuards(AuthGuard('twitter'))\r\n\ttwitterLogin() {}\r\n\r\n\t@Get('twitter/callback')\r\n\t@UseGuards(AuthGuard('twitter'))\r\n\ttwitterLoginCallback(@Req() req, @Res() res) {\r\n\t\tconst {\r\n\t\t\tsuccess,\r\n\t\t\tauthData: { jwt, userId }\r\n\t\t} = req.user;\r\n\r\n\t\tif (success) {\r\n\t\t\treturn res.redirect(\r\n\t\t\t\t`${env.host}:${env.port}/#/sign-in/success?jwt=${jwt}&userId=${userId}`\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn res.redirect(`${env.host}:${env.port}/#/auth/register`);\r\n\t\t}\r\n\t}\r\n\r\n\t@Get('microsoft')\r\n\t@UseGuards(AuthGuard('microsoft'))\r\n\tmicrosoftLogin() {}\r\n\r\n\t@Get('microsoft/callback')\r\n\t@UseGuards(AuthGuard('microsoft'))\r\n\tmicrosoftLoginCallback(@Req() req, @Res() res) {\r\n\t\tconst {\r\n\t\t\tsuccess,\r\n\t\t\tauthData: { jwt, userId }\r\n\t\t} = req.user;\r\n\r\n\t\tif (success) {\r\n\t\t\treturn res.redirect(\r\n\t\t\t\t`${env.host}:${env.port}/#/sign-in/success?jwt=${jwt}&userId=${userId}`\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn res.redirect(`${env.host}:${env.port}/#/auth/register`);\r\n\t\t}\r\n\t}\r\n\r\n\t@Get('auth0')\r\n\t@UseGuards(AuthGuard('auth0'))\r\n\tauth0Login() {}\r\n\r\n\t@Get('auth0/callback')\r\n\t@UseGuards(AuthGuard('auth0'))\r\n\tauth0LoginCallback(@Req() req, @Res() res) {\r\n\t\tconst {\r\n\t\t\tsuccess,\r\n\t\t\tauthData: { jwt, userId }\r\n\t\t} = req.user;\r\n\r\n\t\tif (success) {\r\n\t\t\treturn res.redirect(\r\n\t\t\t\t`${env.host}:${env.port}/#/sign-in/success?jwt=${jwt}&userId=${userId}`\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn res.redirect(`${env.host}:${env.port}/#/auth/register`);\r\n\t\t}\r\n\t}\r\n}\r\n","import { MiddlewareConsumer, Module, NestModule } from '@nestjs/common';\r\nimport { CqrsModule } from '@nestjs/cqrs';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { authenticate } from 'passport';\r\nimport { EmailModule, EmailService } from '../email';\r\nimport { User } from '../user/user.entity';\r\nimport { UserService } from '../user/user.service';\r\nimport { AuthController } from './auth.controller';\r\nimport { AuthService } from './auth.service';\r\nimport { CommandHandlers } from './commands/handlers';\r\nimport { FacebookStrategy } from './facebook.strategy';\r\nimport { GoogleStrategy } from './google.strategy';\r\nimport { JwtStrategy } from './jwt.strategy';\r\nimport { UserOrganization } from '../user-organization/user-organization.entity';\r\nimport { UserOrganizationService } from '../user-organization/user-organization.services';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { MicrosoftAuthGuard } from './guard/microsoft-auth-guard';\r\nimport { MicrosoftStrategy } from './microsoft.strategy';\r\nimport { LinkedinStrategy } from './linkedin.strategy';\r\nimport { KeycloakAuthGuard } from './guard/keycloak-auth-guard';\r\nimport { GithubStrategy } from './github.strategy';\r\nimport { TwitterStrategy } from './twitter.strategy';\r\nimport { Auth0Strategy } from './auth0.strategy';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([User, UserOrganization, Organization]),\r\n\t\tEmailModule,\r\n\t\tCqrsModule\r\n\t],\r\n\tcontrollers: [AuthController],\r\n\tproviders: [\r\n\t\tAuthService,\r\n\t\tUserService,\r\n\t\tUserOrganizationService,\r\n\t\tEmailService,\r\n\t\t...CommandHandlers,\r\n\t\tGoogleStrategy,\r\n\t\tFacebookStrategy,\r\n\t\tJwtStrategy,\r\n\t\tMicrosoftAuthGuard,\r\n\t\tMicrosoftStrategy,\r\n\t\tLinkedinStrategy,\r\n\t\tGithubStrategy,\r\n\t\tTwitterStrategy,\r\n\t\tAuth0Strategy,\r\n\t\tKeycloakAuthGuard\r\n\t],\r\n\texports: [AuthService, UserService]\r\n})\r\nexport class AuthModule implements NestModule {\r\n\tconfigure(consumer: MiddlewareConsumer) {\r\n\t\tconsumer\r\n\t\t\t.apply(\r\n\t\t\t\tauthenticate('facebook', {\r\n\t\t\t\t\tsession: false,\r\n\t\t\t\t\tscope: ['email']\r\n\t\t\t\t})\r\n\t\t\t)\r\n\t\t\t.forRoutes('auth/facebook/token');\r\n\t}\r\n}\r\n","import { environment as env, environment } from '@env-api/environment';\r\nimport {\r\n\tIUserRegistrationInput,\r\n\tLanguagesEnum,\r\n\tIRolePermission,\r\n\tIAuthResponse\r\n} from '@gauzy/models';\r\nimport { Injectable, InternalServerErrorException } from '@nestjs/common';\r\nimport * as bcrypt from 'bcryptjs';\r\nimport { JsonWebTokenError, sign, verify } from 'jsonwebtoken';\r\nimport { get, post, Response } from 'request';\r\nimport { EmailService } from '../email/email.service';\r\nimport { User } from '../user/user.entity';\r\nimport { UserService } from '../user/user.service';\r\nimport { UserOrganizationService } from '../user-organization/user-organization.services';\r\n@Injectable()\r\nexport class AuthService {\r\n\tsaltRounds: number;\r\n\r\n\tconstructor(\r\n\t\tprivate readonly userService: UserService,\r\n\t\tprivate emailService: EmailService,\r\n\t\tprivate userOrganizationService: UserOrganizationService\r\n\t) {\r\n\t\tthis.saltRounds = env.USER_PASSWORD_BCRYPT_SALT_ROUNDS;\r\n\t}\r\n\r\n\tasync getPasswordHash(password: string): Promise<string> {\r\n\t\treturn bcrypt.hash(password, this.saltRounds);\r\n\t}\r\n\r\n\tasync login(findObj: any, password: string): Promise<IAuthResponse | null> {\r\n\t\tconst user = await this.userService.findOne(findObj, {\r\n\t\t\trelations: ['role', 'role.rolePermissions', 'employee']\r\n\t\t});\r\n\r\n\t\tif (!user || !(await bcrypt.compare(password, user.hash))) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tconst { token } = await this.createToken(user);\r\n\t\tdelete user.hash;\r\n\r\n\t\treturn {\r\n\t\t\tuser,\r\n\t\t\ttoken\r\n\t\t};\r\n\t}\r\n\r\n\tasync requestPassword(\r\n\t\tfindObj: any,\r\n\t\tlanguageCode: LanguagesEnum,\r\n\t\toriginUrl?: string\r\n\t): Promise<{ id: string; token: string } | null> {\r\n\t\tconst user = await this.userService.findOne(findObj, {\r\n\t\t\trelations: ['role', 'employee']\r\n\t\t});\r\n\r\n\t\tif (user && user.id) {\r\n\t\t\tconst { token } = await this.createToken(user);\r\n\t\t\tif (token) {\r\n\t\t\t\tconst url = `${env.host}:4200/#/auth/reset-password?token=${token}&id=${user.id}`;\r\n\r\n\t\t\t\tconst {\r\n\t\t\t\t\torganizationId\r\n\t\t\t\t} = await this.userOrganizationService.findOne({\r\n\t\t\t\t\twhere: {\r\n\t\t\t\t\t\tuser\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tthis.emailService.requestPassword(\r\n\t\t\t\t\tuser,\r\n\t\t\t\t\turl,\r\n\t\t\t\t\tlanguageCode,\r\n\t\t\t\t\torganizationId,\r\n\t\t\t\t\toriginUrl\r\n\t\t\t\t);\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: user.id,\r\n\t\t\t\t\ttoken\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthrow new Error('Email not found');\r\n\t\t}\r\n\t}\r\n\r\n\tasync resetPassword(findObject) {\r\n\t\tif (findObject.password.length < 6) {\r\n\t\t\tthrow new Error('Password should be at least 6 characters long');\r\n\t\t}\r\n\r\n\t\tif (findObject.password !== findObject.confirmPassword) {\r\n\t\t\tthrow new Error('Passwords must match.');\r\n\t\t}\r\n\r\n\t\tif (!findObject.user.id) {\r\n\t\t\tthrow new Error('User not found');\r\n\t\t}\r\n\r\n\t\tif (!findObject.user.token) {\r\n\t\t\tthrow new Error('Authorization token is invalid or missing');\r\n\t\t}\r\n\r\n\t\tconst hash = await this.getPasswordHash(findObject.password);\r\n\t\treturn this.userService.changePassword(findObject.user.id, hash);\r\n\t}\r\n\t/**\r\n\t * Shared method involved in\r\n\t * 1. Sign up\r\n\t * 2. Addition of new user to organization\r\n\t * 3. User invite accept scenario\r\n\t */\r\n\tasync register(\r\n\t\tinput: IUserRegistrationInput,\r\n\t\tlanguageCode: LanguagesEnum\r\n\t): Promise<User> {\r\n\t\tlet tenant = input.user.tenant;\r\n\r\n\t\tif (input.createdById) {\r\n\t\t\tconst creatingUser = await this.userService.findOne(\r\n\t\t\t\tinput.createdById,\r\n\t\t\t\t{\r\n\t\t\t\t\trelations: ['tenant']\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\ttenant = creatingUser.tenant;\r\n\t\t}\r\n\r\n\t\tconst user = this.userService.create({\r\n\t\t\t...input.user,\r\n\t\t\ttenant,\r\n\t\t\t...(input.password\r\n\t\t\t\t? {\r\n\t\t\t\t\t\thash: await this.getPasswordHash(input.password)\r\n\t\t\t\t  }\r\n\t\t\t\t: {})\r\n\t\t});\r\n\r\n\t\tif (input.organizationId) {\r\n\t\t\tawait this.userOrganizationService.addUserToOrganization(\r\n\t\t\t\tawait user,\r\n\t\t\t\tinput.organizationId\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tthis.emailService.welcomeUser(\r\n\t\t\tinput.user,\r\n\t\t\tlanguageCode,\r\n\t\t\tinput.organizationId,\r\n\t\t\tinput.originalUrl\r\n\t\t);\r\n\r\n\t\treturn user;\r\n\t}\r\n\r\n\tasync getAuthenticatedUser(\r\n\t\tid: string,\r\n\t\tthirdPartyId?: string\r\n\t): Promise<User> {\r\n\t\treturn thirdPartyId\r\n\t\t\t? this.userService.getIfExistsThirdParty(thirdPartyId)\r\n\t\t\t: this.userService.getIfExists(id);\r\n\t}\r\n\r\n\tasync isAuthenticated(token: string): Promise<boolean> {\r\n\t\ttry {\r\n\t\t\tconst { id, thirdPartyId } = verify(token, env.JWT_SECRET) as {\r\n\t\t\t\tid: string;\r\n\t\t\t\tthirdPartyId: string;\r\n\t\t\t};\r\n\r\n\t\t\tlet result: Promise<boolean>;\r\n\r\n\t\t\tif (thirdPartyId) {\r\n\t\t\t\tresult = this.userService.checkIfExistsThirdParty(thirdPartyId);\r\n\t\t\t} else {\r\n\t\t\t\tresult = this.userService.checkIfExists(id);\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t} catch (err) {\r\n\t\t\tif (err instanceof JsonWebTokenError) {\r\n\t\t\t\treturn false;\r\n\t\t\t} else {\r\n\t\t\t\tthrow err;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tasync hasRole(token: string, roles: string[] = []): Promise<boolean> {\r\n\t\ttry {\r\n\t\t\tconst { role } = verify(token, env.JWT_SECRET) as {\r\n\t\t\t\tid: string;\r\n\t\t\t\trole: string;\r\n\t\t\t};\r\n\t\t\treturn role ? roles.includes(role) : false;\r\n\t\t} catch (err) {\r\n\t\t\tif (err instanceof JsonWebTokenError) {\r\n\t\t\t\treturn false;\r\n\t\t\t} else {\r\n\t\t\t\tthrow err;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tasync validateOAuthLoginEmail(\r\n\t\temails: Array<{ value: string; verified: boolean }>\r\n\t): Promise<{\r\n\t\tsuccess: boolean;\r\n\t\tauthData: { jwt: string; userId: string };\r\n\t}> {\r\n\t\tlet response = {\r\n\t\t\tsuccess: false,\r\n\t\t\tauthData: { jwt: null, userId: null }\r\n\t\t};\r\n\r\n\t\ttry {\r\n\t\t\tfor (const { value } of emails) {\r\n\t\t\t\tconst userExist = await this.userService.checkIfExistsEmail(\r\n\t\t\t\t\tvalue\r\n\t\t\t\t);\r\n\t\t\t\tif (userExist) {\r\n\t\t\t\t\tconst user = await this.userService.getUserByEmail(value);\r\n\t\t\t\t\tconst { token } = await this.createToken(user);\r\n\r\n\t\t\t\t\tresponse = {\r\n\t\t\t\t\t\tsuccess: true,\r\n\t\t\t\t\t\tauthData: { jwt: token, userId: user.id }\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn response;\r\n\t\t} catch (err) {\r\n\t\t\tthrow new InternalServerErrorException(\r\n\t\t\t\t'validateOAuthLoginEmail',\r\n\t\t\t\terr.message\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tasync createToken(user: Partial<User>): Promise<{ token: string }> {\r\n\t\tif (!user.role || !user.employee) {\r\n\t\t\tuser = await this.userService.findOne(user.id, {\r\n\t\t\t\trelations: ['role', 'role.rolePermissions', 'employee']\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tconst payload: any = {\r\n\t\t\tid: user.id,\r\n\t\t\ttenantId: user.tenantId,\r\n\t\t\temployeeId: user.employee ? user.employee.id : null\r\n\t\t};\r\n\r\n\t\tif (user.role) {\r\n\t\t\tpayload.role = user.role.name;\r\n\t\t\tif (user.role.rolePermissions) {\r\n\t\t\t\tpayload.permissions = user.role.rolePermissions\r\n\t\t\t\t\t.filter(\r\n\t\t\t\t\t\t(rolePermission: IRolePermission) =>\r\n\t\t\t\t\t\t\trolePermission.enabled\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.map(\r\n\t\t\t\t\t\t(rolePermission: IRolePermission) =>\r\n\t\t\t\t\t\t\trolePermission.permission\r\n\t\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tpayload.permissions = null;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tpayload.role = null;\r\n\t\t}\r\n\r\n\t\tconst token: string = sign(payload, env.JWT_SECRET, {});\r\n\t\treturn { token };\r\n\t}\r\n\r\n\tasync requestFacebookRedirectUri(): Promise<{ redirectUri: string }> {\r\n\t\tconst {\r\n\t\t\tclientId,\r\n\t\t\toauthRedirectUri,\r\n\t\t\tstate,\r\n\t\t\tloginDialogUri\r\n\t\t} = env.facebookConfig;\r\n\r\n\t\tconst queryParams: string[] = [\r\n\t\t\t`client_id=${clientId}`,\r\n\t\t\t`redirect_uri=${oauthRedirectUri}`,\r\n\t\t\t`state=${state}`\r\n\t\t];\r\n\r\n\t\tconst redirectUri = `${loginDialogUri}?${queryParams.join('&')}`;\r\n\r\n\t\treturn { redirectUri };\r\n\t}\r\n\r\n\tasync facebookSignIn(code: string, responseRedirectUse: any): Promise<any> {\r\n\t\tconst {\r\n\t\t\tclientId,\r\n\t\t\toauthRedirectUri,\r\n\t\t\tclientSecret,\r\n\t\t\taccessTokenUri\r\n\t\t} = env.facebookConfig;\r\n\r\n\t\tconst queryParams: string[] = [\r\n\t\t\t`client_id=${clientId}`,\r\n\t\t\t`redirect_uri=${oauthRedirectUri}`,\r\n\t\t\t`client_secret=${clientSecret}`,\r\n\t\t\t`code=${code}`\r\n\t\t];\r\n\r\n\t\tconst uri = `${accessTokenUri}?${queryParams.join('&')}`;\r\n\t\tget(uri, (error: Error, res: Response, body: any) => {\r\n\t\t\tif (error) {\r\n\t\t\t\tconsole.error(error);\r\n\t\t\t\tthrow error;\r\n\t\t\t} else if (body.error) {\r\n\t\t\t\tconsole.error(body.error);\r\n\t\t\t\tthrow body.error;\r\n\t\t\t}\r\n\r\n\t\t\tconst { access_token } = JSON.parse(body);\r\n\t\t\tconst { host, port } = environment;\r\n\r\n\t\t\tpost(\r\n\t\t\t\t{\r\n\t\t\t\t\turl: `${host}:${port}/api/auth/facebook/token`,\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\r\n\t\t\t\t\t},\r\n\t\t\t\t\tform: { access_token }\r\n\t\t\t\t},\r\n\t\t\t\tasync (innerError: Error) => {\r\n\t\t\t\t\tif (innerError) {\r\n\t\t\t\t\t\tconsole.error(innerError);\r\n\t\t\t\t\t\tthrow innerError;\r\n\t\t\t\t\t} else if (body.error) {\r\n\t\t\t\t\t\tconsole.error(body.error);\r\n\t\t\t\t\t\tthrow body.error;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst redirectSuccessUrl = body.replace(\r\n\t\t\t\t\t\t'Found. Redirecting to ',\r\n\t\t\t\t\t\t''\r\n\t\t\t\t\t);\r\n\t\t\t\t\treturn responseRedirectUse.redirect(redirectSuccessUrl);\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n}\r\n","import { environment as env } from '@env-api/environment';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { PassportStrategy } from '@nestjs/passport';\r\nimport { Strategy } from 'passport-auth0';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class Auth0Strategy extends PassportStrategy(Strategy, 'auth0') {\r\n\tconstructor(private readonly _authService: AuthService) {\r\n\t\tsuper({\r\n\t\t\tclientID: env.auth0Config.clientID || 'disabled',\r\n\t\t\tclientSecret: env.auth0Config.clientSecret || 'disabled',\r\n\t\t\tdomain: env.auth0Config.domain || 'disabled',\r\n\t\t\tcallbackURL: `${env.host}:${env.port}/api/auth/auth0/callback`\r\n\t\t});\r\n\t}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { IAuthLoginInput } from '@gauzy/models';\r\n\r\nexport class AuthLoginCommand implements ICommand {\r\n\tstatic readonly type = '[Auth] Login';\r\n\r\n\tconstructor(public readonly input: IAuthLoginInput) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { IUserRegistrationInput, LanguagesEnum } from '@gauzy/models';\r\n\r\nexport class AuthRegisterCommand implements ICommand {\r\n\tstatic readonly type = '[Auth] Register';\r\n\r\n\tconstructor(\r\n\t\tpublic readonly input: IUserRegistrationInput,\r\n\t\tpublic readonly languageCode: LanguagesEnum\r\n\t) {}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { AuthLoginCommand } from '../auth.login.command';\r\nimport { AuthService } from '../../auth.service';\r\nimport { IAuthLoginInput, IAuthResponse } from '@gauzy/models';\r\n\r\n@CommandHandler(AuthLoginCommand)\r\nexport class AuthLoginHandler implements ICommandHandler<AuthLoginCommand> {\r\n\tconstructor(private readonly authService: AuthService) {}\r\n\r\n\tpublic async execute(command: AuthLoginCommand): Promise<IAuthResponse> {\r\n\t\tconst { input } = command;\r\n\t\tconst { findObj, password }: IAuthLoginInput = input;\r\n\r\n\t\treturn this.authService.login(findObj, password);\r\n\t}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { AuthRegisterCommand } from '../auth.register.command';\r\nimport { AuthService } from '../../auth.service';\r\nimport { IUser, RolesEnum } from '@gauzy/models';\r\nimport { UserService } from '../../../user/user.service';\r\nimport { UnauthorizedException, BadRequestException } from '@nestjs/common';\r\n\r\n@CommandHandler(AuthRegisterCommand)\r\nexport class AuthRegisterHandler\r\n\timplements ICommandHandler<AuthRegisterCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly authService: AuthService,\r\n\t\tprivate readonly userService: UserService\r\n\t) {}\r\n\r\n\tpublic async execute(command: AuthRegisterCommand): Promise<IUser> {\r\n\t\tconst { input, languageCode } = command;\r\n\r\n\t\tif (\r\n\t\t\tinput.user &&\r\n\t\t\tinput.user.role &&\r\n\t\t\tinput.user.role.name === RolesEnum.SUPER_ADMIN\r\n\t\t) {\r\n\t\t\tif (!input.createdById) throw new BadRequestException();\r\n\r\n\t\t\tconst { role } = await this.userService.findOne(input.createdById, {\r\n\t\t\t\trelations: ['role']\r\n\t\t\t});\r\n\r\n\t\t\tif (role.name !== RolesEnum.SUPER_ADMIN)\r\n\t\t\t\tthrow new UnauthorizedException();\r\n\t\t}\r\n\t\treturn await this.authService.register(input, languageCode);\r\n\t}\r\n}\r\n","import { AuthLoginHandler } from './auth.login.handler';\r\nimport { AuthRegisterHandler } from './auth.register.handler';\r\n\r\nexport const CommandHandlers = [AuthRegisterHandler, AuthLoginHandler];\r\n","export { AuthRegisterCommand } from './auth.register.command';\r\nexport { AuthLoginCommand } from './auth.login.command';\r\n","import { environment as env } from '@env-api/environment';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { use } from 'passport';\r\nimport { AuthService } from './auth.service';\r\n\r\nconst FacebookTokenStrategy = require('passport-facebook-token');\r\n\r\n@Injectable()\r\nexport class FacebookStrategy {\r\n\tconstructor(private readonly _authService: AuthService) {\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tprivate init(): void {\r\n\t\tconst { clientId, clientSecret, oauthRedirectUri } = env.facebookConfig;\r\n\t\tuse(\r\n\t\t\t'facebook',\r\n\t\t\tnew FacebookTokenStrategy(\r\n\t\t\t\t{\r\n\t\t\t\t\tclientID: clientId || 'disabled',\r\n\t\t\t\t\tclientSecret: clientSecret || 'disabled',\r\n\t\t\t\t\tcallbackURL: oauthRedirectUri,\r\n\t\t\t\t\tprofileFields: ['email']\r\n\t\t\t\t},\r\n\t\t\t\tasync (\r\n\t\t\t\t\taccessToken: string,\r\n\t\t\t\t\trefreshToken: string,\r\n\t\t\t\t\tprofile: any,\r\n\t\t\t\t\tdone: Function\r\n\t\t\t\t) => {\r\n\t\t\t\t\tconst { emails } = profile;\r\n\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tconst {\r\n\t\t\t\t\t\t\tsuccess,\r\n\t\t\t\t\t\t\tauthData\r\n\t\t\t\t\t\t} = await this._authService.validateOAuthLoginEmail(\r\n\t\t\t\t\t\t\temails\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tconst user = { success, authData };\r\n\r\n\t\t\t\t\t\tdone(null, user);\r\n\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\tdone(err, false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n}\r\n","import { Injectable } from '@nestjs/common';\r\nimport { PassportStrategy } from '@nestjs/passport';\r\nimport { environment as env } from '@env-api/environment';\r\nimport { AuthService } from './auth.service';\r\nimport { Strategy } from 'passport-github2';\r\n\r\n@Injectable()\r\nexport class GithubStrategy extends PassportStrategy(Strategy, 'github') {\r\n\tconstructor(private readonly _authService: AuthService) {\r\n\t\tsuper({\r\n\t\t\tclientID: env.githubConfig.clientId || 'disabled',\r\n\t\t\tclientSecret: env.githubConfig.clientSecret || 'disabled',\r\n\t\t\tcallbackURL: `${env.host}:${env.port}/api/auth/github/callback`,\r\n\t\t\tpassReqToCallback: true,\r\n\t\t\tscope: ['user:email']\r\n\t\t});\r\n\t}\r\n}\r\n","import { environment as env } from '@env-api/environment';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { PassportStrategy } from '@nestjs/passport';\r\nimport { Strategy } from 'passport-google-oauth20';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class GoogleStrategy extends PassportStrategy(Strategy, 'google') {\r\n\tconstructor(private readonly _authService: AuthService) {\r\n\t\tsuper({\r\n\t\t\tclientID: env.googleConfig.clientId || 'disabled',\r\n\t\t\tclientSecret: env.googleConfig.clientSecret || 'disabled',\r\n\t\t\tcallbackURL: `${env.host}:${env.port}/api/auth/google/callback`,\r\n\t\t\tpassReqToCallback: true,\r\n\t\t\tscope: ['profile', 'email']\r\n\t\t});\r\n\t}\r\n\r\n\tasync validate(\r\n\t\trequest: any,\r\n\t\taccessToken: string,\r\n\t\trefreshToken: string,\r\n\t\tprofile,\r\n\t\tdone: Function\r\n\t) {\r\n\t\tconst { emails } = profile;\r\n\r\n\t\ttry {\r\n\t\t\tconst {\r\n\t\t\t\tsuccess,\r\n\t\t\t\tauthData\r\n\t\t\t} = await this._authService.validateOAuthLoginEmail(emails);\r\n\r\n\t\t\tconst user = { success, authData };\r\n\r\n\t\t\tdone(null, user);\r\n\t\t} catch (err) {\r\n\t\t\tdone(err, false);\r\n\t\t}\r\n\t}\r\n}\r\n","import { Injectable, ExecutionContext } from '@nestjs/common';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { Observable } from 'rxjs';\r\nimport passport from 'passport';\r\n\r\n@Injectable()\r\nexport class KeycloakAuthGuard extends AuthGuard('keycloak') {\r\n\tcanActivate(\r\n\t\tcontext: ExecutionContext\r\n\t): boolean | Promise<boolean> | Observable<boolean> {\r\n\t\tconst request = context.switchToHttp().getRequest();\r\n\t\tconst baseUrl = request.headers.referer;\r\n\t\tconst { roleName } = request.query;\r\n\r\n\t\tthis.setPassportSession(roleName, baseUrl);\r\n\t\treturn super.canActivate(context);\r\n\t}\r\n\r\n\tprivate setPassportSession(roleName: string, baseUrl: string) {\r\n\t\tconst client_url = passport['_strategies'].session.client_url;\r\n\t\tconst role_name = passport['_strategies'].session.role_name;\r\n\r\n\t\tif (!client_url) {\r\n\t\t\tpassport['_strategies'].session.client_url = baseUrl\r\n\t\t\t\t.slice(0, baseUrl.lastIndexOf('/'))\r\n\t\t\t\t.toString();\r\n\t\t}\r\n\r\n\t\tif (role_name) {\r\n\t\t\tpassport['_strategies'].session.role_name = roleName;\r\n\t\t}\r\n\t}\r\n}\r\n","import { Injectable, ExecutionContext } from '@nestjs/common';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { Observable } from 'rxjs';\r\nimport passport from 'passport';\r\n\r\n@Injectable()\r\nexport class MicrosoftAuthGuard extends AuthGuard('microsoft') {\r\n\tcanActivate(\r\n\t\tcontext: ExecutionContext\r\n\t): boolean | Promise<boolean> | Observable<boolean> {\r\n\t\tconst request = context.switchToHttp().getRequest();\r\n\t\tconst baseUrl = request.headers.referer;\r\n\t\tconst { roleName } = request.query;\r\n\r\n\t\tthis.setPassportSession(roleName, baseUrl);\r\n\t\treturn super.canActivate(context);\r\n\t}\r\n\r\n\tprivate setPassportSession(roleName: string, baseUrl: string) {\r\n\t\tconst client_url = passport['_strategies'].session.client_url;\r\n\t\tconst role_name = passport['_strategies'].session.role_name;\r\n\r\n\t\tif (!client_url) {\r\n\t\t\tpassport['_strategies'].session.client_url = baseUrl\r\n\t\t\t\t.slice(0, baseUrl.lastIndexOf('/'))\r\n\t\t\t\t.toString();\r\n\t\t}\r\n\r\n\t\tif (role_name) {\r\n\t\t\tpassport['_strategies'].session.role_name = roleName;\r\n\t\t}\r\n\t}\r\n}\r\n","import { environment as env } from '@env-api/environment';\r\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\r\nimport { PassportStrategy } from '@nestjs/passport';\r\nimport { ExtractJwt, Strategy } from 'passport-jwt';\r\nimport { AuthService } from './auth.service';\r\nimport { IUser } from '@gauzy/models';\r\n\r\n@Injectable()\r\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\r\n\tconstructor(private readonly authService: AuthService) {\r\n\t\tsuper({\r\n\t\t\tjwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\r\n\t\t\tsecretOrKey: env.JWT_SECRET\r\n\t\t});\r\n\t}\r\n\r\n\tasync validate(payload, done: Function) {\r\n\t\ttry {\r\n\t\t\t//We use this to also attach the user object to the request context.\r\n\t\t\tconst user: IUser = await this.authService.getAuthenticatedUser(\r\n\t\t\t\tpayload.id,\r\n\t\t\t\tpayload.thirdPartyId\r\n\t\t\t);\r\n\r\n\t\t\tuser.employeeId = payload.employeeId;\r\n\r\n\t\t\t// You could add a function to the authService to verify the claims of the token:\r\n\t\t\t// i.e. does the user still have the roles that are claimed by the token\r\n\t\t\t//const validClaims = await this.authService.verifyTokenClaims(payload);\r\n\r\n\t\t\t//if (!validClaims)\r\n\t\t\t//    return done(new UnauthorizedException('invalid token claims'), false);\r\n\r\n\t\t\tdone(null, user);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log({ err });\r\n\t\t\tthrow new UnauthorizedException('unauthorized', err.message);\r\n\t\t}\r\n\t}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { PassportStrategy } from '@nestjs/passport';\r\nimport { ExtractJwt } from 'passport-jwt';\r\nimport { AuthService } from './auth.service';\r\nimport { environment as env } from '@env-api/environment';\r\nimport { Strategy } from 'passport-linkedin-oauth2';\r\n\r\n@Injectable()\r\nexport class LinkedinStrategy extends PassportStrategy(Strategy, 'linkedin') {\r\n\tconstructor(private readonly _authService: AuthService) {\r\n\t\tsuper({\r\n\t\t\tclientID: env.linkedinConfig.clientId || 'disabled',\r\n\t\t\tclientSecret: env.linkedinConfig.clientSecret || 'disabled',\r\n\t\t\tcallbackURL: `${env.host}:${env.port}/api/auth/linkedin/callback`,\r\n\t\t\tscope: ['r_liteprofile', 'r_emailaddress'],\r\n\t\t\tpassReqToCallback: true,\r\n\t\t\tsecretOrKey: env.JWT_SECRET,\r\n\t\t\tjwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken()\r\n\t\t});\r\n\t}\r\n\r\n\tasync validate(\r\n\t\trequest: any,\r\n\t\taccessToken: string,\r\n\t\trefreshToken: string,\r\n\t\tprofile,\r\n\t\tdone: Function\r\n\t) {\r\n\t\tconst { emails } = profile;\r\n\t\ttry {\r\n\t\t\tconst {\r\n\t\t\t\tsuccess,\r\n\t\t\t\tauthData\r\n\t\t\t} = await this._authService.validateOAuthLoginEmail(emails);\r\n\t\t\tconst user = { success, authData };\r\n\t\t\tdone(null, user);\r\n\t\t} catch (err) {\r\n\t\t\tdone(err, false);\r\n\t\t}\r\n\t}\r\n}\r\n","import { Injectable } from '@nestjs/common';\r\nimport { PassportStrategy } from '@nestjs/passport';\r\nimport { AuthService } from './auth.service';\r\nimport { environment as env } from '@env-api/environment';\r\nimport { Strategy } from 'passport-azure-ad-oauth2';\r\n\r\n@Injectable()\r\nexport class MicrosoftStrategy extends PassportStrategy(Strategy, 'microsoft') {\r\n\tconstructor(private readonly _authService: AuthService) {\r\n\t\tsuper({\r\n\t\t\tclientID: env.microsoftConfig.clientId || 'disabled',\r\n\t\t\tclientSecret: env.microsoftConfig.clientSecret || 'disabled',\r\n\t\t\tresource: env.microsoftConfig.resource || 'disabled',\r\n\t\t\ttenant: env.microsoftConfig.tenant || 'disabled',\r\n\t\t\tuseCommonEndpoint: false,\r\n\t\t\tcallbackURL: `${env.host}:${env.port}/api/auth/microsoft/callback`\r\n\t\t});\r\n\t}\r\n}\r\n","import { Injectable } from '@nestjs/common';\r\nimport { PassportStrategy } from '@nestjs/passport';\r\nimport { ExtractJwt } from 'passport-jwt';\r\nimport { AuthService } from './auth.service';\r\nimport { environment as env } from '@env-api/environment';\r\nimport { Strategy } from 'passport-twitter';\r\n\r\n@Injectable()\r\nexport class TwitterStrategy extends PassportStrategy(Strategy, 'twitter') {\r\n\tconstructor(private readonly _authService: AuthService) {\r\n\t\tsuper({\r\n\t\t\tconsumerKey: env.twitterConfig.clientId || 'disabled',\r\n\t\t\tconsumerSecret: env.twitterConfig.clientSecret || 'disabled',\r\n\t\t\tcallbackURL: `${env.host}:${env.port}/api/auth/twitter/callback`,\r\n\t\t\tpassReqToCallback: true,\r\n\t\t\tincludeEmail: true,\r\n\t\t\tsecretOrKey: env.JWT_SECRET,\r\n\t\t\tjwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken()\r\n\t\t});\r\n\t}\r\n}\r\n","import { IAvailabilitySlotsCreateInput } from '@gauzy/models';\r\nimport {\r\n\tBody,\r\n\tController,\r\n\tGet,\r\n\tHttpCode,\r\n\tHttpStatus,\r\n\tParam,\r\n\tPut,\r\n\tPost,\r\n\tQuery,\r\n\tUseGuards\r\n} from '@nestjs/common';\r\nimport { CommandBus } from '@nestjs/cqrs';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\r\nimport { IPagination } from '../core';\r\nimport { CrudController } from '../core/crud/crud.controller';\r\nimport { AvailabilitySlotsCreateCommand } from './commands/availability-slots.create.command';\r\nimport { AvailabilitySlot } from './availability-slots.entity';\r\nimport { AvailabilitySlotsService } from './availability-slots.service';\r\nimport { AvailabilitySlotsBulkCreateCommand } from './commands/availability-slots.bulk.create.command';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('AvailabilitySlots')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class AvailabilitySlotsController extends CrudController<\r\n\tAvailabilitySlot\r\n> {\r\n\tconstructor(\r\n\t\tprivate readonly availabilitySlotsService: AvailabilitySlotsService,\r\n\t\tprivate readonly commandBus: CommandBus\r\n\t) {\r\n\t\tsuper(availabilitySlotsService);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find all availability slots' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found availability slots',\r\n\t\ttype: AvailabilitySlot\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get()\r\n\tasync findAllAvailabilitySlots(\r\n\t\t@Query('data') data: string\r\n\t): Promise<IPagination<AvailabilitySlot>> {\r\n\t\tconst { relations, findInput } = JSON.parse(data);\r\n\r\n\t\treturn this.availabilitySlotsService.findAll({\r\n\t\t\twhere: findInput,\r\n\t\t\trelations\r\n\t\t});\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Update record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully updated.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Put(':id')\r\n\tasync update(\r\n\t\t@Param('id') id: string,\r\n\t\t@Body() entity: AvailabilitySlot,\r\n\t\t...options: any[]\r\n\t): Promise<any> {\r\n\t\treturn this.availabilitySlotsService.create({\r\n\t\t\tid,\r\n\t\t\t...entity\r\n\t\t});\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Create new record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully created.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@Post()\r\n\tasync create(\r\n\t\t@Body() entity: IAvailabilitySlotsCreateInput,\r\n\t\t...options: any[]\r\n\t): Promise<AvailabilitySlot> {\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew AvailabilitySlotsCreateCommand(entity)\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Create slots in bulk' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The records have been successfully created.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.CREATED)\r\n\t@Post('/bulk')\r\n\tasync createManyWithEmailsId(\r\n\t\t@Body() entity: IAvailabilitySlotsCreateInput[]\r\n\t): Promise<IAvailabilitySlotsCreateInput[]> {\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew AvailabilitySlotsBulkCreateCommand(entity)\r\n\t\t);\r\n\t}\r\n}\r\n","import { Column, Entity, ManyToOne, RelationId, JoinColumn } from 'typeorm';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport {\r\n\tIsNotEmpty,\r\n\tIsString,\r\n\tIsOptional,\r\n\tIsBoolean,\r\n\tIsDate\r\n} from 'class-validator';\r\nimport {\r\n\tAvailabilitySlotType,\r\n\tIAvailabilitySlot,\r\n\tIEmployee\r\n} from '@gauzy/models';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('availability_slot')\r\nexport class AvailabilitySlot\r\n\textends TenantOrganizationBase\r\n\timplements IAvailabilitySlot {\r\n\t@ApiProperty({ type: Employee })\r\n\t@ManyToOne(() => Employee, { nullable: true, onDelete: 'CASCADE' })\r\n\t@JoinColumn()\r\n\temployee?: IEmployee;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@IsOptional()\r\n\t@RelationId(\r\n\t\t(availabilitySlot: AvailabilitySlot) => availabilitySlot.employee\r\n\t)\r\n\t@Column({ nullable: true })\r\n\treadonly employeeId?: string;\r\n\r\n\t@ApiProperty({ type: Date })\r\n\t@IsDate()\r\n\t@Column()\r\n\tstartTime: Date;\r\n\r\n\t@ApiProperty({ type: Date })\r\n\t@IsDate()\r\n\t@Column()\r\n\tendTime: Date;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@IsBoolean()\r\n\t@Column()\r\n\tallDay: boolean;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Column({ type: 'text', nullable: true })\r\n\ttype: AvailabilitySlotType;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { AvailabilitySlot } from './availability-slots.entity';\r\nimport { AvailabilitySlotsService } from './availability-slots.service';\r\nimport { AvailabilitySlotsController } from './availability-slots.controller';\r\nimport { CommandHandlers } from './commands/handlers';\r\nimport { CqrsModule } from '@nestjs/cqrs';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { EmployeeService } from '../employee/employee.service';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { OrganizationService } from '../organization/organization.service';\r\nimport { UserModule } from '../user/user.module';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tUserModule,\r\n\t\tTypeOrmModule.forFeature([AvailabilitySlot, Employee, Organization]),\r\n\t\tCqrsModule,\r\n\t\tTenantModule\r\n\t],\r\n\tcontrollers: [AvailabilitySlotsController],\r\n\tproviders: [\r\n\t\tAvailabilitySlotsService,\r\n\t\tEmployeeService,\r\n\t\tOrganizationService,\r\n\t\t...CommandHandlers\r\n\t],\r\n\texports: [AvailabilitySlotsService]\r\n})\r\nexport class AvailabilitySlotsModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { AvailabilitySlot } from './availability-slots.entity';\r\nimport * as faker from 'faker';\r\nimport * as moment from 'moment';\r\nimport { AvailabilitySlotType } from '@gauzy/models';\r\n\r\nexport const createDefaultAvailabilitySlots = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\torganizations,\r\n\temployees,\r\n\tnoOfAvailabilitySlotsPerOrganization: number\r\n): Promise<AvailabilitySlot[]> => {\r\n\tlet slots: AvailabilitySlot[] = [];\r\n\tfor (const tenant of tenants) {\r\n\t\tslots = await dataOperation(\r\n\t\t\tconnection,\r\n\t\t\tslots,\r\n\t\t\tnoOfAvailabilitySlotsPerOrganization,\r\n\t\t\temployees,\r\n\t\t\torganizations,\r\n\t\t\ttenant\r\n\t\t);\r\n\t}\r\n\treturn slots;\r\n};\r\n\r\nexport const createRandomAvailabilitySlots = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantOrganizationsMap: Map<Tenant, Organization[]>,\r\n\ttenantEmployeeMap: Map<Tenant, Employee[]>,\r\n\tnoOfAvailabilitySlotsPerOrganization: number\r\n): Promise<AvailabilitySlot[]> => {\r\n\tlet slots: AvailabilitySlot[] = [];\r\n\tfor (const tenant of tenants) {\r\n\t\tconst organizations = tenantOrganizationsMap.get(tenant);\r\n\t\tconst employees = tenantEmployeeMap.get(tenant);\r\n\t\tfor (const org of organizations) {\r\n\t\t\tslots = await dataOperation(\r\n\t\t\t\tconnection,\r\n\t\t\t\tslots,\r\n\t\t\t\tnoOfAvailabilitySlotsPerOrganization,\r\n\t\t\t\temployees,\r\n\t\t\t\torg,\r\n\t\t\t\ttenant\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\treturn slots;\r\n};\r\n\r\nconst dataOperation = async (\r\n\tconnection: Connection,\r\n\tslots,\r\n\tnoOfAvailabilitySlotsPerOrganization,\r\n\temployees,\r\n\torg,\r\n\ttenant\r\n) => {\r\n\tfor (let i = 0; i < noOfAvailabilitySlotsPerOrganization; i++) {\r\n\t\tconst slot = new AvailabilitySlot();\r\n\t\tslot.allDay = faker.random.boolean();\r\n\t\tslot.employee = faker.random.arrayElement([\r\n\t\t\tfaker.random.arrayElement(employees),\r\n\t\t\tnull\r\n\t\t]);\r\n\t\tslot.organization = org;\r\n\t\tslot.tenant = tenant;\r\n\t\tslot.startTime = faker.date.between(\r\n\t\t\tnew Date(),\r\n\t\t\tmoment(new Date()).add(2, 'months').toDate()\r\n\t\t);\r\n\t\tslot.endTime = faker.date.between(\r\n\t\t\tslot.startTime,\r\n\t\t\tmoment(slot.startTime).add(7, 'hours').toDate()\r\n\t\t);\r\n\t\tslot.type = faker.random.arrayElement(\r\n\t\t\tObject.values(AvailabilitySlotType)\r\n\t\t);\r\n\t\tslots.push(slot);\r\n\t}\r\n\tawait connection.manager.save(slots);\r\n\treturn slots;\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository, FindManyOptions } from 'typeorm';\r\nimport { AvailabilitySlot } from './availability-slots.entity';\r\nimport { CrudService } from '../core/crud/crud.service';\r\nimport { IPagination } from '../core';\r\nimport { IAvailabilitySlotsCreateInput } from '@gauzy/models';\r\n\r\n@Injectable()\r\nexport class AvailabilitySlotsService extends CrudService<AvailabilitySlot> {\r\n\tconstructor(\r\n\t\t@InjectRepository(AvailabilitySlot)\r\n\t\tprivate readonly availabilitySlotsRepository: Repository<\r\n\t\t\tAvailabilitySlot\r\n\t\t>\r\n\t) {\r\n\t\tsuper(availabilitySlotsRepository);\r\n\t}\r\n\r\n\tpublic async findAll(\r\n\t\tfilter?: FindManyOptions<AvailabilitySlot>\r\n\t): Promise<IPagination<AvailabilitySlot>> {\r\n\t\tconst total = await this.repository.count(filter);\r\n\t\tconst items = await this.repository.find(filter);\r\n\r\n\t\treturn { items, total };\r\n\t}\r\n\r\n\tpublic async createBulk(\r\n\t\tavailabilitySlots: IAvailabilitySlotsCreateInput[]\r\n\t): Promise<AvailabilitySlot[]> {\r\n\t\treturn this.availabilitySlotsRepository.save(availabilitySlots);\r\n\t}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { IAvailabilitySlotsCreateInput } from '@gauzy/models';\r\n\r\nexport class AvailabilitySlotsBulkCreateCommand implements ICommand {\r\n\tstatic readonly type = '[AvailabilitySlots] Register';\r\n\r\n\tconstructor(public readonly input: IAvailabilitySlotsCreateInput[]) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport {\r\n\tAvailabilityMergeType,\r\n\tIAvailabilitySlotsCreateInput\r\n} from '@gauzy/models';\r\n\r\nexport class AvailabilitySlotsCreateCommand implements ICommand {\r\n\tstatic readonly type = '[AvailabilitySlots] Create';\r\n\r\n\tconstructor(\r\n\t\tpublic readonly input: IAvailabilitySlotsCreateInput,\r\n\t\tpublic readonly insertType: AvailabilityMergeType = AvailabilityMergeType.MERGE\r\n\t) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { IGetAvailabilitySlotsConflictInput } from '@gauzy/models';\r\n\r\nexport class GetConflictAvailabilitySlotsCommand implements ICommand {\r\n\tstatic readonly type = '[AvailabilitySlots] get conflict';\r\n\r\n\tconstructor(public readonly input: IGetAvailabilitySlotsConflictInput) {}\r\n}\r\n","import { CommandBus, CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { AvailabilitySlotsBulkCreateCommand } from '../availability-slots.bulk.create.command';\r\nimport { AvailabilitySlot } from '../../availability-slots.entity';\r\nimport { RequestContext } from '../../../core/context';\r\nimport { AvailabilitySlotsCreateCommand } from '../availability-slots.create.command';\r\n\r\n@CommandHandler(AvailabilitySlotsBulkCreateCommand)\r\nexport class AvailabilitySlotsBulkCreateHandler\r\n\timplements ICommandHandler<AvailabilitySlotsBulkCreateCommand> {\r\n\tconstructor(private readonly commandBus: CommandBus) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: AvailabilitySlotsBulkCreateCommand\r\n\t): Promise<AvailabilitySlot[]> {\r\n\t\tconst { input } = command;\r\n\t\tconst availabilitySlotsArray = [];\r\n\r\n\t\t// const employee = input[0].employeeId\r\n\t\t// \t? await this.employeeService.findOne(input[0].employeeId)\r\n\t\t// \t: null;\r\n\t\t// const organization = await this.organizationService.findOne(\r\n\t\t// \tinput[0].organizationId\r\n\t\t// );\r\n\r\n\t\tconst { tenantId } = RequestContext.currentUser();\r\n\r\n\t\tfor (const o of input) {\r\n\t\t\tlet availabilitySlots = new AvailabilitySlot({\r\n\t\t\t\t...o,\r\n\t\t\t\ttenantId\r\n\t\t\t});\r\n\r\n\t\t\tavailabilitySlots = await this.commandBus.execute(\r\n\t\t\t\tnew AvailabilitySlotsCreateCommand(availabilitySlots)\r\n\t\t\t);\r\n\t\t\tavailabilitySlotsArray.push(availabilitySlots);\r\n\t\t}\r\n\r\n\t\treturn availabilitySlotsArray;\r\n\t}\r\n}\r\n","import { CommandBus, CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { AvailabilitySlotsCreateCommand } from '../availability-slots.create.command';\r\nimport { AvailabilitySlot } from '../../availability-slots.entity';\r\nimport { AvailabilitySlotsService } from '../../availability-slots.service';\r\nimport { GetConflictAvailabilitySlotsCommand } from '../get-conflict-availability-slots.command';\r\nimport { In } from 'typeorm';\r\nimport { pluck } from 'underscore';\r\nimport { AvailabilityMergeType } from '@gauzy/models';\r\n\r\n@CommandHandler(AvailabilitySlotsCreateCommand)\r\nexport class AvailabilitySlotsCreateHandler\r\n\timplements ICommandHandler<AvailabilitySlotsCreateCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly availabilitySlotsService: AvailabilitySlotsService,\r\n\t\tprivate readonly commandBus: CommandBus\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: AvailabilitySlotsCreateCommand\r\n\t): Promise<AvailabilitySlot> {\r\n\t\tconst { input, insertType } = command;\r\n\r\n\t\tconst conflicts: AvailabilitySlot[] = await this.commandBus.execute(\r\n\t\t\tnew GetConflictAvailabilitySlotsCommand({\r\n\t\t\t\temployeeId: input.employeeId,\r\n\t\t\t\tstartTime: input.startTime,\r\n\t\t\t\tendTime: input.endTime,\r\n\t\t\t\ttype: input.type\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif (insertType === AvailabilityMergeType.SKIP) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (conflicts.length > 0) {\r\n\t\t\tif (insertType === AvailabilityMergeType.MERGE) {\r\n\t\t\t\tconst startTimes = conflicts.map((item) =>\r\n\t\t\t\t\tnew Date(item.startTime).getTime()\r\n\t\t\t\t);\r\n\t\t\t\tconst endTimes = conflicts.map((item) =>\r\n\t\t\t\t\tnew Date(item.endTime).getTime()\r\n\t\t\t\t);\r\n\t\t\t\tinput.startTime = new Date(\r\n\t\t\t\t\tMath.min(new Date(input.startTime).getTime(), ...startTimes)\r\n\t\t\t\t);\r\n\t\t\t\tinput.endTime = new Date(\r\n\t\t\t\t\tMath.max(new Date(input.endTime).getTime(), ...endTimes)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tawait this.availabilitySlotsService.delete({\r\n\t\t\t\tid: In(pluck(conflicts, 'id'))\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tconst availabilitySlots = new AvailabilitySlot({\r\n\t\t\t...input\r\n\t\t});\r\n\r\n\t\treturn await this.availabilitySlotsService.create(availabilitySlots);\r\n\t}\r\n}\r\n","import { ICommandHandler, CommandHandler } from '@nestjs/cqrs';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport * as moment from 'moment';\r\nimport { AvailabilitySlot } from '../../availability-slots.entity';\r\nimport { GetConflictAvailabilitySlotsCommand } from '../get-conflict-availability-slots.command';\r\nimport { environment as env } from '@env-api/environment';\r\n\r\n@CommandHandler(GetConflictAvailabilitySlotsCommand)\r\nexport class GetConflictAvailabilitySlotsHandler\r\n\timplements ICommandHandler<GetConflictAvailabilitySlotsCommand> {\r\n\tconstructor(\r\n\t\t@InjectRepository(AvailabilitySlot)\r\n\t\tprivate readonly timeLogRepository: Repository<AvailabilitySlot>\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: GetConflictAvailabilitySlotsCommand\r\n\t): Promise<AvailabilitySlot[]> {\r\n\t\tconst { input } = command;\r\n\r\n\t\tconst startedAt = moment(input.startTime).toISOString();\r\n\t\tconst stoppedAt = moment(input.endTime).toISOString();\r\n\t\tlet conflictQuery = this.timeLogRepository.createQueryBuilder();\r\n\r\n\t\tconflictQuery = conflictQuery\r\n\t\t\t.where(`\"${conflictQuery.alias}\".\"employeeId\" = :employeeId`, {\r\n\t\t\t\temployeeId: input.employeeId\r\n\t\t\t})\r\n\t\t\t.andWhere(\r\n\t\t\t\tenv.database.type === 'sqlite'\r\n\t\t\t\t\t? `${startedAt} >= \"${conflictQuery.alias}\".\"startTime\" and ${startedAt} <= \"${conflictQuery.alias}\".\"endTime\"`\r\n\t\t\t\t\t: `(\"${conflictQuery.alias}\".\"startTime\", \"${conflictQuery.alias}\".\"endTime\") OVERLAPS (timestamptz '${startedAt}', timestamptz '${stoppedAt}')`\r\n\t\t\t);\r\n\r\n\t\tif (input.type) {\r\n\t\t\tconflictQuery.andWhere(`${conflictQuery.alias}.type = :type`, {\r\n\t\t\t\ttype: input.type\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (input.relations) {\r\n\t\t\tinput.relations.forEach((relation) => {\r\n\t\t\t\tconflictQuery = conflictQuery.leftJoinAndSelect(\r\n\t\t\t\t\t`${conflictQuery.alias}.${relation}`,\r\n\t\t\t\t\trelation\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (input.ignoreId) {\r\n\t\t\tconflictQuery = conflictQuery.andWhere(\r\n\t\t\t\t`${conflictQuery.alias}.id NOT IN (:...id)`,\r\n\t\t\t\t{\r\n\t\t\t\t\tid:\r\n\t\t\t\t\t\tinput.ignoreId instanceof Array\r\n\t\t\t\t\t\t\t? input.ignoreId\r\n\t\t\t\t\t\t\t: [input.ignoreId]\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn await conflictQuery.getMany();\r\n\t}\r\n}\r\n","import { AvailabilitySlotsCreateHandler } from './availability-slots.create.handler';\r\nimport { AvailabilitySlotsBulkCreateHandler } from './availability-slots.bulk.create.handler';\r\nimport { GetConflictAvailabilitySlotsHandler } from './get-conflict-availability-slots.handler';\r\n\r\nexport const CommandHandlers = [\r\n\tAvailabilitySlotsCreateHandler,\r\n\tAvailabilitySlotsBulkCreateHandler,\r\n\tGetConflictAvailabilitySlotsHandler\r\n];\r\n","import {\r\n\tHttpStatus,\r\n\tGet,\r\n\tQuery,\r\n\tUseGuards,\r\n\tPost,\r\n\tController,\r\n\tBody,\r\n\tDelete,\r\n\tPut\r\n} from '@nestjs/common';\r\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport { CrudController } from '../core/crud/crud.controller';\r\nimport { IPagination } from '../core';\r\nimport { CommandBus } from '@nestjs/cqrs';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { CandidateCriterionsRatingService } from './candidate-criterion-rating.service';\r\nimport { CandidateCriterionsRating } from './candidate-criterion-rating.entity';\r\nimport { ICandidateCriterionsRating, RolesEnum } from '@gauzy/models';\r\nimport { RoleGuard } from '../shared/guards/auth/role.guard';\r\nimport { Roles } from '../shared/decorators/roles';\r\nimport { CandidateCriterionsRatingBulkCreateCommand } from './commands/candidate-criterions-rating.bulk.create.command';\r\nimport { ParseJsonPipe } from '../shared';\r\nimport { CandidateCriterionsRatingBulkDeleteCommand } from './commands/candidate-criterions-rating.bulk.delete.command';\r\nimport { CandidateCriterionsRatingBulkUpdateCommand } from './commands';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@ApiTags('CandidateCriterionRating')\r\n@UseGuards(AuthGuard('jwt'), TenantModule)\r\n@Controller()\r\nexport class CandidateCriterionsRatingController extends CrudController<\r\n\tCandidateCriterionsRating\r\n> {\r\n\tconstructor(\r\n\t\tprivate readonly candidateCriterionsRatingService: CandidateCriterionsRatingService,\r\n\t\tprivate commandBus: CommandBus\r\n\t) {\r\n\t\tsuper(candidateCriterionsRatingService);\r\n\t}\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find all candidate criterion rating.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found candidate criterion rating',\r\n\t\ttype: CandidateCriterionsRating\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get()\r\n\tasync findCriterionRatings(\r\n\t\t@Query('data') data: string\r\n\t): Promise<IPagination<CandidateCriterionsRating>> {\r\n\t\tconst { findInput } = JSON.parse(data);\r\n\t\treturn this.candidateCriterionsRatingService.findAll({\r\n\t\t\twhere: findInput\r\n\t\t});\r\n\t}\r\n\r\n\t@UseGuards(RoleGuard)\r\n\t@Roles(RolesEnum.CANDIDATE, RolesEnum.SUPER_ADMIN, RolesEnum.ADMIN)\r\n\t@Post('createBulk')\r\n\tasync createBulk(\r\n\t\t@Body() input: any\r\n\t): Promise<ICandidateCriterionsRating[]> {\r\n\t\tconst { feedbackId = null, technologies = [], qualities = [] } = input;\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew CandidateCriterionsRatingBulkCreateCommand(\r\n\t\t\t\tfeedbackId,\r\n\t\t\t\ttechnologies,\r\n\t\t\t\tqualities\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n\r\n\t@UseGuards(RoleGuard)\r\n\t@Roles(RolesEnum.CANDIDATE, RolesEnum.SUPER_ADMIN, RolesEnum.ADMIN)\r\n\t@Put('updateBulk')\r\n\tasync updateBulk(\r\n\t\t@Body()\r\n\t\tdata: {\r\n\t\t\tcriterionsRating: ICandidateCriterionsRating[];\r\n\t\t\ttechnologies: number[];\r\n\t\t\tpersonalQualities: number[];\r\n\t\t}\r\n\t): Promise<ICandidateCriterionsRating[]> {\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew CandidateCriterionsRatingBulkUpdateCommand(data)\r\n\t\t);\r\n\t}\r\n\r\n\t@UseGuards(RoleGuard)\r\n\t@Roles(RolesEnum.CANDIDATE, RolesEnum.SUPER_ADMIN, RolesEnum.ADMIN)\r\n\t@Delete('deleteBulk')\r\n\tasync deleteBulk(@Query('data', ParseJsonPipe) data: any): Promise<any> {\r\n\t\tconst { id = null } = data;\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew CandidateCriterionsRatingBulkDeleteCommand(id)\r\n\t\t);\r\n\t}\r\n}\r\n","import { Column, Entity, ManyToOne } from 'typeorm';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsString } from 'class-validator';\r\nimport { ICandidateCriterionsRating } from '@gauzy/models';\r\nimport { CandidateFeedback } from '../candidate-feedbacks/candidate-feedbacks.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('candidate_criterion_rating')\r\nexport class CandidateCriterionsRating extends TenantOrganizationBase\r\n\timplements ICandidateCriterionsRating {\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\trating: number;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@Column({ nullable: true })\r\n\ttechnologyId?: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@Column({ nullable: true })\r\n\tpersonalQualityId?: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@Column({ nullable: true })\r\n\tfeedbackId: string;\r\n\r\n\t@ManyToOne(\r\n\t\t(type) => CandidateFeedback,\r\n\t\t(feedback) => feedback.criterionsRating\r\n\t)\r\n\tfeedback: CandidateFeedback;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { RoleModule } from '../role/role.module';\r\nimport { UserModule } from '../user/user.module';\r\nimport { RolePermissionsModule } from '../role-permissions/role-permissions.module';\r\nimport { AuthModule } from '../auth/auth.module';\r\nimport { CandidateCriterionsRating } from './candidate-criterion-rating.entity';\r\nimport { CandidateCriterionsRatingService } from './candidate-criterion-rating.service';\r\nimport { CandidateCriterionsRatingController } from './candidate-criterion-rating.controller';\r\nimport { CommandHandlers } from './commands/handlers';\r\nimport { CqrsModule } from '@nestjs/cqrs';\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([CandidateCriterionsRating]),\r\n\t\tUserModule,\r\n\t\tRoleModule,\r\n\t\tRolePermissionsModule,\r\n\t\tAuthModule,\r\n\t\tCqrsModule\r\n\t],\r\n\tproviders: [CandidateCriterionsRatingService, ...CommandHandlers],\r\n\tcontrollers: [CandidateCriterionsRatingController],\r\n\texports: [CandidateCriterionsRatingService]\r\n})\r\nexport class CandidateCriterionsRatingModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { ICandidate } from '@gauzy/models';\r\nimport { CandidateCriterionsRating } from './candidate-criterion-rating.entity';\r\nimport { CandidateFeedback } from '../candidate-feedbacks/candidate-feedbacks.entity';\r\nimport { CandidatePersonalQualities } from '../candidate-personal-qualities/candidate-personal-qualities.entity';\r\nimport { CandidateTechnologies } from '../candidate-technologies/candidate-technologies.entity';\r\nimport { CandidateInterview } from '../candidate-interview/candidate-interview.entity';\r\nimport { Organization } from '../organization/organization.entity';\r\n\r\nexport const createDefaultCandidateCriterionRating = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\torganization: Organization,\r\n\tdefaultCandidates\r\n): Promise<CandidateCriterionsRating[]> => {\r\n\tif (!defaultCandidates) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: defaultCandidates not found, default Criterion rating  will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tlet candidates: CandidateCriterionsRating[] = [];\r\n\r\n\tfor (const defaultCandidate of defaultCandidates) {\r\n\t\tconst candidateInterviews = await connection.manager.find(\r\n\t\t\tCandidateInterview,\r\n\t\t\t{\r\n\t\t\t\twhere: [{ candidate: defaultCandidate }]\r\n\t\t\t}\r\n\t\t);\r\n\t\tfor (const interview of candidateInterviews) {\r\n\t\t\tconst candidatesFeedback = await connection.manager.find(\r\n\t\t\t\tCandidateFeedback,\r\n\t\t\t\t{\r\n\t\t\t\t\twhere: [{ candidate: defaultCandidate }]\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\tconst candidatesPersonalQualities = await connection.manager.find(\r\n\t\t\t\tCandidatePersonalQualities,\r\n\t\t\t\t{\r\n\t\t\t\t\twhere: [{ interview: interview }]\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\tconst candidatesTechnologies = await connection.manager.find(\r\n\t\t\t\tCandidateTechnologies,\r\n\t\t\t\t{\r\n\t\t\t\t\twhere: [{ interview: interview }]\r\n\t\t\t\t}\r\n\t\t\t);\r\n\r\n\t\t\tcandidates = await dataOperation(\r\n\t\t\t\tconnection,\r\n\t\t\t\ttenant,\r\n\t\t\t\torganization,\r\n\t\t\t\tcandidates,\r\n\t\t\t\tcandidatesFeedback,\r\n\t\t\t\tcandidatesTechnologies,\r\n\t\t\t\tcandidatesPersonalQualities\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\treturn candidates;\r\n};\r\n\r\nexport const createRandomCandidateCriterionRating = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantCandidatesMap: Map<Tenant, ICandidate[]> | void\r\n): Promise<CandidateCriterionsRating[]> => {\r\n\tif (!tenantCandidatesMap) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: tenantCandidatesMap not found, Criterion rating  will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tlet candidates: CandidateCriterionsRating[] = [];\r\n\r\n\tfor (const tenant of tenants) {\r\n\t\tconst tenantCandidates = tenantCandidatesMap.get(tenant);\r\n\t\tfor (const tenantCandidate of tenantCandidates) {\r\n\t\t\tconst candidateInterviews = await connection.manager.find(\r\n\t\t\t\tCandidateInterview,\r\n\t\t\t\t{\r\n\t\t\t\t\twhere: [{ candidate: tenantCandidate }]\r\n\t\t\t\t}\r\n\t\t\t);\r\n\r\n\t\t\tfor (const interview of candidateInterviews) {\r\n\t\t\t\tconst candidatesFeedback = await connection.manager.find(\r\n\t\t\t\t\tCandidateFeedback,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\twhere: [{ candidate: tenantCandidate }]\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t\tconst candidatesPersonalQualities = await connection.manager.find(\r\n\t\t\t\t\tCandidatePersonalQualities,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\twhere: [{ interview: interview }]\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t\tconst candidatesTechnologies = await connection.manager.find(\r\n\t\t\t\t\tCandidateTechnologies,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\twhere: [{ interview: interview }]\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\r\n\t\t\t\tcandidates = await dataOperation(\r\n\t\t\t\t\tconnection,\r\n\t\t\t\t\ttenant,\r\n\t\t\t\t\tinterview.organization,\r\n\t\t\t\t\tcandidates,\r\n\t\t\t\t\tcandidatesFeedback,\r\n\t\t\t\t\tcandidatesTechnologies,\r\n\t\t\t\t\tcandidatesPersonalQualities\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn candidates;\r\n};\r\n\r\nconst dataOperation = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\torganization: Organization,\r\n\tcandidates,\r\n\tcandidatesFeedback,\r\n\tcandidatesTechnologies,\r\n\tcandidatesPersonalQualities\r\n) => {\r\n\tfor (const feedback of candidatesFeedback) {\r\n\t\tconst candidate = new CandidateCriterionsRating();\r\n\t\tcandidate.rating = Math.floor(Math.random() * 5) + 1;\r\n\t\tcandidate.technologyId = candidatesTechnologies[0].id;\r\n\t\tcandidate.personalQualityId = candidatesPersonalQualities[0].id;\r\n\t\tcandidate.feedbackId = feedback.id;\r\n\t\tcandidate.feedback = feedback;\r\n\t\tcandidate.tenant = tenant;\r\n\t\tcandidate.organization = organization;\r\n\t\tcandidates.push(candidate);\r\n\t}\r\n\tawait connection.manager.save(candidates);\r\n\treturn candidates;\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { CrudService } from '../core/crud/crud.service';\r\nimport { CandidateCriterionsRating } from './candidate-criterion-rating.entity';\r\nimport {\r\n\tICandidateCriterionsRating,\r\n\tICandidateCriterionsRatingCreateInput\r\n} from '@gauzy/models';\r\n\r\n@Injectable()\r\nexport class CandidateCriterionsRatingService extends CrudService<\r\n\tCandidateCriterionsRating\r\n> {\r\n\tconstructor(\r\n\t\t@InjectRepository(CandidateCriterionsRating)\r\n\t\tprivate readonly candidateCriterionsRatingRepository: Repository<\r\n\t\t\tCandidateCriterionsRating\r\n\t\t>\r\n\t) {\r\n\t\tsuper(candidateCriterionsRatingRepository);\r\n\t}\r\n\r\n\tasync createBulk(\r\n\t\ttechnologyCreateInput: ICandidateCriterionsRatingCreateInput[],\r\n\t\tqualityCreateInput: ICandidateCriterionsRatingCreateInput[]\r\n\t) {\r\n\t\treturn [\r\n\t\t\tawait this.repository.save(technologyCreateInput),\r\n\t\t\tawait this.repository.save(qualityCreateInput)\r\n\t\t];\r\n\t}\r\n\r\n\tasync getCriterionsByFeedbackId(\r\n\t\tfeedbackId: string\r\n\t): Promise<CandidateCriterionsRating[]> {\r\n\t\treturn await this.repository\r\n\t\t\t.createQueryBuilder('candidate_feedback')\r\n\t\t\t.where('candidate_feedback.feedbackId = :feedbackId', {\r\n\t\t\t\tfeedbackId\r\n\t\t\t})\r\n\t\t\t.getMany();\r\n\t}\r\n\tasync deleteBulk(ids: string[]) {\r\n\t\treturn await this.repository.delete(ids);\r\n\t}\r\n\tasync updateBulk(\r\n\t\ttech: ICandidateCriterionsRating[],\r\n\t\tqual: ICandidateCriterionsRating[]\r\n\t) {\r\n\t\treturn [\r\n\t\t\tawait this.repository.save(tech),\r\n\t\t\tawait this.repository.save(qual)\r\n\t\t];\r\n\t}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class CandidateCriterionsRatingBulkCreateCommand implements ICommand {\r\n\tstatic readonly type = '[CandidateCriterionsRating] Register';\r\n\r\n\tconstructor(\r\n\t\tpublic readonly feedbackId: string,\r\n\t\tpublic readonly technologies: any[],\r\n\t\tpublic readonly qualities: any[]\r\n\t) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class CandidateCriterionsRatingBulkDeleteCommand implements ICommand {\r\n\tstatic readonly type = '[CandidateCriterionsRating] Delete';\r\n\r\n\tconstructor(public readonly id: string) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { ICandidateCriterionsRating } from '@gauzy/models';\r\n\r\nexport class CandidateCriterionsRatingBulkUpdateCommand implements ICommand {\r\n\tstatic readonly type = '[CandidateCriterionsRating] Update';\r\n\r\n\tconstructor(\r\n\t\tpublic readonly data: {\r\n\t\t\tcriterionsRating: ICandidateCriterionsRating[];\r\n\t\t\ttechnologies: number[];\r\n\t\t\tpersonalQualities: number[];\r\n\t\t}\r\n\t) {}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { CandidateCriterionsRatingBulkCreateCommand } from '../candidate-criterions-rating.bulk.create.command';\r\nimport { CandidateCriterionsRatingService } from '../../candidate-criterion-rating.service';\r\nimport { ICandidateCriterionsRatingCreateInput } from '@gauzy/models';\r\n\r\n@CommandHandler(CandidateCriterionsRatingBulkCreateCommand)\r\nexport class CandidateCriterionsRatingBulkCreateHandler\r\n\timplements ICommandHandler<CandidateCriterionsRatingBulkCreateCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly candidateCriterionsRatingService: CandidateCriterionsRatingService\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: CandidateCriterionsRatingBulkCreateCommand\r\n\t): Promise<any> {\r\n\t\tconst { feedbackId, technologies, qualities } = command;\r\n\t\tlet technologyRating: ICandidateCriterionsRatingCreateInput;\r\n\t\tconst technologyCreateInput: ICandidateCriterionsRatingCreateInput[] = [];\r\n\t\tfor (const item of technologies) {\r\n\t\t\ttechnologyRating = {\r\n\t\t\t\trating: item.rating,\r\n\t\t\t\ttechnologyId: item.id,\r\n\t\t\t\tfeedbackId: feedbackId,\r\n\t\t\t\torganizationId: item.organizationId,\r\n\t\t\t\ttenantId: item.tenantId\r\n\t\t\t};\r\n\t\t\ttechnologyCreateInput.push(technologyRating);\r\n\t\t}\r\n\r\n\t\tlet qualityRating: ICandidateCriterionsRatingCreateInput;\r\n\t\tconst qualityCreateInput: ICandidateCriterionsRatingCreateInput[] = [];\r\n\t\tfor (const item of qualities) {\r\n\t\t\tqualityRating = {\r\n\t\t\t\trating: item.rating,\r\n\t\t\t\tpersonalQualityId: item.id,\r\n\t\t\t\tfeedbackId: feedbackId,\r\n\t\t\t\torganizationId: item.organizationId,\r\n\t\t\t\ttenantId: item.tenantId\r\n\t\t\t};\r\n\t\t\tqualityCreateInput.push(qualityRating);\r\n\t\t}\r\n\r\n\t\treturn await this.candidateCriterionsRatingService.createBulk(\r\n\t\t\ttechnologyCreateInput,\r\n\t\t\tqualityCreateInput\r\n\t\t);\r\n\t}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { CandidateCriterionsRatingBulkDeleteCommand } from '../candidate-criterions-rating.bulk.delete.command';\r\nimport { CandidateCriterionsRatingService } from '../../candidate-criterion-rating.service';\r\n\r\n@CommandHandler(CandidateCriterionsRatingBulkDeleteCommand)\r\nexport class CandidateCriterionsRatingBulkDeleteHandler\r\n\timplements ICommandHandler<CandidateCriterionsRatingBulkDeleteCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly candidateCriterionsRatingService: CandidateCriterionsRatingService\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: CandidateCriterionsRatingBulkDeleteCommand\r\n\t): Promise<any> {\r\n\t\tconst { id } = command;\r\n\t\tconst criterions = await this.candidateCriterionsRatingService.getCriterionsByFeedbackId(\r\n\t\t\tid\r\n\t\t);\r\n\t\tif (criterions.length > 0) {\r\n\t\t\tawait this.candidateCriterionsRatingService.deleteBulk(\r\n\t\t\t\tcriterions.map((item) => item.id)\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n}\r\n","import { ICandidateCriterionsRating } from '@gauzy/models';\r\nimport { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { CandidateCriterionsRatingService } from '../../candidate-criterion-rating.service';\r\nimport { CandidateCriterionsRatingBulkUpdateCommand } from '../candidate-criterions-rating.bulk.update.command';\r\n\r\n@CommandHandler(CandidateCriterionsRatingBulkUpdateCommand)\r\nexport class CandidateCriterionsRatingBulkUpdateHandler\r\n\timplements ICommandHandler<CandidateCriterionsRatingBulkUpdateCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly candidateCriterionsRatingService: CandidateCriterionsRatingService\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: CandidateCriterionsRatingBulkUpdateCommand\r\n\t): Promise<any> {\r\n\t\tconst { data } = command;\r\n\t\treturn this.candidateCriterionsRatingService.updateBulk(\r\n\t\t\tthis.setRating(\r\n\t\t\t\tdata.personalQualities,\r\n\t\t\t\tdata.criterionsRating.filter((tech) => tech.personalQualityId)\r\n\t\t\t),\r\n\t\t\tthis.setRating(\r\n\t\t\t\tdata.technologies,\r\n\t\t\t\tdata.criterionsRating.filter((tech) => tech.technologyId)\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n\tsetRating(ratings: number[], data: ICandidateCriterionsRating[]) {\r\n\t\tfor (let i = 0; i < ratings.length; i++) {\r\n\t\t\tdata[i].rating = ratings[i];\r\n\t\t}\r\n\t\treturn data;\r\n\t}\r\n}\r\n","import { CandidateCriterionsRatingBulkDeleteHandler } from './candidate-criterions-rating.bulk.delete.handler';\r\nimport { CandidateCriterionsRatingBulkCreateHandler } from './candidate-criterions-rating.bulk.create.handler';\r\nimport { CandidateCriterionsRatingBulkUpdateHandler } from './candidate-criterions-rating.bulk.update.handler';\r\nexport const CommandHandlers = [\r\n\tCandidateCriterionsRatingBulkDeleteHandler,\r\n\tCandidateCriterionsRatingBulkCreateHandler,\r\n\tCandidateCriterionsRatingBulkUpdateHandler\r\n];\r\n","export { CandidateCriterionsRatingBulkDeleteCommand } from './candidate-criterions-rating.bulk.delete.command';\r\nexport { CandidateCriterionsRatingBulkCreateCommand } from './candidate-criterions-rating.bulk.create.command';\r\nexport { CandidateCriterionsRatingBulkUpdateCommand } from './candidate-criterions-rating.bulk.update.command';\r\n","import { Controller, HttpStatus, Get, Query, UseGuards } from '@nestjs/common';\r\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport { CrudController } from '../core/crud/crud.controller';\r\nimport { CandidateDocumentsService } from './candidate-documents.service';\r\nimport { CandidateDocument } from './candidate-documents.entity';\r\nimport { IPagination } from '../core';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { PermissionGuard } from '../shared/guards/auth/permission.guard';\r\nimport { Permissions } from '../shared/decorators/permissions';\r\nimport { PermissionsEnum } from '@gauzy/models';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('CandidateDocument')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class CandidateDocumentsController extends CrudController<\r\n\tCandidateDocument\r\n> {\r\n\tconstructor(\r\n\t\tprivate readonly candidateDocumentsService: CandidateDocumentsService\r\n\t) {\r\n\t\tsuper(candidateDocumentsService);\r\n\t}\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find all candidate document.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found candidate document',\r\n\t\ttype: CandidateDocument\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_CANDIDATES_DOCUMENTS_VIEW)\r\n\t@Get()\r\n\tasync findDocument(\r\n\t\t@Query('data') data: string\r\n\t): Promise<IPagination<CandidateDocument>> {\r\n\t\tconst { findInput } = JSON.parse(data);\r\n\t\treturn this.candidateDocumentsService.findAll({ where: findInput });\r\n\t}\r\n}\r\n","import { Column, Entity, ManyToOne } from 'typeorm';\r\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\r\nimport { ICandidateDocument, ICandidate } from '@gauzy/models';\r\nimport { Candidate } from '../candidate/candidate.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('candidate_document')\r\nexport class CandidateDocument\r\n\textends TenantOrganizationBase\r\n\timplements ICandidateDocument {\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\tname: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column({ nullable: true })\r\n\tcandidateId?: string;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@Column({ nullable: true })\r\n\tdocumentUrl: string;\r\n\r\n\t@ManyToOne((type) => Candidate, (candidate) => candidate.documents, {\r\n\t\tonDelete: 'CASCADE'\r\n\t})\r\n\tcandidate: ICandidate;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { CandidateDocumentsController } from './candidate-documents.controller';\r\nimport { CandidateDocument } from './candidate-documents.entity';\r\nimport { CandidateDocumentsService } from './candidate-documents.service';\r\nimport { UserService } from '../user/user.service';\r\nimport { User } from '../user/user.entity';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([User, CandidateDocument]),\r\n\t\tTenantModule\r\n\t],\r\n\tproviders: [CandidateDocumentsService, UserService],\r\n\tcontrollers: [CandidateDocumentsController],\r\n\texports: [CandidateDocumentsService, UserService]\r\n})\r\nexport class CandidateDocumentsModule {}\r\n","import { ICandidate } from '@gauzy/models';\r\nimport * as faker from 'faker';\r\nimport { Connection } from 'typeorm';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { CandidateDocument } from './candidate-documents.entity';\r\nimport { DEFAULT_CANDIDATE_DOCUMENTS } from './default-candidate-documents';\r\n\r\nexport const createCandidateDocuments = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\tcandidates: ICandidate[] | void,\r\n\torganization: Organization\r\n): Promise<CandidateDocument[]> => {\r\n\tlet defaultCandidateDocuments = [];\r\n\r\n\tif (!candidates) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: candidates not found, CandidateDocuments will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\tcandidates.forEach((candidate) => {\r\n\t\tconst documents = DEFAULT_CANDIDATE_DOCUMENTS.map((document) => ({\r\n\t\t\tname: document.name,\r\n\t\t\tdocumentUrl: document.documentUrl,\r\n\t\t\tcandidateId: candidate.id,\r\n\t\t\ttenant: tenant,\r\n\t\t\torganization: organization\r\n\t\t}));\r\n\r\n\t\tdefaultCandidateDocuments = [\r\n\t\t\t...defaultCandidateDocuments,\r\n\t\t\t...documents\r\n\t\t];\r\n\t});\r\n\r\n\tinsertCandidateDocuments(connection, defaultCandidateDocuments);\r\n\treturn defaultCandidateDocuments;\r\n};\r\n\r\nexport const createRandomCandidateDocuments = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantCandidatesMap: Map<Tenant, ICandidate[]> | void\r\n): Promise<Map<ICandidate, CandidateDocument[]>> => {\r\n\tif (!tenantCandidatesMap) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: tenantCandidatesMap not found, CandidateDocuments will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tlet candidateDocuments = [];\r\n\tconst candidateDocumentsMap: Map<ICandidate, any[]> = new Map();\r\n\r\n\tfor await (const tenant of tenants || []) {\r\n\t\tconst organizations = await connection.manager.find(Organization, {\r\n\t\t\twhere: [{ tenant: tenant }]\r\n\t\t});\r\n\t\tconst candidates = tenantCandidatesMap.get(tenant);\r\n\t\t(candidates || []).forEach((candidate) => {\r\n\t\t\tconst documents = DEFAULT_CANDIDATE_DOCUMENTS.map((document) => ({\r\n\t\t\t\tname: document.name,\r\n\t\t\t\tdocumentUrl: document.documentUrl,\r\n\t\t\t\tcandidateId: candidate.id,\r\n\t\t\t\torganization: faker.random.arrayElement(organizations),\r\n\t\t\t\ttenant: tenant\r\n\t\t\t}));\r\n\r\n\t\t\tcandidateDocumentsMap.set(candidate, documents);\r\n\t\t\tcandidateDocuments = [...candidateDocuments, ...documents];\r\n\t\t});\r\n\t}\r\n\r\n\tawait insertCandidateDocuments(connection, candidateDocuments);\r\n\treturn candidateDocumentsMap;\r\n};\r\n\r\nconst insertCandidateDocuments = async (\r\n\tconnection: Connection,\r\n\tcandidateDocuments: CandidateDocument[]\r\n) => {\r\n\tawait connection\r\n\t\t.createQueryBuilder()\r\n\t\t.insert()\r\n\t\t.into(CandidateDocument)\r\n\t\t.values(candidateDocuments)\r\n\t\t.execute();\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { CrudService } from '../core/crud/crud.service';\r\nimport { CandidateDocument } from './candidate-documents.entity';\r\n\r\n@Injectable()\r\nexport class CandidateDocumentsService extends CrudService<CandidateDocument> {\r\n\tconstructor(\r\n\t\t@InjectRepository(CandidateDocument)\r\n\t\tprivate readonly candidateDocumentRepository: Repository<\r\n\t\t\tCandidateDocument\r\n\t\t>\r\n\t) {\r\n\t\tsuper(candidateDocumentRepository);\r\n\t}\r\n}\r\n","import { ICandidateDocument } from '@gauzy/models';\r\n\r\nexport const DEFAULT_CANDIDATE_DOCUMENTS: ICandidateDocument[] = [\r\n\t{\r\n\t\tname: 'Document 1',\r\n\t\tdocumentUrl:\r\n\t\t\t'http://res.cloudinary.com/evereq/image/upload/v1587742725/everbie-products-images/n07vjqa8pa8dfinkzqdy.pdf',\r\n\t\ttenant: {}\r\n\t},\r\n\t{\r\n\t\tname: 'Document 2',\r\n\t\tdocumentUrl:\r\n\t\t\t'http://res.cloudinary.com/evereq/raw/upload/v1587742757/everbie-products-images/wxjghcvuysc3imrx7z2t.docx',\r\n\t\ttenant: {}\r\n\t}\r\n];\r\n","import { CandidateEducationService } from './candidate-education.service';\r\nimport { Controller, HttpStatus, Get, Query, UseGuards } from '@nestjs/common';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport { CrudController } from '../core/crud/crud.controller';\r\nimport { CandidateEducation } from './candidate-education.entity';\r\nimport { IPagination } from '../core';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('CandidateEducation')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class CandidateEducationController extends CrudController<\r\n\tCandidateEducation\r\n> {\r\n\tconstructor(\r\n\t\tprivate readonly candidateEducationService: CandidateEducationService\r\n\t) {\r\n\t\tsuper(candidateEducationService);\r\n\t}\r\n\t// GET\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find all candidate education.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found candidate education',\r\n\t\ttype: CandidateEducation\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get()\r\n\tasync findEducations(\r\n\t\t@Query('data') data: string\r\n\t): Promise<IPagination<CandidateEducation>> {\r\n\t\tconst { findInput } = JSON.parse(data);\r\n\t\treturn this.candidateEducationService.findAll({ where: findInput });\r\n\t}\r\n}\r\n","import { Column, Entity, ManyToOne } from 'typeorm';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsString, IsNotEmpty } from 'class-validator';\r\nimport { ICandidateEducation, ICandidate } from '@gauzy/models';\r\nimport { Candidate } from '../candidate/candidate.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('candidate_education')\r\nexport class CandidateEducation\r\n\textends TenantOrganizationBase\r\n\timplements ICandidateEducation {\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\tschoolName: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\tdegree: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\tfield: string;\r\n\r\n\t@ApiProperty({ type: Date })\r\n\t@Column()\r\n\tcompletionDate: Date;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column({ nullable: true })\r\n\tnotes?: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Column({ nullable: true })\r\n\tcandidateId?: string;\r\n\r\n\t@ManyToOne((type) => Candidate, (candidate) => candidate.educations, {\r\n\t\tonDelete: 'CASCADE'\r\n\t})\r\n\tcandidate: ICandidate;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { CandidateEducationService } from './candidate-education.service';\r\nimport { CandidateEducation } from './candidate-education.entity';\r\nimport { CandidateEducationController } from './candidate-education.controller';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [TypeOrmModule.forFeature([CandidateEducation]), TenantModule],\r\n\tproviders: [CandidateEducationService],\r\n\tcontrollers: [CandidateEducationController],\r\n\texports: [CandidateEducationService]\r\n})\r\nexport class CandidateEducationModule {}\r\n","import { ICandidate } from '@gauzy/models';\r\nimport { Connection } from 'typeorm';\r\nimport { CandidateEducation } from './candidate-education.entity';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport * as faker from 'faker';\r\nimport { DEFAULT_CANDIDATE_EDUCATIONS } from './default-candidate-educations';\r\n\r\nexport const createCandidateEducations = async (\r\n\tconnection: Connection,\r\n\tcandidates: ICandidate[] | void\r\n): Promise<CandidateEducation[]> => {\r\n\tlet defaultCandidateEducation = [];\r\n\r\n\tif (!candidates) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: candidates not found, CandidateEducation will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\tcandidates.forEach((candidate) => {\r\n\t\tconst educations = DEFAULT_CANDIDATE_EDUCATIONS.map((education) => ({\r\n\t\t\tschoolName: education.schoolName,\r\n\t\t\tdegree: education.degree,\r\n\t\t\tcompletionDate: education.completionDate,\r\n\t\t\tfield: education.field,\r\n\t\t\tcandidateId: candidate.id,\r\n\t\t\torganization: candidate.organization,\r\n\t\t\ttenant: candidate.tenant,\r\n\t\t\tnotes: faker.lorem.sentence()\r\n\t\t}));\r\n\t\tdefaultCandidateEducation = [\r\n\t\t\t...defaultCandidateEducation,\r\n\t\t\t...educations\r\n\t\t];\r\n\t});\r\n\tinsertCandidateEducations(connection, defaultCandidateEducation);\r\n\r\n\treturn defaultCandidateEducation;\r\n};\r\n\r\nexport const createRandomCandidateEducations = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantCandidatesMap: Map<Tenant, ICandidate[]> | void\r\n): Promise<Map<ICandidate, CandidateEducation[]>> => {\r\n\tif (!tenantCandidatesMap) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: tenantCandidatesMap not found, CandidateEducation will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tlet candidateEducation = [];\r\n\tconst candidateEducationsMap: Map<ICandidate, any[]> = new Map();\r\n\r\n\tfor await (const tenant of tenants || []) {\r\n\t\tconst organizations = await connection.manager.find(Organization, {\r\n\t\t\twhere: [{ tenant: tenant }]\r\n\t\t});\r\n\t\tconst candidates = tenantCandidatesMap.get(tenant);\r\n\r\n\t\t(candidates || []).forEach((candidate) => {\r\n\t\t\tconst educations = DEFAULT_CANDIDATE_EDUCATIONS.map(\r\n\t\t\t\t(education) => ({\r\n\t\t\t\t\tschoolName: education.schoolName,\r\n\t\t\t\t\tdegree: education.degree,\r\n\t\t\t\t\tcompletionDate: education.completionDate,\r\n\t\t\t\t\tfield: education.field,\r\n\t\t\t\t\tcandidateId: candidate.id,\r\n\t\t\t\t\torganization: faker.random.arrayElement(organizations),\r\n\t\t\t\t\ttenant: tenant,\r\n\t\t\t\t\tnotes: faker.lorem.sentence()\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\tcandidateEducationsMap.set(candidate, educations);\r\n\t\t\tcandidateEducation = [\r\n\t\t\t\t...DEFAULT_CANDIDATE_EDUCATIONS,\r\n\t\t\t\t...educations\r\n\t\t\t];\r\n\t\t});\r\n\t}\r\n\r\n\tawait insertCandidateEducations(connection, candidateEducation);\r\n\treturn candidateEducationsMap;\r\n};\r\n\r\nconst insertCandidateEducations = async (\r\n\tconnection: Connection,\r\n\teducations: CandidateEducation[]\r\n) => {\r\n\tawait connection\r\n\t\t.createQueryBuilder()\r\n\t\t.insert()\r\n\t\t.into(CandidateEducation)\r\n\t\t.values(educations)\r\n\t\t.execute();\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { CrudService } from '../core/crud/crud.service';\r\nimport { CandidateEducation } from './candidate-education.entity';\r\n\r\n@Injectable()\r\nexport class CandidateEducationService extends CrudService<CandidateEducation> {\r\n\tconstructor(\r\n\t\t@InjectRepository(CandidateEducation)\r\n\t\tprivate readonly candidateEducationRepository: Repository<\r\n\t\t\tCandidateEducation\r\n\t\t>\r\n\t) {\r\n\t\tsuper(candidateEducationRepository);\r\n\t}\r\n}\r\n","import { ICandidateEducation } from '@gauzy/models';\r\n\r\nexport const DEFAULT_CANDIDATE_EDUCATIONS: ICandidateEducation[] = [\r\n\t{\r\n\t\tschoolName: 'MIT',\r\n\t\tdegree: 'Master',\r\n\t\tcompletionDate: new Date(2017, 4, 4),\r\n\t\tfield: 'Computer Science'\r\n\t}\r\n];\r\n","import { Controller, HttpStatus, Get, Query, UseGuards } from '@nestjs/common';\r\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport { CrudController } from '../core/crud/crud.controller';\r\nimport { CandidateExperienceService } from './candidate-experience.service';\r\nimport { CandidateExperience } from './candidate-experience.entity';\r\nimport { IPagination } from '../core';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('CandidateExperience')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class CandidateExperienceController extends CrudController<\r\n\tCandidateExperience\r\n> {\r\n\tconstructor(\r\n\t\tprivate readonly candidateExperienceService: CandidateExperienceService\r\n\t) {\r\n\t\tsuper(candidateExperienceService);\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find all candidate experience.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found candidate experience',\r\n\t\ttype: CandidateExperience\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get()\r\n\tasync findExperience(\r\n\t\t@Query('data') data: string\r\n\t): Promise<IPagination<CandidateExperience>> {\r\n\t\tconst { findInput, relations } = JSON.parse(data);\r\n\t\treturn this.candidateExperienceService.findAll({\r\n\t\t\twhere: findInput,\r\n\t\t\trelations\r\n\t\t});\r\n\t}\r\n}\r\n","import { Column, Entity, ManyToOne } from 'typeorm';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsString, IsNotEmpty } from 'class-validator';\r\nimport { ICandidateExperience, ICandidate } from '@gauzy/models';\r\nimport { Candidate } from '../candidate/candidate.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('candidate_experience')\r\nexport class CandidateExperience\r\n\textends TenantOrganizationBase\r\n\timplements ICandidateExperience {\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\toccupation: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\tduration: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column({ nullable: true })\r\n\tdescription?: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Column({ nullable: true })\r\n\tcandidateId?: string;\r\n\r\n\t@ManyToOne(() => Candidate, (candidate) => candidate.experience, {\r\n\t\tonDelete: 'CASCADE'\r\n\t})\r\n\tcandidate: ICandidate;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { CandidateExperience } from './candidate-experience.entity';\r\nimport { CandidateExperienceService } from './candidate-experience.service';\r\nimport { CandidateExperienceController } from './candidate-experience.controller';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [TypeOrmModule.forFeature([CandidateExperience]), TenantModule],\r\n\tproviders: [CandidateExperienceService],\r\n\tcontrollers: [CandidateExperienceController],\r\n\texports: [CandidateExperienceService]\r\n})\r\nexport class CandidateExperienceModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { ICandidate } from '@gauzy/models';\r\nimport * as faker from 'faker';\r\nimport { CandidateExperience } from './candidate-experience.entity';\r\nimport { Organization } from '../organization/organization.entity';\r\n\r\nexport const createRandomCandidateExperience = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantCandidatesMap: Map<Tenant, ICandidate[]> | void\r\n): Promise<CandidateExperience[]> => {\r\n\tif (!tenantCandidatesMap) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: tenantCandidatesMap not found, CandidateExperience will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst candidateExperiences: CandidateExperience[] = [];\r\n\r\n\tfor (const tenant of tenants) {\r\n\t\tconst tenantCandidates = tenantCandidatesMap.get(tenant);\r\n\t\tconst organizations = await connection.manager.find(Organization, {\r\n\t\t\twhere: [{ tenant: tenant }]\r\n\t\t});\r\n\t\tfor (const tenantCandidate of tenantCandidates) {\r\n\t\t\tfor (let i = 0; i <= Math.floor(Math.random() * 3) + 1; i++) {\r\n\t\t\t\tconst candidateExperience = new CandidateExperience();\r\n\t\t\t\tlet getExperience =\r\n\t\t\t\t\t(faker.date.past().getDate() -\r\n\t\t\t\t\t\tfaker.date.past().getDate()) /\r\n\t\t\t\t\t\t30 +\r\n\t\t\t\t\tfaker.date.past().getMonth() -\r\n\t\t\t\t\tfaker.date.past().getMonth() +\r\n\t\t\t\t\t12 *\r\n\t\t\t\t\t\t(faker.date.past().getFullYear() -\r\n\t\t\t\t\t\t\tfaker.date.past().getFullYear());\r\n\t\t\t\tgetExperience = Number(getExperience.toFixed(2));\r\n\t\t\t\tconst val = Math.abs(getExperience);\r\n\t\t\t\tcandidateExperience.occupation = faker.name.jobArea();\r\n\t\t\t\tcandidateExperience.organization = faker.random.arrayElement(\r\n\t\t\t\t\torganizations\r\n\t\t\t\t);\r\n\t\t\t\tcandidateExperience.duration =\r\n\t\t\t\t\tval.toString().split('.')[0].toString() + ' months';\r\n\t\t\t\tcandidateExperience.description = faker.lorem.words();\r\n\t\t\t\tcandidateExperience.candidateId = tenantCandidate.id;\r\n\t\t\t\tcandidateExperience.candidate = tenantCandidate;\r\n\t\t\t\tcandidateExperience.tenant = tenant;\r\n\t\t\t\tcandidateExperiences.push(candidateExperience);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn await insertRandomCandidateExperience(\r\n\t\tconnection,\r\n\t\tcandidateExperiences\r\n\t);\r\n};\r\n\r\nconst insertRandomCandidateExperience = async (\r\n\tconnection: Connection,\r\n\tcandidateExperiences: CandidateExperience[]\r\n): Promise<CandidateExperience[]> => {\r\n\treturn await connection.manager.save(candidateExperiences);\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { CrudService } from '../core/crud/crud.service';\r\nimport { CandidateExperience } from './candidate-experience.entity';\r\n\r\n@Injectable()\r\nexport class CandidateExperienceService extends CrudService<\r\n\tCandidateExperience\r\n> {\r\n\tconstructor(\r\n\t\t@InjectRepository(CandidateExperience)\r\n\t\tprivate readonly candidateExperienceRepository: Repository<\r\n\t\t\tCandidateExperience\r\n\t\t>\r\n\t) {\r\n\t\tsuper(candidateExperienceRepository);\r\n\t}\r\n}\r\n","import {\r\n\tController,\r\n\tHttpStatus,\r\n\tGet,\r\n\tQuery,\r\n\tUseGuards,\r\n\tPost,\r\n\tBody,\r\n\tPut,\r\n\tParam,\r\n\tDelete\r\n} from '@nestjs/common';\r\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport { CrudController } from '../core/crud/crud.controller';\r\nimport { IPagination } from '../core';\r\nimport { CandidateFeedback } from './candidate-feedbacks.entity';\r\nimport { CandidateFeedbacksService } from './candidate-feedbacks.service';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { PermissionGuard } from '../shared/guards/auth/permission.guard';\r\nimport { PermissionsEnum, ICandidateFeedbackCreateInput } from '@gauzy/models';\r\nimport { Permissions } from '../shared/decorators/permissions';\r\nimport { ParseJsonPipe } from '../shared';\r\nimport { CommandBus } from '@nestjs/cqrs';\r\nimport { FeedbackUpdateCommand } from './commands/candidate-feedbacks.update.command';\r\nimport { FeedbackDeleteCommand } from './commands/candidate-feedbacks.delete.command';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('CandidateFeedback')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class CandidateFeedbacksController extends CrudController<\r\n\tCandidateFeedback\r\n> {\r\n\tconstructor(\r\n\t\tprivate readonly candidateFeedbacksService: CandidateFeedbacksService,\r\n\t\tprivate readonly commandBus: CommandBus\r\n\t) {\r\n\t\tsuper(candidateFeedbacksService);\r\n\t}\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find all candidate feedback.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found candidate feedback',\r\n\t\ttype: CandidateFeedback\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get()\r\n\tasync findFeedback(\r\n\t\t@Query('data', ParseJsonPipe) data: any\r\n\t): Promise<IPagination<CandidateFeedback>> {\r\n\t\tconst { relations = [], findInput = null } = data;\r\n\t\treturn this.candidateFeedbacksService.findAll({\r\n\t\t\twhere: findInput,\r\n\t\t\trelations\r\n\t\t});\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find candidate feedback by id'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found candidate feedback',\r\n\t\ttype: CandidateFeedback\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get(':id')\r\n\tasync findById(@Param('id') id: string): Promise<CandidateFeedback> {\r\n\t\treturn this.candidateFeedbacksService.findOne(id);\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find feedbacks By Interview Id.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found candidate feedbacks',\r\n\t\ttype: CandidateFeedback\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@UseGuards(PermissionGuard)\r\n\t// TO DO\r\n\t// @Permissions(PermissionsEnum.ORG_CANDIDATES_FEEDBACK_EDIT) TO DO\r\n\t@Get('getByInterviewId/:interviewId')\r\n\tasync findByInterviewId(\r\n\t\t@Param('interviewId') interviewId: string\r\n\t): Promise<CandidateFeedback[]> {\r\n\t\treturn this.candidateFeedbacksService.getFeedbacksByInterviewId(\r\n\t\t\tinterviewId\r\n\t\t);\r\n\t}\r\n\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_CANDIDATES_FEEDBACK_EDIT)\r\n\t@Post()\r\n\tasync createFeedBack(\r\n\t\t@Body() entity: ICandidateFeedbackCreateInput\r\n\t): Promise<any> {\r\n\t\treturn this.candidateFeedbacksService.create(entity);\r\n\t}\r\n\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_CANDIDATES_FEEDBACK_EDIT)\r\n\t@Put(':id')\r\n\tasync updateCandidateFeedback(\r\n\t\t@Param('id') id: string,\r\n\t\t@Body() entity: any\r\n\t): Promise<any> {\r\n\t\treturn this.commandBus.execute(new FeedbackUpdateCommand(id, entity));\r\n\t}\r\n\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_CANDIDATES_FEEDBACK_EDIT)\r\n\t@Delete('deleteFeedback')\r\n\tasync deleteFeedback(\r\n\t\t@Query('data', ParseJsonPipe) data: any\r\n\t): Promise<any> {\r\n\t\tconst { feedbackId = null, interviewId = null } = data;\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew FeedbackDeleteCommand(feedbackId, interviewId)\r\n\t\t);\r\n\t}\r\n}\r\n","import {\r\n\tColumn,\r\n\tEntity,\r\n\tOneToOne,\r\n\tJoinColumn,\r\n\tOneToMany,\r\n\tManyToOne\r\n} from 'typeorm';\r\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\r\nimport {\r\n\tICandidateFeedback,\r\n\tCandidateStatus,\r\n\tICandidateInterviewers,\r\n\tICandidateCriterionsRating,\r\n\tICandidate,\r\n\tICandidateInterview\r\n} from '@gauzy/models';\r\nimport { IsEnum, IsOptional } from 'class-validator';\r\nimport { CandidateInterviewers } from '../candidate-interviewers/candidate-interviewers.entity';\r\nimport { CandidateCriterionsRating } from '../candidate-criterions-rating/candidate-criterion-rating.entity';\r\nimport { Candidate } from '../candidate/candidate.entity';\r\nimport { CandidateInterview } from '../candidate-interview/candidate-interview.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('candidate_feedback')\r\nexport class CandidateFeedback\r\n\textends TenantOrganizationBase\r\n\timplements ICandidateFeedback {\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\tdescription: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column({ nullable: true })\r\n\tcandidateId?: string;\r\n\r\n\t@ApiPropertyOptional({ type: Number })\r\n\t@Column({ nullable: true, type: 'numeric' })\r\n\trating: number;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column({ nullable: true })\r\n\tinterviewId?: string;\r\n\r\n\t@ApiProperty({ type: String, enum: CandidateStatus })\r\n\t@IsEnum(CandidateStatus)\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tstatus?: string;\r\n\r\n\t@ApiProperty({ type: CandidateInterviewers })\r\n\t@OneToOne((type) => CandidateInterviewers)\r\n\t@JoinColumn()\r\n\tinterviewer?: ICandidateInterviewers;\r\n\r\n\t@OneToMany(\r\n\t\t(type) => CandidateCriterionsRating,\r\n\t\t(criterionsRating) => criterionsRating.feedback,\r\n\t\t{\r\n\t\t\tcascade: true\r\n\t\t}\r\n\t)\r\n\t@JoinColumn()\r\n\tcriterionsRating?: ICandidateCriterionsRating[];\r\n\r\n\t@ManyToOne(\r\n\t\t(type) => CandidateInterview,\r\n\t\t(candidateInterview) => candidateInterview.feedbacks,\r\n\t\t{\r\n\t\t\tonDelete: 'CASCADE'\r\n\t\t}\r\n\t)\r\n\tinterview: ICandidateInterview;\r\n\r\n\t@ManyToOne((type) => Candidate, (candidate) => candidate.feedbacks, {\r\n\t\tonDelete: 'CASCADE'\r\n\t})\r\n\tcandidate: ICandidate;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { CandidateFeedback } from './candidate-feedbacks.entity';\r\nimport { CandidateFeedbacksService } from './candidate-feedbacks.service';\r\nimport { CandidateFeedbacksController } from './candidate-feedbacks.controller';\r\nimport { UserService } from '../user/user.service';\r\nimport { User } from '../user/user.entity';\r\nimport { CommandHandlers } from './commands/handlers';\r\nimport { CqrsModule } from '@nestjs/cqrs';\r\nimport { CandidateInterviewService } from '../candidate-interview/candidate-interview.service';\r\nimport { CandidateInterview } from '../candidate-interview/candidate-interview.entity';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([CandidateFeedback, User, CandidateInterview]),\r\n\t\tCqrsModule,\r\n\t\tTenantModule\r\n\t],\r\n\tproviders: [\r\n\t\tCandidateFeedbacksService,\r\n\t\tUserService,\r\n\t\t...CommandHandlers,\r\n\t\tCandidateInterviewService\r\n\t],\r\n\tcontrollers: [CandidateFeedbacksController],\r\n\texports: [CandidateFeedbacksService]\r\n})\r\nexport class CandidateFeedbacksModule {}\r\n","import { ICandidate, CandidateStatus } from '@gauzy/models';\r\nimport { Connection } from 'typeorm';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { CandidateFeedback } from './candidate-feedbacks.entity';\r\nimport { CandidateInterview } from '../candidate-interview/candidate-interview.entity';\r\nimport * as faker from 'faker';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { DEFAULT_CANDIDATE_FEEDBACKS } from './default-candidate-feedbacks';\r\n\r\nexport const createCandidateFeedbacks = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\torganization: Organization,\r\n\tcandidates: ICandidate[] | void\r\n): Promise<Map<ICandidate, CandidateFeedback[]>> => {\r\n\tlet candidateFeedbacksMap: Map<ICandidate, any[]> = new Map();\r\n\r\n\tif (!candidates) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: candidates not found, CandidateFeedbacks will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\tcandidateFeedbacksMap = await dataOperation(\r\n\t\tconnection,\r\n\t\ttenant,\r\n\t\torganization,\r\n\t\t[],\r\n\t\tcandidateFeedbacksMap,\r\n\t\tcandidates\r\n\t);\r\n\r\n\treturn candidateFeedbacksMap;\r\n};\r\n\r\nexport const createRandomCandidateFeedbacks = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantCandidatesMap: Map<Tenant, ICandidate[]> | void\r\n): Promise<Map<ICandidate, CandidateFeedback[]>> => {\r\n\tif (!tenantCandidatesMap) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: tenantCandidatesMap not found, CandidateFeedbacks will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst candidateFeedbacks = [];\r\n\tlet candidateFeedbacksMap: Map<ICandidate, any[]> = new Map();\r\n\r\n\tfor (const tenant of tenants) {\r\n\t\tconst organizations = await connection.manager.find(Organization, {\r\n\t\t\twhere: [{ tenant: tenant }]\r\n\t\t});\r\n\t\tconst organization = faker.random.arrayElement(organizations);\r\n\t\tconst candidates = tenantCandidatesMap.get(tenant);\r\n\t\tcandidateFeedbacksMap = await dataOperation(\r\n\t\t\tconnection,\r\n\t\t\ttenant,\r\n\t\t\torganization,\r\n\t\t\tcandidateFeedbacks,\r\n\t\t\tcandidateFeedbacksMap,\r\n\t\t\tcandidates\r\n\t\t);\r\n\t}\r\n\treturn candidateFeedbacksMap;\r\n};\r\n\r\nconst insertCandidateFeedbacks = async (\r\n\tconnection: Connection,\r\n\tcandidateFeedbacks: CandidateFeedback[]\r\n) => {\r\n\tawait connection\r\n\t\t.createQueryBuilder()\r\n\t\t.insert()\r\n\t\t.into(CandidateFeedback)\r\n\t\t.values(candidateFeedbacks)\r\n\t\t.execute();\r\n};\r\n\r\nconst dataOperation = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\torganization: Organization,\r\n\tcandidateFeedbacks,\r\n\tcandidateFeedbacksMap,\r\n\tcandidates\r\n) => {\r\n\tfor (const candidate of candidates) {\r\n\t\tconst candidateInterviews = await connection.manager.find(\r\n\t\t\tCandidateInterview,\r\n\t\t\t{ where: [{ candidate: candidate }] }\r\n\t\t);\r\n\t\tconst interview = faker.random.arrayElement(candidateInterviews);\r\n\t\tconst feedbacks = DEFAULT_CANDIDATE_FEEDBACKS.map((feedback) => ({\r\n\t\t\tdescription: feedback.description,\r\n\t\t\trating: feedback.rating,\r\n\t\t\tcandidateId: candidate.id,\r\n\t\t\tinterviewId: interview.id,\r\n\t\t\ttenant: tenant,\r\n\t\t\torganization: organization,\r\n\t\t\tstatus: faker.random.arrayElement(Object.keys(CandidateStatus))\r\n\t\t}));\r\n\r\n\t\tcandidateFeedbacksMap.set(candidate, feedbacks);\r\n\t\tcandidateFeedbacks = [...candidateFeedbacks, ...feedbacks];\r\n\t}\r\n\tawait insertCandidateFeedbacks(connection, candidateFeedbacks);\r\n\treturn candidateFeedbacksMap;\r\n};\r\n","import { ICandidateFeedback } from '@gauzy/models';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { CrudService } from '../core/crud/crud.service';\r\nimport { CandidateFeedback } from './candidate-feedbacks.entity';\r\n\r\n@Injectable()\r\nexport class CandidateFeedbacksService extends CrudService<CandidateFeedback> {\r\n\tconstructor(\r\n\t\t@InjectRepository(CandidateFeedback)\r\n\t\tprivate readonly candidateFeedbackRepository: Repository<\r\n\t\t\tCandidateFeedback\r\n\t\t>\r\n\t) {\r\n\t\tsuper(candidateFeedbackRepository);\r\n\t}\r\n\tasync getFeedbacksByInterviewId(\r\n\t\tinterviewId: string\r\n\t): Promise<CandidateFeedback[]> {\r\n\t\treturn await this.repository\r\n\t\t\t.createQueryBuilder('candidate_feedback')\r\n\t\t\t.where('candidate_feedback.interviewId = :interviewId', {\r\n\t\t\t\tinterviewId\r\n\t\t\t})\r\n\t\t\t.getMany();\r\n\t}\r\n\tcalcRating(feedbacks: ICandidateFeedback[]) {\r\n\t\tconst rate: number[] = [];\r\n\t\tfeedbacks.forEach((fb) => {\r\n\t\t\trate.push(Number(fb.rating));\r\n\t\t});\r\n\t\tconst fbSum = rate.reduce((sum, current) => {\r\n\t\t\treturn sum + current;\r\n\t\t});\r\n\t\treturn fbSum / feedbacks.length;\r\n\t}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class FeedbackDeleteCommand implements ICommand {\r\n\tstatic readonly type = '[Feedback] Delete';\r\n\r\n\tconstructor(\r\n\t\tpublic readonly feedbackId: string,\r\n\t\tpublic readonly interviewId: string\r\n\t) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { ICandidateFeedback } from '@gauzy/models';\r\n\r\nexport class FeedbackUpdateCommand implements ICommand {\r\n\tstatic readonly type = '[Feedback] Update';\r\n\r\n\tconstructor(\r\n\t\tpublic readonly id: string,\r\n\t\tpublic readonly entity: ICandidateFeedback\r\n\t) {}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { FeedbackDeleteCommand } from '../candidate-feedbacks.delete.command';\r\nimport { CandidateFeedbacksService } from '../../candidate-feedbacks.service';\r\nimport { CandidateInterviewService } from '../../../candidate-interview/candidate-interview.service';\r\n\r\n@CommandHandler(FeedbackDeleteCommand)\r\nexport class FeedbackDeleteHandler\r\n\timplements ICommandHandler<FeedbackDeleteCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly candidateFeedbackService: CandidateFeedbacksService,\r\n\t\tprivate readonly candidateInterviewService: CandidateInterviewService\r\n\t) {}\r\n\r\n\tpublic async execute(command: FeedbackDeleteCommand): Promise<any> {\r\n\t\tconst { feedbackId, interviewId } = command;\r\n\r\n\t\tconst feedback = await this.deleteFeedback(feedbackId);\r\n\r\n\t\tif (feedback && interviewId) {\r\n\t\t\tconst id = interviewId;\r\n\t\t\tconst feedbacks = await this.candidateFeedbackService.getFeedbacksByInterviewId(\r\n\t\t\t\tid\r\n\t\t\t);\r\n\t\t\tlet interviewRating: number;\r\n\t\t\tif (feedbacks.length > 0) {\r\n\t\t\t\tinterviewRating = this.candidateFeedbackService.calcRating(\r\n\t\t\t\t\tfeedbacks\r\n\t\t\t\t);\r\n\t\t\t\tawait this.candidateInterviewService.create({\r\n\t\t\t\t\tid: id,\r\n\t\t\t\t\trating: interviewRating\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tawait this.candidateInterviewService.create({\r\n\t\t\t\t\tid: id,\r\n\t\t\t\t\trating: 0\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic async deleteFeedback(id: string): Promise<any> {\r\n\t\treturn this.candidateFeedbackService.delete(id);\r\n\t}\r\n}\r\n","import { CandidateFeedback } from './../../candidate-feedbacks.entity';\r\nimport { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { FeedbackUpdateCommand } from '../candidate-feedbacks.update.command';\r\nimport { CandidateFeedbacksService } from '../../candidate-feedbacks.service';\r\nimport { CandidateInterviewService } from '../../../candidate-interview/candidate-interview.service';\r\nimport { ICandidateFeedback } from '@gauzy/models';\r\n\r\n@CommandHandler(FeedbackUpdateCommand)\r\nexport class FeedbackUpdateHandler\r\n\timplements ICommandHandler<FeedbackUpdateCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly candidateFeedbackService: CandidateFeedbacksService,\r\n\t\tprivate readonly candidateInterviewService: CandidateInterviewService\r\n\t) {}\r\n\r\n\tpublic async execute(command: FeedbackUpdateCommand): Promise<any> {\r\n\t\tconst { id } = command;\r\n\t\tconst { entity } = command;\r\n\r\n\t\tconst feedback = await this.updateFeedback(id, entity);\r\n\t\tconst interviewId = entity.interviewer.interviewId;\r\n\r\n\t\tif (feedback) {\r\n\t\t\tconst feedbacks = await this.candidateFeedbackService.getFeedbacksByInterviewId(\r\n\t\t\t\tinterviewId\r\n\t\t\t);\r\n\t\t\tlet interviewRating: number;\r\n\r\n\t\t\tif (feedbacks.length > 0) {\r\n\t\t\t\tinterviewRating = this.candidateFeedbackService.calcRating(\r\n\t\t\t\t\tfeedbacks\r\n\t\t\t\t);\r\n\t\t\t\tawait this.candidateInterviewService.create({\r\n\t\t\t\t\tid: interviewId,\r\n\t\t\t\t\trating: interviewRating\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn feedback;\r\n\t\t}\r\n\t}\r\n\tpublic async updateFeedback(\r\n\t\tid: string,\r\n\t\tentity: ICandidateFeedback\r\n\t): Promise<CandidateFeedback> {\r\n\t\treturn this.candidateFeedbackService.create({ id: id, ...entity });\r\n\t}\r\n}\r\n","import { FeedbackDeleteHandler } from './candidate-feedbacks.delete.handler';\r\nimport { FeedbackUpdateHandler } from './candidate-feedbacks.update.handler';\r\n\r\nexport const CommandHandlers = [FeedbackDeleteHandler, FeedbackUpdateHandler];\r\n","import { ICandidateFeedback } from '@gauzy/models';\r\n\r\nexport const DEFAULT_CANDIDATE_FEEDBACKS: ICandidateFeedback[] = [\r\n\t{\r\n\t\tdescription: 'Feedback 1',\r\n\t\trating: 4\r\n\t},\r\n\t{\r\n\t\tdescription: 'Feedback 2',\r\n\t\trating: 3\r\n\t}\r\n];\r\n","import {\r\n\tController,\r\n\tHttpStatus,\r\n\tGet,\r\n\tQuery,\r\n\tBody,\r\n\tPost,\r\n\tUseGuards,\r\n\tParam,\r\n\tPut\r\n} from '@nestjs/common';\r\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport { CrudController } from '../core/crud/crud.controller';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { IPagination } from '../core';\r\nimport { CandidateInterview } from './candidate-interview.entity';\r\nimport { CandidateInterviewService } from './candidate-interview.service';\r\nimport { ICandidateInterviewCreateInput, PermissionsEnum } from '@gauzy/models';\r\nimport { PermissionGuard } from '../shared/guards/auth/permission.guard';\r\nimport { Permissions } from '../shared/decorators/permissions';\r\nimport { ParseJsonPipe } from '../shared';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('CandidateInterview')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class CandidateInterviewController extends CrudController<\r\n\tCandidateInterview\r\n> {\r\n\tconstructor(\r\n\t\tprivate readonly candidateInterviewService: CandidateInterviewService\r\n\t) {\r\n\t\tsuper(candidateInterviewService);\r\n\t}\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find all candidate interview.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found candidate interview',\r\n\t\ttype: CandidateInterview\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get()\r\n\tasync findInterview(\r\n\t\t@Query('data', ParseJsonPipe) data: any\r\n\t): Promise<IPagination<CandidateInterview>> {\r\n\t\tconst { relations = [], findInput = null } = data;\r\n\t\treturn this.candidateInterviewService.findAll({\r\n\t\t\twhere: findInput,\r\n\t\t\trelations\r\n\t\t});\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Create new record interview'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'Success Add Interview',\r\n\t\ttype: CandidateInterview\r\n\t})\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_CANDIDATES_INTERVIEW_EDIT)\r\n\t@Post()\r\n\tasync createInterview(\r\n\t\t@Body() entity: ICandidateInterviewCreateInput\r\n\t): Promise<any> {\r\n\t\treturn this.candidateInterviewService.create(entity);\r\n\t}\r\n\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_CANDIDATES_INTERVIEW_EDIT)\r\n\t@Put(':id')\r\n\tasync updateInterview(\r\n\t\t@Param() id: string,\r\n\t\t@Body() entity: any\r\n\t): Promise<any> {\r\n\t\treturn this.candidateInterviewService.updateInterview(id, {\r\n\t\t\t...entity\r\n\t\t});\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find interview by id' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found interview',\r\n\t\ttype: CandidateInterview\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_CANDIDATES_INTERVIEW_EDIT)\r\n\t@Get(':id')\r\n\tasync findById(@Param('id') id: string): Promise<CandidateInterview> {\r\n\t\treturn this.candidateInterviewService.findOne(id);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find interview by candidate id' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found interview',\r\n\t\ttype: CandidateInterview\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_CANDIDATES_INTERVIEW_EDIT)\r\n\t@Get('findByCandidateId/:id')\r\n\tasync findByCandidateId(\r\n\t\t@Param('id') id: string\r\n\t): Promise<CandidateInterview[]> {\r\n\t\treturn this.candidateInterviewService.findByCandidateId(id);\r\n\t}\r\n}\r\n","import { CandidatePersonalQualities } from './../candidate-personal-qualities/candidate-personal-qualities.entity';\r\nimport { CandidateTechnologies } from './../candidate-technologies/candidate-technologies.entity';\r\nimport { Column, Entity, ManyToOne, OneToMany, JoinColumn } from 'typeorm';\r\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\r\nimport {\r\n\tICandidateInterview,\r\n\tICandidateFeedback,\r\n\tICandidateInterviewers,\r\n\tICandidateTechnologies,\r\n\tICandidatePersonalQualities,\r\n\tICandidate\r\n} from '@gauzy/models';\r\nimport { CandidateInterviewers } from '../candidate-interviewers/candidate-interviewers.entity';\r\nimport { CandidateFeedback } from '../candidate-feedbacks/candidate-feedbacks.entity';\r\nimport { Candidate } from '../candidate/candidate.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('candidate_interview')\r\nexport class CandidateInterview\r\n\textends TenantOrganizationBase\r\n\timplements ICandidateInterview {\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\ttitle: string;\r\n\r\n\t@ApiProperty({ type: Date })\r\n\t@Column({ nullable: true })\r\n\tstartTime: Date;\r\n\r\n\t@ApiProperty({ type: Date })\r\n\t@Column({ nullable: true })\r\n\tendTime: Date;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column({ nullable: true })\r\n\tcandidateId?: string;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@Column({ nullable: true })\r\n\tlocation: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\tnote?: string;\r\n\r\n\t@ApiPropertyOptional({ type: Boolean, default: false })\r\n\t@Column({ nullable: true, default: false })\r\n\tisArchived?: boolean;\r\n\r\n\t@ApiPropertyOptional({ type: Number })\r\n\t@Column({ nullable: true, type: 'numeric' })\r\n\trating?: number;\r\n\r\n\t@OneToMany(() => CandidateFeedback, (feedback) => feedback.interview, {\r\n\t\tonDelete: 'SET NULL'\r\n\t})\r\n\t@JoinColumn()\r\n\tfeedbacks?: ICandidateFeedback[];\r\n\r\n\t@OneToMany(\r\n\t\t() => CandidateTechnologies,\r\n\t\t(technologies) => technologies.interview,\r\n\t\t{\r\n\t\t\tonDelete: 'SET NULL'\r\n\t\t}\r\n\t)\r\n\t@JoinColumn()\r\n\ttechnologies?: ICandidateTechnologies[];\r\n\r\n\t@OneToMany(\r\n\t\t() => CandidatePersonalQualities,\r\n\t\t(personalQualities) => personalQualities.interview,\r\n\t\t{\r\n\t\t\tonDelete: 'SET NULL'\r\n\t\t}\r\n\t)\r\n\t@JoinColumn()\r\n\tpersonalQualities?: ICandidatePersonalQualities[];\r\n\r\n\t@OneToMany(\r\n\t\t() => CandidateInterviewers,\r\n\t\t(interviewers) => interviewers.interview,\r\n\t\t{\r\n\t\t\tonDelete: 'SET NULL'\r\n\t\t}\r\n\t)\r\n\t@JoinColumn()\r\n\tinterviewers?: ICandidateInterviewers[];\r\n\r\n\t@ManyToOne(() => Candidate, (candidate) => candidate.interview, {\r\n\t\tonDelete: 'CASCADE'\r\n\t})\r\n\tcandidate: ICandidate;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { CandidateInterviewService } from './candidate-interview.service';\r\nimport { CandidateInterviewController } from './candidate-interview.controller';\r\nimport { CandidateInterview } from './candidate-interview.entity';\r\nimport { UserService } from '../user/user.service';\r\nimport { User } from '../user/user.entity';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([CandidateInterview, User]),\r\n\t\tTenantModule\r\n\t],\r\n\tproviders: [CandidateInterviewService, UserService],\r\n\tcontrollers: [CandidateInterviewController],\r\n\texports: [CandidateInterviewService]\r\n})\r\nexport class CandidateInterviewModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { ICandidate } from '@gauzy/models';\r\nimport * as faker from 'faker';\r\nimport { CandidateInterview } from './candidate-interview.entity';\r\nimport { Organization } from '../organization/organization.entity';\r\n\r\nexport const createDefaultCandidateInterview = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\torganization: Organization,\r\n\tcandidates\r\n): Promise<CandidateInterview[]> => {\r\n\tif (!candidates) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: Candidates not found, Default Candidate Interview will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tlet candidateInterviewes: CandidateInterview[] = [];\r\n\tfor (const tenantCandidate of candidates) {\r\n\t\tcandidateInterviewes = await dataOperation(\r\n\t\t\tconnection,\r\n\t\t\tcandidateInterviewes,\r\n\t\t\ttenantCandidate,\r\n\t\t\ttenant,\r\n\t\t\torganization\r\n\t\t);\r\n\t}\r\n\r\n\treturn candidateInterviewes;\r\n};\r\n\r\nexport const createRandomCandidateInterview = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantCandidatesMap: Map<Tenant, ICandidate[]> | void\r\n): Promise<CandidateInterview[]> => {\r\n\tif (!tenantCandidatesMap) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: tenantCandidatesMap not found, CandidateInterview will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tlet candidates: CandidateInterview[] = [];\r\n\tfor (const tenant of tenants) {\r\n\t\tconst organizations = await connection.manager.find(Organization, {\r\n\t\t\twhere: [{ tenant: tenant }]\r\n\t\t});\r\n\t\tconst organization = faker.random.arrayElement(organizations);\r\n\t\tconst tenantCandidates = tenantCandidatesMap.get(tenant);\r\n\t\tfor (const tenantCandidate of tenantCandidates) {\r\n\t\t\tcandidates = await dataOperation(\r\n\t\t\t\tconnection,\r\n\t\t\t\tcandidates,\r\n\t\t\t\ttenantCandidate,\r\n\t\t\t\ttenant,\r\n\t\t\t\torganization\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\treturn candidates;\r\n};\r\n\r\nconst dataOperation = async (\r\n\tconnection: Connection,\r\n\tcandidates,\r\n\ttenantCandidate,\r\n\ttenant: Tenant,\r\n\torganization: Organization\r\n) => {\r\n\tfor (let i = 0; i <= Math.floor(Math.random() * 3) + 1; i++) {\r\n\t\tconst candidate = new CandidateInterview();\r\n\t\tconst interViewDate = faker.date.past();\r\n\r\n\t\tcandidate.title = faker.name.jobArea();\r\n\t\tcandidate.startTime = new Date(interViewDate.setHours(10));\r\n\t\tcandidate.endTime = new Date(interViewDate.setHours(12));\r\n\t\tcandidate.location = faker.address.city();\r\n\t\tcandidate.note = faker.lorem.words();\r\n\t\tcandidate.candidate = tenantCandidate;\r\n\t\tcandidate.tenant = tenant;\r\n\t\tcandidate.organization = organization;\r\n\r\n\t\tcandidates.push(candidate);\r\n\t}\r\n\tawait connection.manager.save(candidates);\r\n\treturn candidates;\r\n};\r\n","import { Injectable, BadRequestException } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { CrudService } from '../core/crud/crud.service';\r\nimport { CandidateInterview } from './candidate-interview.entity';\r\nimport { ICandidateInterview } from '@gauzy/models';\r\n\r\n@Injectable()\r\nexport class CandidateInterviewService extends CrudService<CandidateInterview> {\r\n\tconstructor(\r\n\t\t@InjectRepository(CandidateInterview)\r\n\t\tprivate readonly candidateInterviewRepository: Repository<\r\n\t\t\tCandidateInterview\r\n\t\t>\r\n\t) {\r\n\t\tsuper(candidateInterviewRepository);\r\n\t}\r\n\tasync findByCandidateId(\r\n\t\tcandidateId: string\r\n\t): Promise<CandidateInterview[]> {\r\n\t\treturn await this.repository\r\n\t\t\t.createQueryBuilder('candidate_interview')\r\n\t\t\t.where('candidate_interview.candidateId = :candidateId', {\r\n\t\t\t\tcandidateId\r\n\t\t\t})\r\n\t\t\t.getMany();\r\n\t}\r\n\tasync updateInterview(\r\n\t\tid: string,\r\n\t\tentity: ICandidateInterview\r\n\t): Promise<CandidateInterview> {\r\n\t\ttry {\r\n\t\t\tconst interviewId = id['id'];\r\n\t\t\tconst interview: ICandidateInterview = await this.repository\r\n\t\t\t\t.createQueryBuilder('candidate_interview')\r\n\t\t\t\t.where('candidate_interview.id = :interviewId', {\r\n\t\t\t\t\tinterviewId\r\n\t\t\t\t})\r\n\t\t\t\t.getOne();\r\n\r\n\t\t\tif (interview) {\r\n\t\t\t\tinterview.rating =\r\n\t\t\t\t\tentity.rating === interview.rating\r\n\t\t\t\t\t\t? interview.rating\r\n\t\t\t\t\t\t: entity.rating;\r\n\t\t\t\tinterview.isArchived =\r\n\t\t\t\t\tentity.isArchived === interview.isArchived\r\n\t\t\t\t\t\t? interview.isArchived\r\n\t\t\t\t\t\t: entity.isArchived;\r\n\t\t\t\tinterview.note =\r\n\t\t\t\t\tentity.note === interview.note\r\n\t\t\t\t\t\t? interview.note\r\n\t\t\t\t\t\t: entity.note;\r\n\t\t\t\tinterview.title =\r\n\t\t\t\t\tentity.title === interview.title\r\n\t\t\t\t\t\t? interview.title\r\n\t\t\t\t\t\t: entity.title;\r\n\t\t\t\tinterview.location =\r\n\t\t\t\t\tentity.location === interview.location\r\n\t\t\t\t\t\t? interview.location\r\n\t\t\t\t\t\t: entity.location;\r\n\t\t\t\tinterview.startTime =\r\n\t\t\t\t\tentity.startTime === interview.startTime\r\n\t\t\t\t\t\t? interview.startTime\r\n\t\t\t\t\t\t: entity.startTime;\r\n\t\t\t\tinterview.endTime =\r\n\t\t\t\t\tentity.endTime === interview.endTime\r\n\t\t\t\t\t\t? interview.endTime\r\n\t\t\t\t\t\t: entity.endTime;\r\n\t\t\t\treturn await this.repository.save(interview);\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tthrow new BadRequestException(err);\r\n\t\t}\r\n\t}\r\n}\r\n","import { CandidateInterviewers } from './candidate-interviewers.entity';\r\nimport {\r\n\tController,\r\n\tHttpStatus,\r\n\tGet,\r\n\tQuery,\r\n\tBody,\r\n\tPost,\r\n\tUseGuards,\r\n\tParam,\r\n\tDelete\r\n} from '@nestjs/common';\r\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport { CrudController } from '../core/crud/crud.controller';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { IPagination } from '../core';\r\nimport { PermissionGuard } from '../shared/guards/auth/permission.guard';\r\nimport { Permissions } from '../shared/decorators/permissions';\r\nimport { CandidateInterviewersService } from './candidate-interviewers.service';\r\nimport {\r\n\tPermissionsEnum,\r\n\tICandidateInterviewersCreateInput,\r\n\tICandidateInterviewers\r\n} from '@gauzy/models';\r\nimport { ParseJsonPipe } from '../shared';\r\nimport { CommandBus } from '@nestjs/cqrs';\r\nimport {\r\n\tCandidateInterviewersEmployeeBulkDeleteCommand,\r\n\tCandidateInterviewersInterviewBulkDeleteCommand,\r\n\tCandidateInterviewersBulkCreateCommand\r\n} from './commands';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('CandidateInterviewer')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class CandidateInterviewersController extends CrudController<\r\n\tCandidateInterviewers\r\n> {\r\n\tconstructor(\r\n\t\tprivate readonly candidateInterviewersService: CandidateInterviewersService,\r\n\t\tprivate readonly commandBus: CommandBus\r\n\t) {\r\n\t\tsuper(candidateInterviewersService);\r\n\t}\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find all candidate interviewers.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found candidate interviewers',\r\n\t\ttype: CandidateInterviewers\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get()\r\n\tasync findInterviewers(\r\n\t\t@Query('data', ParseJsonPipe) data: any\r\n\t): Promise<IPagination<CandidateInterviewers>> {\r\n\t\tconst { findInput = null } = data;\r\n\t\treturn this.candidateInterviewersService.findAll({ where: findInput });\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Create new record interviewers'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'Success Add Interviewers',\r\n\t\ttype: CandidateInterviewers\r\n\t})\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_CANDIDATES_INTERVIEWERS_EDIT)\r\n\t@Post()\r\n\tasync createInterviewer(\r\n\t\t@Body() entity: ICandidateInterviewersCreateInput\r\n\t): Promise<any> {\r\n\t\treturn this.candidateInterviewersService.create(entity);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Create interviewers in Bulk' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'Interviewers have been successfully created.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_CANDIDATES_EDIT)\r\n\t@Post('createBulk')\r\n\tasync createBulk(@Body() input: any): Promise<ICandidateInterviewers[]> {\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew CandidateInterviewersBulkCreateCommand(input)\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find Interviewers By Interview Id.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found candidate interviewers',\r\n\t\ttype: CandidateInterviewers\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_CANDIDATES_INTERVIEWERS_EDIT)\r\n\t@Get('getByInterviewId/:interviewId')\r\n\tasync findByInterviewId(\r\n\t\t@Param('interviewId') interviewId: string\r\n\t): Promise<CandidateInterviewers[]> {\r\n\t\treturn this.candidateInterviewersService.getInterviewersByInterviewId(\r\n\t\t\tinterviewId\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Delete Interviewers By Interview Id.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found candidate interviewers',\r\n\t\ttype: CandidateInterviewers\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_CANDIDATES_INTERVIEWERS_EDIT)\r\n\t@Delete('deleteBulkByInterviewId')\r\n\tasync deleteBulkByInterviewId(\r\n\t\t@Query('data', ParseJsonPipe) data: any\r\n\t): Promise<any> {\r\n\t\tconst { id = null } = data;\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew CandidateInterviewersInterviewBulkDeleteCommand(id)\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Delete Interviewers By employeeId.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found candidate interviewers',\r\n\t\ttype: CandidateInterviewers\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_CANDIDATES_INTERVIEWERS_EDIT)\r\n\t@Delete('deleteBulkByEmployeeId')\r\n\tasync deleteBulkByEmployeeId(\r\n\t\t@Query('data', ParseJsonPipe) data: any\r\n\t): Promise<any> {\r\n\t\tconst { deleteInput = null } = data;\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew CandidateInterviewersEmployeeBulkDeleteCommand(deleteInput)\r\n\t\t);\r\n\t}\r\n}\r\n","import { Entity, Column, ManyToOne } from 'typeorm';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { ICandidateInterviewers, ICandidateInterview } from '@gauzy/models';\r\nimport { CandidateInterview } from '../candidate-interview/candidate-interview.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('candidate_interviewer')\r\nexport class CandidateInterviewers\r\n\textends TenantOrganizationBase\r\n\timplements ICandidateInterviewers {\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\tinterviewId: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\temployeeId: string;\r\n\r\n\t@ManyToOne(\r\n\t\t() => CandidateInterview,\r\n\t\t(interview) => interview.interviewers,\r\n\t\t{\r\n\t\t\tonDelete: 'CASCADE'\r\n\t\t}\r\n\t)\r\n\tinterview: ICandidateInterview;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { UserService } from '../user/user.service';\r\nimport { User } from '../user/user.entity';\r\nimport { CandidateInterviewers } from './candidate-interviewers.entity';\r\nimport { CandidateInterviewersService } from './candidate-interviewers.service';\r\nimport { CandidateInterviewersController } from './candidate-interviewers.controller';\r\nimport { CommandHandlers } from './commands/handlers';\r\nimport { CqrsModule } from '@nestjs/cqrs';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([CandidateInterviewers, User]),\r\n\t\tCqrsModule,\r\n\t\tTenantModule\r\n\t],\r\n\tproviders: [CandidateInterviewersService, UserService, ...CommandHandlers],\r\n\tcontrollers: [CandidateInterviewersController],\r\n\texports: [CandidateInterviewersService]\r\n})\r\nexport class CandidateInterviewersModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { ICandidate, IEmployee } from '@gauzy/models';\r\nimport * as faker from 'faker';\r\nimport { CandidateInterviewers } from './candidate-interviewers.entity';\r\nimport { CandidateInterview } from '../candidate-interview/candidate-interview.entity';\r\nimport { Organization } from '../organization/organization.entity';\r\n\r\nexport const createDefaultCandidateInterviewers = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\torganization: Organization,\r\n\tdefaultEmployees,\r\n\tdefaultCandidates\r\n): Promise<CandidateInterviewers[]> => {\r\n\tif (!defaultEmployees) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: defaultEmployees not found, Default CandidateInterviewers will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\tif (!defaultCandidates) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: defaultCandidates not found, Default Candidate Interviewers will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tlet candidates: CandidateInterviewers[] = [];\r\n\r\n\tfor (const defaultCandidate of defaultCandidates) {\r\n\t\tconst CandidateInterviews = await connection.manager.find(\r\n\t\t\tCandidateInterview,\r\n\t\t\t{\r\n\t\t\t\twhere: [{ candidate: defaultCandidate }]\r\n\t\t\t}\r\n\t\t);\r\n\t\tcandidates = await dataOperation(\r\n\t\t\tconnection,\r\n\t\t\ttenant,\r\n\t\t\torganization,\r\n\t\t\tcandidates,\r\n\t\t\tCandidateInterviews,\r\n\t\t\tdefaultEmployees\r\n\t\t);\r\n\t}\r\n\treturn candidates;\r\n};\r\n\r\nexport const createRandomCandidateInterviewers = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantEmployeeMap: Map<Tenant, IEmployee[]>,\r\n\ttenantCandidatesMap: Map<Tenant, ICandidate[]> | void\r\n): Promise<CandidateInterviewers[]> => {\r\n\tif (!tenantCandidatesMap) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: tenantCandidatesMap not found, CandidateInterviewers will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tlet candidates: CandidateInterviewers[] = [];\r\n\r\n\tfor (const tenant of tenants) {\r\n\t\tconst tenantCandidates = tenantCandidatesMap.get(tenant);\r\n\t\tconst tenantEmployees = tenantEmployeeMap.get(tenant);\r\n\r\n\t\tfor (const tenantCandidate of tenantCandidates) {\r\n\t\t\tconst CandidateInterviews = await connection.manager.find(\r\n\t\t\t\tCandidateInterview,\r\n\t\t\t\t{\r\n\t\t\t\t\twhere: [{ candidate: tenantCandidate }]\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\tcandidates = await dataOperation(\r\n\t\t\t\tconnection,\r\n\t\t\t\ttenant,\r\n\t\t\t\ttenantCandidate.organization,\r\n\t\t\t\tcandidates,\r\n\t\t\t\tCandidateInterviews,\r\n\t\t\t\ttenantEmployees\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\treturn candidates;\r\n};\r\n\r\nconst dataOperation = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\torganization: Organization,\r\n\tcandidates,\r\n\tCandidateInterviews,\r\n\ttenantEmployees: IEmployee[]\r\n) => {\r\n\tfor (const interview of CandidateInterviews) {\r\n\t\tconst candidate = new CandidateInterviewers();\r\n\r\n\t\tcandidate.interviewId = interview.id;\r\n\t\tcandidate.interview = interview;\r\n\t\tcandidate.employeeId = faker.random.arrayElement(tenantEmployees).id;\r\n\r\n\t\tcandidate.tenant = tenant;\r\n\t\tcandidate.organization = organization;\r\n\t\tcandidates.push(candidate);\r\n\t}\r\n\tawait connection.manager.save(candidates);\r\n\treturn candidates;\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { CrudService } from '../core/crud/crud.service';\r\nimport { CandidateInterviewers } from './candidate-interviewers.entity';\r\nimport {\r\n\tICandidateInterviewersDeleteInput,\r\n\tICandidateInterviewersCreateInput\r\n} from '@gauzy/models';\r\n\r\n@Injectable()\r\nexport class CandidateInterviewersService extends CrudService<\r\n\tCandidateInterviewers\r\n> {\r\n\tconstructor(\r\n\t\t@InjectRepository(CandidateInterviewers)\r\n\t\tprivate readonly candidateInterviewersRepository: Repository<\r\n\t\t\tCandidateInterviewers\r\n\t\t>\r\n\t) {\r\n\t\tsuper(candidateInterviewersRepository);\r\n\t}\r\n\r\n\tasync getInterviewersByInterviewId(\r\n\t\tinterviewId: string\r\n\t): Promise<CandidateInterviewers[]> {\r\n\t\treturn await this.repository\r\n\t\t\t.createQueryBuilder('candidate_interviewer')\r\n\t\t\t.where('candidate_interviewer.interviewId = :interviewId', {\r\n\t\t\t\tinterviewId\r\n\t\t\t})\r\n\t\t\t.getMany();\r\n\t}\r\n\r\n\tasync getInterviewersByEmployeeId(\r\n\t\temployeeId: ICandidateInterviewersDeleteInput\r\n\t): Promise<any> {\r\n\t\treturn await this.repository\r\n\t\t\t.createQueryBuilder('candidate_interviewer')\r\n\t\t\t.where('candidate_interviewer.employeeId = :employeeId', {\r\n\t\t\t\temployeeId\r\n\t\t\t})\r\n\t\t\t.getMany();\r\n\t}\r\n\r\n\tasync deleteBulk(ids: string[]) {\r\n\t\treturn await this.repository.delete(ids);\r\n\t}\r\n\tasync createBulk(createInput: ICandidateInterviewersCreateInput[]) {\r\n\t\treturn await this.repository.save(createInput);\r\n\t}\r\n}\r\n","import { ICandidateInterviewersCreateInput } from '@gauzy/models';\r\nimport { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class CandidateInterviewersBulkCreateCommand implements ICommand {\r\n\tstatic readonly type = '[CandidateInterviewers] Register';\r\n\r\n\tconstructor(public readonly input: ICandidateInterviewersCreateInput) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { ICandidateInterviewersDeleteInput } from '@gauzy/models';\r\n\r\nexport class CandidateInterviewersEmployeeBulkDeleteCommand\r\n\timplements ICommand {\r\n\tstatic readonly type = '[CandidateInterviewers] Delete';\r\n\r\n\tconstructor(\r\n\t\tpublic readonly deleteInput: ICandidateInterviewersDeleteInput[]\r\n\t) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class CandidateInterviewersInterviewBulkDeleteCommand\r\n\timplements ICommand {\r\n\tstatic readonly type = '[CandidateInterviewers] Delete';\r\n\r\n\tconstructor(public readonly id: string) {}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { CandidateInterviewersBulkCreateCommand } from '../candidate-interviewers.bulk.create.command';\r\nimport { CandidateInterviewersService } from '../../candidate-interviewers.service';\r\nimport { CandidateInterviewers } from '../../candidate-interviewers.entity';\r\nimport { ICandidateInterviewersCreateInput } from '@gauzy/models';\r\n\r\n@CommandHandler(CandidateInterviewersBulkCreateCommand)\r\nexport class CandidateInterviewersBulkCreateHandler\r\n\timplements ICommandHandler<CandidateInterviewersBulkCreateCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly candidateInterviewersService: CandidateInterviewersService\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: CandidateInterviewersBulkCreateCommand\r\n\t): Promise<CandidateInterviewers[]> {\r\n\t\tconst { input } = command;\r\n\t\tlet interviewer: ICandidateInterviewersCreateInput;\r\n\t\tconst createInput: ICandidateInterviewersCreateInput[] = [];\r\n\r\n\t\tconst { employeeIds, interviewId, organizationId, tenantId } = input;\r\n\r\n\t\tfor (const employeeId of employeeIds) {\r\n\t\t\tinterviewer = { interviewId, employeeId, organizationId, tenantId };\r\n\t\t\tcreateInput.push(interviewer);\r\n\t\t}\r\n\t\treturn await this.candidateInterviewersService.createBulk(createInput);\r\n\t}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { CandidateInterviewersEmployeeBulkDeleteCommand } from '../candidate-interviewers.employee.bulk.delete.command';\r\nimport { CandidateInterviewersService } from '../../candidate-interviewers.service';\r\n\r\n@CommandHandler(CandidateInterviewersEmployeeBulkDeleteCommand)\r\nexport class CandidateInterviewersEmployeeBulkDeleteHandler\r\n\timplements ICommandHandler<CandidateInterviewersEmployeeBulkDeleteCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly candidateInterviewersService: CandidateInterviewersService\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: CandidateInterviewersEmployeeBulkDeleteCommand\r\n\t): Promise<any> {\r\n\t\tconst { deleteInput } = command;\r\n\t\tfor (const id of deleteInput) {\r\n\t\t\tconst interviewers = await this.candidateInterviewersService.getInterviewersByEmployeeId(\r\n\t\t\t\tid\r\n\t\t\t);\r\n\t\t\tawait this.candidateInterviewersService.deleteBulk(\r\n\t\t\t\tinterviewers.map((item) => item.id)\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn;\r\n\t}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { CandidateInterviewersService } from '../../candidate-interviewers.service';\r\nimport { CandidateInterviewersInterviewBulkDeleteCommand } from '../candidate-interviewers.interview.bulk.delete.command';\r\n\r\n@CommandHandler(CandidateInterviewersInterviewBulkDeleteCommand)\r\nexport class CandidateInterviewersInterviewBulkDeleteHandler\r\n\timplements\r\n\t\tICommandHandler<CandidateInterviewersInterviewBulkDeleteCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly candidateInterviewersService: CandidateInterviewersService\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: CandidateInterviewersInterviewBulkDeleteCommand\r\n\t): Promise<any> {\r\n\t\tconst { id } = command;\r\n\t\tconst interviewers = await this.candidateInterviewersService.getInterviewersByInterviewId(\r\n\t\t\tid\r\n\t\t);\r\n\t\tawait this.candidateInterviewersService.deleteBulk(\r\n\t\t\tinterviewers.map((item) => item.id)\r\n\t\t);\r\n\r\n\t\treturn;\r\n\t}\r\n}\r\n","import { CandidateInterviewersInterviewBulkDeleteHandler } from './candidate-interviewers.interview.bulk.delete.handler';\r\nimport { CandidateInterviewersEmployeeBulkDeleteHandler } from './candidate-interviewers.employee.bulk.delete.handler';\r\nimport { CandidateInterviewersBulkCreateHandler } from './candidate-interviewers.bulk.create.handler';\r\n\r\nexport const CommandHandlers = [\r\n\tCandidateInterviewersEmployeeBulkDeleteHandler,\r\n\tCandidateInterviewersInterviewBulkDeleteHandler,\r\n\tCandidateInterviewersBulkCreateHandler\r\n];\r\n","export { CandidateInterviewersEmployeeBulkDeleteCommand } from './candidate-interviewers.employee.bulk.delete.command';\r\nexport { CandidateInterviewersInterviewBulkDeleteCommand } from './candidate-interviewers.interview.bulk.delete.command';\r\nexport { CandidateInterviewersBulkCreateCommand } from './candidate-interviewers.bulk.create.command';\r\n","import {\r\n\tController,\r\n\tUseGuards,\r\n\tPost,\r\n\tBody,\r\n\tDelete,\r\n\tParam,\r\n\tGet,\r\n\tQuery,\r\n\tHttpStatus\r\n} from '@nestjs/common';\r\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\r\nimport { CrudController } from '../core/crud/crud.controller';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { RoleGuard } from '../shared/guards/auth/role.guard';\r\nimport { Roles } from '../shared/decorators/roles';\r\nimport { RolesEnum, ICandidatePersonalQualities } from '@gauzy/models';\r\nimport { CandidatePersonalQualities } from './candidate-personal-qualities.entity';\r\nimport { CandidatePersonalQualitiesService } from './candidate-personal-qualities.service';\r\nimport {\r\n\tCandidatePersonalQualitiesBulkCreateCommand,\r\n\tCandidatePersonalQualitiesBulkDeleteCommand\r\n} from './commands';\r\nimport { CommandBus } from '@nestjs/cqrs';\r\nimport { ParseJsonPipe } from '../shared';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('CandidatePersonalQuality')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class CandidatePersonalQualitiesController extends CrudController<\r\n\tCandidatePersonalQualities\r\n> {\r\n\tconstructor(\r\n\t\tprivate readonly candidatePersonalQualitiesService: CandidatePersonalQualitiesService,\r\n\t\tprivate commandBus: CommandBus\r\n\t) {\r\n\t\tsuper(candidatePersonalQualitiesService);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find all candidate personal qualities.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found candidate personal qualities',\r\n\t\ttype: CandidatePersonalQualities\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@UseGuards(RoleGuard)\r\n\t@Roles(RolesEnum.CANDIDATE, RolesEnum.SUPER_ADMIN, RolesEnum.ADMIN)\r\n\t@Get()\r\n\tfindAllPersonalQualities(@Query('data') data: string): any {\r\n\t\tconst { findInput, relations } = JSON.parse(data);\r\n\t\treturn this.candidatePersonalQualitiesService.findAll({\r\n\t\t\twhere: findInput,\r\n\t\t\trelations\r\n\t\t});\r\n\t}\r\n\r\n\t@UseGuards(RoleGuard)\r\n\t@Roles(RolesEnum.CANDIDATE, RolesEnum.SUPER_ADMIN, RolesEnum.ADMIN)\r\n\t@Post()\r\n\tasync addPersonalQuality(\r\n\t\t@Body() entity: CandidatePersonalQualities\r\n\t): Promise<any> {\r\n\t\treturn this.candidatePersonalQualitiesService.create(entity);\r\n\t}\r\n\r\n\t@UseGuards(RoleGuard)\r\n\t@Roles(RolesEnum.CANDIDATE, RolesEnum.SUPER_ADMIN, RolesEnum.ADMIN)\r\n\t@Delete(':id')\r\n\tdeletePersonalQuality(@Param() id: string): Promise<any> {\r\n\t\treturn this.candidatePersonalQualitiesService.delete(id);\r\n\t}\r\n\r\n\t@UseGuards(RoleGuard)\r\n\t@Roles(RolesEnum.CANDIDATE, RolesEnum.SUPER_ADMIN, RolesEnum.ADMIN)\r\n\t@Post('createBulk')\r\n\tasync createBulk(\r\n\t\t@Body() input: any\r\n\t): Promise<ICandidatePersonalQualities[]> {\r\n\t\tconst { interviewId = null, personalQualities = [] } = input;\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew CandidatePersonalQualitiesBulkCreateCommand(\r\n\t\t\t\tinterviewId,\r\n\t\t\t\tpersonalQualities\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n\r\n\t@UseGuards(RoleGuard)\r\n\t@Roles(RolesEnum.CANDIDATE, RolesEnum.SUPER_ADMIN, RolesEnum.ADMIN)\r\n\t@Get('getByInterviewId/:interviewId')\r\n\tasync findByInterviewId(\r\n\t\t@Param('interviewId') interviewId: string\r\n\t): Promise<ICandidatePersonalQualities[]> {\r\n\t\treturn this.candidatePersonalQualitiesService.getPersonalQualitiesByInterviewId(\r\n\t\t\tinterviewId\r\n\t\t);\r\n\t}\r\n\r\n\t@UseGuards(RoleGuard)\r\n\t@Roles(RolesEnum.CANDIDATE, RolesEnum.SUPER_ADMIN, RolesEnum.ADMIN)\r\n\t@Delete('deleteBulk/:id')\r\n\tasync deleteBulk(\r\n\t\t@Param() id: string,\r\n\t\t@Query('data', ParseJsonPipe) data: any\r\n\t): Promise<any> {\r\n\t\tconst { personalQualities = null } = data;\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew CandidatePersonalQualitiesBulkDeleteCommand(\r\n\t\t\t\tid,\r\n\t\t\t\tpersonalQualities\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n}\r\n","import { Column, Entity, ManyToOne } from 'typeorm';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport {\r\n\tICandidatePersonalQualities,\r\n\tICandidateInterview\r\n} from '@gauzy/models';\r\nimport { CandidateInterview } from '../candidate-interview/candidate-interview.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('candidate_personal_quality')\r\nexport class CandidatePersonalQualities\r\n\textends TenantOrganizationBase\r\n\timplements ICandidatePersonalQualities {\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\tname: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column({ nullable: true })\r\n\tinterviewId?: string;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@Column({ nullable: true, type: 'numeric' })\r\n\trating?: number;\r\n\r\n\t@ManyToOne(\r\n\t\t() => CandidateInterview,\r\n\t\t(interview) => interview.personalQualities,\r\n\t\t{\r\n\t\t\tonDelete: 'CASCADE'\r\n\t\t}\r\n\t)\r\n\tinterview: ICandidateInterview;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { RoleModule } from '../role/role.module';\r\nimport { UserModule } from '../user/user.module';\r\nimport { RolePermissionsModule } from '../role-permissions/role-permissions.module';\r\nimport { AuthModule } from '../auth/auth.module';\r\nimport { CandidatePersonalQualitiesService } from './candidate-personal-qualities.service';\r\nimport { CandidatePersonalQualitiesController } from './candidate-personal-qualities.controller';\r\nimport { CandidatePersonalQualities } from './candidate-personal-qualities.entity';\r\nimport { CommandHandlers } from './commands/handlers';\r\nimport { CqrsModule } from '@nestjs/cqrs';\r\nimport { UserService } from '../user/user.service';\r\nimport { User } from '../user/user.entity';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([CandidatePersonalQualities, User]),\r\n\t\tUserModule,\r\n\t\tRoleModule,\r\n\t\tRolePermissionsModule,\r\n\t\tAuthModule,\r\n\t\tCqrsModule,\r\n\t\tTenantModule\r\n\t],\r\n\tproviders: [\r\n\t\tCandidatePersonalQualitiesService,\r\n\t\tUserService,\r\n\t\t...CommandHandlers\r\n\t],\r\n\tcontrollers: [CandidatePersonalQualitiesController],\r\n\texports: [CandidatePersonalQualitiesService]\r\n})\r\nexport class CandidatePersonalQualitiesModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { ICandidate } from '@gauzy/models';\r\nimport * as faker from 'faker';\r\nimport { CandidatePersonalQualities } from './candidate-personal-qualities.entity';\r\nimport { CandidateInterview } from '../candidate-interview/candidate-interview.entity';\r\nimport { Organization } from '../organization/organization.entity';\r\n\r\nexport const createDefaultCandidatePersonalQualities = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\torganization: Organization,\r\n\tdefaultCandidates\r\n): Promise<CandidatePersonalQualities[]> => {\r\n\tif (!defaultCandidates) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: defaultCandidates not found, default Candidate Personal Qualities will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tlet candidates: CandidatePersonalQualities[] = [];\r\n\tfor (const tenantCandidate of defaultCandidates) {\r\n\t\tconst candidateInterviews = await connection.manager.find(\r\n\t\t\tCandidateInterview,\r\n\t\t\t{\r\n\t\t\t\twhere: [{ candidate: tenantCandidate }]\r\n\t\t\t}\r\n\t\t);\r\n\t\tcandidates = await dataOperation(\r\n\t\t\tconnection,\r\n\t\t\ttenant,\r\n\t\t\torganization,\r\n\t\t\tcandidates,\r\n\t\t\tcandidateInterviews\r\n\t\t);\r\n\t}\r\n\treturn candidates;\r\n};\r\n\r\nexport const createRandomCandidatePersonalQualities = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantCandidatesMap: Map<Tenant, ICandidate[]> | void\r\n): Promise<CandidatePersonalQualities[]> => {\r\n\tif (!tenantCandidatesMap) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: tenantCandidatesMap not found, CandidatePersonalQualities will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tlet candidates: CandidatePersonalQualities[] = [];\r\n\tfor (const tenant of tenants) {\r\n\t\tconst tenantCandidates = tenantCandidatesMap.get(tenant);\r\n\t\tfor (const tenantCandidate of tenantCandidates) {\r\n\t\t\tconst candidateInterviews = await connection.manager.find(\r\n\t\t\t\tCandidateInterview,\r\n\t\t\t\t{\r\n\t\t\t\t\twhere: [{ candidate: tenantCandidate }]\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\tcandidates = await dataOperation(\r\n\t\t\t\tconnection,\r\n\t\t\t\ttenant,\r\n\t\t\t\ttenantCandidate.organization,\r\n\t\t\t\tcandidates,\r\n\t\t\t\tcandidateInterviews\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\treturn candidates;\r\n};\r\n\r\nconst dataOperation = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\torganization: Organization,\r\n\tcandidates,\r\n\tCandidateInterviews\r\n) => {\r\n\tfor (const interview of CandidateInterviews) {\r\n\t\tconst candidate = new CandidatePersonalQualities();\r\n\r\n\t\tcandidate.name = faker.name.jobArea();\r\n\t\tcandidate.interviewId = interview.id;\r\n\t\tcandidate.rating = Math.floor(Math.random() * 5) + 1;\r\n\t\tcandidate.interview = interview;\r\n\t\tcandidate.tenant = tenant;\r\n\t\tcandidate.organization = organization;\r\n\r\n\t\tcandidates.push(candidate);\r\n\t}\r\n\tawait connection.manager.save(candidates);\r\n\treturn candidates;\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { CrudService } from '../core/crud/crud.service';\r\nimport { CandidatePersonalQualities } from './candidate-personal-qualities.entity';\r\nimport { ICandidatePersonalQualitiesCreateInput } from '@gauzy/models';\r\n\r\n@Injectable()\r\nexport class CandidatePersonalQualitiesService extends CrudService<\r\n\tCandidatePersonalQualities\r\n> {\r\n\tconstructor(\r\n\t\t@InjectRepository(CandidatePersonalQualities)\r\n\t\tprivate readonly candidatePersonalQualitiesRepository: Repository<\r\n\t\t\tCandidatePersonalQualities\r\n\t\t>\r\n\t) {\r\n\t\tsuper(candidatePersonalQualitiesRepository);\r\n\t}\r\n\tasync createBulk(createInput: ICandidatePersonalQualitiesCreateInput[]) {\r\n\t\treturn await this.repository.save(createInput);\r\n\t}\r\n\tasync getPersonalQualitiesByInterviewId(\r\n\t\tinterviewId: string\r\n\t): Promise<CandidatePersonalQualities[]> {\r\n\t\treturn await this.repository\r\n\t\t\t.createQueryBuilder('candidate_personal_quality')\r\n\t\t\t.where('candidate_personal_quality.interviewId = :interviewId', {\r\n\t\t\t\tinterviewId\r\n\t\t\t})\r\n\t\t\t.getMany();\r\n\t}\r\n\tasync deleteBulk(ids: string[]) {\r\n\t\treturn await this.repository.delete(ids);\r\n\t}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class CandidatePersonalQualitiesBulkCreateCommand implements ICommand {\r\n\tstatic readonly type = '[CandidatePersonalQualities] Register';\r\n\r\n\tconstructor(\r\n\t\tpublic readonly interviewId: string,\r\n\t\tpublic readonly personalQualities: string[]\r\n\t) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { ICandidatePersonalQualities } from '@gauzy/models';\r\n\r\nexport class CandidatePersonalQualitiesBulkDeleteCommand implements ICommand {\r\n\tstatic readonly type = '[CandidatePersonalQualities] Delete';\r\n\r\n\tconstructor(\r\n\t\tpublic readonly id: string,\r\n\t\tpublic readonly personalQualities?: ICandidatePersonalQualities[]\r\n\t) {}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { ICandidatePersonalQualitiesCreateInput } from '@gauzy/models';\r\nimport { CandidatePersonalQualitiesBulkCreateCommand } from '../candidate-personal-qualities.bulk.create.command';\r\nimport { CandidatePersonalQualitiesService } from '../../candidate-personal-qualities.service';\r\nimport { CandidatePersonalQualities } from '../../candidate-personal-qualities.entity';\r\n\r\n@CommandHandler(CandidatePersonalQualitiesBulkCreateCommand)\r\nexport class CandidatePersonalQualitiesBulkCreateHandler\r\n\timplements ICommandHandler<CandidatePersonalQualitiesBulkCreateCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly candidatePersonalQualitiesService: CandidatePersonalQualitiesService\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: CandidatePersonalQualitiesBulkCreateCommand\r\n\t): Promise<CandidatePersonalQualities[]> {\r\n\t\tconst { interviewId, personalQualities } = command;\r\n\t\tlet personalQuality: ICandidatePersonalQualitiesCreateInput;\r\n\t\tconst createInput: ICandidatePersonalQualitiesCreateInput[] = [];\r\n\t\tfor (const item of personalQualities) {\r\n\t\t\tpersonalQuality = { name: item, interviewId: interviewId };\r\n\t\t\tcreateInput.push(personalQuality);\r\n\t\t}\r\n\t\treturn await this.candidatePersonalQualitiesService.createBulk(\r\n\t\t\tcreateInput\r\n\t\t);\r\n\t}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { CandidatePersonalQualitiesBulkDeleteCommand } from '../candidate-personal-qualities.bulk.delete.command';\r\nimport { CandidatePersonalQualitiesService } from '../../candidate-personal-qualities.service';\r\n\r\n@CommandHandler(CandidatePersonalQualitiesBulkDeleteCommand)\r\nexport class CandidatePersonalQualitiesBulkDeleteHandler\r\n\timplements ICommandHandler<CandidatePersonalQualitiesBulkDeleteCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly candidatePersonalQualitiesService: CandidatePersonalQualitiesService\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: CandidatePersonalQualitiesBulkDeleteCommand\r\n\t): Promise<any> {\r\n\t\tconst { id, personalQualities } = command;\r\n\t\tif (personalQualities) {\r\n\t\t\tawait this.candidatePersonalQualitiesService.deleteBulk(\r\n\t\t\t\tpersonalQualities.map((item) => item.id)\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tconst qual = await this.candidatePersonalQualitiesService.getPersonalQualitiesByInterviewId(\r\n\t\t\t\tid['id']\r\n\t\t\t);\r\n\t\t\tawait this.candidatePersonalQualitiesService.deleteBulk(\r\n\t\t\t\tqual.map((item) => item.id)\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn;\r\n\t}\r\n}\r\n","import { CandidatePersonalQualitiesBulkDeleteHandler } from './candidate-personal-qualities.bulk.delete.handler';\r\nimport { CandidatePersonalQualitiesBulkCreateHandler } from './candidate-personal-qualities.bulk.create.handler';\r\n\r\nexport const CommandHandlers = [\r\n\tCandidatePersonalQualitiesBulkDeleteHandler,\r\n\tCandidatePersonalQualitiesBulkCreateHandler\r\n];\r\n","export { CandidatePersonalQualitiesBulkDeleteCommand } from './candidate-personal-qualities.bulk.delete.command';\r\nexport { CandidatePersonalQualitiesBulkCreateCommand } from './candidate-personal-qualities.bulk.create.command';\r\n","import {\r\n\tController,\r\n\tHttpStatus,\r\n\tGet,\r\n\tQuery,\r\n\tUseGuards,\r\n\tPost,\r\n\tBody,\r\n\tDelete,\r\n\tParam\r\n} from '@nestjs/common';\r\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport { CrudController } from '../core/crud/crud.controller';\r\nimport { CandidateSkill } from './candidate-skill.entity';\r\nimport { CandidateSkillService } from './candidate-skill.service';\r\nimport { IPagination } from '../core';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { RoleGuard } from '../shared/guards/auth/role.guard';\r\nimport { Roles } from '../shared/decorators/roles';\r\nimport { RolesEnum } from '@gauzy/models';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('CandidateSkill')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class CandidateSkillController extends CrudController<CandidateSkill> {\r\n\tconstructor(private readonly candidateSkillService: CandidateSkillService) {\r\n\t\tsuper(candidateSkillService);\r\n\t}\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find all candidate skill.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found candidate skill',\r\n\t\ttype: CandidateSkill\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get()\r\n\tasync findSkill(\r\n\t\t@Query('data') data: string\r\n\t): Promise<IPagination<CandidateSkill>> {\r\n\t\tconst { findInput } = JSON.parse(data);\r\n\t\treturn this.candidateSkillService.findAll({ where: findInput });\r\n\t}\r\n\r\n\t@UseGuards(RoleGuard)\r\n\t@Roles(RolesEnum.CANDIDATE, RolesEnum.SUPER_ADMIN, RolesEnum.ADMIN)\r\n\t@Post()\r\n\tasync addSkill(@Body() entity: CandidateSkill): Promise<any> {\r\n\t\treturn this.candidateSkillService.create(entity);\r\n\t}\r\n\r\n\t@UseGuards(RoleGuard)\r\n\t@Roles(RolesEnum.CANDIDATE, RolesEnum.SUPER_ADMIN, RolesEnum.ADMIN)\r\n\t@Delete(':id')\r\n\tdeleteCandidateSkill(@Param() id: string): Promise<any> {\r\n\t\treturn this.candidateSkillService.delete(id);\r\n\t}\r\n}\r\n","import { Column, Entity, ManyToOne } from 'typeorm';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsString, IsNotEmpty } from 'class-validator';\r\nimport { ICandidateSkill, ICandidate } from '@gauzy/models';\r\nimport { Candidate } from '../candidate/candidate.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('candidate_skill')\r\nexport class CandidateSkill\r\n\textends TenantOrganizationBase\r\n\timplements ICandidateSkill {\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\tname: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Column({ nullable: true })\r\n\tcandidateId?: string;\r\n\r\n\t@ManyToOne(() => Candidate, (candidate) => candidate.skills, {\r\n\t\tonDelete: 'CASCADE'\r\n\t})\r\n\tcandidate: ICandidate;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { CandidateSkill } from './candidate-skill.entity';\r\nimport { CandidateSkillService } from './candidate-skill.service';\r\nimport { CandidateSkillController } from './candidate-skill.controller';\r\nimport { RoleModule } from '../role/role.module';\r\nimport { UserModule } from '../user/user.module';\r\nimport { RolePermissionsModule } from '../role-permissions/role-permissions.module';\r\nimport { AuthModule } from '../auth/auth.module';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([CandidateSkill]),\r\n\t\tUserModule,\r\n\t\tRoleModule,\r\n\t\tRolePermissionsModule,\r\n\t\tAuthModule,\r\n\t\tTenantModule\r\n\t],\r\n\tproviders: [CandidateSkillService],\r\n\tcontrollers: [CandidateSkillController],\r\n\texports: [CandidateSkillService]\r\n})\r\nexport class CandidateSkillModule {}\r\n","import { ISkill, ICandidate } from '@gauzy/models';\r\nimport { Connection } from 'typeorm';\r\nimport * as faker from 'faker';\r\nimport { CandidateSkill } from './candidate-skill.entity';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { DEFAULT_CANDIDATE_SKILLS } from './default-candidate-skills';\r\n\r\nexport const createCandidateSkills = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\tcandidates: ICandidate[] | void,\r\n\torganization: Organization\r\n): Promise<CandidateSkill[]> => {\r\n\tlet defaultCandidateSkills = [];\r\n\tif (!candidates) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: candidates not found, CandidateSkills will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tcandidates.forEach((candidate) => {\r\n\t\tconst skills = DEFAULT_CANDIDATE_SKILLS.map((skill: ISkill) => ({\r\n\t\t\tname: skill.name,\r\n\t\t\tcandidateId: candidate.id,\r\n\t\t\t...{ organization, tenant }\r\n\t\t}));\r\n\t\tdefaultCandidateSkills = [...defaultCandidateSkills, ...skills];\r\n\t});\r\n\r\n\tinsertCandidateSkills(connection, defaultCandidateSkills);\r\n\treturn defaultCandidateSkills;\r\n};\r\n\r\nexport const createRandomCandidateSkills = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantCandidatesMap: Map<Tenant, ICandidate[]> | void\r\n): Promise<Map<ICandidate, CandidateSkill[]>> => {\r\n\tif (!tenantCandidatesMap) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: tenantCandidatesMap not found, CandidateSkills will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tlet candidateSkills = [];\r\n\tconst candidateSkillsMap: Map<ICandidate, any[]> = new Map();\r\n\r\n\tfor await (const tenant of tenants || []) {\r\n\t\tconst organizations = await connection.manager.find(Organization, {\r\n\t\t\twhere: [{ tenant: tenant }]\r\n\t\t});\r\n\t\tconst candidates = tenantCandidatesMap.get(tenant);\r\n\t\t(candidates || []).forEach((candidate) => {\r\n\t\t\tconst skills = DEFAULT_CANDIDATE_SKILLS.map((skill) => ({\r\n\t\t\t\tname: skill.name,\r\n\t\t\t\tcandidateId: candidate.id,\r\n\t\t\t\torganization: faker.random.arrayElement(organizations),\r\n\t\t\t\ttenant: tenant\r\n\t\t\t}));\r\n\r\n\t\t\tcandidateSkillsMap.set(candidate, skills);\r\n\t\t\tcandidateSkills = [...candidateSkills, ...skills];\r\n\t\t});\r\n\t}\r\n\r\n\tawait insertCandidateSkills(connection, candidateSkills);\r\n\treturn candidateSkillsMap;\r\n};\r\n\r\nconst insertCandidateSkills = async (\r\n\tconnection: Connection,\r\n\tcandidateSkills: CandidateSkill[]\r\n) => {\r\n\tawait connection\r\n\t\t.createQueryBuilder()\r\n\t\t.insert()\r\n\t\t.into(CandidateSkill)\r\n\t\t.values(candidateSkills)\r\n\t\t.execute();\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { CrudService } from '../core/crud/crud.service';\r\nimport { CandidateSkill } from './candidate-skill.entity';\r\n\r\n@Injectable()\r\nexport class CandidateSkillService extends CrudService<CandidateSkill> {\r\n\tconstructor(\r\n\t\t@InjectRepository(CandidateSkill)\r\n\t\tprivate readonly candidateSkillRepository: Repository<CandidateSkill>\r\n\t) {\r\n\t\tsuper(candidateSkillRepository);\r\n\t}\r\n}\r\n","import { ISkill } from '@gauzy/models';\r\n\r\nexport const DEFAULT_CANDIDATE_SKILLS: ISkill[] = [\r\n\t{\r\n\t\tname: 'Fullstack Developer'\r\n\t},\r\n\t{\r\n\t\tname: 'MEAN Stack Developer'\r\n\t}\r\n];\r\n","import { CandidateSource } from './candidate-source.entity';\r\nimport {\r\n\tPost,\r\n\tUseGuards,\r\n\tHttpStatus,\r\n\tGet,\r\n\tQuery,\r\n\tBody,\r\n\tController,\r\n\tPut\r\n} from '@nestjs/common';\r\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport { CrudController } from '../core/crud/crud.controller';\r\nimport { CandidateSourceService } from './candidate-source.service';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { IPagination } from '../core';\r\nimport { ICandidateSource } from '@gauzy/models';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('CandidateSource')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class CandidateSourceController extends CrudController<CandidateSource> {\r\n\tconstructor(\r\n\t\tprivate readonly candidateSourceService: CandidateSourceService\r\n\t) {\r\n\t\tsuper(candidateSourceService);\r\n\t}\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find all candidate source.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found candidate source',\r\n\t\ttype: CandidateSource\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get()\r\n\tasync findSource(\r\n\t\t@Query('data') data: string\r\n\t): Promise<IPagination<CandidateSource>> {\r\n\t\tconst { findInput } = JSON.parse(data);\r\n\t\treturn this.candidateSourceService.findAll({ where: findInput });\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Create candidate source.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Created candidate source',\r\n\t\ttype: CandidateSource\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Post()\r\n\tasync create(@Body() entity: CandidateSource): Promise<any> {\r\n\t\tthis.candidateSourceService.create(entity);\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Update candidate source.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Updated candidate source',\r\n\t\ttype: CandidateSource\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Put('updateBulk')\r\n\tasync updateBulk(@Body() entity: ICandidateSource[]): Promise<any> {\r\n\t\treturn this.candidateSourceService.updateBulk(entity);\r\n\t}\r\n}\r\n","import { Column, Entity } from 'typeorm';\r\nimport { ICandidateSource } from '@gauzy/models';\r\nimport { IsString, IsNotEmpty } from 'class-validator';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('candidate_source')\r\nexport class CandidateSource extends TenantOrganizationBase\r\n\timplements ICandidateSource {\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\tname: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Column({ nullable: true })\r\n\tcandidateId?: string;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { CandidateSourceService } from './candidate-source.service';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { CandidateSource } from './candidate-source.entity';\r\nimport { CandidateSourceController } from './candidate-source.controller';\r\nimport { UserModule } from '../user/user.module';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([CandidateSource]),\r\n\t\tUserModule,\r\n\t\tTenantModule\r\n\t],\r\n\tproviders: [CandidateSourceService],\r\n\tcontrollers: [CandidateSourceController],\r\n\texports: [CandidateSourceService]\r\n})\r\nexport class CandidateSourceModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { ICandidate } from '@gauzy/models';\r\nimport { CandidateSource } from './candidate-source.entity';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { DEFAULT_CANDIDATE_SOURCES } from './default-candidate-sources';\r\n\r\nexport const createCandidateSources = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\tcandidates: ICandidate[] | void,\r\n\torganization: Organization\r\n): Promise<CandidateSource[]> => {\r\n\tif (!candidates) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: candidates not found, CandidateSources will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tlet defaultCandidateSources: CandidateSource[] = [];\r\n\tcandidates.forEach((candidate) => {\r\n\t\tconst rand = Math.floor(\r\n\t\t\tMath.random() * DEFAULT_CANDIDATE_SOURCES.length\r\n\t\t);\r\n\t\tconst sources = {\r\n\t\t\tname: DEFAULT_CANDIDATE_SOURCES[rand].name,\r\n\t\t\tcandidateId: candidate.id,\r\n\t\t\t...{ organization, tenant }\r\n\t\t};\r\n\t\tdefaultCandidateSources = [...defaultCandidateSources, sources];\r\n\t});\r\n\r\n\tinsertCandidateSources(connection, defaultCandidateSources);\r\n\r\n\treturn defaultCandidateSources;\r\n};\r\n\r\nexport const createRandomCandidateSources = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantCandidatesMap: Map<Tenant, ICandidate[]> | void\r\n): Promise<Map<ICandidate, CandidateSource[]>> => {\r\n\tif (!tenantCandidatesMap) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: tenantCandidatesMap not found, CandidateSources will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tlet candidateSources = [];\r\n\tconst candidateSourcesMap: Map<ICandidate, CandidateSource[]> = new Map();\r\n\r\n\t(tenants || []).forEach((tenant) => {\r\n\t\tconst candidates = tenantCandidatesMap.get(tenant);\r\n\r\n\t\tconst rand = Math.floor(\r\n\t\t\tMath.random() * DEFAULT_CANDIDATE_SOURCES.length\r\n\t\t);\r\n\r\n\t\t(candidates || []).forEach((candidate) => {\r\n\t\t\tconst sources: any = {\r\n\t\t\t\tname: DEFAULT_CANDIDATE_SOURCES[rand].name,\r\n\t\t\t\tcandidateId: candidate.id,\r\n\t\t\t\t...{ organization: candidate.organization, tenant }\r\n\t\t\t};\r\n\r\n\t\t\tcandidateSourcesMap.set(candidate, sources);\r\n\t\t\tcandidateSources = [...candidateSources, sources];\r\n\t\t});\r\n\t});\r\n\r\n\tawait insertCandidateSources(connection, candidateSources);\r\n\r\n\treturn candidateSourcesMap;\r\n};\r\n\r\nconst insertCandidateSources = async (\r\n\tconnection: Connection,\r\n\tcandidateSources: CandidateSource[]\r\n) => {\r\n\tawait connection\r\n\t\t.createQueryBuilder()\r\n\t\t.insert()\r\n\t\t.into(CandidateSource)\r\n\t\t.values(candidateSources)\r\n\t\t.execute();\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { CrudService } from '../core/crud/crud.service';\r\nimport { CandidateSource } from './candidate-source.entity';\r\nimport { ICandidateSource } from '@gauzy/models';\r\n\r\n@Injectable()\r\nexport class CandidateSourceService extends CrudService<CandidateSource> {\r\n\tconstructor(\r\n\t\t@InjectRepository(CandidateSource)\r\n\t\tprivate readonly candidateSourceRepository: Repository<CandidateSource>\r\n\t) {\r\n\t\tsuper(candidateSourceRepository);\r\n\t}\r\n\tupdateBulk(updateInput: ICandidateSource[]): Promise<any> {\r\n\t\tupdateInput.forEach(async (item) => {\r\n\t\t\tawait this.candidateSourceRepository.save(item);\r\n\t\t});\r\n\t\treturn;\r\n\t}\r\n}\r\n","import { ICandidateSource } from '@gauzy/models';\r\n\r\nexport const DEFAULT_CANDIDATE_SOURCES: ICandidateSource[] = [\r\n\t{\r\n\t\tname: 'LinkedIn'\r\n\t},\r\n\t{\r\n\t\tname: 'Indeed'\r\n\t},\r\n\t{\r\n\t\tname: 'Idealist'\r\n\t},\r\n\t{\r\n\t\tname: 'Dice'\r\n\t},\r\n\t{\r\n\t\tname: 'Monster'\r\n\t}\r\n];\r\n","import {\r\n\tController,\r\n\tUseGuards,\r\n\tPost,\r\n\tBody,\r\n\tDelete,\r\n\tParam,\r\n\tGet,\r\n\tPut,\r\n\tQuery,\r\n\tHttpStatus\r\n} from '@nestjs/common';\r\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\r\nimport { CrudController } from '../core/crud/crud.controller';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { RoleGuard } from '../shared/guards/auth/role.guard';\r\nimport { Roles } from '../shared/decorators/roles';\r\nimport { RolesEnum, ICandidateTechnologies } from '@gauzy/models';\r\nimport { CandidateTechnologiesService } from './candidate-technologies.service';\r\nimport { CandidateTechnologies } from './candidate-technologies.entity';\r\nimport { CommandBus } from '@nestjs/cqrs';\r\nimport {\r\n\tCandidateTechnologiesBulkCreateCommand,\r\n\tCandidateTechnologiesBulkDeleteCommand,\r\n\tCandidateTechnologiesBulkUpdateCommand\r\n} from './commands';\r\nimport { ParseJsonPipe } from '../shared';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n@ApiTags('CandidateTechnology')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class CandidateTechnologiesController extends CrudController<\r\n\tCandidateTechnologies\r\n> {\r\n\tconstructor(\r\n\t\tprivate readonly candidateTechnologiesService: CandidateTechnologiesService,\r\n\t\tprivate commandBus: CommandBus\r\n\t) {\r\n\t\tsuper(candidateTechnologiesService);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find all candidate technologies.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found candidate technologies',\r\n\t\ttype: CandidateTechnologies\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@UseGuards(RoleGuard)\r\n\t@Roles(RolesEnum.CANDIDATE, RolesEnum.SUPER_ADMIN, RolesEnum.ADMIN)\r\n\t@Get()\r\n\tfindAllApprovalPolicies(@Query('data') data: string): any {\r\n\t\tconst { findInput, relations } = JSON.parse(data);\r\n\t\treturn this.candidateTechnologiesService.findAll({\r\n\t\t\twhere: findInput,\r\n\t\t\trelations\r\n\t\t});\r\n\t}\r\n\r\n\t@UseGuards(RoleGuard)\r\n\t@Roles(RolesEnum.CANDIDATE, RolesEnum.SUPER_ADMIN, RolesEnum.ADMIN)\r\n\t@Post()\r\n\tasync addTechnology(@Body() entity: CandidateTechnologies): Promise<any> {\r\n\t\treturn this.candidateTechnologiesService.create(entity);\r\n\t}\r\n\r\n\t@UseGuards(RoleGuard)\r\n\t@Roles(RolesEnum.CANDIDATE, RolesEnum.SUPER_ADMIN, RolesEnum.ADMIN)\r\n\t@Delete(':id')\r\n\tdeleteTechnology(@Param() id: string): Promise<any> {\r\n\t\treturn this.candidateTechnologiesService.delete(id);\r\n\t}\r\n\r\n\t@UseGuards(RoleGuard)\r\n\t@Roles(RolesEnum.CANDIDATE, RolesEnum.SUPER_ADMIN, RolesEnum.ADMIN)\r\n\t@Post('createBulk')\r\n\tasync createBulk(@Body() input: any): Promise<ICandidateTechnologies[]> {\r\n\t\tconst { interviewId = null, technologies = [] } = input;\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew CandidateTechnologiesBulkCreateCommand(\r\n\t\t\t\tinterviewId,\r\n\t\t\t\ttechnologies\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n\r\n\t@UseGuards(RoleGuard)\r\n\t@Roles(RolesEnum.CANDIDATE, RolesEnum.SUPER_ADMIN, RolesEnum.ADMIN)\r\n\t@Put('updateBulk')\r\n\tasync updateBulk(\r\n\t\t@Body() technologies: ICandidateTechnologies[]\r\n\t): Promise<ICandidateTechnologies[]> {\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew CandidateTechnologiesBulkUpdateCommand(technologies)\r\n\t\t);\r\n\t}\r\n\r\n\t@UseGuards(RoleGuard)\r\n\t@Roles(RolesEnum.CANDIDATE, RolesEnum.SUPER_ADMIN, RolesEnum.ADMIN)\r\n\t@Get('getByInterviewId/:interviewId')\r\n\tasync findByInterviewId(\r\n\t\t@Param('interviewId') interviewId: string\r\n\t): Promise<ICandidateTechnologies[]> {\r\n\t\treturn this.candidateTechnologiesService.getTechnologiesByInterviewId(\r\n\t\t\tinterviewId\r\n\t\t);\r\n\t}\r\n\r\n\t@UseGuards(RoleGuard)\r\n\t@Roles(RolesEnum.CANDIDATE, RolesEnum.SUPER_ADMIN, RolesEnum.ADMIN)\r\n\t@Delete('deleteBulk/:id')\r\n\tasync deleteBulkTechnologies(\r\n\t\t@Param() id: string,\r\n\t\t@Query('data', ParseJsonPipe) data: any\r\n\t): Promise<any> {\r\n\t\tconst { technologies = null } = data;\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew CandidateTechnologiesBulkDeleteCommand(id, technologies)\r\n\t\t);\r\n\t}\r\n}\r\n","import { Column, Entity, ManyToOne } from 'typeorm';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { ICandidateTechnologies, ICandidateInterview } from '@gauzy/models';\r\nimport { CandidateInterview } from '../candidate-interview/candidate-interview.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('candidate_technology')\r\nexport class CandidateTechnologies\r\n\textends TenantOrganizationBase\r\n\timplements ICandidateTechnologies {\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\tname: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column({ nullable: true })\r\n\tinterviewId?: string;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@Column({ nullable: true, type: 'numeric' })\r\n\trating?: number;\r\n\r\n\t@ManyToOne(\r\n\t\t() => CandidateInterview,\r\n\t\t(interview) => interview.technologies,\r\n\t\t{\r\n\t\t\tonDelete: 'CASCADE'\r\n\t\t}\r\n\t)\r\n\tinterview: ICandidateInterview;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { RoleModule } from '../role/role.module';\r\nimport { RolePermissionsModule } from '../role-permissions/role-permissions.module';\r\nimport { AuthModule } from '../auth/auth.module';\r\nimport { CandidateTechnologies } from './candidate-technologies.entity';\r\nimport { CandidateTechnologiesController } from './candidate-technologies.controller';\r\nimport { CandidateTechnologiesService } from './candidate-technologies.service';\r\nimport { CommandHandlers } from './commands/handlers';\r\nimport { CqrsModule } from '@nestjs/cqrs';\r\nimport { UserService } from '../user/user.service';\r\nimport { User } from '../user/user.entity';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([CandidateTechnologies, User]),\r\n\t\tRoleModule,\r\n\t\tRolePermissionsModule,\r\n\t\tAuthModule,\r\n\t\tCqrsModule,\r\n\t\tTenantModule\r\n\t],\r\n\tproviders: [CandidateTechnologiesService, UserService, ...CommandHandlers],\r\n\tcontrollers: [CandidateTechnologiesController],\r\n\texports: [CandidateTechnologiesService]\r\n})\r\nexport class CandidateTechnologiesModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { ICandidate } from '@gauzy/models';\r\nimport * as faker from 'faker';\r\nimport { CandidateTechnologies } from './candidate-technologies.entity';\r\nimport { CandidateInterview } from '../candidate-interview/candidate-interview.entity';\r\nimport { Organization } from '../organization/organization.entity';\r\nexport const createDefaultCandidateTechnologies = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\torganization: Organization,\r\n\tdefaultCandidates\r\n): Promise<CandidateTechnologies[]> => {\r\n\tif (!defaultCandidates) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: defaultCandidates not found, Default Candidate Feedbacks will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tlet candidates: CandidateTechnologies[] = [];\r\n\tfor (const tenantCandidate of defaultCandidates) {\r\n\t\tconst candidateInterviews = await connection.manager.find(\r\n\t\t\tCandidateInterview,\r\n\t\t\t{\r\n\t\t\t\twhere: [{ candidate: tenantCandidate }]\r\n\t\t\t}\r\n\t\t);\r\n\t\tcandidates = await dataOperation(\r\n\t\t\tconnection,\r\n\t\t\ttenant,\r\n\t\t\torganization,\r\n\t\t\tcandidates,\r\n\t\t\tcandidateInterviews\r\n\t\t);\r\n\t}\r\n\r\n\treturn candidates;\r\n};\r\n\r\nexport const createRandomCandidateTechnologies = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantCandidatesMap: Map<Tenant, ICandidate[]> | void\r\n): Promise<CandidateTechnologies[]> => {\r\n\tif (!tenantCandidatesMap) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: tenantCandidatesMap not found, CandidateFeedbacks will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tlet candidates: CandidateTechnologies[] = [];\r\n\tfor (const tenant of tenants) {\r\n\t\tconst tenantCandidates = tenantCandidatesMap.get(tenant);\r\n\t\tfor (const tenantCandidate of tenantCandidates) {\r\n\t\t\tconst candidateInterviews = await connection.manager.find(\r\n\t\t\t\tCandidateInterview,\r\n\t\t\t\t{\r\n\t\t\t\t\twhere: [{ candidate: tenantCandidate }]\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\tcandidates = await dataOperation(\r\n\t\t\t\tconnection,\r\n\t\t\t\ttenant,\r\n\t\t\t\ttenantCandidate.organization,\r\n\t\t\t\tcandidates,\r\n\t\t\t\tcandidateInterviews\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\treturn candidates;\r\n};\r\n\r\nconst dataOperation = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\torganization: Organization,\r\n\tcandidates,\r\n\tCandidateInterviews\r\n) => {\r\n\tfor (const interview of CandidateInterviews) {\r\n\t\tconst candidate = new CandidateTechnologies();\r\n\r\n\t\tcandidate.name = faker.name.jobArea();\r\n\t\tcandidate.interviewId = interview.id;\r\n\t\tcandidate.rating = Math.floor(Math.random() * 5) + 1;\r\n\t\tcandidate.interview = interview;\r\n\t\tcandidate.tenant = tenant;\r\n\t\tcandidate.organization = organization;\r\n\r\n\t\tcandidates.push(candidate);\r\n\t}\r\n\tawait connection.manager.save(candidates);\r\n\treturn candidates;\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { CrudService } from '../core/crud/crud.service';\r\nimport { CandidateTechnologies } from './candidate-technologies.entity';\r\nimport { ICandidateTechnologiesCreateInput } from '@gauzy/models';\r\n\r\n@Injectable()\r\nexport class CandidateTechnologiesService extends CrudService<\r\n\tCandidateTechnologies\r\n> {\r\n\tconstructor(\r\n\t\t@InjectRepository(CandidateTechnologies)\r\n\t\tprivate readonly candidateTechnologiesRepository: Repository<\r\n\t\t\tCandidateTechnologies\r\n\t\t>\r\n\t) {\r\n\t\tsuper(candidateTechnologiesRepository);\r\n\t}\r\n\tasync createBulk(createInput: ICandidateTechnologiesCreateInput[]) {\r\n\t\treturn await this.repository.save(createInput);\r\n\t}\r\n\tasync getTechnologiesByInterviewId(\r\n\t\tinterviewId: string\r\n\t): Promise<CandidateTechnologies[]> {\r\n\t\treturn await this.repository\r\n\t\t\t.createQueryBuilder('candidate_technology')\r\n\t\t\t.where('candidate_technology.interviewId = :interviewId', {\r\n\t\t\t\tinterviewId\r\n\t\t\t})\r\n\t\t\t.getMany();\r\n\t}\r\n\tasync deleteBulk(ids: string[]) {\r\n\t\treturn await this.repository.delete(ids);\r\n\t}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class CandidateTechnologiesBulkCreateCommand implements ICommand {\r\n\tstatic readonly type = '[CandidateTechnologies] Register';\r\n\r\n\tconstructor(\r\n\t\tpublic readonly interviewId: string,\r\n\t\tpublic readonly technologies: string[]\r\n\t) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { ICandidateTechnologies } from '@gauzy/models';\r\n\r\nexport class CandidateTechnologiesBulkDeleteCommand implements ICommand {\r\n\tstatic readonly type = '[CandidateTechnologies] Delete';\r\n\r\n\tconstructor(\r\n\t\tpublic readonly id: string,\r\n\t\tpublic readonly technologies?: ICandidateTechnologies[]\r\n\t) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { ICandidateTechnologies } from '@gauzy/models';\r\n\r\nexport class CandidateTechnologiesBulkUpdateCommand implements ICommand {\r\n\tstatic readonly type = '[CandidateTechnologies] Update';\r\n\r\n\tconstructor(public readonly technologies: ICandidateTechnologies[]) {}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { CandidateTechnologiesBulkCreateCommand } from '../candidate-technologies.bulk.create.command';\r\nimport { CandidateTechnologiesService } from '../../candidate-technologies.service';\r\nimport { CandidateTechnologies } from '../../candidate-technologies.entity';\r\nimport { ICandidateTechnologiesCreateInput } from '@gauzy/models';\r\n\r\n@CommandHandler(CandidateTechnologiesBulkCreateCommand)\r\nexport class CandidateTechnologiesBulkCreateHandler\r\n\timplements ICommandHandler<CandidateTechnologiesBulkCreateCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly candidateTechnologiesService: CandidateTechnologiesService\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: CandidateTechnologiesBulkCreateCommand\r\n\t): Promise<CandidateTechnologies[]> {\r\n\t\tconst { interviewId, technologies } = command;\r\n\t\tlet technology: ICandidateTechnologiesCreateInput;\r\n\t\tconst createInput: ICandidateTechnologiesCreateInput[] = [];\r\n\t\tfor (const item of technologies) {\r\n\t\t\ttechnology = { name: item, interviewId: interviewId };\r\n\t\t\tcreateInput.push(technology);\r\n\t\t}\r\n\t\treturn await this.candidateTechnologiesService.createBulk(createInput);\r\n\t}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { CandidateTechnologiesBulkDeleteCommand } from '../candidate-technologies.bulk.delete.command';\r\nimport { CandidateTechnologiesService } from '../../candidate-technologies.service';\r\n\r\n@CommandHandler(CandidateTechnologiesBulkDeleteCommand)\r\nexport class CandidateTechnologiesBulkDeleteHandler\r\n\timplements ICommandHandler<CandidateTechnologiesBulkDeleteCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly candidateTechnologiesService: CandidateTechnologiesService\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: CandidateTechnologiesBulkDeleteCommand\r\n\t): Promise<any> {\r\n\t\tconst { id, technologies } = command;\r\n\r\n\t\tif (technologies) {\r\n\t\t\tawait this.candidateTechnologiesService.deleteBulk(\r\n\t\t\t\ttechnologies.map((item) => item.id)\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tconst tech = await this.candidateTechnologiesService.getTechnologiesByInterviewId(\r\n\t\t\t\tid['id']\r\n\t\t\t);\r\n\t\t\tawait this.candidateTechnologiesService.deleteBulk(\r\n\t\t\t\ttech.map((item) => item.id)\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { CandidateTechnologiesService } from '../../candidate-technologies.service';\r\nimport { CandidateTechnologiesBulkUpdateCommand } from '../candidate-technologies.bulk.update.command';\r\n\r\n@CommandHandler(CandidateTechnologiesBulkUpdateCommand)\r\nexport class CandidateTechnologiesBulkUpdateHandler\r\n\timplements ICommandHandler<CandidateTechnologiesBulkUpdateCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly candidateTechnologiesService: CandidateTechnologiesService\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: CandidateTechnologiesBulkUpdateCommand\r\n\t): Promise<any> {\r\n\t\tconst { technologies } = command;\r\n\t\t// TO DO\r\n\t\ttechnologies.forEach((item) =>\r\n\t\t\tthis.candidateTechnologiesService.update(item.id, { ...item })\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n}\r\n","import { CandidateTechnologiesBulkDeleteHandler } from './candidate-technologies.bulk.delete.handler';\r\nimport { CandidateTechnologiesBulkCreateHandler } from './candidate-technologies.bulk.create.handler';\r\nimport { CandidateTechnologiesBulkUpdateHandler } from './candidate-technologies.bulk.update.handler';\r\nexport const CommandHandlers = [\r\n\tCandidateTechnologiesBulkDeleteHandler,\r\n\tCandidateTechnologiesBulkCreateHandler,\r\n\tCandidateTechnologiesBulkUpdateHandler\r\n];\r\n","export { CandidateTechnologiesBulkDeleteCommand } from './candidate-technologies.bulk.delete.command';\r\nexport { CandidateTechnologiesBulkCreateCommand } from './candidate-technologies.bulk.create.command';\r\nexport { CandidateTechnologiesBulkUpdateCommand } from './candidate-technologies.bulk.update.command';\r\n","import {\r\n\tBody,\r\n\tController,\r\n\tGet,\r\n\tHttpCode,\r\n\tHttpStatus,\r\n\tParam,\r\n\tPut,\r\n\tQuery,\r\n\tUseGuards,\r\n\tPost\r\n} from '@nestjs/common';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\r\nimport { IPagination, getUserDummyImage } from '../core';\r\nimport { CrudController } from '../core/crud/crud.controller';\r\nimport { CandidateService } from './candidate.service';\r\nimport { Candidate } from './candidate.entity';\r\nimport { PermissionGuard } from '../shared/guards/auth/permission.guard';\r\nimport { Permissions } from '../shared/decorators/permissions';\r\nimport {\r\n\tPermissionsEnum,\r\n\tICandidateCreateInput,\r\n\tLanguagesEnum,\r\n\tICandidate,\r\n\tICandidateUpdateInput\r\n} from '@gauzy/models';\r\nimport { CommandBus } from '@nestjs/cqrs';\r\nimport {\r\n\tCandidateCreateCommand,\r\n\tCandidateBulkCreateCommand,\r\n\tCandidateUpdateCommand\r\n} from './commands';\r\nimport { I18nLang } from 'nestjs-i18n';\r\nimport { ParseJsonPipe, UUIDValidationPipe } from '../shared';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('Candidate')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class CandidateController extends CrudController<Candidate> {\r\n\tconstructor(\r\n\t\tprivate readonly candidateService: CandidateService,\r\n\t\tprivate readonly commandBus: CommandBus\r\n\t) {\r\n\t\tsuper(candidateService);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Update an existing record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully edited.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Put(':id')\r\n\tasync update(\r\n\t\t@Param('id', UUIDValidationPipe) id: string,\r\n\t\t@Body() entity: ICandidateUpdateInput\r\n\t): Promise<ICandidate> {\r\n\t\t//We are using create here because create calls the method save()\r\n\t\t//We need save() to save ManyToMany relations\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew CandidateUpdateCommand({ id, ...entity })\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find all candidates in the same tenant.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found candidates in the tenant',\r\n\t\ttype: Candidate\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get()\r\n\tasync findAllCandidates(\r\n\t\t@Query('data', ParseJsonPipe) data: any\r\n\t): Promise<IPagination<Candidate>> {\r\n\t\tconst { relations, findInput } = data;\r\n\t\treturn this.candidateService.findAll({\r\n\t\t\twhere: findInput,\r\n\t\t\trelations\r\n\t\t});\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find Candidate by id ' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found one record',\r\n\t\ttype: Candidate\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get(':id')\r\n\tasync findById(\r\n\t\t@Param('id') id: string,\r\n\t\t@Query('data', ParseJsonPipe) data?: any\r\n\t): Promise<Candidate> {\r\n\t\tconst { relations = [] } = data;\r\n\t\treturn this.candidateService.findOne(id, {\r\n\t\t\trelations\r\n\t\t});\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Create new record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully created.' /*, type: T*/\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_CANDIDATES_EDIT)\r\n\t@Post('/create')\r\n\tasync create(\r\n\t\t@Body() entity: ICandidateCreateInput,\r\n\t\t...options: any[]\r\n\t): Promise<Candidate> {\r\n\t\treturn this.commandBus.execute(new CandidateCreateCommand(entity));\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Create records in Bulk' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'Records have been successfully created.' /*, type: T*/\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_CANDIDATES_EDIT)\r\n\t@Post('/createBulk')\r\n\tasync createBulk(\r\n\t\t@Body() input: ICandidateCreateInput[],\r\n\t\t@I18nLang() languageCode: LanguagesEnum,\r\n\t\t...options: any[]\r\n\t): Promise<Candidate[]> {\r\n\t\t/**\r\n\t\t * Use a dummy image avatar if no image is uploaded for any of the Candidate in the list\r\n\t\t */\r\n\t\tinput\r\n\t\t\t.filter((entity) => !entity.user.imageUrl)\r\n\t\t\t.forEach(\r\n\t\t\t\t(entity) =>\r\n\t\t\t\t\t(entity.user.imageUrl = getUserDummyImage(entity.user))\r\n\t\t\t);\r\n\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew CandidateBulkCreateCommand(input, languageCode)\r\n\t\t);\r\n\t}\r\n}\r\n","import { CandidateSkill } from './../candidate-skill/candidate-skill.entity';\r\nimport { CandidateExperience } from './../candidate-experience/candidate-experience.entity';\r\nimport {\r\n\tICandidate,\r\n\tICandidateInterview,\r\n\tICandidateSource,\r\n\tPayPeriodEnum,\r\n\tICandidateEducation,\r\n\tICandidateExperience,\r\n\tICandidateFeedback,\r\n\tICandidateDocument,\r\n\tCandidateStatus,\r\n\tICandidateSkill,\r\n\tIOrganizationPosition,\r\n\tIOrganizationEmploymentType,\r\n\tIOrganizationDepartment,\r\n\tIContact,\r\n\tITag\r\n} from '@gauzy/models';\r\nimport { average } from '@gauzy/utils';\r\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\r\nimport { IsDate, IsOptional, IsEnum } from 'class-validator';\r\nimport {\r\n\tColumn,\r\n\tEntity,\r\n\tJoinColumn,\r\n\tJoinTable,\r\n\tManyToMany,\r\n\tManyToOne,\r\n\tOneToOne,\r\n\tRelationId,\r\n\tOneToMany,\r\n\tAfterLoad\r\n} from 'typeorm';\r\nimport { OrganizationDepartment } from '../organization-department/organization-department.entity';\r\nimport { OrganizationEmploymentType } from '../organization-employment-type/organization-employment-type.entity';\r\nimport { OrganizationPositions } from '../organization-positions/organization-positions.entity';\r\nimport { Tag } from '../tags/tag.entity';\r\nimport { User } from '../user/user.entity';\r\nimport { CandidateEducation } from '../candidate-education/candidate-education.entity';\r\nimport { CandidateSource } from '../candidate-source/candidate-source.entity';\r\nimport { CandidateDocument } from '../candidate-documents/candidate-documents.entity';\r\nimport { CandidateFeedback } from '../candidate-feedbacks/candidate-feedbacks.entity';\r\nimport { CandidateInterview } from '../candidate-interview/candidate-interview.entity';\r\nimport { Contact } from '../contact/contact.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('candidate')\r\nexport class Candidate extends TenantOrganizationBase implements ICandidate {\r\n\t@ManyToMany((type) => Tag, (tag) => tag.candidate)\r\n\t@JoinTable({\r\n\t\tname: 'tag_candidate'\r\n\t})\r\n\ttags: ITag[];\r\n\r\n\t@ApiProperty({ type: Contact })\r\n\t@ManyToOne(() => Contact, (contact) => contact.candidates, {\r\n\t\tnullable: true,\r\n\t\tcascade: true,\r\n\t\tonDelete: 'CASCADE'\r\n\t})\r\n\t@JoinColumn()\r\n\tcontact: IContact;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@RelationId((candidate: Candidate) => candidate.contact)\r\n\treadonly contactId?: string;\r\n\r\n\t@OneToMany(() => CandidateEducation, (education) => education.candidate, {\r\n\t\tonDelete: 'SET NULL'\r\n\t})\r\n\t@JoinColumn()\r\n\teducations: ICandidateEducation[];\r\n\r\n\t@OneToMany(() => CandidateInterview, (interview) => interview.candidate, {\r\n\t\tonDelete: 'SET NULL'\r\n\t})\r\n\t@JoinColumn()\r\n\tinterview?: ICandidateInterview[];\r\n\r\n\t@OneToMany(\r\n\t\t() => CandidateExperience,\r\n\t\t(experience) => experience.candidate,\r\n\t\t{\r\n\t\t\tonDelete: 'SET NULL'\r\n\t\t}\r\n\t)\r\n\t@JoinColumn()\r\n\texperience: ICandidateExperience[];\r\n\r\n\t@OneToMany(() => CandidateSkill, (skill) => skill.candidate, {\r\n\t\tonDelete: 'SET NULL'\r\n\t})\r\n\t@JoinColumn()\r\n\tskills: ICandidateSkill[];\r\n\r\n\t@ApiProperty({ type: CandidateSource })\r\n\t@OneToOne((type) => CandidateSource, {\r\n\t\tcascade: true,\r\n\t\tonDelete: 'CASCADE'\r\n\t})\r\n\t@JoinColumn()\r\n\tsource?: ICandidateSource;\r\n\r\n\t@OneToMany(() => CandidateDocument, (document) => document.candidate, {\r\n\t\tonDelete: 'SET NULL'\r\n\t})\r\n\t@JoinColumn()\r\n\tdocuments?: ICandidateDocument[];\r\n\r\n\t@OneToMany(() => CandidateFeedback, (feedback) => feedback.candidate, {\r\n\t\tonDelete: 'SET NULL'\r\n\t})\r\n\t@JoinColumn()\r\n\tfeedbacks?: ICandidateFeedback[];\r\n\r\n\t@ApiProperty({ type: User })\r\n\t@OneToOne((type) => User, {\r\n\t\tcascade: true,\r\n\t\tonDelete: 'CASCADE'\r\n\t})\r\n\t@JoinColumn()\r\n\tuser: User;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@RelationId((candidate: Candidate) => candidate.user)\r\n\treadonly userId: string;\r\n\r\n\t@ApiPropertyOptional({ type: Number })\r\n\t@IsOptional()\r\n\t@Column({ nullable: true, type: 'numeric' })\r\n\trating?: number;\r\n\r\n\t@ApiProperty({ type: OrganizationPositions })\r\n\t@ManyToOne((type) => OrganizationPositions, { nullable: true })\r\n\t@JoinColumn()\r\n\torganizationPosition?: IOrganizationPosition;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@RelationId((candidate: Candidate) => candidate.organizationPosition)\r\n\treadonly organizationPositionId?: string;\r\n\r\n\t@ApiPropertyOptional({ type: Date })\r\n\t@IsDate()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tvalueDate?: Date;\r\n\r\n\t@ApiPropertyOptional({ type: Date })\r\n\t@IsDate()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tappliedDate?: Date;\r\n\r\n\t@ApiPropertyOptional({ type: Date })\r\n\t@IsDate()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\thiredDate?: Date;\r\n\r\n\t@ApiProperty({ type: String, enum: CandidateStatus })\r\n\t@IsEnum(CandidateStatus)\r\n\t@IsOptional()\r\n\t@Column({ nullable: true, default: CandidateStatus.APPLIED })\r\n\tstatus?: string;\r\n\r\n\t@ApiPropertyOptional({ type: Date })\r\n\t@IsDate()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\trejectDate?: Date;\r\n\r\n\t@ManyToMany(\r\n\t\t() => OrganizationDepartment,\r\n\t\t(department) => department.candidates,\r\n\t\t{\r\n\t\t\tcascade: true\r\n\t\t}\r\n\t)\r\n\t@JoinTable({\r\n\t\tname: 'candidate_department'\r\n\t})\r\n\torganizationDepartments?: IOrganizationDepartment[];\r\n\r\n\t@ManyToMany(\r\n\t\t() => OrganizationEmploymentType,\r\n\t\t(employmentType) => employmentType.candidates,\r\n\t\t{\r\n\t\t\tcascade: true\r\n\t\t}\r\n\t)\r\n\t@JoinTable({\r\n\t\tname: 'candidate_employment_type'\r\n\t})\r\n\torganizationEmploymentTypes?: IOrganizationEmploymentType[];\r\n\r\n\t@ApiPropertyOptional({ type: String, maxLength: 500 })\r\n\t@IsOptional()\r\n\t@Column({ length: 500, nullable: true })\r\n\tcandidateLevel?: string;\r\n\r\n\t@ApiPropertyOptional({ type: Number })\r\n\t@IsDate()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\treWeeklyLimit?: number; //Recurring Weekly Limit (hours)\r\n\r\n\t@ApiPropertyOptional({ type: String, maxLength: 255 })\r\n\t@IsOptional()\r\n\t@Column({ length: 255, nullable: true })\r\n\tbillRateCurrency?: string;\r\n\r\n\t@ApiPropertyOptional({ type: Number })\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tbillRateValue?: number;\r\n\r\n\t@ApiProperty({ type: String, enum: PayPeriodEnum })\r\n\t@IsEnum(PayPeriodEnum)\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tpayPeriod?: string;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tcvUrl?: string;\r\n\r\n\t@ApiPropertyOptional({ type: Boolean, default: false })\r\n\t@Column({ nullable: true, default: false })\r\n\tisArchived?: boolean;\r\n\r\n\tratings?: number;\r\n\t@AfterLoad()\r\n\tcalculateRatings() {\r\n\t\tif (Array.isArray(this.feedbacks)) {\r\n\t\t\tthis.ratings = average(this.feedbacks, 'rating');\r\n\t\t}\r\n\t}\r\n}\r\n","import { CqrsModule } from '@nestjs/cqrs';\r\nimport { Module } from '@nestjs/common';\r\nimport { CandidateController } from './candidate.controller';\r\nimport { CandidateService } from './candidate.service';\r\nimport { EmailModule, EmailService } from '../email';\r\nimport { User } from '../user/user.entity';\r\nimport { UserService } from '../user/user.service';\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { Candidate } from './candidate.entity';\r\nimport { UserOrganizationModule } from '../user-organization/user-organization.module';\r\nimport { CommandHandlers } from './commands/handlers';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([Candidate, User]),\r\n\t\tEmailModule,\r\n\t\tCqrsModule,\r\n\t\tUserOrganizationModule,\r\n\t\tTenantModule\r\n\t],\r\n\tcontrollers: [CandidateController],\r\n\tproviders: [\r\n\t\tCandidateService,\r\n\t\tUserService,\r\n\t\tAuthService,\r\n\t\tEmailService,\r\n\t\t...CommandHandlers\r\n\t],\r\n\texports: [CandidateService]\r\n})\r\nexport class CandidateModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { Candidate } from './candidate.entity';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { IUser, ISeedUsers } from '@gauzy/models';\r\n\r\nexport const createDefaultCandidates = async (\r\n\tconnection: Connection,\r\n\tdefaultData: {\r\n\t\ttenant: Tenant;\r\n\t\torg: Organization;\r\n\t\tusers: IUser[];\r\n\t}\r\n): Promise<Candidate[]> => {\r\n\tconst defaultUsers = defaultData.users;\r\n\tconst defaultOrg = defaultData.org;\r\n\tconst defaultTenant = defaultData.tenant;\r\n\tconst candidates: Candidate[] = [];\r\n\tfor (const user of defaultUsers) {\r\n\t\tconst candidate = new Candidate();\r\n\t\tcandidate.organization = defaultOrg;\r\n\t\tcandidate.user = user;\r\n\t\tcandidate.isArchived = false;\r\n\t\tcandidate.tenant = defaultTenant;\r\n\t\tcandidates.push(candidate);\r\n\t}\r\n\treturn await insertCandidates(connection, candidates);\r\n};\r\n\r\nexport const createRandomCandidates = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantOrganizationsMap: Map<Tenant, Organization[]>,\r\n\ttenantUsersMap: Map<Tenant, ISeedUsers>,\r\n\tcandidatesPerOrganization: number\r\n): Promise<Map<Tenant, Candidate[]>> => {\r\n\tconst candidateMap: Map<Tenant, Candidate[]> = new Map();\r\n\tfor (const tenant of tenants) {\r\n\t\tconst candidates: Candidate[] = [];\r\n\t\tconst randomUsers = tenantUsersMap.get(tenant).candidateUsers;\r\n\t\tconst randomOrgs = tenantOrganizationsMap.get(tenant);\r\n\t\tconst insertCandidatesInToOrganization = async (\r\n\t\t\tquantity: number,\r\n\t\t\torganization: Organization\r\n\t\t) => {\r\n\t\t\tfor (let index = 0; index < quantity; index++) {\r\n\t\t\t\tconst candidate = new Candidate();\r\n\t\t\t\tcandidate.tenant = tenant;\r\n\t\t\t\tcandidate.organization = organization;\r\n\t\t\t\tcandidate.isArchived = false;\r\n\t\t\t\tcandidate.user = randomUsers.pop();\r\n\t\t\t\tif (candidate.user) {\r\n\t\t\t\t\tcandidates.push(candidate);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tawait insertCandidates(connection, candidates);\r\n\t\t};\r\n\r\n\t\tfor (const org of randomOrgs) {\r\n\t\t\tif (randomUsers.length) {\r\n\t\t\t\tawait insertCandidatesInToOrganization(\r\n\t\t\t\t\tcandidatesPerOrganization,\r\n\t\t\t\t\torg\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcandidateMap.set(tenant, candidates);\r\n\t}\r\n\treturn candidateMap;\r\n};\r\n\r\nconst insertCandidates = async (\r\n\tconnection: Connection,\r\n\tcandidates: Candidate[]\r\n): Promise<Candidate[]> => {\r\n\treturn await connection.manager.save(candidates);\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { Candidate } from './candidate.entity';\r\nimport { ICandidateCreateInput } from '@gauzy/models';\r\nimport { TenantAwareCrudService } from '../core/crud/tenant-aware-crud.service';\r\n\r\n@Injectable()\r\nexport class CandidateService extends TenantAwareCrudService<Candidate> {\r\n\tconstructor(\r\n\t\t@InjectRepository(Candidate)\r\n\t\tprivate readonly candidateRepository: Repository<Candidate>\r\n\t) {\r\n\t\tsuper(candidateRepository);\r\n\t}\r\n\r\n\tasync createBulk(input: ICandidateCreateInput[]) {\r\n\t\treturn Promise.all(\r\n\t\t\tinput.map((candidate) => {\r\n\t\t\t\tcandidate.user.tenant = {\r\n\t\t\t\t\tid: candidate.organization.tenantId\r\n\t\t\t\t};\r\n\t\t\t\treturn this.create(candidate);\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { ICandidateCreateInput, LanguagesEnum } from '@gauzy/models';\r\n\r\nexport class CandidateBulkCreateCommand implements ICommand {\r\n\tstatic readonly type = '[Candidate] Register';\r\n\r\n\tconstructor(\r\n\t\tpublic readonly input: ICandidateCreateInput[],\r\n\t\tpublic readonly languageCode: LanguagesEnum\r\n\t) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { ICandidateCreateInput } from '@gauzy/models';\r\n\r\nexport class CandidateCreateCommand implements ICommand {\r\n\tstatic readonly type = '[Candidate] Register';\r\n\r\n\tconstructor(public readonly input: ICandidateCreateInput) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { ICandidateUpdateInput } from '@gauzy/models';\r\n\r\nexport class CandidateUpdateCommand implements ICommand {\r\n\tstatic readonly type = '[Candidate] Update';\r\n\r\n\tconstructor(public readonly input: ICandidateUpdateInput) {}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport {\r\n\tICandidate,\r\n\tICandidateCreateInput,\r\n\tLanguagesEnum\r\n} from '@gauzy/models';\r\nimport { AuthService } from '../../../auth/auth.service';\r\nimport { EmailService } from '../../../email';\r\nimport { CandidateBulkCreateCommand } from '../candidate.bulk.create.command';\r\nimport { CandidateService } from '../../candidate.service';\r\n\r\n@CommandHandler(CandidateBulkCreateCommand)\r\nexport class CandidateBulkCreateHandler\r\n\timplements ICommandHandler<CandidateBulkCreateCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly candidateService: CandidateService,\r\n\t\tprivate readonly authService: AuthService,\r\n\t\tprivate readonly emailService: EmailService\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: CandidateBulkCreateCommand\r\n\t): Promise<ICandidate[]> {\r\n\t\tconst { input, languageCode } = command;\r\n\t\tconst inputWithHash = await this._loadPasswordHash(input);\r\n\r\n\t\tconst createdCandidates = await this.candidateService.createBulk(\r\n\t\t\tinputWithHash\r\n\t\t);\r\n\t\tthis._sendWelcomeEmail(createdCandidates, languageCode);\r\n\r\n\t\treturn createdCandidates;\r\n\t}\r\n\r\n\tprivate _sendWelcomeEmail(\r\n\t\tcandidates: ICandidate[],\r\n\t\tlanguageCode: LanguagesEnum\r\n\t) {\r\n\t\tcandidates.forEach((candidate) =>\r\n\t\t\tthis.emailService.welcomeUser(\r\n\t\t\t\tcandidate.user,\r\n\t\t\t\tlanguageCode,\r\n\t\t\t\tcandidate.organization.id\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n\r\n\tprivate async _loadPasswordHash(input: ICandidateCreateInput[]) {\r\n\t\tconst mappedInput = input.map(async (entity) => {\r\n\t\t\tentity.user.hash = await this.authService.getPasswordHash(\r\n\t\t\t\tentity.password\r\n\t\t\t);\r\n\t\t\treturn entity;\r\n\t\t});\r\n\t\treturn Promise.all(mappedInput);\r\n\t}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { ICandidate } from '@gauzy/models';\r\nimport { CandidateCreateCommand } from '../candidate.create.command';\r\nimport { CandidateService } from '../../candidate.service';\r\n\r\n@CommandHandler(CandidateCreateCommand)\r\nexport class CandidateCreateHandler\r\n\timplements ICommandHandler<CandidateCreateCommand> {\r\n\tconstructor(private readonly candidateService: CandidateService) {}\r\n\r\n\tpublic async execute(command: CandidateCreateCommand): Promise<ICandidate> {\r\n\t\tconst { input } = command;\r\n\t\treturn await this.candidateService.create(input);\r\n\t}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { ICandidate } from '@gauzy/models';\r\nimport { CandidateService } from '../../candidate.service';\r\nimport { CandidateUpdateCommand } from '../candidate.update.command';\r\n\r\n@CommandHandler(CandidateUpdateCommand)\r\nexport class CandidateUpdateHandler\r\n\timplements ICommandHandler<CandidateUpdateCommand> {\r\n\tconstructor(private readonly candidateService: CandidateService) {}\r\n\r\n\tpublic async execute(command: CandidateUpdateCommand): Promise<ICandidate> {\r\n\t\tconst { input } = command;\r\n\t\tconst { id } = input;\r\n\t\treturn await this.candidateService.create({ id, ...input });\r\n\t}\r\n}\r\n","import { CandidateBulkCreateHandler } from './candidate.bulk.create.handler';\r\nimport { CandidateCreateHandler } from './candidate.create.handler';\r\nimport { CandidateUpdateHandler } from './candidate.update.handler';\r\n\r\nexport const CommandHandlers = [\r\n\tCandidateBulkCreateHandler,\r\n\tCandidateCreateHandler,\r\n\tCandidateUpdateHandler\r\n];\r\n","export { CandidateBulkCreateCommand } from './candidate.bulk.create.command';\r\nexport { CandidateCreateCommand } from './candidate.create.command';\r\nexport { CandidateUpdateCommand } from './candidate.update.command';\r\n","import { LanguagesEnum } from '@gauzy/models';\r\n\r\nexport const DEFAULT_CANDIDATES = [\r\n\t{\r\n\t\temail: 'john@ever.co',\r\n\t\tpassword: '123456',\r\n\t\tfirstName: 'John',\r\n\t\tlastName: 'Smith',\r\n\t\timageUrl: 'assets/images/avatars/alish.jpg',\r\n\t\tcandidateLevel: 'D',\r\n\t\tpreferredLanguage: LanguagesEnum.ENGLISH\r\n\t},\r\n\t{\r\n\t\temail: 'jaye@ever.co',\r\n\t\tpassword: '123456',\r\n\t\tfirstName: 'Jaye',\r\n\t\tlastName: 'Jeffreys',\r\n\t\timageUrl: 'assets/images/avatars/alexander.jpg',\r\n\t\tcandidateLevel: 'B',\r\n\t\tpreferredLanguage: LanguagesEnum.ENGLISH\r\n\t},\r\n\t{\r\n\t\temail: 'kasey@ever.co',\r\n\t\tpassword: '123456',\r\n\t\tfirstName: 'Kasey',\r\n\t\tlastName: 'Kraker',\r\n\t\timageUrl: 'assets/images/avatars/rachit.png',\r\n\t\tcandidateLevel: null,\r\n\t\tpreferredLanguage: LanguagesEnum.ENGLISH\r\n\t},\r\n\t{\r\n\t\temail: 'norris@ever.co',\r\n\t\tpassword: '123456',\r\n\t\tfirstName: 'Norris ',\r\n\t\tlastName: 'Nesbit',\r\n\t\timageUrl: 'assets/images/avatars/blagovest.jpg',\r\n\t\tcandidateLevel: 'A',\r\n\t\tpreferredLanguage: LanguagesEnum.ENGLISH\r\n\t},\r\n\t{\r\n\t\temail: 'estella@ever.co',\r\n\t\tpassword: '123456',\r\n\t\tfirstName: 'Estella',\r\n\t\tlastName: 'Ennis',\r\n\t\timageUrl: 'assets/images/avatars/dimana.jpeg',\r\n\t\tcandidateLevel: null,\r\n\t\tpreferredLanguage: LanguagesEnum.ENGLISH\r\n\t},\r\n\t{\r\n\t\temail: 'greg@ever.co',\r\n\t\tpassword: '123456',\r\n\t\tfirstName: 'Greg ',\r\n\t\tlastName: 'Grise',\r\n\t\timageUrl: 'assets/images/avatars/hristo.jpg',\r\n\t\tcandidateLevel: 'A',\r\n\t\tpreferredLanguage: LanguagesEnum.ENGLISH\r\n\t}\r\n];\r\n","import { Global, Module } from '@nestjs/common';\r\n\r\nimport { ConfigService } from './config.service';\r\n\r\n@Global()\r\n@Module({\r\n  providers: [ConfigService],\r\n  exports: [ConfigService],\r\n})\r\nexport class ConfigModule {}\r\n","// Modified code from https://github.com/xmlking/ngx-starter-kit. \r\n// MIT License, see https://github.com/xmlking/ngx-starter-kit/blob/develop/LICENSE\r\n// Copyright (c) 2018 Sumanth Chinthagunta\r\n\r\nimport { Injectable, Logger } from '@nestjs/common';\r\nimport { environment } from '@env-api/environment';\r\nimport { IEnvironment } from '../../environments/ienvironment';\r\n\r\n// tslint:disable-next-line\r\nconst packageJson = null;\r\n\r\n@Injectable()\r\nexport class ConfigService {\r\n  private readonly logger = new Logger(ConfigService.name);\r\n  private readonly config = environment;\r\n\r\n  constructor() {\r\n    for (const [key, value] of Object.entries(environment.env)) {\r\n      process.env[key] = value;\r\n    }\r\n    \r\n    this.logger.log('Is Production: ' + environment.production);\r\n\r\n    if (packageJson) {\r\n      this.logger.log('Package.json version: ' + packageJson.version)\r\n    }\r\n  }\r\n\r\n  get(key: keyof IEnvironment): IEnvironment[keyof IEnvironment] {\r\n    return this.config[key];\r\n  }\r\n\r\n  getVersion(): string {\r\n    if (!process.env.APP_VERSION) {\r\n      if (packageJson && packageJson.version) {\r\n        process.env.APP_VERSION = packageJson.version;\r\n      }\r\n    }\r\n    \r\n    return process.env.APP_VERSION;\r\n  }\r\n\r\n  isProd(): boolean {\r\n    return this.config.production;\r\n  }\r\n}\r\n","export * from './config.module';\r\nexport * from './config.service';\r\n","import { Column, Entity, OneToMany } from 'typeorm';\r\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\r\nimport { IsString, IsOptional, IsNumber } from 'class-validator';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\nimport {\r\n\tICandidate,\r\n\tIContact,\r\n\tIEmployee,\r\n\tIOrganizationContact\r\n} from '@gauzy/models';\r\nimport { OrganizationContact } from '../organization-contact/organization-contact.entity';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { Candidate } from '../candidate/candidate.entity';\r\n\r\n@Entity('contact')\r\nexport class Contact extends TenantOrganizationBase implements IContact {\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tname?: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tfirstName?: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tlastName?: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tcountry?: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tcity?: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\taddress?: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\taddress2?: string;\r\n\r\n\t@ApiPropertyOptional({ type: Number })\r\n\t@IsNumber()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tpostcode?: number;\r\n\r\n\t@ApiPropertyOptional({ type: Number })\r\n\t@IsNumber()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true, type: 'float', scale: 6 })\r\n\tlatitude?: number;\r\n\r\n\t@ApiPropertyOptional({ type: Number })\r\n\t@IsNumber()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true, type: 'float', scale: 6 })\r\n\tlongitude?: number;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tregionCode?: string;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@IsString()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tfax?: string;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@IsString()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tfiscalInformation?: string;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@IsString()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\twebsite?: string;\r\n\r\n\t@ApiProperty({ type: OrganizationContact })\r\n\t@OneToMany(\r\n\t\t() => OrganizationContact,\r\n\t\t(organizationContact) => organizationContact.contact,\r\n\t\t{\r\n\t\t\tonDelete: 'SET NULL'\r\n\t\t}\r\n\t)\r\n\tpublic organization_contacts?: IOrganizationContact[];\r\n\r\n\t@ApiProperty({ type: Employee })\r\n\t@OneToMany(() => Employee, (employee) => employee.contact)\r\n\tpublic employees?: IEmployee[];\r\n\r\n\t@ApiProperty({ type: Candidate })\r\n\t@OneToMany(() => Candidate, (candidate) => candidate.contact, {\r\n\t\tonDelete: 'SET NULL'\r\n\t})\r\n\tpublic candidates?: ICandidate[];\r\n}\r\n","import { Connection } from 'typeorm';\r\nimport { Contact } from './contact.entity';\r\nimport * as faker from 'faker';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { Country } from '../country';\r\nimport { ICountry } from '@gauzy/models';\r\n\r\nexport const createRandomContacts = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\torganizations: Organization[],\r\n\tnoOfRandomContacts: number\r\n): Promise<Contact[]> => {\r\n\tconst countries: ICountry[] = await connection.manager.find(Country);\r\n\tconst contacts: Contact[] = [];\r\n\r\n\tfor (let i = 0; i < noOfRandomContacts; i++) {\r\n\t\torganizations.forEach((organization: Organization) => {\r\n\t\t\tconst contact = new Contact();\r\n\t\t\tcontact.firstName = faker.name.firstName();\r\n\t\t\tcontact.lastName = faker.name.lastName();\r\n\t\t\tcontact.address = faker.address.streetAddress();\r\n\t\t\tcontact.address2 = faker.address.secondaryAddress();\r\n\t\t\tcontact.city = faker.address.city();\r\n\t\t\tcontact.country = faker.random.arrayElement(countries).isoCode;\r\n\t\t\tcontact.name = contact.firstName + ' ' + contact.lastName;\r\n\t\t\tcontact.organization = organization;\r\n\t\t\tcontact.tenant = tenant;\r\n\t\t\tcontacts.push(contact);\r\n\t\t});\r\n\t}\r\n\treturn await connection.manager.save(contacts);\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { CrudService } from '../core';\r\nimport { Contact } from './contact.entity';\r\nimport { IContactCreateInput } from '@gauzy/models';\r\n\r\n@Injectable()\r\nexport class ContactService extends CrudService<Contact> {\r\n\tconstructor(\r\n\t\t@InjectRepository(Contact)\r\n\t\tprivate readonly contactRepository: Repository<Contact>\r\n\t) {\r\n\t\tsuper(contactRepository);\r\n\t}\r\n\r\n\tasync saveContact(contactRequest: IContactCreateInput): Promise<Contact> {\r\n\t\treturn this.contactRepository.save(contactRequest);\r\n\t}\r\n}\r\n","export * from './request-context';\r\nexport * from './request-context.middleware';\r\n","// Code from https://github.com/xmlking/ngx-starter-kit. \r\n// MIT License, see https://github.com/xmlking/ngx-starter-kit/blob/develop/LICENSE\r\n// Copyright (c) 2018 Sumanth Chinthagunta\r\n\r\nimport { Injectable, NestMiddleware } from '@nestjs/common';\r\nimport * as cls from 'cls-hooked';\r\n\r\nimport { RequestContext } from './request-context';\r\n\r\n@Injectable()\r\nexport class RequestContextMiddleware implements NestMiddleware {\r\n  use(req, res, next) {\r\n    const requestContext = new RequestContext(req, res);\r\n    const session = cls.getNamespace(RequestContext.name) || cls.createNamespace(RequestContext.name);\r\n\r\n    session.run(async () => {\r\n      session.set(RequestContext.name, requestContext);\r\n      next();\r\n    });\r\n  }\r\n}\r\n","// Modified code from https://github.com/xmlking/ngx-starter-kit.\r\n// MIT License, see https://github.com/xmlking/ngx-starter-kit/blob/develop/LICENSE\r\n// Copyright (c) 2018 Sumanth Chinthagunta\r\n\r\nimport { HttpException, HttpStatus } from '@nestjs/common';\r\nimport * as cls from 'cls-hooked';\r\nimport {\r\n\tIUser,\r\n\tPermissionsEnum,\r\n\tLanguagesEnum,\r\n\tRolesEnum\r\n} from '@gauzy/models';\r\nimport { ExtractJwt } from 'passport-jwt';\r\nimport { JsonWebTokenError, verify } from 'jsonwebtoken';\r\nimport { environment as env } from '@env-api/environment';\r\n\r\nexport class RequestContext {\r\n\treadonly id: number;\r\n\trequest: Request;\r\n\tresponse: Response;\r\n\r\n\tconstructor(request: Request, response: Response) {\r\n\t\tthis.id = Math.random();\r\n\t\tthis.request = request;\r\n\t\tthis.response = response;\r\n\t}\r\n\r\n\tstatic currentRequestContext(): RequestContext {\r\n\t\tconst session = cls.getNamespace(RequestContext.name);\r\n\t\tif (session && session.active) {\r\n\t\t\treturn session.get(RequestContext.name);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tstatic currentRequest(): Request {\r\n\t\tconst requestContext = RequestContext.currentRequestContext();\r\n\r\n\t\tif (requestContext) {\r\n\t\t\treturn requestContext.request;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tstatic currentTenantId(): string {\r\n\t\tconst user: IUser = RequestContext.currentUser();\r\n\t\tif (user) {\r\n\t\t\treturn user.tenantId;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tstatic currentUser(throwError?: boolean): IUser {\r\n\t\tconst requestContext = RequestContext.currentRequestContext();\r\n\r\n\t\tif (requestContext) {\r\n\t\t\t// tslint:disable-next-line\r\n\t\t\tconst user: IUser = requestContext.request['user'];\r\n\r\n\t\t\tif (user) {\r\n\t\t\t\treturn user;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (throwError) {\r\n\t\t\tthrow new HttpException('Unauthorized', HttpStatus.UNAUTHORIZED);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tstatic hasPermission(\r\n\t\tpermission: PermissionsEnum,\r\n\t\tthrowError?: boolean\r\n\t): boolean {\r\n\t\treturn this.hasPermissions([permission], throwError);\r\n\t}\r\n\r\n\tstatic getLanguageCode(): LanguagesEnum {\r\n\t\tconst req = this.currentRequest();\r\n\t\tlet lang: LanguagesEnum;\r\n\t\tconst keys = ['language'];\r\n\t\tif (req) {\r\n\t\t\tfor (const key of keys) {\r\n\t\t\t\tif (req.headers && req.headers[key]) {\r\n\t\t\t\t\tlang = req.headers[key];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn lang;\r\n\t}\r\n\r\n\tstatic hasPermissions(\r\n\t\tfindPermissions: PermissionsEnum[],\r\n\t\tthrowError?: boolean\r\n\t): boolean {\r\n\t\tconst requestContext = RequestContext.currentRequestContext();\r\n\r\n\t\tif (requestContext) {\r\n\t\t\t// tslint:disable-next-line\r\n\t\t\tconst token = ExtractJwt.fromAuthHeaderAsBearerToken()(\r\n\t\t\t\trequestContext.request as any\r\n\t\t\t);\r\n\r\n\t\t\tif (token) {\r\n\t\t\t\tconst { permissions } = verify(token, env.JWT_SECRET) as {\r\n\t\t\t\t\tid: string;\r\n\t\t\t\t\tpermissions: PermissionsEnum[];\r\n\t\t\t\t};\r\n\t\t\t\tif (permissions) {\r\n\t\t\t\t\tconst found = permissions.filter(\r\n\t\t\t\t\t\t(value) => findPermissions.indexOf(value) >= 0\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tif (found.length === findPermissions.length) {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (throwError) {\r\n\t\t\tthrow new HttpException('Unauthorized', HttpStatus.UNAUTHORIZED);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tstatic hasAnyPermission(\r\n\t\tfindPermissions: PermissionsEnum[],\r\n\t\tthrowError?: boolean\r\n\t): boolean {\r\n\t\tconst requestContext = RequestContext.currentRequestContext();\r\n\r\n\t\tif (requestContext) {\r\n\t\t\t// tslint:disable-next-line\r\n\t\t\tconst token = ExtractJwt.fromAuthHeaderAsBearerToken()(\r\n\t\t\t\trequestContext.request as any\r\n\t\t\t);\r\n\r\n\t\t\tif (token) {\r\n\t\t\t\tconst { permissions } = verify(token, env.JWT_SECRET) as {\r\n\t\t\t\t\tid: string;\r\n\t\t\t\t\tpermissions: PermissionsEnum[];\r\n\t\t\t\t};\r\n\t\t\t\tconst found = permissions.filter(\r\n\t\t\t\t\t(value) => findPermissions.indexOf(value) >= 0\r\n\t\t\t\t);\r\n\t\t\t\tif (found.length > 0) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (throwError) {\r\n\t\t\tthrow new HttpException('Unauthorized', HttpStatus.UNAUTHORIZED);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tstatic currentToken(throwError?: boolean): any {\r\n\t\tconst requestContext = RequestContext.currentRequestContext();\r\n\r\n\t\tif (requestContext) {\r\n\t\t\t// tslint:disable-next-line\r\n\t\t\treturn ExtractJwt.fromAuthHeaderAsBearerToken()(\r\n\t\t\t\trequestContext.request as any\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tif (throwError) {\r\n\t\t\tthrow new HttpException('Unauthorized', HttpStatus.UNAUTHORIZED);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tstatic hasRole(role: RolesEnum, throwError?: boolean): boolean {\r\n\t\treturn this.hasRoles([role], throwError);\r\n\t}\r\n\r\n\tstatic hasRoles(findRoles: RolesEnum[], throwError?: boolean): boolean {\r\n\t\tconst requestContext = RequestContext.currentRequestContext();\r\n\t\tif (requestContext) {\r\n\t\t\ttry {\r\n\t\t\t\tconst token = this.currentToken();\r\n\t\t\t\tif (token) {\r\n\t\t\t\t\tconst { role } = verify(token, env.JWT_SECRET) as {\r\n\t\t\t\t\t\tid: string;\r\n\t\t\t\t\t\trole: RolesEnum;\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\treturn role ? findRoles.includes(role) : false;\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tif (error instanceof JsonWebTokenError) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow error;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (throwError) {\r\n\t\t\tthrow new HttpException('Unauthorized', HttpStatus.UNAUTHORIZED);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n}\r\n","// Copyright (c) 2019-2020 Ever Co. LTD\r\n\r\n// Modified code from https://github.com/xmlking/ngx-starter-kit.\r\n// Originally MIT Licensed\r\n// - see https://github.com/xmlking/ngx-starter-kit/blob/develop/LICENSE\r\n// - original code `Copyright (c) 2018 Sumanth Chinthagunta`\r\n\r\nimport { CandidateInterviewers } from './../candidate-interviewers/candidate-interviewers.entity';\r\nimport { Invoice } from '../invoice/invoice.entity';\r\nimport { InvoiceItem } from '../invoice-item/invoice-item.entity';\r\nimport { Tag } from '../tags/tag.entity';\r\nimport { Skill } from '../skills/skill.entity';\r\nimport { Language } from '../language/language.entity';\r\nimport { MiddlewareConsumer, Module, NestModule } from '@nestjs/common';\r\nimport { TypeOrmModule, TypeOrmModuleOptions } from '@nestjs/typeorm';\r\nimport { ConfigModule, ConfigService } from '../config';\r\nimport { environment as env } from '@env-api/environment';\r\nimport { User } from '../user/user.entity';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { Role } from '../role/role.entity';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { Income } from '../income/income.entity';\r\nimport { Expense } from '../expense/expense.entity';\r\nimport { EmployeeSetting } from '../employee-setting';\r\nimport { RequestContextMiddleware } from './context';\r\nimport { UserOrganization } from '../user-organization/user-organization.entity';\r\nimport { OrganizationDepartment } from '../organization-department/organization-department.entity';\r\nimport { OrganizationRecurringExpense } from '../organization-recurring-expense/organization-recurring-expense.entity';\r\nimport { EmployeeRecurringExpense } from '../employee-recurring-expense/employee-recurring-expense.entity';\r\nimport { OrganizationContact } from '../organization-contact/organization-contact.entity';\r\nimport { OrganizationPositions } from '../organization-positions/organization-positions.entity';\r\nimport { OrganizationVendor } from '../organization-vendors/organization-vendors.entity';\r\nimport { OrganizationProject } from '../organization-projects/organization-projects.entity';\r\nimport { OrganizationTeam } from '../organization-team/organization-team.entity';\r\nimport { OrganizationTeamEmployee } from '../organization-team-employee/organization-team-employee.entity';\r\nimport { OrganizationAwards } from '../organization-awards/organization-awards.entity';\r\nimport { OrganizationLanguages } from '../organization-languages/organization-languages.entity';\r\nimport { Proposal } from '../proposal/proposal.entity';\r\nimport { Country } from '../country/country.entity';\r\nimport { Invite } from '../invite/invite.entity';\r\nimport { Email } from '../email/email.entity';\r\nimport { TimeOffPolicy } from '../time-off-policy/time-off-policy.entity';\r\nimport { RolePermissions } from '../role-permissions/role-permissions.entity';\r\nimport { Tenant } from './../tenant/tenant.entity';\r\nimport { EmailTemplate } from '../email-template/email-template.entity';\r\nimport { OrganizationEmploymentType } from '../organization-employment-type/organization-employment-type.entity';\r\nimport { Equipment } from '../equipment/equipment.entity';\r\nimport { EmployeeLevel } from '../organization_employee-level/organization-employee-level.entity';\r\nimport { Task } from '../tasks/task.entity';\r\nimport { Timesheet } from '../timesheet/timesheet.entity';\r\nimport { TimeSlot } from '../timesheet/time-slot.entity';\r\nimport { Activity } from '../timesheet/activity.entity';\r\nimport { Screenshot } from '../timesheet/screenshot.entity';\r\nimport { TimeLog } from '../timesheet/time-log.entity';\r\nimport { ExpenseCategory } from '../expense-categories/expense-category.entity';\r\nimport { EquipmentSharing } from '../equipment-sharing/equipment-sharing.entity';\r\nimport { Product } from '../product/product.entity';\r\nimport { ProductOption } from '../product-option/product-option.entity';\r\nimport { ProductVariantSettings } from '../product-settings/product-settings.entity';\r\nimport { ProductType } from '../product-type/product-type.entity';\r\nimport { ProductVariant } from '../product-variant/product-variant.entity';\r\nimport { ProductVariantPrice } from '../product-variant-price/product-variant-price.entity';\r\nimport { ProductCategory } from '../product-category/product-category.entity';\r\nimport { CandidateSource } from '../candidate-source/candidate-source.entity';\r\nimport { IntegrationSetting } from '../integration-setting/integration-setting.entity';\r\nimport { IntegrationTenant } from '../integration-tenant/integration-tenant.entity';\r\nimport { IntegrationMap } from '../integration-map/integration-map.entity';\r\nimport { Candidate } from '../candidate/candidate.entity';\r\nimport { IntegrationEntitySetting } from '../integration-entity-setting/integration-entity-setting.entity';\r\nimport { IntegrationEntitySettingTiedEntity } from '../integration-entity-setting-tied-entity/integration-entity-setting-tied-entity.entity';\r\nimport { CandidateEducation } from '../candidate-education/candidate-education.entity';\r\nimport { CandidateDocument } from '../candidate-documents/candidate-documents.entity';\r\nimport { CandidateSkill } from '../candidate-skill/candidate-skill.entity';\r\nimport { CandidateExperience } from './../candidate-experience/candidate-experience.entity';\r\nimport { CandidateFeedback } from './../candidate-feedbacks/candidate-feedbacks.entity';\r\nimport { Integration } from '../integration/integration.entity';\r\nimport { IntegrationType } from '../integration/integration-type.entity';\r\nimport { CandidateInterview } from '../candidate-interview/candidate-interview.entity';\r\nimport { EmployeeAppointment } from '../employee-appointment';\r\nimport { AppointmentEmployee } from '../appointment-employees/appointment-employees.entity';\r\nimport { RequestApproval } from '../request-approval/request-approval.entity';\r\nimport { RequestApprovalEmployee } from '../request-approval-employee/request-approval-employee.entity';\r\nimport { ApprovalPolicy } from '../approval-policy/approval-policy.entity';\r\nimport { EventType } from '../event-types/event-type.entity';\r\nimport { AvailabilitySlot } from '../availability-slots/availability-slots.entity';\r\nimport { ProductTypeTranslation } from '../product-type/product-type-translation.entity';\r\nimport { HelpCenter } from '../help-center/help-center.entity';\r\nimport { HelpCenterAuthor } from './../help-center-author/help-center-author.entity';\r\nimport { ProductCategoryTranslation } from '../product-category/product-category-translation.entity';\r\nimport { Pipeline } from '../pipeline/pipeline.entity';\r\nimport { Payment } from '../payment/payment.entity';\r\nimport { CandidatePersonalQualities } from '../candidate-personal-qualities/candidate-personal-qualities.entity';\r\nimport { PipelineStage } from '../pipeline-stage/pipeline-stage.entity';\r\nimport { CandidateTechnologies } from '../candidate-technologies/candidate-technologies.entity';\r\nimport { Goal } from '../goal/goal.entity';\r\nimport { KeyResult } from '../keyresult/keyresult.entity';\r\nimport { RequestApprovalTeam } from '../request-approval-team/request-approval-team.entity';\r\nimport { KeyResultUpdate } from '../keyresult-update/keyresult-update.entity';\r\nimport { CandidateCriterionsRating } from '../candidate-criterions-rating/candidate-criterion-rating.entity';\r\nimport { HelpCenterArticle } from '../help-center-article/help-center-article.entity';\r\nimport { GoalTimeFrame } from '../goal-time-frame/goal-time-frame.entity';\r\nimport { EstimateEmail } from '../estimate-email/estimate-email.entity';\r\nimport { TimeSlotMinute } from '../timesheet/time-slot-minute.entity';\r\nimport { Contact } from '../contact/contact.entity';\r\nimport { TimeOffRequest } from '../time-off-request/time-off-request.entity';\r\nimport { Deal } from '../deal/deal.entity';\r\nimport { OrganizationSprint } from '../organization-sprint/organization-sprint.entity';\r\nimport { GoalKPI } from '../goal-kpi/goal-kpi.entity';\r\nimport { OrganizationDocuments } from '../organization-documents/organization-documents.entity';\r\nimport { GoalGeneralSetting } from '../goal-general-setting/goal-general-setting.entity';\r\nimport { EquipmentSharingPolicy } from '../equipment-sharing-policy/equipment-sharing-policy.entity';\r\nimport { KeyResultTemplate } from '../keyresult-template/keyresult-template.entity';\r\nimport { GoalTemplate } from '../goal-template/goal-template.entity';\r\nimport { EmployeeAward } from '../employee-award/employee-award.entity';\r\nimport { InvoiceEstimateHistory } from '../invoice-estimate-history/invoice-estimate-history.entity';\r\nimport { GoalKPITemplate } from '../goal-kpi-template/goal-kpi-template.entity';\r\nimport { TenantSetting } from '../tenant/tenant-setting/tenant-setting.entity';\r\nimport { FileStorageModule } from './file-storage';\r\nimport { EmployeeUpworkJobsSearchCriterion } from '../employee-job-preset/employee-upwork-jobs-search-criterion.entity';\r\nimport { JobPresetUpworkJobSearchCriterion } from '../employee-job-preset/job-preset-upwork-job-search-criterion.entity';\r\nimport { JobPreset } from '../employee-job-preset/job-preset.entity';\r\nimport { JobSearchOccupation } from '../employee-job-preset/job-search-occupation/job-search-occupation.entity';\r\nimport { JobSearchCategory } from '../employee-job-preset/job-search-category/job-search-category.entity';\r\nimport { Report } from '../reports/report.entity';\r\nimport { ReportCategory } from '../reports/report-category.entity';\r\nimport { EmployeeProposalTemplate } from '../employee-proposal-template/employee-proposal-template.entity';\r\nimport { ReportOrganization } from '../reports/report-organization.entity';\r\nimport { CustomSmtp } from '../custom-smtp/custom-smtp.entity';\r\nimport { Currency } from '../currency';\r\nimport { Feature } from '../feature/feature.entity';\r\nimport { FeatureOrganization } from '../feature/feature_organization.entity';\r\n\r\nconst entities = [\r\n\tActivity,\r\n\tAppointmentEmployee,\r\n\tApprovalPolicy,\r\n\tAvailabilitySlot,\r\n\tCandidate,\r\n\tCandidateCriterionsRating,\r\n\tCandidateDocument,\r\n\tCandidateEducation,\r\n\tCandidateExperience,\r\n\tCandidateFeedback,\r\n\tCandidateInterview,\r\n\tCandidateInterviewers,\r\n\tCandidatePersonalQualities,\r\n\tCandidateSkill,\r\n\tCandidateSource,\r\n\tCandidateTechnologies,\r\n\tContact,\r\n\tCountry,\r\n\tCurrency,\r\n\tCustomSmtp,\r\n\tDeal,\r\n\tEmail,\r\n\tEmailTemplate,\r\n\tEmployee,\r\n\tEmployeeAppointment,\r\n\tEmployeeAward,\r\n\tEmployeeLevel,\r\n\tEmployeeProposalTemplate,\r\n\tEmployeeRecurringExpense,\r\n\tEmployeeSetting,\r\n\tEmployeeUpworkJobsSearchCriterion,\r\n\tEquipment,\r\n\tEquipmentSharing,\r\n\tEquipmentSharingPolicy,\r\n\tEstimateEmail,\r\n\tEventType,\r\n\tExpense,\r\n\tExpenseCategory,\r\n\tFeature,\r\n\tFeatureOrganization,\r\n\tGoal,\r\n\tGoalGeneralSetting,\r\n\tGoalKPI,\r\n\tGoalKPITemplate,\r\n\tGoalTemplate,\r\n\tGoalTimeFrame,\r\n\tHelpCenter,\r\n\tHelpCenterArticle,\r\n\tHelpCenterAuthor,\r\n\tIncome,\r\n\tIntegration,\r\n\tIntegrationEntitySetting,\r\n\tIntegrationEntitySettingTiedEntity,\r\n\tIntegrationMap,\r\n\tIntegrationSetting,\r\n\tIntegrationTenant,\r\n\tIntegrationType,\r\n\tInvite,\r\n\tInvoice,\r\n\tInvoiceEstimateHistory,\r\n\tInvoiceItem,\r\n\tJobPreset,\r\n\tJobPresetUpworkJobSearchCriterion,\r\n\tJobSearchCategory,\r\n\tJobSearchOccupation,\r\n\tKeyResult,\r\n\tKeyResultTemplate,\r\n\tKeyResultUpdate,\r\n\tLanguage,\r\n\tOrganization,\r\n\tOrganizationAwards,\r\n\tOrganizationContact,\r\n\tOrganizationDepartment,\r\n\tOrganizationDocuments,\r\n\tOrganizationEmploymentType,\r\n\tOrganizationLanguages,\r\n\tOrganizationPositions,\r\n\tOrganizationProject,\r\n\tOrganizationRecurringExpense,\r\n\tOrganizationSprint,\r\n\tOrganizationTeam,\r\n\tOrganizationTeamEmployee,\r\n\tOrganizationVendor,\r\n\tPayment,\r\n\tPipeline,\r\n\tPipelineStage,\r\n\tProduct,\r\n\tProductCategory,\r\n\tProductCategoryTranslation,\r\n\tProductOption,\r\n\tProductType,\r\n\tProductTypeTranslation,\r\n\tProductVariant,\r\n\tProductVariantPrice,\r\n\tProductVariantSettings,\r\n\tProposal,\r\n\tReport,\r\n\tReportCategory,\r\n\tReportOrganization,\r\n\tRequestApproval,\r\n\tRequestApprovalEmployee,\r\n\tRequestApprovalTeam,\r\n\tRole,\r\n\tRolePermissions,\r\n\tScreenshot,\r\n\tSkill,\r\n\tTag,\r\n\tTask,\r\n\tTenant,\r\n\tTenantSetting,\r\n\tTimeLog,\r\n\tTimeOffPolicy,\r\n\tTimeOffRequest,\r\n\tTimesheet,\r\n\tTimeSlot,\r\n\tTimeSlotMinute,\r\n\tUser,\r\n\tUserOrganization\r\n];\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forRootAsync({\r\n\t\t\timports: [ConfigModule],\r\n\t\t\tuseFactory: (config: ConfigService): TypeOrmModuleOptions => ({\r\n\t\t\t\t...env.database,\r\n\t\t\t\tentities\r\n\t\t\t\t// subscribers,\r\n\t\t\t\t// migrations,\r\n\t\t\t}),\r\n\t\t\tinject: [ConfigService]\r\n\t\t}),\r\n\t\tFileStorageModule\r\n\t\t/*\r\n    TerminusModule.forRootAsync({\r\n      // Inject the TypeOrmHealthIndicator provided by nestjs/terminus\r\n      inject: [TypeOrmHealthIndicator, DNSHealthIndicator],\r\n      useFactory: (db, dns) => getTerminusOptions(db, dns)\r\n    })\r\n    */\r\n\t],\r\n\tcontrollers: [],\r\n\tproviders: []\r\n})\r\nexport class CoreModule implements NestModule {\r\n\tconfigure(consumer: MiddlewareConsumer) {\r\n\t\tconsumer.apply(RequestContextMiddleware).forRoutes('*');\r\n\t}\r\n}\r\n","// Code from https://github.com/xmlking/ngx-starter-kit.\r\n// MIT License, see https://github.com/xmlking/ngx-starter-kit/blob/develop/LICENSE\r\n// Copyright (c) 2018 Sumanth Chinthagunta\r\n\r\nimport {\r\n\tGet,\r\n\tPost,\r\n\tPut,\r\n\tDelete,\r\n\tBody,\r\n\tParam,\r\n\tHttpStatus,\r\n\tHttpCode\r\n} from '@nestjs/common';\r\nimport { ApiOperation, ApiResponse, ApiBearerAuth } from '@nestjs/swagger';\r\nimport { Base } from '../entities/base';\r\nimport { DeepPartial } from 'typeorm';\r\nimport { QueryDeepPartialEntity } from 'typeorm/query-builder/QueryPartialEntity';\r\nimport { ICrudService } from './icrud.service';\r\nimport { IPagination } from './pagination';\r\nimport { PaginationParams } from './pagination-params';\r\n\r\n@ApiResponse({ status: HttpStatus.UNAUTHORIZED, description: 'Unauthorized' })\r\n@ApiResponse({ status: HttpStatus.FORBIDDEN, description: 'Forbidden' })\r\n@ApiBearerAuth()\r\nexport abstract class CrudController<T extends Base> {\r\n\tprotected constructor(private readonly crudService: ICrudService<T>) {}\r\n\r\n\t@ApiOperation({ summary: 'find all' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found records' /* type: IPagination<T> */\r\n\t})\r\n\t@Get()\r\n\tasync findAll(filter?: PaginationParams<T>): Promise<IPagination<T>> {\r\n\t\treturn this.crudService.findAll(filter);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find by id' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found one record' /*, type: T*/\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get(':id')\r\n\tasync findById(@Param('id') id: string): Promise<T> {\r\n\t\treturn this.crudService.findOne(id);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Create new record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully created.' /*, type: T*/\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.CREATED)\r\n\t@Post()\r\n\tasync create(\r\n\t\t@Body() entity: DeepPartial<T>,\r\n\t\t...options: any[]\r\n\t): Promise<T> {\r\n\t\treturn this.crudService.create(entity);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Update an existing record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully edited.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Put(':id')\r\n\tasync update(\r\n\t\t@Param('id') id: string,\r\n\t\t@Body() entity: QueryDeepPartialEntity<T>,\r\n\t\t...options: any[]\r\n\t): Promise<any> {\r\n\t\treturn this.crudService.update(id, entity); // FIXME: https://github.com/typeorm/typeorm/issues/1544\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Delete record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NO_CONTENT,\r\n\t\tdescription: 'The record has been successfully deleted'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Delete(':id')\r\n\tasync delete(@Param('id') id: string, ...options: any[]): Promise<any> {\r\n\t\treturn this.crudService.delete(id);\r\n\t}\r\n}\r\n","// Code from https://github.com/xmlking/ngx-starter-kit.\r\n// MIT License, see https://github.com/xmlking/ngx-starter-kit/blob/develop/LICENSE\r\n// Copyright (c) 2018 Sumanth Chinthagunta\r\n\r\nimport { BadRequestException, NotFoundException } from '@nestjs/common';\r\nimport {\r\n\tDeepPartial,\r\n\tDeleteResult,\r\n\tFindConditions,\r\n\tFindManyOptions,\r\n\tFindOneOptions,\r\n\tRepository,\r\n\tUpdateResult\r\n} from 'typeorm';\r\nimport { QueryDeepPartialEntity } from 'typeorm/query-builder/QueryPartialEntity';\r\nimport { mergeMap } from 'rxjs/operators';\r\nimport { of, throwError } from 'rxjs';\r\nimport { Base } from '../entities/base';\r\nimport { ICrudService } from './icrud.service';\r\nimport { IPagination } from './pagination';\r\nimport { environment as env } from '@env-api/environment';\r\nimport * as bcrypt from 'bcryptjs';\r\nimport { ITryRequest } from './try-request';\r\n\r\nexport abstract class CrudService<T extends Base> implements ICrudService<T> {\r\n\tsaltRounds: number;\r\n\r\n\tprotected constructor(protected readonly repository: Repository<T>) {\r\n\t\tthis.saltRounds = env.USER_PASSWORD_BCRYPT_SALT_ROUNDS;\r\n\t}\r\n\r\n\tpublic async count(filter?: FindManyOptions<T>): Promise<number> {\r\n\t\treturn await this.repository.count(filter);\r\n\t}\r\n\r\n\tpublic async findAll(filter?: FindManyOptions<T>): Promise<IPagination<T>> {\r\n\t\tconst total = await this.repository.count(filter);\r\n\t\tconst items = await this.repository.find(filter);\r\n\t\treturn { items, total };\r\n\t}\r\n\r\n\tpublic async findOneOrFail(\r\n\t\tid: string | number | FindOneOptions<T> | FindConditions<T>,\r\n\t\toptions?: FindOneOptions<T>\r\n\t): Promise<ITryRequest> {\r\n\t\ttry {\r\n\t\t\tconst record = await this.repository.findOneOrFail(\r\n\t\t\t\tid as any,\r\n\t\t\t\toptions\r\n\t\t\t);\r\n\t\t\treturn {\r\n\t\t\t\tsuccess: true,\r\n\t\t\t\trecord\r\n\t\t\t};\r\n\t\t} catch (error) {\r\n\t\t\treturn {\r\n\t\t\t\tsuccess: false,\r\n\t\t\t\terror\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\tpublic async findOne(\r\n\t\tid: string | number | FindOneOptions<T> | FindConditions<T>,\r\n\t\toptions?: FindOneOptions<T>\r\n\t): Promise<T> {\r\n\t\tconst record = await this.repository.findOne(id as any, options);\r\n\t\tif (!record) {\r\n\t\t\tthrow new NotFoundException(`The requested record was not found`);\r\n\t\t}\r\n\t\treturn record;\r\n\t}\r\n\r\n\tpublic async create(entity: DeepPartial<T>, ...options: any[]): Promise<T> {\r\n\t\tconst obj = this.repository.create(entity);\r\n\t\ttry {\r\n\t\t\t// https://github.com/Microsoft/TypeScript/issues/21592\r\n\t\t\treturn await this.repository.save(obj as any);\r\n\t\t} catch (err /*: WriteError*/) {\r\n\t\t\tthrow new BadRequestException(err);\r\n\t\t}\r\n\t}\r\n\r\n\tasync getPasswordHash(password: string): Promise<string> {\r\n\t\treturn bcrypt.hash(password, this.saltRounds);\r\n\t}\r\n\r\n\tpublic async update(\r\n\t\tid: string | number | FindConditions<T>,\r\n\t\tpartialEntity: QueryDeepPartialEntity<T>,\r\n\t\t...options: any[]\r\n\t): Promise<UpdateResult | T> {\r\n\t\ttry {\r\n\t\t\t// method getPasswordHash is copied from AuthService\r\n\t\t\t// try if can import somehow the service and use its method\r\n\r\n\t\t\tif (partialEntity['hash']) {\r\n\t\t\t\tconst hashPassword = await this.getPasswordHash(\r\n\t\t\t\t\tpartialEntity['hash']\r\n\t\t\t\t);\r\n\t\t\t\tpartialEntity['hash'] = hashPassword;\r\n\t\t\t}\r\n\r\n\t\t\treturn await this.repository.update(id, partialEntity);\r\n\t\t} catch (err /*: WriteError*/) {\r\n\t\t\tthrow new BadRequestException(err);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic async delete(\r\n\t\tcriteria: string | number | FindConditions<T>,\r\n\t\t...options: any[]\r\n\t): Promise<DeleteResult> {\r\n\t\ttry {\r\n\t\t\treturn await this.repository.delete(criteria);\r\n\t\t} catch (err) {\r\n\t\t\tthrow new NotFoundException(`The record was not found`, err);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * e.g., findOneById(id).pipe(map(entity => entity.id), entityNotFound())\r\n\t */\r\n\tprivate entityNotFound() {\r\n\t\treturn (stream$) =>\r\n\t\t\tstream$.pipe(\r\n\t\t\t\tmergeMap((signal) => {\r\n\t\t\t\t\tif (!signal) {\r\n\t\t\t\t\t\treturn throwError(\r\n\t\t\t\t\t\t\tnew NotFoundException(\r\n\t\t\t\t\t\t\t\t`The requested record was not found`\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn of(signal);\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t}\r\n}\r\n","export * from './pagination';\r\nexport * from './pagination-params';\r\nexport * from './crud.service';\r\nexport * from './crud.controller';\r\nexport * from './tenant-aware-crud.service';\r\n","// Code from https://github.com/xmlking/ngx-starter-kit.\r\n// MIT License, see https://github.com/xmlking/ngx-starter-kit/blob/develop/LICENSE\r\n// Copyright (c) 2018 Sumanth Chinthagunta\r\n\r\nimport { ApiPropertyOptional } from '@nestjs/swagger';\r\nimport { Transform } from 'class-transformer';\r\nimport { IsOptional, Max, Min } from 'class-validator';\r\n\r\nexport enum OrderType {\r\n\tDESC = 'DESC',\r\n\tASC = 'ASC'\r\n}\r\n\r\n/**\r\n * Describes generic pagination params\r\n */\r\nexport abstract class PaginationParams<T> {\r\n\t/**\r\n\t * Pagination limit\r\n\t */\r\n\t@ApiPropertyOptional({ type: Number, minimum: 0, maximum: 50 })\r\n\t@IsOptional()\r\n\t@Min(0)\r\n\t@Max(50)\r\n\t@Transform((val: string) => parseInt(val, 10))\r\n\treadonly take = 10;\r\n\r\n\t/**\r\n\t * Pagination offset\r\n\t */\r\n\t@ApiPropertyOptional({ type: Number, minimum: 0 })\r\n\t@IsOptional()\r\n\t@Min(0)\r\n\t@Transform((val: string) => parseInt(val, 10))\r\n\treadonly skip = 0;\r\n\r\n\t/**\r\n\t * OrderBy\r\n\t */\r\n\t@ApiPropertyOptional()\r\n\t@IsOptional()\r\n\tabstract readonly order?: { [P in keyof T]?: OrderType };\r\n}\r\n","import {\r\n\tDeepPartial,\r\n\tFindConditions,\r\n\tFindManyOptions,\r\n\tFindOneOptions,\r\n\tObjectLiteral,\r\n\tRepository\r\n} from 'typeorm';\r\nimport { User } from '../../user/user.entity';\r\nimport { RequestContext } from '../context';\r\nimport { TenantBase } from '../entities/tenant-base';\r\nimport { CrudService } from './crud.service';\r\nimport { ICrudService } from './icrud.service';\r\nimport { IPagination } from './pagination';\r\nimport { ITryRequest } from './try-request';\r\n\r\n/**\r\n * This abstract class adds tenantId to all query filters if a user is available in the current RequestContext\r\n * If a user is not available in RequestContext, then it behaves exactly the same as CrudService\r\n */\r\nexport abstract class TenantAwareCrudService<T extends TenantBase>\r\n\textends CrudService<T>\r\n\timplements ICrudService<T> {\r\n\tprotected constructor(protected readonly repository: Repository<T>) {\r\n\t\tsuper(repository);\r\n\t}\r\n\r\n\tprivate findConditionsWithTenant(\r\n\t\tuser: User,\r\n\t\twhere?: FindConditions<T> | ObjectLiteral | FindConditions<T>[]\r\n\t): FindConditions<T> | ObjectLiteral | FindConditions<T>[] {\r\n\t\tif (Array.isArray(where)) {\r\n\t\t\treturn where.map((options) => ({\r\n\t\t\t\t...options,\r\n\t\t\t\ttenant: {\r\n\t\t\t\t\tid: user.tenantId\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\t\t}\r\n\r\n\t\treturn where\r\n\t\t\t? {\r\n\t\t\t\t\t...where,\r\n\t\t\t\t\ttenant: {\r\n\t\t\t\t\t\tid: user.tenantId\r\n\t\t\t\t\t}\r\n\t\t\t  }\r\n\t\t\t: {\r\n\t\t\t\t\ttenant: {\r\n\t\t\t\t\t\tid: user.tenantId\r\n\t\t\t\t\t}\r\n\t\t\t  };\r\n\t}\r\n\r\n\tprivate findManyWithTenant(\r\n\t\tfilter?: FindManyOptions<T>\r\n\t): FindManyOptions<T> {\r\n\t\tconst user = RequestContext.currentUser();\r\n\t\tif (!user || !user.tenantId) {\r\n\t\t\treturn filter;\r\n\t\t}\r\n\t\tif (!filter) {\r\n\t\t\treturn {\r\n\t\t\t\twhere: this.findConditionsWithTenant(user)\r\n\t\t\t};\r\n\t\t}\r\n\t\tif (!filter.where) {\r\n\t\t\treturn {\r\n\t\t\t\t...filter,\r\n\t\t\t\twhere: this.findConditionsWithTenant(user)\r\n\t\t\t};\r\n\t\t}\r\n\t\tif (filter.where instanceof Object) {\r\n\t\t\treturn {\r\n\t\t\t\t...filter,\r\n\t\t\t\twhere: this.findConditionsWithTenant(user, filter.where)\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn filter;\r\n\t}\r\n\r\n\tpublic async count(filter?: FindManyOptions<T>): Promise<number> {\r\n\t\treturn await super.count(this.findManyWithTenant(filter));\r\n\t}\r\n\r\n\tpublic async findAll(filter?: FindManyOptions<T>): Promise<IPagination<T>> {\r\n\t\treturn await super.findAll(this.findManyWithTenant(filter));\r\n\t}\r\n\r\n\tpublic async findOneOrFail(\r\n\t\tid: string | number | FindOneOptions<T> | FindConditions<T>,\r\n\t\toptions?: FindOneOptions<T>\r\n\t): Promise<ITryRequest> {\r\n\t\treturn await super.findOneOrFail(id, this.findManyWithTenant(options));\r\n\t}\r\n\r\n\tpublic async findOne(\r\n\t\tid: string | number | FindOneOptions<T> | FindConditions<T>,\r\n\t\toptions?: FindOneOptions<T>\r\n\t): Promise<T> {\r\n\t\tif (typeof id === 'object') {\r\n\t\t\tconst firstOptions = id as FindOneOptions<T>;\r\n\t\t\treturn await super.findOne(\r\n\t\t\t\tthis.findManyWithTenant(firstOptions),\r\n\t\t\t\toptions\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn await super.findOne(id, this.findManyWithTenant(options));\r\n\t}\r\n\r\n\tpublic async create(entity: DeepPartial<T>, ...options: any[]): Promise<T> {\r\n\t\tconst user = RequestContext.currentUser();\r\n\t\tif (user && user.tenantId) {\r\n\t\t\tconst entityWithTenant = {\r\n\t\t\t\t...entity,\r\n\t\t\t\ttenant: { id: user.tenantId }\r\n\t\t\t};\r\n\t\t\treturn super.create(entityWithTenant, ...options);\r\n\t\t}\r\n\t\treturn super.create(entity, ...options);\r\n\t}\r\n}\r\n","// Code from https://github.com/xmlking/ngx-starter-kit.\r\n// MIT License, see https://github.com/xmlking/ngx-starter-kit/blob/develop/LICENSE\r\n// Copyright (c) 2018 Sumanth Chinthagunta\r\n\r\nimport {\r\n\tPrimaryGeneratedColumn,\r\n\tUpdateDateColumn,\r\n\tCreateDateColumn\r\n} from 'typeorm';\r\nimport { ApiPropertyOptional, ApiProperty } from '@nestjs/swagger';\r\nimport { BaseEntityModel as IBaseEntityModel } from '@gauzy/models';\r\n\r\nexport abstract class Model {\r\n\tconstructor(input?: any) {\r\n\t\tif (input) {\r\n\t\t\tObject.assign(this, input);\r\n\t\t}\r\n\t}\r\n}\r\nexport abstract class Base extends Model implements IBaseEntityModel {\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@PrimaryGeneratedColumn('uuid')\r\n\tid?: string;\r\n\r\n\t@ApiProperty({\r\n\t\ttype: 'string',\r\n\t\tformat: 'date-time',\r\n\t\texample: '2018-11-21T06:20:32.232Z'\r\n\t})\r\n\t@CreateDateColumn()\r\n\tcreatedAt?: Date;\r\n\r\n\t@ApiProperty({\r\n\t\ttype: 'string',\r\n\t\tformat: 'date-time',\r\n\t\texample: '2018-11-21T06:20:32.232Z'\r\n\t})\r\n\t@UpdateDateColumn()\r\n\tupdatedAt?: Date;\r\n}\r\n","import { ApiProperty } from '@nestjs/swagger';\r\nimport { Column, Index, JoinColumn, ManyToOne, RelationId } from 'typeorm';\r\nimport { Tenant } from '../../tenant/tenant.entity';\r\nimport { Base } from './base';\r\nimport { IsString, IsOptional } from 'class-validator';\r\nimport { IBasePerTenantEntityModel, ITenant } from '@gauzy/models';\r\n\r\nexport abstract class TenantBase extends Base\r\n\timplements IBasePerTenantEntityModel {\r\n\t@ApiProperty({ type: Tenant, readOnly: true })\r\n\t@ManyToOne((type) => Tenant, { nullable: true, onDelete: 'CASCADE' })\r\n\t@JoinColumn()\r\n\t@IsOptional()\r\n\ttenant?: ITenant;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@RelationId((t: TenantBase) => t.tenant)\r\n\t@IsString()\r\n\t@IsOptional()\r\n\t@Index()\r\n\t@Column({ nullable: true })\r\n\ttenantId?: string;\r\n}\r\n","import { ApiProperty } from '@nestjs/swagger';\r\nimport { Column, Index, JoinColumn, ManyToOne, RelationId } from 'typeorm';\r\nimport { Organization } from '../../organization/organization.entity';\r\nimport { IsOptional, IsString } from 'class-validator';\r\nimport { TenantBase } from './tenant-base';\r\nimport {\r\n\tIOrganization,\r\n\tIBasePerTenantAndOrganizationEntityModel,\r\n\tITenant\r\n} from '@gauzy/models';\r\nimport { Base } from './base';\r\nimport { Tenant } from '../../tenant/tenant.entity';\r\n\r\nexport abstract class TenantOrganizationBase extends Base\r\n\timplements IBasePerTenantAndOrganizationEntityModel {\r\n\t@ApiProperty({ type: Organization, readOnly: true })\r\n\t@ManyToOne((type) => Organization, { nullable: true, onDelete: 'CASCADE' })\r\n\t@JoinColumn()\r\n\t@IsOptional()\r\n\torganization?: IOrganization;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@RelationId((it: TenantOrganizationBase) => it.organization)\r\n\t@IsString()\r\n\t@IsOptional()\r\n\t@Index()\r\n\t@Column({ nullable: true })\r\n\torganizationId?: string;\r\n\r\n\t@ApiProperty({ type: Tenant, readOnly: true })\r\n\t@ManyToOne((type) => Tenant, { nullable: true, onDelete: 'CASCADE' })\r\n\t@JoinColumn()\r\n\t@IsOptional()\r\n\ttenant?: ITenant;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@RelationId((t: TenantBase) => t.tenant)\r\n\t@IsString()\r\n\t@IsOptional()\r\n\t@Index()\r\n\t@Column({ nullable: true })\r\n\ttenantId?: string;\r\n}\r\n","import { ITranslation, ITranslatable } from '@gauzy/models';\r\nimport { TenantOrganizationBase } from './tenant-organization-base';\r\n\r\nexport abstract class TranslationBase extends TenantOrganizationBase\r\n\timplements ITranslation<TranslatableBase> {\r\n\treference: ITranslatable<TranslatableBase>;\r\n\tlanguageCode: string;\r\n}\r\n\r\nexport abstract class TranslatableBase extends TenantOrganizationBase\r\n\timplements ITranslatable<TranslationBase> {\r\n\ttranslations: ITranslation<TranslationBase>[];\r\n\r\n\ttranslate(langCode: string): any {\r\n\t\tif (!this.translations) return this;\r\n\r\n\t\tconst translationObj = this.translations.find((translation) => {\r\n\t\t\treturn translation.languageCode === langCode;\r\n\t\t});\r\n\r\n\t\tif (!translationObj) return this;\r\n\r\n\t\tfor (const prop of Object.keys(translationObj)) {\r\n\t\t\tif (!['id', 'languageCode'].includes(prop)) {\r\n\t\t\t\tthis[prop] = translationObj[prop];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdelete this.translations;\r\n\t\treturn this;\r\n\t}\r\n}\r\n","import { Injectable, NestMiddleware } from '@nestjs/common';\r\nimport { TenantSettingService } from '../../tenant/tenant-setting/tenant-setting.service';\r\nimport * as jwt from 'jsonwebtoken';\r\n\r\n@Injectable()\r\nexport class FileStorageMiddleware implements NestMiddleware {\r\n\tconstructor(private tenantSettingService: TenantSettingService) {}\r\n\r\n\tasync use(req, res, next) {\r\n\t\tconst authHeader = req.headers.authorization;\r\n\r\n\t\tif (authHeader) {\r\n\t\t\tconst token = authHeader.split(' ')[1];\r\n\t\t\tconst data: any = jwt.decode(token);\r\n\r\n\t\t\tlet tenantSettings = {};\r\n\t\t\tif (data && data.tenantId) {\r\n\t\t\t\ttenantSettings = await this.tenantSettingService.get({\r\n\t\t\t\t\twhere: {\r\n\t\t\t\t\t\ttenantId: data.tenantId\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\treq.tenantSettings = tenantSettings;\r\n\t\t}\r\n\r\n\t\tnext();\r\n\t}\r\n}\r\n","import { NestModule, MiddlewareConsumer, Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { TenantSetting } from '../../tenant/tenant-setting/tenant-setting.entity';\r\nimport { TenantSettingService } from '../../tenant/tenant-setting/tenant-setting.service';\r\nimport { FileStorageMiddleware } from './file-storage.middleware';\r\n\r\n@Module({\r\n\timports: [TypeOrmModule.forFeature([TenantSetting])],\r\n\tcontrollers: [],\r\n\tproviders: [FileStorageMiddleware, TenantSettingService]\r\n})\r\nexport class FileStorageModule implements NestModule {\r\n\tconfigure(consumer: MiddlewareConsumer) {\r\n\t\tconsumer.apply(FileStorageMiddleware).forRoutes('*');\r\n\t}\r\n}\r\n","import { FileStorageOption, FileStorageProviderEnum } from '@gauzy/models';\r\nimport * as Providers from './providers';\r\nimport { environment } from '@env-api/environment';\r\nimport { Provider } from './providers/provider';\r\n\r\nexport class FileStorage {\r\n\tproviders: { [key: string]: Provider<any> } = {};\r\n\tconfig: FileStorageOption = {\r\n\t\tdest: ''\r\n\t};\r\n\r\n\tconstructor(option?: FileStorageOption) {\r\n\t\tthis.initProvider();\r\n\t\tthis.setConfig(option);\r\n\t}\r\n\r\n\tsetConfig(config: Partial<FileStorageOption> = {}) {\t\t\r\n\t\tthis.config = {\r\n\t\t\t...this.config,\r\n\t\t\t...config,\r\n\t\t\tprovider: (config.provider ||\r\n\t\t\t\tenvironment.fileSystem.name) as FileStorageProviderEnum\r\n\t\t};\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetProvider(providerName: FileStorageProviderEnum) {\r\n\t\tif (providerName) {\r\n\t\t\tthis.config.provider = providerName;\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\tgetProvider(providerName?: FileStorageProviderEnum) {\r\n\t\tthis.setProvider(providerName);\r\n\t\treturn this.getProviderInstance();\r\n\t}\r\n\r\n\tstorage(option?: FileStorageOption) {\r\n\t\tlet resp: any;\r\n\t\tthis.setConfig(option);\r\n\t\tif (this.config.provider && this.providers[this.config.provider]) {\r\n\t\t\tresp = this.providers[this.config.provider].handler(this.config);\r\n\t\t} else {\r\n\t\t\tconst provides = Object.values(FileStorageProviderEnum).join(', ');\r\n\t\t\tthrow new Error(\r\n\t\t\t\t`Provider \"${this.config.provider}\" is not valid. Provider must be ${provides}`\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn resp;\r\n\t}\r\n\r\n\tgetProviderInstance(): Provider<any> {\r\n\t\treturn this.providers[this.config.provider].getInstance();\r\n\t}\r\n\r\n\tinitProvider() {\r\n\t\tfor (const key in Providers) {\r\n\t\t\tif (Object.prototype.hasOwnProperty.call(Providers, key)) {\r\n\t\t\t\tconst className = Providers[key];\r\n\t\t\t\tif (className.instance === undefined) {\r\n\t\t\t\t\tconst provider: Provider<any> = new className();\r\n\t\t\t\t\tthis.providers[provider.name] = provider;\r\n\r\n\t\t\t\t\tclassName.instance = provider;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.providers[className.instance.name] =\r\n\t\t\t\t\t\tclassName.instance;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","export * from './file-storage';\r\nexport * from './file-storage.module';\r\n","export * from './local.provider';\r\nexport * from './s3.provider';\r\n","import { FileStorageOption, UploadedFile } from '@gauzy/models';\r\nimport * as multer from 'multer';\r\nimport * as fs from 'fs';\r\nimport * as moment from 'moment';\r\nimport { environment } from '@env-api/environment';\r\nimport { Provider } from './provider';\r\nimport { basename, join, resolve } from 'path';\r\nimport { RequestContext } from '../../context';\r\n\r\nexport class LocalProvider extends Provider<LocalProvider> {\r\n\tstatic instance: LocalProvider;\r\n\tname = 'local';\r\n\ttenantId = '';\r\n\tconfig = {\r\n\t\trootPath: environment.isElectron\r\n\t\t\t? resolve(environment.gauzyUserPath, 'public')\r\n\t\t\t: resolve(process.cwd(), 'apps', 'api', 'public'),\r\n\t\tbaseUrl: environment.baseUrl + '/public'\r\n\t};\r\n\r\n\tgetInstance() {\r\n\t\tif (!LocalProvider.instance) {\r\n\t\t\tLocalProvider.instance = new LocalProvider();\r\n\t\t}\r\n\t\treturn LocalProvider.instance;\r\n\t}\r\n\r\n\turl(filePath: string) {\r\n\t\tif (filePath && filePath.startsWith('http')) {\r\n\t\t\treturn filePath;\r\n\t\t}\r\n\t\treturn filePath ? `${this.config.baseUrl}/${filePath}` : null;\r\n\t}\r\n\r\n\tpath(filePath: string) {\r\n\t\treturn filePath ? `${this.config.rootPath}/${filePath}` : null;\r\n\t}\r\n\r\n\thandler({\r\n\t\tdest,\r\n\t\tfilename,\r\n\t\tprefix\r\n\t}: FileStorageOption): multer.StorageEngine {\r\n\t\treturn multer.diskStorage({\r\n\t\t\tdestination: (_req, file, callback) => {\r\n\t\t\t\tlet dir;\r\n\t\t\t\tif (dest instanceof Function) {\r\n\t\t\t\t\tdir = dest(file);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdir = dest;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst user = RequestContext.currentUser();\r\n\t\t\t\tconst fullPath = join(\r\n\t\t\t\t\tthis.config.rootPath,\r\n\t\t\t\t\tuser ? user.tenantId : '',\r\n\t\t\t\t\tdir\r\n\t\t\t\t);\r\n\r\n\t\t\t\tfs.mkdirSync(fullPath, {\r\n\t\t\t\t\trecursive: true\r\n\t\t\t\t});\r\n\r\n\t\t\t\tcallback(null, fullPath);\r\n\t\t\t},\r\n\t\t\tfilename: (_req, file, callback) => {\r\n\t\t\t\tlet fileNameString = '';\r\n\t\t\t\tconst ext = file.originalname.split('.').pop();\r\n\t\t\t\tif (filename) {\r\n\t\t\t\t\tif (typeof filename === 'string') {\r\n\t\t\t\t\t\tfileNameString = filename;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tfileNameString = filename(file, ext);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfileNameString = `${prefix}-${moment().unix()}-${parseInt(\r\n\t\t\t\t\t\t'' + Math.random() * 1000,\r\n\t\t\t\t\t\t10\r\n\t\t\t\t\t)}.${ext}`;\r\n\t\t\t\t}\r\n\t\t\t\tcallback(null, fileNameString);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tasync getFile(file: string): Promise<Buffer> {\r\n\t\treturn await fs.promises.readFile(this.path(file));\r\n\t}\r\n\r\n\tasync deleteFile(file: string): Promise<void> {\r\n\t\treturn await fs.promises.unlink(this.path(file));\r\n\t}\r\n\r\n\tasync putFile(\r\n\t\tfileContent: string | Buffer | URL,\r\n\t\tpath: string = ''\r\n\t): Promise<UploadedFile> {\r\n\t\treturn new Promise((putFileResolve, reject) => {\r\n\t\t\tconst fullPath = join(this.config.rootPath, path);\r\n\t\t\tfs.writeFile(fullPath, fileContent, (err) => {\r\n\t\t\t\tif (err) {\r\n\t\t\t\t\treject(err);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst stats = fs.statSync(fullPath);\r\n\t\t\t\tconst baseName = basename(path);\r\n\t\t\t\tconst file = {\r\n\t\t\t\t\toriginalname: baseName, // orignal file name\r\n\t\t\t\t\tsize: stats.size, // files in bytes\r\n\t\t\t\t\tfilename: baseName,\r\n\t\t\t\t\tpath: fullPath // Full path of the file\r\n\t\t\t\t};\r\n\t\t\t\tputFileResolve(this.mapUploadedFile(file));\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tmapUploadedFile(file): UploadedFile {\r\n\t\tconst saparator = process.platform === 'win32' ? '\\\\' : '/';\r\n\t\tif (file.path) {\r\n\t\t\tfile.key = file.path.replace(this.config.rootPath + saparator, '');\r\n\t\t}\r\n\t\tfile.url = this.url(file.key);\r\n\t\treturn file;\r\n\t}\r\n}\r\n","import { StorageEngine } from 'multer';\r\nimport { FileStorageOption, FileSystem, UploadedFile } from '@gauzy/models';\r\n\r\nexport abstract class Provider<T> {\r\n\tstatic instance: any;\r\n\ttenantId?: string;\r\n\tabstract name: string;\r\n\tabstract config: FileSystem;\r\n\r\n\tconstructor() {}\r\n\r\n\tabstract url(path: string): string;\r\n\tabstract path(path: string): string;\r\n\tabstract handler(options: FileStorageOption): StorageEngine;\r\n\tabstract getFile(file: string): Promise<Buffer>;\r\n\tabstract putFile(\r\n\t\tfileContent: string | Buffer | URL,\r\n\t\tpath?: string\r\n\t): Promise<UploadedFile>;\r\n\tabstract deleteFile(path: string): Promise<void>;\r\n\tabstract getInstance(): T;\r\n\r\n\tmapUploadedFile(file): UploadedFile {\r\n\t\treturn file;\r\n\t}\r\n}\r\n","import { FileStorageOption, UploadedFile } from '@gauzy/models';\r\nimport * as multerS3 from 'multer-s3';\r\nimport { basename, join } from 'path';\r\nimport * as moment from 'moment';\r\nimport { environment } from '@env-api/environment';\r\nimport * as AWS from 'aws-sdk';\r\nimport { StorageEngine } from 'multer';\r\nimport { Provider } from './provider';\r\nimport { RequestContext } from '../../context';\r\nimport * as _ from 'underscore';\r\n\r\nexport interface S3Config {\r\n\trootPath: string;\r\n\taws_access_key_id: string;\r\n\taws_secret_access_key: string;\r\n\taws_default_region: string;\r\n\taws_bucket: string;\r\n}\r\n\r\nexport class S3Provider extends Provider<S3Provider> {\r\n\tstatic instance: S3Provider;\r\n\r\n\tname = 's3';\r\n\ttenantId: string;\r\n\r\n\tconfig: S3Config;\r\n\tdefaultConfig: S3Config;\r\n\r\n\tfetchSetting = false;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.config = this.defaultConfig = {\r\n\t\t\trootPath: '',\r\n\t\t\taws_access_key_id: environment.awsConfig.accessKeyId,\r\n\t\t\taws_secret_access_key: environment.awsConfig.secretAccessKey,\r\n\t\t\taws_default_region: environment.awsConfig.region,\r\n\t\t\taws_bucket: environment.awsConfig.s3.bucket\r\n\t\t};\r\n\t}\r\n\r\n\tgetInstance() {\r\n\t\tif (!S3Provider.instance) {\r\n\t\t\tS3Provider.instance = new S3Provider();\r\n\t\t}\r\n\t\tthis.setAwsDetails();\r\n\t\treturn S3Provider.instance;\r\n\t}\r\n\r\n\turl(key: string) {\r\n\t\tconst url = this.getS3Instance().getSignedUrl('getObject', {\r\n\t\t\tBucket: this.getS3Bucket(),\r\n\t\t\tKey: key,\r\n\t\t\tExpires: 3600\r\n\t\t});\r\n\t\treturn url;\r\n\t}\r\n\r\n\tsetAwsDetails() {\r\n\t\tconst request = RequestContext.currentRequest();\r\n\t\tif (request) {\r\n\t\t\tconst settings = request['tenantSettings'];\r\n\t\t\tif (\r\n\t\t\t\tsettings &&\r\n\t\t\t\tsettings.aws_access_key_id &&\r\n\t\t\t\t!_.isEmpty(settings.aws_access_key_id.trim()) &&\r\n\t\t\t\tsettings.aws_secret_access_key &&\r\n\t\t\t\t!_.isEmpty(settings.aws_secret_access_key.trim())\r\n\t\t\t) {\r\n\t\t\t\tthis.config = {\r\n\t\t\t\t\t...this.defaultConfig,\r\n\t\t\t\t\taws_access_key_id: settings.aws_access_key_id,\r\n\t\t\t\t\taws_secret_access_key: settings.aws_secret_access_key,\r\n\t\t\t\t\taws_default_region: settings.aws_default_region,\r\n\t\t\t\t\taws_bucket: settings.aws_bucket\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.config = {\r\n\t\t\t\t...this.defaultConfig\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\tpath(filePath: string) {\r\n\t\treturn filePath ? this.config.rootPath + '/' + filePath : null;\r\n\t}\r\n\r\n\thandler({ dest, filename, prefix }: FileStorageOption): StorageEngine {\r\n\t\treturn multerS3({\r\n\t\t\ts3: this.getS3Instance(),\r\n\t\t\tbucket: this.getS3Bucket(),\r\n\t\t\tmetadata: function (_req, file, cb) {\r\n\t\t\t\tcb(null, { fieldName: file.fieldname });\r\n\t\t\t},\r\n\t\t\tkey: (_req, file, callback) => {\r\n\t\t\t\tlet fileNameString = '';\r\n\t\t\t\tconst ext = file.originalname.split('.').pop();\r\n\t\t\t\tif (filename) {\r\n\t\t\t\t\tif (typeof filename === 'string') {\r\n\t\t\t\t\t\tfileNameString = filename;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tfileNameString = filename(file, ext);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfileNameString = `gauzy-${prefix}-${moment().unix()}-${parseInt(\r\n\t\t\t\t\t\t'' + Math.random() * 1000,\r\n\t\t\t\t\t\t10\r\n\t\t\t\t\t)}.${ext}`;\r\n\t\t\t\t}\r\n\t\t\t\tlet dir;\r\n\t\t\t\tif (dest instanceof Function) {\r\n\t\t\t\t\tdir = dest(file);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdir = dest;\r\n\t\t\t\t}\r\n\t\t\t\tconst user = RequestContext.currentUser();\r\n\t\t\t\tcallback(\r\n\t\t\t\t\tnull,\r\n\t\t\t\t\tjoin(\r\n\t\t\t\t\t\tthis.config.rootPath,\r\n\t\t\t\t\t\tuser ? user.tenantId : '',\r\n\t\t\t\t\t\tdir,\r\n\t\t\t\t\t\tfileNameString\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tasync getFile(key: string): Promise<Buffer> {\r\n\t\tconst s3 = this.getS3Instance();\r\n\t\tconst params = {\r\n\t\t\tBucket: this.getS3Bucket(),\r\n\t\t\tKey: key\r\n\t\t};\r\n\r\n\t\tconst data = await s3.getObject(params).promise();\r\n\t\treturn data.Body as Buffer;\r\n\t}\r\n\r\n\tasync putFile(fileContent: string, key: string = ''): Promise<any> {\r\n\t\treturn new Promise((putFileResolve, reject) => {\r\n\t\t\tconst fileName = basename(key);\r\n\t\t\tconst s3 = this.getS3Instance();\r\n\t\t\tconst params = {\r\n\t\t\t\tBucket: this.getS3Bucket(),\r\n\t\t\t\tBody: fileContent,\r\n\t\t\t\tKey: key,\r\n\t\t\t\tContentDisposition: `inline; ${fileName}`\r\n\t\t\t};\r\n\r\n\t\t\ts3.putObject(params, async (err) => {\r\n\t\t\t\tif (err) {\r\n\t\t\t\t\treject(err);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst size = await s3\r\n\t\t\t\t\t\t.headObject({ Key: key, Bucket: this.getS3Bucket() })\r\n\t\t\t\t\t\t.promise()\r\n\t\t\t\t\t\t.then((res) => res.ContentLength);\r\n\r\n\t\t\t\t\tconst file = {\r\n\t\t\t\t\t\toriginalname: fileName, // orignal file name\r\n\t\t\t\t\t\tsize: size, // files in bytes\r\n\t\t\t\t\t\tfilename: fileName,\r\n\t\t\t\t\t\tpath: key, // Full path of the file\r\n\t\t\t\t\t\tkey: key // Full path of the file\r\n\t\t\t\t\t};\r\n\t\t\t\t\tputFileResolve(this.mapUploadedFile(file));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tdeleteFile(key: string): Promise<void> {\r\n\t\tconst s3 = this.getS3Instance();\r\n\t\tconst params = {\r\n\t\t\tBucket: this.getS3Bucket(),\r\n\t\t\tKey: key\r\n\t\t};\r\n\t\treturn new Promise((deleteFileResolve, reject) => {\r\n\t\t\ts3.deleteObject(params, function (err) {\r\n\t\t\t\tif (err) reject(err);\r\n\t\t\t\telse deleteFileResolve();\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tprivate getS3Instance() {\r\n\t\tthis.setAwsDetails();\r\n\t\treturn new AWS.S3({\r\n\t\t\taccessKeyId: this.config.aws_access_key_id,\r\n\t\t\tsecretAccessKey: this.config.aws_secret_access_key,\r\n\t\t\tregion: this.config.aws_default_region\r\n\t\t});\r\n\t}\r\n\r\n\tgetS3Bucket() {\r\n\t\tthis.setAwsDetails();\r\n\t\treturn this.config.aws_bucket;\r\n\t}\r\n\r\n\tmapUploadedFile(file): UploadedFile {\r\n\t\tfile.filename = file.originalname;\r\n\t\tfile.url = this.url(file.key); // file.location;\r\n\t\treturn file;\r\n\t}\r\n}\r\n","import { createParamDecorator, ExecutionContext } from '@nestjs/common';\r\nimport { FileStorage } from './file-storage';\r\nimport { FileStorageProviderEnum, UploadedFile } from '@gauzy/models';\r\n\r\nexport const UploadedFileStorage = createParamDecorator(\r\n\t(data: FileStorageProviderEnum, ctx: ExecutionContext): UploadedFile => {\r\n\t\tconst request = ctx.switchToHttp().getRequest();\r\n\t\tconst provider = new FileStorage().getProvider(data);\r\n\t\treturn provider.mapUploadedFile(request.file);\r\n\t}\r\n);\r\n","export * from './crud';\r\nexport * from './core.module';\r\nexport * from './utils';\r\n","import * as momentDefault from 'moment';\r\nimport { extendMoment } from 'moment-range';\r\n\r\nexport const moment = extendMoment(momentDefault);\r\n","export const randomSeedConfig = {\r\n\ttenants: 5, //The number of random tenants to be seeded.\r\n\torganizationsPerTenant: 2, //No of random organizations seeded will be (organizationsPerTenant * tenants)\r\n\temployeesPerOrganization: 5, //No of random employees seeded will be (employeesPerOrganization * organizationsPerTenant * tenants)\r\n\tcandidatesPerOrganization: 2, //No of random employees seeded will be (candidatesPerOrganization * organizationsPerTenant * tenants)\r\n\tmanagersPerOrganization: 2, //No of random manager seeded will be (managersPerOrganization * organizationsPerTenant * tenants)\r\n\tdataEntriesPerOrganization: 4, //No of random data entry users seeded will be (dataEntriesPerOrganization * organizationsPerTenant * tenants)\r\n\tviewersPerOrganization: 4, //No of random viewers seeded will be (viewersPerOrganization * organizationsPerTenant * tenants)\r\n\tprojectsPerOrganization: 30, // No of random projects seeded will be  (projectsPerOrganization * organizationsPerTenant * tenants)\r\n\temailsPerOrganization: 30, // No of random emails seeded will be  (emailsPerOrganization * organizationsPerTenant * tenants)\r\n\tinvitePerOrganization: 30, // No of random emails seeded will be  (emailsPerOrganization * organizationsPerTenant * tenants)\r\n\trequestApprovalPerOrganization: 20, // No of random request to approve seeded will be  (requestApprovalPerOrganization * organizationsPerTenant * tenants)\r\n\temployeeTimeOffPerOrganization: 10, // No of time off request to approve seeded will be  (employeeTimeOffPerOrganization * organizationsPerTenant * tenants)\r\n\tequipmentPerTenant: 20, // No of equipmentPerTenant request to approve seeded will be  (equipmentPerTenant * tenants)\r\n\tequipmentSharingPerTenant: 20, // No of equipmentSharingPerTenant request to approve seeded will be  (equipmentSharingPerTenant * tenants)\r\n\tproposalsSharingPerOrganizations: 30, // No of proposalsSharingPerOrganizations request to approve seeded will be  (proposalsSharingPerOrganizations * tenants * organizations)\r\n\tcontacts: 50, // The number of random contacts to be seeded.\r\n\tnoOfHelpCenterArticle: 10, // The number of random Help Center Articles.\r\n\tavailabilitySlotsPerOrganization: 50, // No of availability slots request to approve seeded will be  (availabilitySlotsPerOrganization * organizationsPerTenant * tenants)\r\n\tnoOfTimeLogsPerTimeSheet: 5, // No of time logs entry per time sheets\r\n\tnumberOfOptionPerProduct: 5, // number of product options per product\r\n\tnumberOfVariantPerProduct: 5, // number of product variant per product\r\n\tnumberOfInvoicePerOrganization: 50, // number of invoice per organizations\r\n\tnumberOfInvoiceItemPerInvoice: 20, // number of invoice item per invoices\r\n\tnoOfRandomContacts: 5 // number of random contact per organization\r\n};\r\n","// Modified code from https://github.com/alexitaylor/angular-graphql-nestjs-postgres-starter-kit.\r\n// MIT License, see https://github.com/alexitaylor/angular-graphql-nestjs-postgres-starter-kit/blob/master/LICENSE\r\n// Copyright (c) 2019 Alexi Taylor\r\n\r\nimport * as rimraf from 'rimraf';\r\nimport * as path from 'path';\r\nimport { Injectable } from '@nestjs/common';\r\nimport {\r\n\tConnection,\r\n\tcreateConnection,\r\n\tgetRepository,\r\n\tConnectionOptions,\r\n\tgetConnection\r\n} from 'typeorm';\r\nimport chalk from 'chalk';\r\nimport { environment as env } from '@env-api/environment';\r\nimport { Role } from '../../role/role.entity';\r\nimport { createRoles } from '../../role/role.seed';\r\nimport { createDefaultSkills } from '../../skills/skill.seed';\r\nimport { createLanguages } from '../../language/language.seed';\r\nimport { User } from '../../user/user.entity';\r\nimport {\r\n\tcreateDefaultSuperAdminUsers,\r\n\tcreateDefaultUsers,\r\n\tcreateRandomSuperAdminUsers,\r\n\tcreateRandomUsers\r\n} from '../../user/user.seed';\r\nimport { Employee } from '../../employee/employee.entity';\r\nimport {\r\n\tcreateDefaultEmployees,\r\n\tcreateRandomEmployees\r\n} from '../../employee/employee.seed';\r\nimport { Organization } from '../../organization/organization.entity';\r\nimport {\r\n\tcreateDefaultOrganizations,\r\n\tcreateRandomOrganizations,\r\n\tgetDefaultBulgarianOrganization\r\n} from '../../organization/organization.seed';\r\nimport {\r\n\tcreateDefaultIncomes,\r\n\tcreateRandomIncomes\r\n} from '../../income/income.seed';\r\nimport {\r\n\tcreateDefaultExpenses,\r\n\tcreateRandomExpenses\r\n} from '../../expense/expense.seed';\r\nimport {\r\n\tcreateDefaultUsersOrganizations,\r\n\tcreateRandomUsersOrganizations\r\n} from '../../user-organization/user-organization.seed';\r\nimport { createCountries } from '../../country/country.seed';\r\nimport {\r\n\tcreateDefaultTeams,\r\n\tcreateRandomTeam\r\n} from '../../organization-team/organization-team.seed';\r\nimport { createRolePermissions } from '../../role-permissions/role-permissions.seed';\r\nimport {\r\n\tcreateDefaultTenants,\r\n\tcreateRandomTenants,\r\n\tgetDefaultTenant\r\n} from '../../tenant/tenant.seed';\r\nimport { createDefaultEmailTemplates } from '../../email-template/email-template.seed';\r\nimport {\r\n\tseedDefaultEmploymentTypes,\r\n\tseedRandomEmploymentTypes\r\n} from '../../organization-employment-type/organization-employment-type.seed';\r\nimport { createEmployeeLevels } from '../../organization_employee-level/organization-employee-level.seed';\r\nimport {\r\n\tcreateDefaultTimeOffPolicy,\r\n\tcreateRandomTimeOffPolicies\r\n} from '../../time-off-policy/time-off-policy.seed';\r\nimport {\r\n\tcreateDefaultApprovalPolicyForOrg,\r\n\tcreateRandomApprovalPolicyForOrg\r\n} from '../../approval-policy/approval-policy.seed';\r\nimport {\r\n\tcreateExpenseCategories,\r\n\tcreateRandomExpenseCategories\r\n} from '../../expense-categories/expense-categories.seed';\r\nimport {\r\n\tcreateOrganizationVendors,\r\n\tcreateRandomOrganizationVendors\r\n} from '../../organization-vendors/organization-vendors.seed';\r\nimport { OrganizationProject } from '../../organization-projects/organization-projects.entity';\r\nimport {\r\n\tcreateDefaultCandidates,\r\n\tcreateRandomCandidates\r\n} from '../../candidate/candidate.seed';\r\nimport { Tenant } from '../../tenant/tenant.entity';\r\nimport {\r\n\tcreateCandidateSources,\r\n\tcreateRandomCandidateSources\r\n} from '../../candidate-source/candidate-source.seed';\r\nimport { createDefaultIntegrationTypes } from '../../integration/integration-type.seed';\r\nimport { createDefaultIntegrations } from '../../integration/integration.seed';\r\nimport { createHelpCenter } from '../../help-center/help-center.seed';\r\nimport {\r\n\tcreateDefaultProducts,\r\n\tcreateRandomProduct\r\n} from '../../product/product.seed';\r\nimport {\r\n\tcreateCandidateDocuments,\r\n\tcreateRandomCandidateDocuments\r\n} from '../../candidate-documents/candidate-documents.seed';\r\nimport {\r\n\tcreateCandidateFeedbacks,\r\n\tcreateRandomCandidateFeedbacks\r\n} from '../../candidate-feedbacks/candidate-feedbacks.seed';\r\n\r\nimport {\r\n\tcreateDefaultTimeSheet,\r\n\tcreateRandomTimesheet\r\n} from '../../timesheet/timesheet/timesheet.seed';\r\nimport { createDefaultTask, createRandomTask } from '../../tasks/task.seed';\r\nimport {\r\n\tcreateDefaultOrganizationProjects,\r\n\tcreateRandomOrganizationProjects\r\n} from '../../organization-projects/organization-projects.seed';\r\nimport { createDefaultTimeFrames } from '../../goal-time-frame/goal-time-frame.seed';\r\nimport {\r\n\tcreateDefaultGoals,\r\n\tcreateRandomGoal,\r\n\tupdateDefaultGoalProgress\r\n} from '../../goal/goal.seed';\r\nimport {\r\n\tcreateDefaultKeyResults,\r\n\tcreateRandomKeyResult,\r\n\tupdateDefaultKeyResultProgress\r\n} from '../../keyresult/keyresult.seed';\r\nimport { createDefaultKeyResultUpdates } from '../../keyresult-update/keyresult-update.seed';\r\nimport {\r\n\tseedRandomOrganizationDepartments,\r\n\tcreateDefaultOrganizationDepartments\r\n} from '../../organization-department/organization-department.seed';\r\nimport {\r\n\tseedDefaultOrganizationPosition,\r\n\tseedRandomOrganizationPosition\r\n} from '../../organization-positions/organization-position.seed';\r\nimport {\r\n\tcreateDefaultTags,\r\n\tcreateRandomOrganizationTags,\r\n\tcreateTags\r\n} from '../../tags/tag.seed';\r\nimport {\r\n\tcreateDefaultEmailSent,\r\n\tcreateRandomEmailSent\r\n} from '../../email/email.seed';\r\nimport {\r\n\tcreateDefaultEmployeeInviteSent,\r\n\tcreateRandomEmployeeInviteSent\r\n} from '../../invite/invite.seed';\r\nimport { createRandomRequestApproval } from '../../request-approval/request-approval.seed';\r\nimport {\r\n\tcreateDefaultEmployeeTimeOff,\r\n\tcreateRandomEmployeeTimeOff\r\n} from '../../time-off-request/time-off-request.seed';\r\nimport {\r\n\tcreateOrganizationDocuments,\r\n\tcreateRandomOrganizationDocuments\r\n} from '../../organization-documents/organization-documents.seed';\r\nimport {\r\n\tcreateDefaultEquipments,\r\n\tcreateRandomEquipments\r\n} from '../../equipment/equipment.seed';\r\nimport {\r\n\tcreateDefaultEquipmentSharing,\r\n\tcreateRandomEquipmentSharing\r\n} from '../../equipment-sharing/equipment-sharing.seed';\r\nimport {\r\n\tcreateDefaultProposals,\r\n\tcreateRandomProposals\r\n} from '../../proposal/proposal.seed';\r\nimport {\r\n\tcreateDefaultInvoiceItem,\r\n\tcreateRandomInvoiceItem\r\n} from '../../invoice-item/invoice-item.seed';\r\nimport {\r\n\tcreateDefaultInvoice,\r\n\tcreateRandomInvoice\r\n} from '../../invoice/invoice.seed';\r\nimport {\r\n\tcreateCandidateSkills,\r\n\tcreateRandomCandidateSkills\r\n} from '../../candidate-skill/candidate-skill.seed';\r\nimport { createRandomCandidateExperience } from '../../candidate-experience/candidate-experience.seed';\r\nimport {\r\n\tcreateCandidateEducations,\r\n\tcreateRandomCandidateEducations\r\n} from '../../candidate-education/candidate-education.seed';\r\nimport { createRandomContacts } from '../../contact/contact.seed';\r\nimport {\r\n\tcreateRandomOrganizationContact,\r\n\tcreateDefaultOrganizationContact\r\n} from '../../organization-contact/organization-contact.seed';\r\nimport {\r\n\tcreateDefaultAvailabilitySlots,\r\n\tcreateRandomAvailabilitySlots\r\n} from '../../availability-slots/availability-slots.seed';\r\nimport {\r\n\tcreateDefaultCandidatePersonalQualities,\r\n\tcreateRandomCandidatePersonalQualities\r\n} from '../../candidate-personal-qualities/candidate-personal-qualities.seed';\r\nimport {\r\n\tcreateDefaultCandidateTechnologies,\r\n\tcreateRandomCandidateTechnologies\r\n} from '../../candidate-technologies/candidate-technologies.seed';\r\nimport {\r\n\tcreateDefaultCandidateInterview,\r\n\tcreateRandomCandidateInterview\r\n} from '../../candidate-interview/candidate-interview.seed';\r\nimport {\r\n\tcreateDefaultAwards,\r\n\tcreateRandomAwards\r\n} from '../../organization-awards/organization-awards.seed';\r\nimport { createDefaultGeneralGoalSetting } from '../../goal-general-setting/goal-general-setting.seed';\r\nimport {\r\n\tcreateDefaultCandidateCriterionRating,\r\n\tcreateRandomCandidateCriterionRating\r\n} from '../../candidate-criterions-rating/candidate-criterion-rating.seed';\r\nimport { createDefaultGoalKpi } from '../../goal-kpi/goal-kpi.seed';\r\nimport { createRandomEmployeeSetting } from '../../employee-setting/employee-setting.seed';\r\nimport { createRandomEmployeeRecurringExpense } from '../../employee-recurring-expense/employee-recurring-expense.seed';\r\nimport {\r\n\tcreateDefaultCandidateInterviewers,\r\n\tcreateRandomCandidateInterviewers\r\n} from '../../candidate-interviewers/candidate-interviewers.seed';\r\nimport { createRandomPipelineStage } from '../../pipeline-stage/pipeline-stage.seed';\r\nimport {\r\n\tcreateDefaultPipeline,\r\n\tcreateRandomPipeline\r\n} from '../../pipeline/pipeline.seed';\r\nimport {\r\n\tcreateDefaultOrganizationRecurringExpense,\r\n\tcreateRandomOrganizationRecurringExpense\r\n} from '../../organization-recurring-expense/organization-recurring-expense.seed';\r\nimport {\r\n\tcreateDefaultHelpCenterAuthor,\r\n\tcreateRandomHelpCenterAuthor\r\n} from '../../help-center-author/help-center-author.seed';\r\nimport { createHelpCenterArticle } from '../../help-center-article/help-center-article.seed';\r\nimport {\r\n\tcreateDefaultOrganizationLanguage,\r\n\tcreateRandomOrganizationLanguage\r\n} from '../../organization-languages/organization-languages.seed';\r\nimport { createRandomOrganizationSprint } from '../../organization-sprint/organization-sprint.seed';\r\nimport { createRandomOrganizationTeamEmployee } from '../../organization-team-employee/organization-team-employee.seed';\r\nimport { createRandomAppointmentEmployees } from '../../appointment-employees/appointment-employees.seed';\r\nimport {\r\n\tcreateDefaultEmployeeAppointment,\r\n\tcreateRandomEmployeeAppointment\r\n} from '../../employee-appointment/employee-appointment.seed';\r\nimport { createRandomDeal } from '../../deal/deal.seed';\r\nimport { createRandomIntegrationSetting } from '../../integration-setting/integration-setting.seed';\r\nimport { createRandomIntegrationMap } from '../../integration-map/integration-map.seed';\r\nimport { createRandomIntegrationTenant } from '../../integration-tenant/integration-tenant.seed';\r\nimport { createRandomIntegrationEntitySetting } from '../../integration-entity-setting/integration-entity-setting.seed';\r\nimport { createRandomIntegrationEntitySettingTiedEntity } from '../../integration-entity-setting-tied-entity/integration-entity-setting-tied-entity.seed';\r\nimport { createRandomRequestApprovalTeam } from '../../request-approval-team/request-approval-team.seed';\r\nimport { createRandomRequestApprovalEmployee } from '../../request-approval-employee/request-approval-employee.seed';\r\nimport {\r\n\tcreateDefaultPayment,\r\n\tcreateRandomPayment\r\n} from '../../payment/payment.seed';\r\nimport {\r\n\tcreateDefaultEventTypes,\r\n\tcreateRandomEventType\r\n} from '../../event-types/event-type.seed';\r\nimport {\r\n\tcreateDefaultEquipmentSharingPolicyForOrg,\r\n\tcreateRandomEquipmentSharingPolicyForOrg\r\n} from '../../equipment-sharing-policy/equipment-sharing-policy.seed';\r\nimport { createRandomProductOption } from '../../product-option/product-option.seed';\r\nimport { createRandomProductVariantSettings } from '../../product-settings/product-settings.seed';\r\nimport { createRandomProductVariant } from '../../product-variant/product-variant.seed';\r\nimport { createRandomProductVariantPrice } from '../../product-variant-price/product-variant-price.seed';\r\nimport {\r\n\tcreateCategories,\r\n\tcreateRandomCategories\r\n} from '../../product-category/category.seed';\r\nimport {\r\n\tcreateDefaultProductType,\r\n\tcreateRandomProductType\r\n} from '../../product-type/type.seed';\r\nimport { createDefaultGoalTemplates } from '../../goal-template/goal-template.seed';\r\nimport { createDefaultKeyResultTemplates } from '../../keyresult-template/keyresult-template.seed';\r\nimport { createDefaultEmployeeAwards } from '../../employee-award/employee-award.seed';\r\nimport { createDefaultGoalKpiTemplate } from '../../goal-kpi-template/goal-kpi-template.seed';\r\nimport { randomSeedConfig } from './random-seed-config';\r\nimport { createDefaultJobSearchCategories } from '../../employee-job-preset/job-search-category/job-search-category.seed';\r\nimport { createDefaultJobSearchOccupations } from '../../employee-job-preset/job-search-occupation/job-search-occupation.seed';\r\nimport { createDefaultReport } from '../../reports/report.seed';\r\nimport { createCurrencies } from '../../currency/currency.seed';\r\nimport {\r\n\tcreateDefaultFeatureToggle,\r\n\tcreateRandomFeatureToggle\r\n} from '../../feature/feature.seed';\r\n\r\n@Injectable()\r\nexport class SeedDataService {\r\n\tconnection: Connection;\r\n\tlog = console.log;\r\n\torganizations: Organization[];\r\n\tdefaultProjects: OrganizationProject[] | void;\r\n\ttenant: Tenant;\r\n\troles: Role[];\r\n\tsuperAdminUsers: User[];\r\n\tdefaultCandidateUsers: User[];\r\n\tdefaultEmployees: Employee[];\r\n\r\n\tconstructor() {}\r\n\r\n\t/**\r\n\t * This config is applied only for `yarn seed:*` type calls because\r\n\t * that is when connection is created by this service itself.\r\n\t */\r\n\toverrideDbConfig = {\r\n\t\tlogging: true,\r\n\t\tlogger: 'file' //Removes console logging, instead logs all queries in a file ormlogs.log\r\n\t\t// dropSchema: !env.production //Drops the schema each time connection is being established in development mode.\r\n\t};\r\n\r\n\t/**\r\n\t * Seed All Data\r\n\t */\r\n\tpublic async runAllSeed() {\r\n\t\tconst isDefault = false;\r\n\r\n\t\ttry {\r\n\t\t\tawait this.cleanUpPreviousRuns();\r\n\r\n\t\t\t// Connect to database\r\n\t\t\tawait this.createConnection();\r\n\r\n\t\t\t// Reset database to start with new, fresh data\r\n\t\t\tawait this.resetDatabase();\r\n\r\n\t\t\t// Seed data with mock / fake data\r\n\t\t\tawait this.seedData(isDefault);\r\n\r\n\t\t\t// Seed jobs related data\r\n\t\t\tawait this.seedJobsData(isDefault);\r\n\r\n\t\t\t// Seed jobs related data\r\n\t\t\tawait this.seedReportsData(isDefault);\r\n\r\n\t\t\tconsole.log('Database All Seed Completed');\r\n\t\t} catch (error) {\r\n\t\t\tthis.handleError(error);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Seed Default Data\r\n\t */\r\n\tpublic async runDefaultSeed() {\r\n\t\tconst isDefault = true;\r\n\r\n\t\ttry {\r\n\t\t\tawait this.cleanUpPreviousRuns();\r\n\r\n\t\t\t// Connect to database\r\n\t\t\tawait this.createConnection();\r\n\r\n\t\t\t// Reset database to start with new, fresh data\r\n\t\t\tawait this.resetDatabase();\r\n\r\n\t\t\t// Seed data with mock / fake data\r\n\t\t\tawait this.seedData(isDefault);\r\n\r\n\t\t\tconsole.log('Database Default Seed Completed');\r\n\t\t} catch (error) {\r\n\t\t\tthis.handleError(error);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Seed Default Data\r\n\t */\r\n\tpublic async runReportsSeed(isDefault = true) {\r\n\t\ttry {\r\n\t\t\t// Connect to database\r\n\t\t\tawait this.createConnection();\r\n\r\n\t\t\tawait this.seedReportsData(isDefault);\r\n\r\n\t\t\tconsole.log('Database Reports Seed completed');\r\n\t\t} catch (error) {\r\n\t\t\tthis.handleError(error);\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * Populate database with report related data\r\n\t * @param isDefault\r\n\t */\r\n\tprivate async seedReportsData(isDefault: boolean) {\r\n\t\ttry {\r\n\t\t\tthis.log(\r\n\t\t\t\tchalk.green(\r\n\t\t\t\t\t`🌱 SEEDING ${\r\n\t\t\t\t\t\tenv.production ? 'PRODUCTION' : ''\r\n\t\t\t\t\t} REPORTS DATABASE...`\r\n\t\t\t\t)\r\n\t\t\t);\r\n\r\n\t\t\tif (isDefault) {\r\n\t\t\t\tawait this.tryExecute(\r\n\t\t\t\t\t'Default Report Category & Report',\r\n\t\t\t\t\tcreateDefaultReport(this.connection)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tthis.log(\r\n\t\t\t\tchalk.green(\r\n\t\t\t\t\t`✅ SEEDED ${\r\n\t\t\t\t\t\tenv.production ? 'PRODUCTION' : ''\r\n\t\t\t\t\t} REPORTS DATABASE`\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tthis.handleError(error);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Seed Default Data\r\n\t */\r\n\tpublic async runJobsSeed() {\r\n\t\tconst isDefault = true;\r\n\r\n\t\ttry {\r\n\t\t\t// Connect to database\r\n\t\t\tawait this.createConnection();\r\n\r\n\t\t\tawait this.seedJobsData(isDefault);\r\n\r\n\t\t\tconsole.log('Database Jobs Seed completed');\r\n\t\t} catch (error) {\r\n\t\t\tthis.handleError(error);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * Populate database with jobs related data\r\n\t * @param isDefault\r\n\t */\r\n\tprivate async seedJobsData(isDefault: boolean) {\r\n\t\t// TODO: implement for isDefault = false (i.e for other tenants with random data too)\r\n\r\n\t\ttry {\r\n\t\t\tthis.log(\r\n\t\t\t\tchalk.green(\r\n\t\t\t\t\t`🌱 SEEDING ${\r\n\t\t\t\t\t\tenv.production ? 'PRODUCTION' : ''\r\n\t\t\t\t\t} JOBS DATABASE...`\r\n\t\t\t\t)\r\n\t\t\t);\r\n\r\n\t\t\tconst defaultTenant = await getDefaultTenant(this.connection);\r\n\r\n\t\t\tconst defaultBulgarianOrganization = await getDefaultBulgarianOrganization(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\tdefaultTenant\r\n\t\t\t);\r\n\r\n\t\t\tawait this.tryExecute(\r\n\t\t\t\t'Default Job Search Categories',\r\n\t\t\t\tcreateDefaultJobSearchCategories(\r\n\t\t\t\t\tthis.connection,\r\n\t\t\t\t\tdefaultTenant,\r\n\t\t\t\t\tdefaultBulgarianOrganization\r\n\t\t\t\t)\r\n\t\t\t);\r\n\r\n\t\t\tawait this.tryExecute(\r\n\t\t\t\t'Default Job Search Occupations',\r\n\t\t\t\tcreateDefaultJobSearchOccupations(\r\n\t\t\t\t\tthis.connection,\r\n\t\t\t\t\tdefaultTenant,\r\n\t\t\t\t\tdefaultBulgarianOrganization\r\n\t\t\t\t)\r\n\t\t\t);\r\n\r\n\t\t\tthis.log(\r\n\t\t\t\tchalk.green(\r\n\t\t\t\t\t`✅ SEEDED ${\r\n\t\t\t\t\t\tenv.production ? 'PRODUCTION' : ''\r\n\t\t\t\t\t} JOBS DATABASE`\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tthis.handleError(error);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Populate database with mock data\r\n\t */\r\n\tprivate async seedData(isDefault: boolean) {\r\n\t\ttry {\r\n\t\t\tthis.log(\r\n\t\t\t\tchalk.green(\r\n\t\t\t\t\t`🌱 SEEDING ${\r\n\t\t\t\t\t\tenv.production ? 'PRODUCTION' : ''\r\n\t\t\t\t\t} DATABASE...`\r\n\t\t\t\t)\r\n\t\t\t);\r\n\r\n\t\t\t//Seed data which only needs connection\r\n\t\t\tawait this.tryExecute(\r\n\t\t\t\t'Countries',\r\n\t\t\t\tcreateCountries(this.connection)\r\n\t\t\t);\r\n\r\n\t\t\tawait this.tryExecute(\r\n\t\t\t\t'Currencies',\r\n\t\t\t\tcreateCurrencies(this.connection)\r\n\t\t\t);\r\n\r\n\t\t\tawait this.seedBasicDefaultData();\r\n\r\n\t\t\tif (!isDefault) {\r\n\t\t\t\tawait this.seedDefaultData();\r\n\t\t\t\tawait this.seedRandomData();\r\n\t\t\t}\r\n\r\n\t\t\tthis.log(\r\n\t\t\t\tchalk.green(\r\n\t\t\t\t\t`✅ SEEDED ${env.production ? 'PRODUCTION' : ''} DATABASE`\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tthis.handleError(error);\r\n\t\t}\r\n\t}\r\n\r\n\t/** Populate Database with Basic Default Data **/\r\n\tprivate async seedBasicDefaultData() {\r\n\t\t// Platform level data\r\n\r\n\t\tawait this.tryExecute('Languages', createLanguages(this.connection));\r\n\r\n\t\tthis.tenant = await createDefaultTenants(this.connection);\r\n\r\n\t\tthis.roles = await createRoles(this.connection, [this.tenant]);\r\n\r\n\t\tawait this.runReportsSeed(true);\r\n\r\n\t\tawait createRolePermissions(this.connection, this.roles, [this.tenant]);\r\n\r\n\t\t// Tenant level inserts which only need connection, tenant, roles\r\n\t\tconst defaultOrganizations = await createDefaultOrganizations(\r\n\t\t\tthis.connection,\r\n\t\t\tthis.tenant\r\n\t\t);\r\n\r\n\t\tthis.organizations = defaultOrganizations;\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Feature Toggle',\r\n\t\t\tcreateDefaultFeatureToggle(this.connection, this.tenant)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Email Templates',\r\n\t\t\tcreateDefaultEmailTemplates(this.connection)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Skills',\r\n\t\t\tcreateDefaultSkills(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\tthis.tenant,\r\n\t\t\t\tthis.organizations[0]\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Contacts',\r\n\t\t\tcreateRandomContacts(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\tthis.tenant,\r\n\t\t\t\tthis.organizations,\r\n\t\t\t\trandomSeedConfig.noOfRandomContacts || 5\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tthis.superAdminUsers = await createDefaultSuperAdminUsers(\r\n\t\t\tthis.connection,\r\n\t\t\tthis.roles,\r\n\t\t\tthis.tenant\r\n\t\t);\r\n\t\tconst {\r\n\t\t\tadminUsers,\r\n\t\t\tdefaultEmployeeUsers,\r\n\t\t\tdefaultCandidateUsers\r\n\t\t} = await createDefaultUsers(this.connection, this.roles, this.tenant);\r\n\r\n\t\tawait createDefaultUsersOrganizations(this.connection, {\r\n\t\t\torganizations: this.organizations,\r\n\t\t\tusers: [\r\n\t\t\t\t...defaultEmployeeUsers,\r\n\t\t\t\t...adminUsers,\r\n\t\t\t\t...this.superAdminUsers\r\n\t\t\t]\r\n\t\t});\r\n\r\n\t\tthis.defaultCandidateUsers = defaultCandidateUsers;\r\n\r\n\t\t//User level data that needs connection, tenant, organization, role, users\r\n\t\tthis.defaultEmployees = await createDefaultEmployees(this.connection, {\r\n\t\t\ttenant: this.tenant,\r\n\t\t\torg: this.organizations[0],\r\n\t\t\tusers: defaultEmployeeUsers\r\n\t\t});\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Employee Invite',\r\n\t\t\tcreateDefaultEmployeeInviteSent(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\tthis.tenant,\r\n\t\t\t\tthis.organizations,\r\n\t\t\t\tthis.superAdminUsers\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default General Goal Setting',\r\n\t\t\tcreateDefaultGeneralGoalSetting(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\tthis.tenant,\r\n\t\t\t\tthis.organizations\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Goal Template',\r\n\t\t\tcreateDefaultGoalTemplates(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\tthis.tenant,\r\n\t\t\t\tthis.organizations[0]\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Goal KPI Template',\r\n\t\t\tcreateDefaultGoalKpiTemplate(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\tthis.tenant,\r\n\t\t\t\tthis.organizations[0]\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Key Result Template',\r\n\t\t\tcreateDefaultKeyResultTemplates(this.connection, this.tenant)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Time Off Policy',\r\n\t\t\tcreateDefaultTimeOffPolicy(this.connection, {\r\n\t\t\t\torg: this.organizations[0],\r\n\t\t\t\temployees: this.defaultEmployees\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\t//seed default integrations with types\r\n\t\tconst integrationTypes = await this.tryExecute(\r\n\t\t\t'Default Integration Types',\r\n\t\t\tcreateDefaultIntegrationTypes(this.connection)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Integrations',\r\n\t\t\tcreateDefaultIntegrations(this.connection, integrationTypes)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Event Types',\r\n\t\t\tcreateDefaultEventTypes(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\tthis.tenant,\r\n\t\t\t\tthis.organizations\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Populate default data from env files\r\n\t */\r\n\tprivate async seedDefaultData() {\r\n\t\t//Organization level inserts which need connection, tenant, role, organizations\r\n\t\tconst categories = await this.tryExecute(\r\n\t\t\t'Expense Categories',\r\n\t\t\tcreateExpenseCategories(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\tthis.tenant,\r\n\t\t\t\tthis.organizations\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Employee Levels',\r\n\t\t\tcreateEmployeeLevels(this.connection, this.organizations)\r\n\t\t);\r\n\r\n\t\t//todo :  Need to fix error of seeding Product Category\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Categories',\r\n\t\t\tcreateCategories(this.connection, this.organizations)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Product Types',\r\n\t\t\tcreateDefaultProductType(this.connection, this.organizations)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Organization Contacts',\r\n\t\t\tcreateDefaultOrganizationContact(this.connection)\r\n\t\t);\r\n\r\n\t\t//Employee level data that need connection, tenant, organization, role, users, employee\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Teams',\r\n\t\t\tcreateDefaultTeams(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\tthis.organizations[0],\r\n\t\t\t\tthis.defaultEmployees,\r\n\t\t\t\tthis.roles\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tthis.defaultProjects = await this.tryExecute(\r\n\t\t\t'Default Organization Projects',\r\n\t\t\tcreateDefaultOrganizationProjects(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\tthis.organizations\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Projects Task',\r\n\t\t\tcreateDefaultTask(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\tthis.tenant,\r\n\t\t\t\tthis.organizations[0]\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Organization Departments',\r\n\t\t\tcreateDefaultOrganizationDepartments(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\tthis.organizations\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Products',\r\n\t\t\tcreateDefaultProducts(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\tthis.tenant,\r\n\t\t\t\tthis.organizations[0]\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Time Frames',\r\n\t\t\tcreateDefaultTimeFrames(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\tthis.tenant,\r\n\t\t\t\tthis.organizations\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Tags',\r\n\t\t\tcreateDefaultTags(this.connection, this.tenant, this.organizations)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Equipments',\r\n\t\t\tcreateDefaultEquipments(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\tthis.tenant,\r\n\t\t\t\tthis.organizations[0]\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tconst organizationVendors = await this.tryExecute(\r\n\t\t\t'Default Organization Vendors',\r\n\t\t\tcreateOrganizationVendors(this.connection, this.organizations)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Help Centers',\r\n\t\t\tcreateHelpCenter(this.connection, {\r\n\t\t\t\ttenant: this.tenant,\r\n\t\t\t\torg: this.organizations[0]\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tconst defaultCandidates = await this.tryExecute(\r\n\t\t\t'Default Candidates',\r\n\t\t\tcreateDefaultCandidates(this.connection, {\r\n\t\t\t\ttenant: this.tenant,\r\n\t\t\t\torg: this.organizations[0],\r\n\t\t\t\tusers: [...this.defaultCandidateUsers]\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Candidate Sources',\r\n\t\t\tcreateCandidateSources(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\tthis.tenant,\r\n\t\t\t\tdefaultCandidates,\r\n\t\t\t\tthis.organizations[0]\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Candidate Documents',\r\n\t\t\tcreateCandidateDocuments(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\tthis.tenant,\r\n\t\t\t\tdefaultCandidates,\r\n\t\t\t\tthis.organizations[0]\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Candidate Interview',\r\n\t\t\tcreateDefaultCandidateInterview(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\tthis.tenant,\r\n\t\t\t\tthis.organizations[0],\r\n\t\t\t\tdefaultCandidates\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Candidate Interviewers',\r\n\t\t\tcreateDefaultCandidateInterviewers(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\tthis.tenant,\r\n\t\t\t\tthis.organizations[0],\r\n\t\t\t\tthis.defaultEmployees,\r\n\t\t\t\tdefaultCandidates\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Candidate Feedbacks',\r\n\t\t\tcreateCandidateFeedbacks(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\tthis.tenant,\r\n\t\t\t\tthis.organizations[0],\r\n\t\t\t\tdefaultCandidates\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Candidate Educations',\r\n\t\t\tcreateCandidateEducations(this.connection, defaultCandidates)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Candidate Skills',\r\n\t\t\tcreateCandidateSkills(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\tthis.tenant,\r\n\t\t\t\tdefaultCandidates,\r\n\t\t\t\tthis.organizations[0]\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Incomes',\r\n\t\t\tcreateDefaultIncomes(this.connection, {\r\n\t\t\t\torganizations: this.organizations,\r\n\t\t\t\temployees: this.defaultEmployees\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Expenses',\r\n\t\t\tcreateDefaultExpenses(this.connection, {\r\n\t\t\t\torganizations: this.organizations,\r\n\t\t\t\ttenant: this.tenant,\r\n\t\t\t\temployees: this.defaultEmployees,\r\n\t\t\t\tcategories,\r\n\t\t\t\torganizationVendors\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Employment Types',\r\n\t\t\tseedDefaultEmploymentTypes(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\tthis.tenant,\r\n\t\t\t\tthis.defaultEmployees,\r\n\t\t\t\tthis.organizations[0]\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Goal KPIs',\r\n\t\t\tcreateDefaultGoalKpi(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\tthis.tenant,\r\n\t\t\t\tthis.organizations,\r\n\t\t\t\tthis.defaultEmployees\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tconst goals = await this.tryExecute(\r\n\t\t\t'Default Goals',\r\n\t\t\tcreateDefaultGoals(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\tthis.tenant,\r\n\t\t\t\tthis.organizations,\r\n\t\t\t\tthis.defaultEmployees\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tconst keyResults = await this.tryExecute(\r\n\t\t\t'Default Key Results',\r\n\t\t\tcreateDefaultKeyResults(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\tthis.tenant,\r\n\t\t\t\tthis.defaultEmployees,\r\n\t\t\t\tgoals\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Key Result Updates',\r\n\t\t\tcreateDefaultKeyResultUpdates(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\tthis.tenant,\r\n\t\t\t\tthis.organizations[0],\r\n\t\t\t\tkeyResults\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Key Result Progress',\r\n\t\t\tupdateDefaultKeyResultProgress(this.connection)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Goal Progress',\r\n\t\t\tupdateDefaultGoalProgress(this.connection)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Approval Policies',\r\n\t\t\tcreateDefaultApprovalPolicyForOrg(this.connection, {\r\n\t\t\t\torgs: this.organizations\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Equipment Sharing Policies',\r\n\t\t\tcreateDefaultEquipmentSharingPolicyForOrg(this.connection, {\r\n\t\t\t\torgs: this.organizations,\r\n\t\t\t\ttenant: this.tenant\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default TimeSheets',\r\n\t\t\tcreateDefaultTimeSheet(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\tthis.tenant,\r\n\t\t\t\tthis.defaultEmployees,\r\n\t\t\t\tthis.defaultProjects,\r\n\t\t\t\trandomSeedConfig.noOfTimeLogsPerTimeSheet\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Proposals',\r\n\t\t\tcreateDefaultProposals(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\tthis.tenant,\r\n\t\t\t\tthis.defaultEmployees,\r\n\t\t\t\tthis.organizations,\r\n\t\t\t\trandomSeedConfig.proposalsSharingPerOrganizations || 30\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Organization Languages',\r\n\t\t\tcreateDefaultOrganizationLanguage(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\tthis.tenant,\r\n\t\t\t\tthis.organizations\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Awards',\r\n\t\t\tcreateDefaultAwards(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\tthis.tenant,\r\n\t\t\t\tthis.organizations\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Employee Awards',\r\n\t\t\tcreateDefaultEmployeeAwards(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\tthis.tenant,\r\n\t\t\t\tthis.defaultEmployees[0]\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Invoices',\r\n\t\t\tcreateDefaultInvoice(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\tthis.tenant,\r\n\t\t\t\tthis.organizations,\r\n\t\t\t\trandomSeedConfig.numberOfInvoicePerOrganization || 50\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Invoice Items',\r\n\t\t\tcreateDefaultInvoiceItem(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\tthis.tenant,\r\n\t\t\t\tthis.organizations,\r\n\t\t\t\trandomSeedConfig.numberOfInvoiceItemPerInvoice || 5\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Payment',\r\n\t\t\tcreateDefaultPayment(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\tthis.tenant,\r\n\t\t\t\tthis.defaultEmployees,\r\n\t\t\t\tthis.organizations\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Pipelines',\r\n\t\t\tcreateDefaultPipeline(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\tthis.tenant,\r\n\t\t\t\tthis.organizations[0]\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Employee Appointment',\r\n\t\t\tcreateDefaultEmployeeAppointment(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\tthis.tenant,\r\n\t\t\t\tthis.defaultEmployees,\r\n\t\t\t\tthis.organizations[0]\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Organization Position',\r\n\t\t\tseedDefaultOrganizationPosition(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\tthis.tenant,\r\n\t\t\t\tthis.organizations[0]\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Organization Documents',\r\n\t\t\tcreateOrganizationDocuments(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\tthis.tenant,\r\n\t\t\t\tthis.organizations\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Employee TimeOff',\r\n\t\t\tcreateDefaultEmployeeTimeOff(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\tthis.tenant,\r\n\t\t\t\tthis.organizations[0],\r\n\t\t\t\tthis.defaultEmployees,\r\n\t\t\t\trandomSeedConfig.employeeTimeOffPerOrganization || 20\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Candidate Personal Qualities',\r\n\t\t\tcreateDefaultCandidatePersonalQualities(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\tthis.tenant,\r\n\t\t\t\tthis.organizations[0],\r\n\t\t\t\tdefaultCandidates\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Candidate Technologies',\r\n\t\t\tcreateDefaultCandidateTechnologies(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\tthis.tenant,\r\n\t\t\t\tthis.organizations[0],\r\n\t\t\t\tdefaultCandidates\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Candidate Criterion Rating',\r\n\t\t\tcreateDefaultCandidateCriterionRating(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\tthis.tenant,\r\n\t\t\t\tthis.organizations[0],\r\n\t\t\t\tdefaultCandidates\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Equipment Sharing',\r\n\t\t\tcreateDefaultEquipmentSharing(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\tthis.tenant,\r\n\t\t\t\tthis.organizations[0],\r\n\t\t\t\tthis.defaultEmployees,\r\n\t\t\t\trandomSeedConfig.equipmentSharingPerTenant || 20\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Organization Recurring Expense',\r\n\t\t\tcreateDefaultOrganizationRecurringExpense(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\tthis.tenant,\r\n\t\t\t\tthis.organizations[0]\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Help Center Articles',\r\n\t\t\tcreateHelpCenterArticle(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\tthis.organizations,\r\n\t\t\t\trandomSeedConfig.noOfHelpCenterArticle || 5\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Help Center Author',\r\n\t\t\tcreateDefaultHelpCenterAuthor(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\tthis.defaultEmployees\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Availability Slots',\r\n\t\t\tcreateDefaultAvailabilitySlots(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\t[this.tenant],\r\n\t\t\t\tthis.organizations[0],\r\n\t\t\t\tthis.defaultEmployees,\r\n\t\t\t\trandomSeedConfig.availabilitySlotsPerOrganization || 20\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Default Email Sent',\r\n\t\t\tcreateDefaultEmailSent(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\tthis.tenant,\r\n\t\t\t\tthis.organizations[0],\r\n\t\t\t\trandomSeedConfig.emailsPerOrganization || 20\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Populate database with random generated data\r\n\t */\r\n\tprivate async seedRandomData() {\r\n\t\t//Platform level data which only need database connection\r\n\t\tconst tenants = await createRandomTenants(\r\n\t\t\tthis.connection,\r\n\t\t\trandomSeedConfig.tenants || 1\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Feature Toggle',\r\n\t\t\tcreateRandomFeatureToggle(this.connection, tenants)\r\n\t\t);\r\n\r\n\t\t// Independent roles and role permissions for each tenant\r\n\t\tconst roles: Role[] = await createRoles(this.connection, tenants);\r\n\r\n\t\tawait createRolePermissions(this.connection, roles, tenants);\r\n\r\n\t\t//Tenant level inserts which only need connection, tenant, role\r\n\t\tconst tenantOrganizationsMap = await createRandomOrganizations(\r\n\t\t\tthis.connection,\r\n\t\t\ttenants,\r\n\t\t\trandomSeedConfig.organizationsPerTenant || 1\r\n\t\t);\r\n\r\n\t\tconst tenantSuperAdminsMap = await createRandomSuperAdminUsers(\r\n\t\t\tthis.connection,\r\n\t\t\troles,\r\n\t\t\ttenants,\r\n\t\t\t1\r\n\t\t);\r\n\r\n\t\tconst tenantUsersMap = await createRandomUsers(\r\n\t\t\tthis.connection,\r\n\t\t\troles,\r\n\t\t\ttenants,\r\n\t\t\trandomSeedConfig.organizationsPerTenant || 1,\r\n\t\t\trandomSeedConfig.employeesPerOrganization || 1,\r\n\t\t\trandomSeedConfig.candidatesPerOrganization || 1,\r\n\t\t\trandomSeedConfig.managersPerOrganization || 1,\r\n\t\t\trandomSeedConfig.dataEntriesPerOrganization || 1,\r\n\t\t\trandomSeedConfig.viewersPerOrganization || 1\r\n\t\t);\r\n\r\n\t\t//Organization level inserts which need connection, tenant, organizations, users\r\n\t\tawait createRandomUsersOrganizations(\r\n\t\t\tthis.connection,\r\n\t\t\ttenants,\r\n\t\t\ttenantOrganizationsMap,\r\n\t\t\ttenantSuperAdminsMap,\r\n\t\t\ttenantUsersMap,\r\n\t\t\trandomSeedConfig.employeesPerOrganization || 1\r\n\t\t);\r\n\r\n\t\tconst tenantEmployeeMap = await createRandomEmployees(\r\n\t\t\tthis.connection,\r\n\t\t\ttenants,\r\n\t\t\ttenantOrganizationsMap,\r\n\t\t\ttenantUsersMap,\r\n\t\t\trandomSeedConfig.employeesPerOrganization || 1\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Categories',\r\n\t\t\tcreateRandomCategories(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantOrganizationsMap\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Product Types',\r\n\t\t\tcreateRandomProductType(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantOrganizationsMap\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Products',\r\n\t\t\tcreateRandomProduct(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantOrganizationsMap\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Organization Documents',\r\n\t\t\tcreateRandomOrganizationDocuments(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantOrganizationsMap\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Product Options',\r\n\t\t\tcreateRandomProductOption(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantOrganizationsMap,\r\n\t\t\t\trandomSeedConfig.numberOfOptionPerProduct || 5\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Product Variants',\r\n\t\t\tcreateRandomProductVariant(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantOrganizationsMap,\r\n\t\t\t\trandomSeedConfig.numberOfVariantPerProduct || 5\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Product Variant Prices',\r\n\t\t\tcreateRandomProductVariantPrice(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantOrganizationsMap\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Product Variant Settings',\r\n\t\t\tcreateRandomProductVariantSettings(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantOrganizationsMap\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Incomes',\r\n\t\t\tcreateRandomIncomes(this.connection, tenants, tenantEmployeeMap)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Teams',\r\n\t\t\tcreateRandomTeam(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantOrganizationsMap,\r\n\t\t\t\troles\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tconst randomGoals = await this.tryExecute(\r\n\t\t\t'Random Goals',\r\n\t\t\tcreateRandomGoal(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantOrganizationsMap,\r\n\t\t\t\ttenantEmployeeMap\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Key Results',\r\n\t\t\tcreateRandomKeyResult(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantEmployeeMap,\r\n\t\t\t\trandomGoals\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tconst tenantCandidatesMap = await this.tryExecute(\r\n\t\t\t'Random Candidates',\r\n\t\t\tcreateRandomCandidates(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantOrganizationsMap,\r\n\t\t\t\ttenantUsersMap,\r\n\t\t\t\trandomSeedConfig.candidatesPerOrganization || 1\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Candidate Sources',\r\n\t\t\tcreateRandomCandidateSources(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantCandidatesMap\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Candidate Documents',\r\n\t\t\tcreateRandomCandidateDocuments(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantCandidatesMap\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Candidate Experiences',\r\n\t\t\tcreateRandomCandidateExperience(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantCandidatesMap\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Candidate Skills',\r\n\t\t\tcreateRandomCandidateSkills(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantCandidatesMap\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tconst organizationVendorsMap = await this.tryExecute(\r\n\t\t\t'Random Organization Vendors',\r\n\t\t\tcreateRandomOrganizationVendors(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantOrganizationsMap\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Time Off Policies',\r\n\t\t\tcreateRandomTimeOffPolicies(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantOrganizationsMap\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tconst categoriesMap = await this.tryExecute(\r\n\t\t\t'Random Expense Categories',\r\n\t\t\tcreateRandomExpenseCategories(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantOrganizationsMap\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Expenses',\r\n\t\t\tcreateRandomExpenses(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantEmployeeMap,\r\n\t\t\t\torganizationVendorsMap,\r\n\t\t\t\tcategoriesMap\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Equipments',\r\n\t\t\tcreateRandomEquipments(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\trandomSeedConfig.equipmentPerTenant || 20\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Equipment Sharing',\r\n\t\t\tcreateRandomEquipmentSharing(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantEmployeeMap,\r\n\t\t\t\trandomSeedConfig.equipmentSharingPerTenant || 20\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Employment Types',\r\n\t\t\tseedRandomEmploymentTypes(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantOrganizationsMap\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Organization Departments',\r\n\t\t\tseedRandomOrganizationDepartments(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantOrganizationsMap\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Employee Invites',\r\n\t\t\tcreateRandomEmployeeInviteSent(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantOrganizationsMap,\r\n\t\t\t\ttenantSuperAdminsMap,\r\n\t\t\t\trandomSeedConfig.invitePerOrganization || 20\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Organization Positions',\r\n\t\t\tseedRandomOrganizationPosition(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantOrganizationsMap\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Approval Policies',\r\n\t\t\tcreateRandomApprovalPolicyForOrg(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantOrganizationsMap\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Equipment Sharing Policies',\r\n\t\t\tcreateRandomEquipmentSharingPolicyForOrg(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantOrganizationsMap\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Request Approvals',\r\n\t\t\tcreateRandomRequestApproval(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantEmployeeMap,\r\n\t\t\t\trandomSeedConfig.requestApprovalPerOrganization || 20\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute('Tags', createTags(this.connection));\r\n\r\n\t\tconst tags = await this.tryExecute(\r\n\t\t\t'Random Organization Tags',\r\n\t\t\tcreateRandomOrganizationTags(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantOrganizationsMap\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Organization Projects',\r\n\t\t\tcreateRandomOrganizationProjects(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantOrganizationsMap,\r\n\t\t\t\ttags,\r\n\t\t\t\trandomSeedConfig.projectsPerOrganization || 10\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Employee Time Off',\r\n\t\t\tcreateRandomEmployeeTimeOff(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantOrganizationsMap,\r\n\t\t\t\ttenantEmployeeMap,\r\n\t\t\t\trandomSeedConfig.employeeTimeOffPerOrganization || 20\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Proposals',\r\n\t\t\tcreateRandomProposals(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantEmployeeMap,\r\n\t\t\t\ttenantOrganizationsMap,\r\n\t\t\t\trandomSeedConfig.proposalsSharingPerOrganizations || 30\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Email Sent',\r\n\t\t\tcreateRandomEmailSent(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantOrganizationsMap,\r\n\t\t\t\trandomSeedConfig.emailsPerOrganization || 20\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Tasks',\r\n\t\t\tcreateRandomTask(this.connection, tenants, this.defaultProjects)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random TimeSheets',\r\n\t\t\tcreateRandomTimesheet(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\tthis.tenant,\r\n\t\t\t\tthis.defaultProjects,\r\n\t\t\t\trandomSeedConfig.noOfTimeLogsPerTimeSheet\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tconst noOfContactsPerOrganization = 10;\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Organization Contacts',\r\n\t\t\tcreateRandomOrganizationContact(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantEmployeeMap,\r\n\t\t\t\ttenantOrganizationsMap,\r\n\t\t\t\tnoOfContactsPerOrganization\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Invoices',\r\n\t\t\tcreateRandomInvoice(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantOrganizationsMap,\r\n\t\t\t\trandomSeedConfig.numberOfInvoicePerOrganization || 50\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Invoice Items',\r\n\t\t\tcreateRandomInvoiceItem(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantOrganizationsMap,\r\n\t\t\t\trandomSeedConfig.numberOfInvoiceItemPerInvoice || 5\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Availability Slots',\r\n\t\t\tcreateRandomAvailabilitySlots(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantOrganizationsMap,\r\n\t\t\t\ttenantEmployeeMap,\r\n\t\t\t\trandomSeedConfig.availabilitySlotsPerOrganization || 20\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Payments',\r\n\t\t\tcreateRandomPayment(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantEmployeeMap,\r\n\t\t\t\ttenantOrganizationsMap\r\n\t\t\t)\r\n\t\t);\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Candidate Educations',\r\n\t\t\tcreateRandomCandidateEducations(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantCandidatesMap\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Candidate Interviews',\r\n\t\t\tcreateRandomCandidateInterview(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantCandidatesMap\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Candidate Technologies',\r\n\t\t\tcreateRandomCandidateTechnologies(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantCandidatesMap\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Candidate Personal Qualities',\r\n\t\t\tcreateRandomCandidatePersonalQualities(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantCandidatesMap\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Awards',\r\n\t\t\tcreateRandomAwards(this.connection, tenants, tenantOrganizationsMap)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Candidate Interviewers',\r\n\t\t\tcreateRandomCandidateInterviewers(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantEmployeeMap,\r\n\t\t\t\ttenantCandidatesMap\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Candidate Feedbacks',\r\n\t\t\tcreateRandomCandidateFeedbacks(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantCandidatesMap\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Employee Recurring Expenses',\r\n\t\t\tcreateRandomEmployeeRecurringExpense(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantEmployeeMap\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Employee Settings',\r\n\t\t\tcreateRandomEmployeeSetting(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantEmployeeMap\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Organization Languages',\r\n\t\t\tcreateRandomOrganizationLanguage(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantOrganizationsMap\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Organization Recurring Expenses',\r\n\t\t\tcreateRandomOrganizationRecurringExpense(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantOrganizationsMap\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Help Center Articles',\r\n\t\t\tcreateHelpCenterArticle(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\tthis.organizations,\r\n\t\t\t\trandomSeedConfig.noOfHelpCenterArticle || 5\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Organization Sprints',\r\n\t\t\tcreateRandomOrganizationSprint(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantOrganizationsMap\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Organization Team Employees',\r\n\t\t\tcreateRandomOrganizationTeamEmployee(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantEmployeeMap,\r\n\t\t\t\ttenantOrganizationsMap\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Help Center Authors',\r\n\t\t\tcreateRandomHelpCenterAuthor(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantEmployeeMap\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Appointment Employees',\r\n\t\t\tcreateRandomAppointmentEmployees(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantEmployeeMap\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Employee Appointments',\r\n\t\t\tcreateRandomEmployeeAppointment(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantEmployeeMap,\r\n\t\t\t\ttenantOrganizationsMap\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Pipelines',\r\n\t\t\tcreateRandomPipeline(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantOrganizationsMap\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Pipeline Stages',\r\n\t\t\tcreateRandomPipelineStage(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantOrganizationsMap\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Deals',\r\n\t\t\tcreateRandomDeal(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantEmployeeMap,\r\n\t\t\t\ttenantOrganizationsMap\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Integrations',\r\n\t\t\tcreateRandomIntegrationTenant(this.connection, tenants)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Integration Settings',\r\n\t\t\tcreateRandomIntegrationSetting(this.connection, tenants)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Integration Map',\r\n\t\t\tcreateRandomIntegrationMap(this.connection, tenants)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Integration Entity Settings',\r\n\t\t\tcreateRandomIntegrationEntitySetting(this.connection, tenants)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Integration Entity Settings Tied Entity',\r\n\t\t\tcreateRandomIntegrationEntitySettingTiedEntity(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Request Approval Employee',\r\n\t\t\tcreateRandomRequestApprovalEmployee(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantEmployeeMap,\r\n\t\t\t\ttenantOrganizationsMap\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Request Approval Team',\r\n\t\t\tcreateRandomRequestApprovalTeam(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantEmployeeMap,\r\n\t\t\t\ttenantOrganizationsMap\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Candidate Criterion Ratings',\r\n\t\t\tcreateRandomCandidateCriterionRating(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantCandidatesMap\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait this.tryExecute(\r\n\t\t\t'Random Event Types',\r\n\t\t\tcreateRandomEventType(\r\n\t\t\t\tthis.connection,\r\n\t\t\t\ttenants,\r\n\t\t\t\ttenantEmployeeMap,\r\n\t\t\t\ttenantOrganizationsMap\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n\r\n\tprivate async cleanUpPreviousRuns() {\r\n\t\tthis.log(chalk.green(`CLEANING UP FROM PREVIOUS RUNS...`));\r\n\r\n\t\tawait new Promise((resolve, reject) => {\r\n\t\t\tconst dir = env.isElectron\r\n\t\t\t\t? path.join(\r\n\t\t\t\t\t\tpath.resolve(env.gauzyUserPath, ...['public']),\r\n\t\t\t\t\t\t'screenshots'\r\n\t\t\t\t  )\r\n\t\t\t\t: path.join(\r\n\t\t\t\t\t\tpath.resolve('.', ...['apps', 'api', 'public']),\r\n\t\t\t\t\t\t'screenshots'\r\n\t\t\t\t  );\r\n\r\n\t\t\t// delete old generated screenshots\r\n\t\t\trimraf(dir, () => {\r\n\t\t\t\tthis.log(chalk.green(`CLEANED UP`));\r\n\t\t\t\tresolve();\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tprivate async createConnection() {\r\n\t\ttry {\r\n\t\t\tthis.connection = getConnection();\r\n\t\t} catch (error) {\r\n\t\t\tthis.log(\r\n\t\t\t\t'NOTE: DATABASE CONNECTION DOES NOT EXIST YET. NEW ONE WILL BE CREATED!'\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tif (!this.connection || !this.connection.isConnected) {\r\n\t\t\ttry {\r\n\t\t\t\tthis.log(chalk.green(`CONNECTING TO DATABASE...`));\r\n\r\n\t\t\t\tthis.connection = await createConnection({\r\n\t\t\t\t\t...env.database,\r\n\t\t\t\t\t...this.overrideDbConfig,\r\n\t\t\t\t\tentities: [\r\n\t\t\t\t\t\tpath.resolve(\r\n\t\t\t\t\t\t\t__dirname,\r\n\t\t\t\t\t\t\t'../../**',\r\n\t\t\t\t\t\t\t'**.entity{.ts,.js}'\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t]\r\n\t\t\t\t} as ConnectionOptions);\r\n\r\n\t\t\t\tthis.log(chalk.green(`CONNECTED TO DATABASE`));\r\n\t\t\t} catch (error) {\r\n\t\t\t\tthis.handleError(error, 'Unable to connect to database');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Use this wrapper function for all seed functions which are not essential.\r\n\t * Essentials seeds are ONLY those which are required to start the UI/login\r\n\t */\r\n\ttryExecute<T>(name: string, p: Promise<T>): Promise<T> | Promise<void> {\r\n\t\tthis.log(chalk.green(`SEEDING ${name}`));\r\n\r\n\t\treturn (p as any).then(\r\n\t\t\t(x: T) => x,\r\n\t\t\t(error: Error) => {\r\n\t\t\t\tthis.log(\r\n\t\t\t\t\tchalk.bgRed(\r\n\t\t\t\t\t\t`🛑 ERROR: ${error ? error.message : 'unknown'}`\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve entities metadata\r\n\t */\r\n\tprivate async getEntities() {\r\n\t\tconst entities = [];\r\n\t\ttry {\r\n\t\t\tthis.connection.entityMetadatas.forEach((entity) =>\r\n\t\t\t\tentities.push({\r\n\t\t\t\t\tname: entity.name,\r\n\t\t\t\t\ttableName: entity.tableName\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\treturn entities;\r\n\t\t} catch (error) {\r\n\t\t\tthis.handleError(error, 'Unable to retrieve database metadata');\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans all the entities\r\n\t * Removes all data from database\r\n\t */\r\n\tprivate async cleanAll(entities) {\r\n\t\ttry {\r\n\t\t\tfor (const entity of entities) {\r\n\t\t\t\tconst repository = getRepository(entity.name);\r\n\t\t\t\tlet truncateSql: string;\r\n\t\t\t\tswitch (env.database.type) {\r\n\t\t\t\t\tcase 'postgres':\r\n\t\t\t\t\t\ttruncateSql = `TRUNCATE  \"${entity.tableName}\" RESTART IDENTITY CASCADE;`;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\ttruncateSql = `DELETE FROM  \"${entity.tableName}\";`;\r\n\t\t\t\t\t\tawait repository.query('PRAGMA foreign_keys = OFF;');\r\n\t\t\t\t}\r\n\t\t\t\tawait repository.query(truncateSql);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tthis.handleError(error, 'Unable to clean database');\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Reset the database, truncate all tables (remove all data)\r\n\t */\r\n\tprivate async resetDatabase() {\r\n\t\tthis.log(chalk.green(`RESETTING DATABASE`));\r\n\r\n\t\tconst entities = await this.getEntities();\r\n\t\tawait this.cleanAll(entities);\r\n\r\n\t\tthis.log(chalk.green(`✅ RESET DATABASE SUCCESSFUL`));\r\n\t}\r\n\r\n\tprivate handleError(error: Error, message?: string): void {\r\n\t\tthis.log(\r\n\t\t\tchalk.bgRed(\r\n\t\t\t\t`🛑 ERROR: ${message ? message + '-> ' : ''} ${\r\n\t\t\t\t\terror ? error.message : ''\r\n\t\t\t\t}`\r\n\t\t\t)\r\n\t\t);\r\n\t\tthrow error;\r\n\t}\r\n}\r\n","import { sample } from 'lodash';\r\nimport { IUser } from '@gauzy/models';\r\nimport * as moment from 'moment';\r\nimport * as path from 'path';\r\nimport * as fs from 'fs';\r\nimport * as os from 'os';\r\n\r\nnamespace Utils {\r\n\texport function generatedLogoColor() {\r\n\t\treturn sample(['#269aff', '#ffaf26', '#8b72ff', '#0ecc9D']).replace(\r\n\t\t\t'#',\r\n\t\t\t''\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport const getDummyImage = (\r\n\twidth: number,\r\n\theight: number,\r\n\tletter: string\r\n) => {\r\n\treturn `https://dummyimage.com/${width}x${height}/${Utils.generatedLogoColor()}/ffffff.jpg&text=${letter}`;\r\n};\r\n\r\nexport const getUserDummyImage = (user: IUser) => {\r\n\tconst firstNameLetter = user.firstName\r\n\t\t? user.firstName.charAt(0).toUpperCase()\r\n\t\t: '';\r\n\tif (firstNameLetter) {\r\n\t\treturn getDummyImage(330, 300, firstNameLetter);\r\n\t} else {\r\n\t\tconst firstCityLetter = user.email.charAt(0).toUpperCase();\r\n\r\n\t\treturn getDummyImage(330, 300, firstCityLetter);\r\n\t}\r\n};\r\n\r\nexport function reflect(promise) {\r\n\treturn promise.then(\r\n\t\t(item) => ({ item, status: 'fulfilled' }),\r\n\t\t(error) => ({ error, status: 'rejected' })\r\n\t);\r\n}\r\n\r\n/**\r\n * To calculate the last day of a month, we need to set date=0 and month as the next month.\r\n * So, if we want the last day of February (February is month = 1) we'll need to perform 'new Date(year, 2, 0).getDate()'\r\n */\r\nexport function getLastDayOfMonth(year, month) {\r\n\treturn new Date(year, month + 1, 0).getDate();\r\n}\r\n\r\nexport function arrayToObject(array, key, value) {\r\n\treturn array.reduce((prev, current) => {\r\n\t\treturn {\r\n\t\t\t...prev,\r\n\t\t\t[current[key]]: current[value]\r\n\t\t};\r\n\t}, {});\r\n}\r\n\r\n/*\r\n * To convert unix timestamp to datetime using date format\r\n */\r\nexport function unixTimestampToDate(\r\n\ttimestamps,\r\n\tformat = 'YYYY-MM-DD HH:mm:ss'\r\n) {\r\n\tconst millisecond = 1000;\r\n\treturn moment.unix(timestamps / millisecond).format(format);\r\n}\r\n\r\n/*\r\n * To convert any datetime to any datetime format\r\n */\r\nexport function convertToDatetime(datetime, format = 'YYYY-MM-DD HH:mm:ss') {\r\n\tif (moment(datetime).isValid()) {\r\n\t\treturn moment(datetime).format(format);\r\n\t}\r\n\r\n\treturn null;\r\n}\r\n\r\nexport async function tempFile(prefix) {\r\n\tconst tempPath = path.join(os.tmpdir(), prefix);\r\n\tconst folder = await fs.promises.mkdtemp(tempPath);\r\n\treturn path.join(folder, prefix + moment().unix() + Math.random() * 10000);\r\n}\r\n","import { Controller } from '@nestjs/common';\r\nimport { ApiTags } from '@nestjs/swagger';\r\nimport { CrudController } from '../core/crud/crud.controller';\r\nimport { Country } from './country.entity';\r\nimport { CountryService } from './country.service';\r\n\r\n@ApiTags('Country')\r\n@Controller()\r\nexport class CountryController extends CrudController<Country> {\r\n\tconstructor(private readonly countryService: CountryService) {\r\n\t\tsuper(countryService);\r\n\t}\r\n}\r\n","import { ICountry } from '@gauzy/models';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsNotEmpty, IsString } from 'class-validator';\r\nimport { Column, Entity, Index } from 'typeorm';\r\nimport { Base } from '../core/entities/base';\r\n\r\n@Entity('country')\r\nexport class Country extends Base implements ICountry {\r\n\t@ApiProperty({ type: String })\r\n\t@Index()\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Column({ nullable: false })\r\n\tisoCode: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Column({ nullable: false })\r\n\tcountry: string;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { Country } from './country.entity';\r\nimport { CountryController } from './country.controller';\r\nimport { CountryService } from './country.service';\r\n\r\n@Module({\r\n\timports: [TypeOrmModule.forFeature([Country])],\r\n\tcontrollers: [CountryController],\r\n\tproviders: [CountryService],\r\n\texports: [CountryService]\r\n})\r\nexport class CountryModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { Country } from './country.entity';\r\nimport { ICountry } from '@gauzy/models';\r\nimport { DEFAULT_COUNTRIES } from './default-countries';\r\n\r\nexport const createCountries = async (\r\n\tconnection: Connection\r\n): Promise<ICountry[]> => {\r\n\treturn await new Promise<ICountry[]>(async (resolve, reject) => {\r\n\t\ttry {\r\n\t\t\tconst countries: ICountry[] = [];\r\n\t\t\tconst entries = DEFAULT_COUNTRIES;\r\n\t\t\tfor (const key of Object.keys(entries)) {\r\n\t\t\t\tif (entries.hasOwnProperty(key)) {\r\n\t\t\t\t\tconst country: ICountry = {\r\n\t\t\t\t\t\tisoCode: key,\r\n\t\t\t\t\t\tcountry: entries[key]\r\n\t\t\t\t\t};\r\n\t\t\t\t\tcountries.push(country);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tawait insertCountry(connection, countries);\r\n\t\t\tresolve(countries);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log('Error parsing country:', err);\r\n\t\t\treject(null);\r\n\t\t\treturn;\r\n\t\t}\r\n\t});\r\n};\r\n\r\nconst insertCountry = async (\r\n\tconnection: Connection,\r\n\tcountries: ICountry[]\r\n): Promise<void> => {\r\n\tawait connection\r\n\t\t.createQueryBuilder()\r\n\t\t.insert()\r\n\t\t.into(Country)\r\n\t\t.values(countries)\r\n\t\t.execute();\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { CrudService } from '../core/crud/crud.service';\r\nimport { Country } from './country.entity';\r\n\r\n@Injectable()\r\nexport class CountryService extends CrudService<Country> {\r\n\tconstructor(\r\n\t\t@InjectRepository(Country)\r\n\t\tprivate readonly countryRepository: Repository<Country>\r\n\t) {\r\n\t\tsuper(countryRepository);\r\n\t}\r\n}\r\n","export const DEFAULT_COUNTRIES = {\r\n\tAF: 'Afghanistan',\r\n\tAX: '\\u00c5land Islands',\r\n\tAL: 'Albania',\r\n\tDZ: 'Algeria',\r\n\tAS: 'American Samoa',\r\n\tAD: 'Andorra',\r\n\tAO: 'Angola',\r\n\tAI: 'Anguilla',\r\n\tAQ: 'Antarctica',\r\n\tAG: 'Antigua & Barbuda',\r\n\tAR: 'Argentina',\r\n\tAM: 'Armenia',\r\n\tAW: 'Aruba',\r\n\tAU: 'Australia',\r\n\tAT: 'Austria',\r\n\tAZ: 'Azerbaijan',\r\n\tBS: 'Bahamas',\r\n\tBH: 'Bahrain',\r\n\tBD: 'Bangladesh',\r\n\tBB: 'Barbados',\r\n\tBY: 'Belarus',\r\n\tBE: 'Belgium',\r\n\tBZ: 'Belize',\r\n\tBJ: 'Benin',\r\n\tBM: 'Bermuda',\r\n\tBT: 'Bhutan',\r\n\tBO: 'Bolivia',\r\n\tBA: 'Bosnia & Herzegovina',\r\n\tBW: 'Botswana',\r\n\tBV: 'Bouvet Island',\r\n\tBR: 'Brazil',\r\n\tIO: 'British Indian Ocean Territory',\r\n\tVG: 'British Virgin Islands',\r\n\tBN: 'Brunei',\r\n\tBG: 'Bulgaria',\r\n\tBF: 'Burkina Faso',\r\n\tBI: 'Burundi',\r\n\tKH: 'Cambodia',\r\n\tCM: 'Cameroon',\r\n\tCA: 'Canada',\r\n\tCV: 'Cape Verde',\r\n\tBQ: 'Caribbean Netherlands',\r\n\tKY: 'Cayman Islands',\r\n\tCF: 'Central African Republic',\r\n\tTD: 'Chad',\r\n\tCL: 'Chile',\r\n\tCN: 'China',\r\n\tCX: 'Christmas Island',\r\n\tCC: 'Cocos (Keeling) Islands',\r\n\tCO: 'Colombia',\r\n\tKM: 'Comoros',\r\n\tCG: 'Congo - Brazzaville',\r\n\tCD: 'Congo - Kinshasa',\r\n\tCK: 'Cook Islands',\r\n\tCR: 'Costa Rica',\r\n\tCI: 'C\\u00f4te d\\u2019Ivoire',\r\n\tHR: 'Croatia',\r\n\tCU: 'Cuba',\r\n\tCW: 'Cura\\u00e7ao',\r\n\tCY: 'Cyprus',\r\n\tCZ: 'Czechia',\r\n\tDK: 'Denmark',\r\n\tDJ: 'Djibouti',\r\n\tDM: 'Dominica',\r\n\tDO: 'Dominican Republic',\r\n\tEC: 'Ecuador',\r\n\tEG: 'Egypt',\r\n\tSV: 'El Salvador',\r\n\tGQ: 'Equatorial Guinea',\r\n\tER: 'Eritrea',\r\n\tEE: 'Estonia',\r\n\tSZ: 'Eswatini',\r\n\tET: 'Ethiopia',\r\n\tFK: 'Falkland Islands',\r\n\tFO: 'Faroe Islands',\r\n\tFJ: 'Fiji',\r\n\tFI: 'Finland',\r\n\tFR: 'France',\r\n\tGF: 'French Guiana',\r\n\tPF: 'French Polynesia',\r\n\tTF: 'French Southern Territories',\r\n\tGA: 'Gabon',\r\n\tGM: 'Gambia',\r\n\tGE: 'Georgia',\r\n\tDE: 'Germany',\r\n\tGH: 'Ghana',\r\n\tGI: 'Gibraltar',\r\n\tGR: 'Greece',\r\n\tGL: 'Greenland',\r\n\tGD: 'Grenada',\r\n\tGP: 'Guadeloupe',\r\n\tGU: 'Guam',\r\n\tGT: 'Guatemala',\r\n\tGG: 'Guernsey',\r\n\tGN: 'Guinea',\r\n\tGW: 'Guinea-Bissau',\r\n\tGY: 'Guyana',\r\n\tHT: 'Haiti',\r\n\tHM: 'Heard & McDonald Islands',\r\n\tHN: 'Honduras',\r\n\tHK: 'Hong Kong SAR China',\r\n\tHU: 'Hungary',\r\n\tIS: 'Iceland',\r\n\tIN: 'India',\r\n\tID: 'Indonesia',\r\n\tIR: 'Iran',\r\n\tIQ: 'Iraq',\r\n\tIE: 'Ireland',\r\n\tIM: 'Isle of Man',\r\n\tIL: 'Israel',\r\n\tIT: 'Italy',\r\n\tJM: 'Jamaica',\r\n\tJP: 'Japan',\r\n\tJE: 'Jersey',\r\n\tJO: 'Jordan',\r\n\tKZ: 'Kazakhstan',\r\n\tKE: 'Kenya',\r\n\tKI: 'Kiribati',\r\n\tKW: 'Kuwait',\r\n\tKG: 'Kyrgyzstan',\r\n\tLA: 'Laos',\r\n\tLV: 'Latvia',\r\n\tLB: 'Lebanon',\r\n\tLS: 'Lesotho',\r\n\tLR: 'Liberia',\r\n\tLY: 'Libya',\r\n\tLI: 'Liechtenstein',\r\n\tLT: 'Lithuania',\r\n\tLU: 'Luxembourg',\r\n\tMO: 'Macao SAR China',\r\n\tMG: 'Madagascar',\r\n\tMW: 'Malawi',\r\n\tMY: 'Malaysia',\r\n\tMV: 'Maldives',\r\n\tML: 'Mali',\r\n\tMT: 'Malta',\r\n\tMH: 'Marshall Islands',\r\n\tMQ: 'Martinique',\r\n\tMR: 'Mauritania',\r\n\tMU: 'Mauritius',\r\n\tYT: 'Mayotte',\r\n\tMX: 'Mexico',\r\n\tFM: 'Micronesia',\r\n\tMD: 'Moldova',\r\n\tMC: 'Monaco',\r\n\tMN: 'Mongolia',\r\n\tME: 'Montenegro',\r\n\tMS: 'Montserrat',\r\n\tMA: 'Morocco',\r\n\tMZ: 'Mozambique',\r\n\tMM: 'Myanmar (Burma)',\r\n\tNA: 'Namibia',\r\n\tNR: 'Nauru',\r\n\tNP: 'Nepal',\r\n\tNL: 'Netherlands',\r\n\tNC: 'New Caledonia',\r\n\tNZ: 'New Zealand',\r\n\tNI: 'Nicaragua',\r\n\tNE: 'Niger',\r\n\tNG: 'Nigeria',\r\n\tNU: 'Niue',\r\n\tNF: 'Norfolk Island',\r\n\tKP: 'North Korea',\r\n\tMK: 'North Macedonia',\r\n\tMP: 'Northern Mariana Islands',\r\n\tNO: 'Norway',\r\n\tOM: 'Oman',\r\n\tPK: 'Pakistan',\r\n\tPW: 'Palau',\r\n\tPS: 'Palestinian Territories',\r\n\tPA: 'Panama',\r\n\tPG: 'Papua New Guinea',\r\n\tPY: 'Paraguay',\r\n\tPE: 'Peru',\r\n\tPH: 'Philippines',\r\n\tPN: 'Pitcairn Islands',\r\n\tPL: 'Poland',\r\n\tPT: 'Portugal',\r\n\tPR: 'Puerto Rico',\r\n\tQA: 'Qatar',\r\n\tRE: 'R\\u00e9union',\r\n\tRO: 'Romania',\r\n\tRU: 'Russia',\r\n\tRW: 'Rwanda',\r\n\tWS: 'Samoa',\r\n\tSM: 'San Marino',\r\n\tST: 'S\\u00e3o Tom\\u00e9 & Pr\\u00edncipe',\r\n\tSA: 'Saudi Arabia',\r\n\tSN: 'Senegal',\r\n\tRS: 'Serbia',\r\n\tSC: 'Seychelles',\r\n\tSL: 'Sierra Leone',\r\n\tSG: 'Singapore',\r\n\tSX: 'Sint Maarten',\r\n\tSK: 'Slovakia',\r\n\tSI: 'Slovenia',\r\n\tSB: 'Solomon Islands',\r\n\tSO: 'Somalia',\r\n\tZA: 'South Africa',\r\n\tGS: 'South Georgia & South Sandwich Islands',\r\n\tKR: 'South Korea',\r\n\tSS: 'South Sudan',\r\n\tES: 'Spain',\r\n\tLK: 'Sri Lanka',\r\n\tBL: 'St. Barth\\u00e9lemy',\r\n\tSH: 'St. Helena',\r\n\tKN: 'St. Kitts & Nevis',\r\n\tLC: 'St. Lucia',\r\n\tMF: 'St. Martin',\r\n\tPM: 'St. Pierre & Miquelon',\r\n\tVC: 'St. Vincent & Grenadines',\r\n\tSD: 'Sudan',\r\n\tSR: 'Suriname',\r\n\tSJ: 'Svalbard & Jan Mayen',\r\n\tSE: 'Sweden',\r\n\tCH: 'Switzerland',\r\n\tSY: 'Syria',\r\n\tTW: 'Taiwan',\r\n\tTJ: 'Tajikistan',\r\n\tTZ: 'Tanzania',\r\n\tTH: 'Thailand',\r\n\tTL: 'Timor-Leste',\r\n\tTG: 'Togo',\r\n\tTK: 'Tokelau',\r\n\tTO: 'Tonga',\r\n\tTT: 'Trinidad & Tobago',\r\n\tTN: 'Tunisia',\r\n\tTR: 'Turkey',\r\n\tTM: 'Turkmenistan',\r\n\tTC: 'Turks & Caicos Islands',\r\n\tTV: 'Tuvalu',\r\n\tUM: 'U.S. Outlying Islands',\r\n\tVI: 'U.S. Virgin Islands',\r\n\tUG: 'Uganda',\r\n\tUA: 'Ukraine',\r\n\tAE: 'United Arab Emirates',\r\n\tGB: 'United Kingdom',\r\n\tUS: 'United States',\r\n\tUY: 'Uruguay',\r\n\tUZ: 'Uzbekistan',\r\n\tVU: 'Vanuatu',\r\n\tVA: 'Vatican City',\r\n\tVE: 'Venezuela',\r\n\tVN: 'Vietnam',\r\n\tWF: 'Wallis & Futuna',\r\n\tEH: 'Western Sahara',\r\n\tYE: 'Yemen',\r\n\tZM: 'Zambia',\r\n\tZW: 'Zimbabwe'\r\n};\r\n","export { CountryModule } from './country.module';\r\nexport { Country } from './country.entity';\r\nexport { CountryService } from './country.service';\r\n","import { Controller } from '@nestjs/common';\r\nimport { ApiTags } from '@nestjs/swagger';\r\nimport { CrudController } from '../core/crud/crud.controller';\r\nimport { Currency } from './currency.entity';\r\nimport { CurrencyService } from './currency.service';\r\n\r\n@ApiTags('Currency')\r\n@Controller()\r\nexport class CurrencyController extends CrudController<Currency> {\r\n\tconstructor(private readonly currencyService: CurrencyService) {\r\n\t\tsuper(currencyService);\r\n\t}\r\n}\r\n","import { ICurrency } from '@gauzy/models';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsNotEmpty, IsString } from 'class-validator';\r\nimport { Column, Entity, Index } from 'typeorm';\r\nimport { Base } from '../core/entities/base';\r\n\r\n@Entity('currency')\r\nexport class Currency extends Base implements ICurrency {\r\n\t@ApiProperty({ type: String })\r\n\t@Index()\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Column({ nullable: false })\r\n\tisoCode: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Column({ nullable: false })\r\n\tcurrency: string;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { Currency } from './currency.entity';\r\nimport { CurrencyController } from './currency.controller';\r\nimport { CurrencyService } from './currency.service';\r\n\r\n@Module({\r\n\timports: [TypeOrmModule.forFeature([Currency])],\r\n\tcontrollers: [CurrencyController],\r\n\tproviders: [CurrencyService],\r\n\texports: [CurrencyService]\r\n})\r\nexport class CurrencyModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { ICurrency, DEFAULT_CURRENCIES } from '@gauzy/models';\r\nimport { Currency } from './currency.entity';\r\n\r\nexport const createCurrencies = async (\r\n\tconnection: Connection\r\n): Promise<ICurrency[]> => {\r\n\treturn await new Promise<ICurrency[]>(async (resolve, reject) => {\r\n\t\ttry {\r\n\t\t\tconst currencies: ICurrency[] = [];\r\n\t\t\tconst entries = DEFAULT_CURRENCIES;\r\n\t\t\tfor (const key of Object.keys(entries)) {\r\n\t\t\t\tif (entries.hasOwnProperty(key)) {\r\n\t\t\t\t\tconst currency: ICurrency = {\r\n\t\t\t\t\t\tisoCode: key,\r\n\t\t\t\t\t\tcurrency: entries[key]\r\n\t\t\t\t\t};\r\n\t\t\t\t\tcurrencies.push(currency);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tawait insertCurrency(connection, currencies);\r\n\t\t\tresolve(currencies);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log('Error parsing currency:', err);\r\n\t\t\treject(null);\r\n\t\t\treturn;\r\n\t\t}\r\n\t});\r\n};\r\n\r\nconst insertCurrency = async (\r\n\tconnection: Connection,\r\n\tcurrencies: ICurrency[]\r\n): Promise<void> => {\r\n\tawait connection\r\n\t\t.createQueryBuilder()\r\n\t\t.insert()\r\n\t\t.into(Currency)\r\n\t\t.values(currencies)\r\n\t\t.execute();\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { CrudService } from '../core/crud/crud.service';\r\nimport { Currency } from './currency.entity';\r\n\r\n@Injectable()\r\nexport class CurrencyService extends CrudService<Currency> {\r\n\tconstructor(\r\n\t\t@InjectRepository(Currency)\r\n\t\tprivate readonly currencyRepository: Repository<Currency>\r\n\t) {\r\n\t\tsuper(currencyRepository);\r\n\t}\r\n}\r\n","export { CurrencyModule } from './currency.module';\r\nexport { Currency } from './currency.entity';\r\nexport { CurrencyService } from './currency.service';\r\n","import { ICustomSmtpCreateInput } from '@gauzy/models';\r\nimport { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class CustomSmtpCreateCommand implements ICommand {\r\n\tstatic readonly type = '[Custom SMTP] Create';\r\n\r\n\tconstructor(public readonly input: ICustomSmtpCreateInput) {}\r\n}\r\n","import { ICustomSmtpUpdateInput } from '@gauzy/models';\r\nimport { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class CustomSmtpUpdateCommand implements ICommand {\r\n\tstatic readonly type = '[Custom SMTP] Update';\r\n\r\n\tconstructor(public readonly input: ICustomSmtpUpdateInput) {}\r\n}\r\n","import { ICustomSmtp } from '@gauzy/models';\r\nimport { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { CustomSmtpService } from '../../custom-smtp.service';\r\nimport { CustomSmtpCreateCommand } from '../custom-smtp.create.command';\r\n\r\n@CommandHandler(CustomSmtpCreateCommand)\r\nexport class CustomSmtpCreateHandler\r\n\timplements ICommandHandler<CustomSmtpCreateCommand> {\r\n\tconstructor(private readonly customSmtpService: CustomSmtpService) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: CustomSmtpCreateCommand\r\n\t): Promise<ICustomSmtp> {\r\n\t\tconst { input } = command;\r\n\t\tdelete input['id'];\r\n\t\treturn this.customSmtpService.create(input);\r\n\t}\r\n}\r\n","import { ICustomSmtp } from '@gauzy/models';\r\nimport { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { CustomSmtpService } from '../../custom-smtp.service';\r\nimport { CustomSmtpUpdateCommand } from '../custom-smtp.update.command';\r\n\r\n@CommandHandler(CustomSmtpUpdateCommand)\r\nexport class CustomSmtpUpdateHandler\r\n\timplements ICommandHandler<CustomSmtpUpdateCommand> {\r\n\tconstructor(private readonly customSmtpService: CustomSmtpService) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: CustomSmtpUpdateCommand\r\n\t): Promise<ICustomSmtp> {\r\n\t\tconst { input } = command;\r\n\t\tconst { id } = input;\r\n\t\treturn this.customSmtpService.create({ id, ...input });\r\n\t}\r\n}\r\n","import { CustomSmtpCreateHandler } from './handlers/custom-smtp.create.handler';\r\nimport { CustomSmtpUpdateHandler } from './handlers/custom-smtp.update.handler';\r\n\r\nexport { CustomSmtpCreateCommand } from './custom-smtp.create.command';\r\nexport { CustomSmtpUpdateCommand } from './custom-smtp.update.command';\r\n\r\nexport const CommandHandlers = [\r\n\tCustomSmtpCreateHandler,\r\n\tCustomSmtpUpdateHandler\r\n];\r\n","import {\r\n\tBody,\r\n\tController,\r\n\tGet,\r\n\tHttpCode,\r\n\tHttpStatus,\r\n\tParam,\r\n\tPost,\r\n\tPut,\r\n\tQuery,\r\n\tUseGuards\r\n} from '@nestjs/common';\r\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\r\nimport { CrudController } from '../core';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { CustomSmtp } from './custom-smtp.entity';\r\nimport { CustomSmtpService } from './custom-smtp.service';\r\nimport { UUIDValidationPipe } from '../shared/pipes/uuid-validation.pipe';\r\nimport {\r\n\tICustomSmtp,\r\n\tICustomSmtpCreateInput,\r\n\tICustomSmtpFindInput,\r\n\tICustomSmtpUpdateInput\r\n} from '@gauzy/models';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\nimport { CommandBus } from '@nestjs/cqrs';\r\nimport { CustomSmtpCreateCommand, CustomSmtpUpdateCommand } from './commands';\r\nimport { ISMTPConfig } from '../../environments/ISMTPConfig';\r\n\r\n@ApiTags('CustomSmtp')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class CustomSmtpController extends CrudController<CustomSmtp> {\r\n\tconstructor(\r\n\t\tprivate readonly customSmtpService: CustomSmtpService,\r\n\t\tprivate readonly commandBus: CommandBus\r\n\t) {\r\n\t\tsuper(customSmtpService);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find smtp setting for tenant.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found tenant setting',\r\n\t\ttype: CustomSmtp\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get()\r\n\tasync tenantSmtpSetting(\r\n\t\t@Query() query: ICustomSmtpFindInput\r\n\t): Promise<ICustomSmtp | ISMTPConfig> {\r\n\t\treturn this.customSmtpService.getSmtpSetting(query);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Create new record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully created.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Post()\r\n\tasync createSmtpSetting(\r\n\t\t@Body() entity: ICustomSmtpCreateInput\r\n\t): Promise<ICustomSmtp> {\r\n\t\treturn this.commandBus.execute(new CustomSmtpCreateCommand(entity));\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Update record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully edited.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Put(':id')\r\n\tasync updateSmtpSetting(\r\n\t\t@Param('id', UUIDValidationPipe) id: string,\r\n\t\t@Body() entity: ICustomSmtpUpdateInput\r\n\t): Promise<ICustomSmtp> {\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew CustomSmtpUpdateCommand({ id, ...entity })\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Validate new record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Post('validate')\r\n\tasync validateSmtpSetting(@Body() entity: ICustomSmtpCreateInput) {\r\n\t\treturn await this.customSmtpService.verifyTransporter(entity);\r\n\t}\r\n}\r\n","import { Entity, Column } from 'typeorm';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\nimport { ICustomSmtp } from '@gauzy/models';\r\n\r\n@Entity('custom_smtp')\r\nexport class CustomSmtp extends TenantOrganizationBase implements ICustomSmtp {\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\thost: string;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@Column()\r\n\tport: number;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@Column()\r\n\tsecure: boolean;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\tusername: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\tpassword: string;\r\n\r\n\t@ApiProperty({ type: Boolean, default: false })\r\n\t@Column({ default: false })\r\n\tisValidate?: boolean;\r\n}\r\n","import { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { Module } from '@nestjs/common';\r\nimport { CustomSmtp } from './custom-smtp.entity';\r\nimport { CustomSmtpController } from './custom-smtp.controller';\r\nimport { CustomSmtpService } from './custom-smtp.service';\r\nimport { AuthModule } from '../auth/auth.module';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\nimport { CommandHandlers } from './commands';\r\nimport { CqrsModule } from '@nestjs/cqrs';\r\nimport { EmailModule } from '../email/email.module';\r\nimport { EmailService } from '../email/email.service';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([CustomSmtp]),\r\n\t\tAuthModule,\r\n\t\tTenantModule,\r\n\t\tCqrsModule,\r\n\t\tEmailModule\r\n\t],\r\n\tcontrollers: [CustomSmtpController],\r\n\tproviders: [CustomSmtpService, EmailService, ...CommandHandlers]\r\n})\r\nexport class CustomSmtpModule {}\r\n","import {\r\n\tICustomSmtp,\r\n\tICustomSmtpCreateInput,\r\n\tICustomSmtpFindInput\r\n} from '@gauzy/models';\r\nimport { forwardRef, Inject, Injectable } from '@nestjs/common';\r\nimport * as nodemailer from 'nodemailer';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { IsNull, Repository } from 'typeorm';\r\nimport { TenantAwareCrudService } from '../core/crud/tenant-aware-crud.service';\r\nimport { CustomSmtp } from './custom-smtp.entity';\r\nimport { ISMTPConfig } from '../../environments/ISMTPConfig';\r\nimport { EmailService } from '../email/email.service';\r\n@Injectable()\r\nexport class CustomSmtpService extends TenantAwareCrudService<CustomSmtp> {\r\n\tconstructor(\r\n\t\t@InjectRepository(CustomSmtp)\r\n\t\tprivate readonly customSmtpRepository: Repository<CustomSmtp>,\r\n\r\n\t\t@Inject(forwardRef(() => EmailService))\r\n\t\tprivate readonly emailService: EmailService\r\n\t) {\r\n\t\tsuper(customSmtpRepository);\r\n\t}\r\n\r\n\tasync getSmtpSetting(\r\n\t\tquery: ICustomSmtpFindInput\r\n\t): Promise<ICustomSmtp | ISMTPConfig> {\r\n\t\tconst { tenantId, organizationId } = query;\r\n\t\tconst globalSmtp = this.emailService.createSMTPTransporter();\r\n\t\ttry {\r\n\t\t\tif (!organizationId) {\r\n\t\t\t\tconst organizationSmtp = await this.customSmtpRepository.findOne(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\twhere: {\r\n\t\t\t\t\t\t\ttenantId,\r\n\t\t\t\t\t\t\torganizationId: IsNull()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t\treturn organizationSmtp || globalSmtp;\r\n\t\t\t}\r\n\t\t\tconst tenantSmtp = await this.customSmtpRepository.findOne({\r\n\t\t\t\twhere: {\r\n\t\t\t\t\ttenantId,\r\n\t\t\t\t\torganizationId: organizationId\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn tenantSmtp || globalSmtp;\r\n\t\t} catch {\r\n\t\t\treturn globalSmtp;\r\n\t\t}\r\n\t}\r\n\r\n\t// Verify connection configuration\r\n\tasync verifyTransporter(configuration: ICustomSmtpCreateInput) {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tconst transporter = nodemailer.createTransport({\r\n\t\t\t\t\thost: configuration.host,\r\n\t\t\t\t\tport: configuration.port || 587,\r\n\t\t\t\t\tsecure: configuration.secure || false, // use TLS\r\n\t\t\t\t\tauth: {\r\n\t\t\t\t\t\tuser: configuration.username,\r\n\t\t\t\t\t\tpass: configuration.password\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\ttransporter.verify(function (error, success) {\r\n\t\t\t\t\tif (error) {\r\n\t\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t\t\treject(false);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.log('Server is ready to take our messages');\r\n\t\t\t\t\t\tresolve(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t} catch (error) {\r\n\t\t\t\treject(false);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n","import {\r\n\tController,\r\n\tGet,\r\n\tHttpStatus,\r\n\tParam,\r\n\tQuery,\r\n\tUseGuards\r\n} from '@nestjs/common';\r\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { CrudController, IPagination } from '../core/crud';\r\nimport { Deal } from './deal.entity';\r\nimport { DealService } from './deal.service';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\nimport { ParseJsonPipe } from '../shared/pipes/parse-json.pipe';\r\n\r\n@ApiTags('Deal')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class DealController extends CrudController<Deal> {\r\n\tpublic constructor(private readonly dealService: DealService) {\r\n\t\tsuper(dealService);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find all deals' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found records'\r\n\t})\r\n\t@Get()\r\n\tpublic async findAll(\r\n\t\t@Query('data', ParseJsonPipe) data: any\r\n\t): Promise<IPagination<Deal>> {\r\n\t\tconst { relations = [], findInput: where = null } = data;\r\n\t\treturn this.dealService.findAll({\r\n\t\t\trelations,\r\n\t\t\twhere\r\n\t\t});\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find one deal' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found record'\r\n\t})\r\n\t@Get(':id')\r\n\tpublic async getOne(\r\n\t\t@Param('id') id: string,\r\n\t\t@Query('data', ParseJsonPipe) data: any\r\n\t): Promise<Deal> {\r\n\t\tconst { relations = [], findInput: where = null } = data;\r\n\t\treturn await this.dealService.findOne(id, {\r\n\t\t\trelations,\r\n\t\t\twhere\r\n\t\t});\r\n\t}\r\n}\r\n","import {\r\n\tIDeal,\r\n\tIUser,\r\n\tIPipelineStage,\r\n\tIOrganizationContact\r\n} from '@gauzy/models';\r\nimport { User } from '../user/user.entity';\r\nimport {\r\n\tColumn,\r\n\tEntity,\r\n\tJoinColumn,\r\n\tManyToOne,\r\n\tRelationId,\r\n\tOneToOne\r\n} from 'typeorm';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport {\r\n\tIsNotEmpty,\r\n\tIsString,\r\n\tMin,\r\n\tMax,\r\n\tIsInt,\r\n\tIsOptional\r\n} from 'class-validator';\r\nimport { PipelineStage } from '../pipeline-stage/pipeline-stage.entity';\r\nimport { OrganizationContact } from '../organization-contact/organization-contact.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('deal')\r\nexport class Deal extends TenantOrganizationBase implements IDeal {\r\n\t@ApiProperty({ type: String })\r\n\t@IsNotEmpty()\r\n\t@IsString()\r\n\t@Column()\r\n\tpublic createdByUserId: string;\r\n\r\n\t@JoinColumn({ name: 'createdByUserId' })\r\n\t@ManyToOne(() => User)\r\n\t@ApiProperty({ type: User })\r\n\tpublic createdBy: IUser;\r\n\r\n\t@RelationId(({ stage }: Deal) => stage)\r\n\t@ApiProperty({ type: String })\r\n\t@IsNotEmpty()\r\n\t@IsString()\r\n\t@Column()\r\n\tpublic stageId: string;\r\n\r\n\t@ManyToOne(() => PipelineStage, { onDelete: 'CASCADE' })\r\n\t@ApiProperty({ type: PipelineStage })\r\n\t@JoinColumn()\r\n\tpublic stage: IPipelineStage;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsOptional()\r\n\t@IsString()\r\n\t@Column({ nullable: true })\r\n\tpublic clientId: string;\r\n\r\n\t@OneToOne(() => OrganizationContact, { onDelete: 'CASCADE' })\r\n\t@ApiProperty({ type: OrganizationContact })\r\n\t@JoinColumn()\r\n\tpublic client: IOrganizationContact;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsNotEmpty()\r\n\t@IsString()\r\n\t@Column()\r\n\tpublic title: string;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@IsOptional()\r\n\t@IsInt()\r\n\t@Min(0)\r\n\t@Max(5)\r\n\t@Column()\r\n\tpublic probability?: number;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { Deal } from './deal.entity';\r\nimport { StageModule } from '../pipeline-stage/pipeline-stage.module';\r\nimport { AuthModule } from '../auth/auth.module';\r\nimport { DealController } from './deal.controller';\r\nimport { DealService } from './deal.service';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([Deal]),\r\n\t\tStageModule,\r\n\t\tAuthModule,\r\n\t\tTenantModule\r\n\t],\r\n\tcontrollers: [DealController],\r\n\tproviders: [DealService],\r\n\texports: [DealService]\r\n})\r\nexport class DealModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { IEmployee, IOrganization } from '@gauzy/models';\r\nimport { Deal } from './deal.entity';\r\nimport * as faker from 'faker';\r\nimport { Pipeline } from '../pipeline/pipeline.entity';\r\nimport { PipelineStage } from '../pipeline-stage/pipeline-stage.entity';\r\n\r\nexport const createRandomDeal = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantEmployeeMap: Map<Tenant, IEmployee[]>,\r\n\ttenantOrganizationsMap: Map<Tenant, IOrganization[]>\r\n): Promise<Deal[]> => {\r\n\tif (!tenantEmployeeMap) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: tenantEmployeeMap not found, deal  will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\tif (!tenantOrganizationsMap) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: tenantOrganizationsMap not found, deal  will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst deals: Deal[] = [];\r\n\r\n\tfor (const tenant of tenants) {\r\n\t\tconst tenantEmployees = tenantEmployeeMap.get(tenant);\r\n\t\tconst tenantOrgs = tenantOrganizationsMap.get(tenant);\r\n\r\n\t\tfor (const tenantEmployee of tenantEmployees) {\r\n\t\t\tfor (const tenantOrg of tenantOrgs) {\r\n\t\t\t\tconst pipelines = await connection.manager.find(Pipeline, {\r\n\t\t\t\t\twhere: [{ organization: tenantOrg }]\r\n\t\t\t\t});\r\n\t\t\t\tfor (const pipeline of pipelines) {\r\n\t\t\t\t\tconst pipelineStages = await connection.manager.find(\r\n\t\t\t\t\t\tPipelineStage,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\twhere: [{ pipeline: pipeline }]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t\tfor (const pipelineStage of pipelineStages) {\r\n\t\t\t\t\t\tconst deal = new Deal();\r\n\r\n\t\t\t\t\t\tdeal.createdBy = tenantEmployee.user;\r\n\t\t\t\t\t\tdeal.stage = pipelineStage;\r\n\t\t\t\t\t\tdeal.title = faker.name.jobTitle();\r\n\t\t\t\t\t\tdeal.createdByUserId = tenantEmployee.user.id;\r\n\t\t\t\t\t\tdeal.stageId = pipelineStage.id;\r\n\t\t\t\t\t\tdeal.organization = tenantOrg;\r\n\t\t\t\t\t\tdeal.probability = faker.random.number(5);\r\n\t\t\t\t\t\tdeal.tenant = tenant;\r\n\r\n\t\t\t\t\t\tdeals.push(deal);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tawait connection.manager.save(deals);\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { TenantAwareCrudService } from '../core/crud';\r\nimport { Deal } from './deal.entity';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\n\r\n@Injectable()\r\nexport class DealService extends TenantAwareCrudService<Deal> {\r\n\tpublic constructor(\r\n\t\t@InjectRepository(Deal)\r\n\t\tdealRepository: Repository<Deal>\r\n\t) {\r\n\t\tsuper(dealRepository);\r\n\t}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { IEmailTemplateSaveInput } from '@gauzy/models';\r\n\r\nexport class EmailTemplateSaveCommand implements ICommand {\r\n\tstatic readonly type = '[EmailTemplate] Save';\r\n\r\n\tconstructor(public readonly input: IEmailTemplateSaveInput) {}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { EmailTemplateSaveCommand } from '../email-template.save.command';\r\nimport { EmailTemplateService } from '../../email-template.service';\r\nimport { EmailTemplate } from '../../email-template.entity';\r\nimport { LanguagesEnum, EmailTemplateNameEnum } from '@gauzy/models';\r\nimport * as mjml2html from 'mjml';\r\nimport { BadRequestException } from '@nestjs/common';\r\n\r\n@CommandHandler(EmailTemplateSaveCommand)\r\nexport class EmailTemplateSaveHandler\r\n\timplements ICommandHandler<EmailTemplateSaveCommand> {\r\n\tconstructor(private readonly emailTemplateService: EmailTemplateService) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: EmailTemplateSaveCommand\r\n\t): Promise<EmailTemplate> {\r\n\t\tconst {\r\n\t\t\tinput: {\r\n\t\t\t\tlanguageCode,\r\n\t\t\t\tname,\r\n\t\t\t\torganizationId,\r\n\t\t\t\ttenantId,\r\n\t\t\t\tmjml,\r\n\t\t\t\tsubject\r\n\t\t\t}\r\n\t\t} = command;\r\n\r\n\t\ttry {\r\n\t\t\tawait this._saveTemplate(\r\n\t\t\t\tlanguageCode,\r\n\t\t\t\tname,\r\n\t\t\t\torganizationId,\r\n\t\t\t\ttenantId,\r\n\t\t\t\tmjml,\r\n\t\t\t\t'html'\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\t// TODO add translation\r\n\t\t\tthrow new BadRequestException('Invalid html template');\r\n\t\t}\r\n\r\n\t\treturn this._saveTemplate(\r\n\t\t\tlanguageCode,\r\n\t\t\tname,\r\n\t\t\torganizationId,\r\n\t\t\ttenantId,\r\n\t\t\tsubject,\r\n\t\t\t'subject'\r\n\t\t);\r\n\t}\r\n\r\n\tprivate async _saveTemplate(\r\n\t\tlanguageCode: LanguagesEnum,\r\n\t\tname: EmailTemplateNameEnum,\r\n\t\torganizationId: string,\r\n\t\ttenantId: string,\r\n\t\tcontent: string,\r\n\t\ttype: 'html' | 'subject'\r\n\t): Promise<EmailTemplate> {\r\n\t\tconst {\r\n\t\t\tsuccess: found,\r\n\t\t\trecord\r\n\t\t}: {\r\n\t\t\tsuccess: boolean;\r\n\t\t\trecord?: EmailTemplate;\r\n\t\t} = await this.emailTemplateService.findOneOrFail({\r\n\t\t\tlanguageCode,\r\n\t\t\tname: `${name}/${type}`,\r\n\t\t\torganizationId,\r\n\t\t\ttenantId\r\n\t\t});\r\n\r\n\t\tlet entity: EmailTemplate;\r\n\t\tif (found) {\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase 'subject':\r\n\t\t\t\t\tentity = {\r\n\t\t\t\t\t\t...record,\r\n\t\t\t\t\t\thbs: content\r\n\t\t\t\t\t};\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'html':\r\n\t\t\t\t\tentity = {\r\n\t\t\t\t\t\t...record,\r\n\t\t\t\t\t\tmjml: content,\r\n\t\t\t\t\t\thbs: mjml2html(content).html\r\n\t\t\t\t\t};\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tawait this.emailTemplateService.update(record.id, entity);\r\n\t\t} else {\r\n\t\t\tentity = new EmailTemplate();\r\n\t\t\tentity.organizationId = organizationId;\r\n\t\t\tentity.tenantId = tenantId;\r\n\t\t\tentity.languageCode = languageCode;\r\n\t\t\tentity.name = `${name}/${type}`;\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase 'subject':\r\n\t\t\t\t\tentity.hbs = content;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'html':\r\n\t\t\t\t\tentity.mjml = content;\r\n\t\t\t\t\tentity.hbs = mjml2html(content).html;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tawait this.emailTemplateService.create(entity);\r\n\t\t}\r\n\t\treturn entity;\r\n\t}\r\n}\r\n","import { EmailTemplateSaveHandler } from './email-template.save.handler';\r\n\r\nexport const CommandHandlers = [EmailTemplateSaveHandler];\r\n","export { EmailTemplateSaveCommand } from './email-template.save.command';\r\n","import {\r\n\tICustomizableEmailTemplate,\r\n\tICustomizeEmailTemplateFindInput,\r\n\tIEmailTemplateSaveInput\r\n} from '@gauzy/models';\r\nimport {\r\n\tBody,\r\n\tController,\r\n\tGet,\r\n\tHttpStatus,\r\n\tPost,\r\n\tQuery,\r\n\tUseGuards\r\n} from '@nestjs/common';\r\nimport { QueryBus, CommandBus } from '@nestjs/cqrs';\r\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\r\nimport { CrudController } from '../core/crud/crud.controller';\r\nimport { EmailTemplate } from './email-template.entity';\r\nimport { EmailTemplateService } from './email-template.service';\r\nimport {\r\n\tEmailTemplateGeneratePreviewQuery,\r\n\tFindEmailTemplateQuery\r\n} from './queries';\r\nimport { EmailTemplateSaveCommand } from './commands';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('EmailTemplate')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class EmailTemplateController extends CrudController<EmailTemplate> {\r\n\tconstructor(\r\n\t\tprivate readonly emailTemplateService: EmailTemplateService,\r\n\t\tprivate readonly queryBus: QueryBus,\r\n\t\tprivate readonly commandBus: CommandBus\r\n\t) {\r\n\t\tsuper(emailTemplateService);\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary:\r\n\t\t\t'Find email template by name and language code for organization'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found email template',\r\n\t\ttype: EmailTemplate\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get('findTemplate')\r\n\tasync findEmailTemplate(\r\n\t\t@Query('data') data: string\r\n\t): Promise<ICustomizableEmailTemplate> {\r\n\t\tconst {\r\n\t\t\tfindInput\r\n\t\t}: { findInput: ICustomizeEmailTemplateFindInput } = JSON.parse(data);\r\n\t\treturn this.queryBus.execute(new FindEmailTemplateQuery(findInput));\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Converts mjml or handlebar text to html for email preview'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'text converted to html',\r\n\t\ttype: EmailTemplate\r\n\t})\r\n\t@Post('emailPreview')\r\n\tasync generateEmailPreview(\r\n\t\t@Body('data') data: string\r\n\t): Promise<ICustomizableEmailTemplate> {\r\n\t\treturn this.queryBus.execute(\r\n\t\t\tnew EmailTemplateGeneratePreviewQuery(data)\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Convert mjml or handlebar text to html'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'mjml or handlebar text converted to html',\r\n\t\ttype: EmailTemplate\r\n\t})\r\n\t@Post('saveTemplate')\r\n\tasync saveEmailTemplate(\r\n\t\t@Body('data') data: IEmailTemplateSaveInput\r\n\t): Promise<EmailTemplate> {\r\n\t\treturn this.commandBus.execute(new EmailTemplateSaveCommand(data));\r\n\t}\r\n}\r\n","import { IEmailTemplate } from '@gauzy/models';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsNotEmpty, IsString, IsOptional } from 'class-validator';\r\nimport { Column, Entity, Index } from 'typeorm';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('email_template')\r\nexport class EmailTemplate extends TenantOrganizationBase\r\n\timplements IEmailTemplate {\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Index()\r\n\t@Column()\r\n\tname: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Index()\r\n\t@Column()\r\n\tlanguageCode: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@Column({ nullable: true })\r\n\t@IsOptional()\r\n\tmjml: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Column()\r\n\thbs: string;\r\n}\r\n","import { forwardRef, Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { EmailTemplate } from './email-template.entity';\r\nimport { EmailTemplateService } from './email-template.service';\r\nimport { EmailTemplateController } from './email-template.controller';\r\nimport { QueryHandlers } from './queries/handlers';\r\nimport { CommandHandlers } from './commands/handlers';\r\nimport { CqrsModule } from '@nestjs/cqrs';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tforwardRef(() => TypeOrmModule.forFeature([EmailTemplate])),\r\n\t\tCqrsModule,\r\n\t\tforwardRef(() => TenantModule)\r\n\t],\r\n\tcontrollers: [EmailTemplateController],\r\n\tproviders: [EmailTemplateService, ...QueryHandlers, ...CommandHandlers],\r\n\texports: [TypeOrmModule, EmailTemplateService]\r\n})\r\nexport class EmailTemplateModule {}\r\n","import * as fs from 'fs';\r\nimport { Connection } from 'typeorm';\r\nimport { EmailTemplate } from './email-template.entity';\r\nimport * as mjml2html from 'mjml';\r\nimport * as path from 'path';\r\n/**\r\n * Note: This seed file assumes the following directory structure in seeds/data/email/default-email-templates/ folder\r\n *\r\n * [template-name] / [language-code] / [template-type].mjml\r\n *\r\n * template-name: Is the name of the template\r\n * language-code: Is the ISO language code lik bg, en, he, ru\r\n * template-type: Can be 'html', 'subject' or 'text' but needs to only have .hbs or .mjml extension\r\n */\r\nexport const createDefaultEmailTemplates = async (\r\n\tconnection: Connection\r\n): Promise<any> => {\r\n\ttry {\r\n\t\tconst templatePath = [\r\n\t\t\t'apps',\r\n\t\t\t'api',\r\n\t\t\t'src',\r\n\t\t\t'app',\r\n\t\t\t'core',\r\n\t\t\t'seeds',\r\n\t\t\t'data',\r\n\t\t\t'default-email-templates'\r\n\t\t];\r\n\t\tconst files = [];\r\n\t\tlet FOLDER_PATH = path.resolve('.', ...templatePath);\r\n\r\n\t\tFOLDER_PATH = fs.existsSync(FOLDER_PATH)\r\n\t\t\t? FOLDER_PATH\r\n\t\t\t: path.resolve('.', ...templatePath.slice(2));\r\n\r\n\t\tfindInDir(FOLDER_PATH, files);\r\n\t\tconsole.log(files);\r\n\t\tawait fileToTemplate(connection, files);\r\n\t} catch (error) {\r\n\t\t// it's not a big issue for now if we can't create email templates\r\n\t\tconsole.error(error);\r\n\t}\r\n};\r\n\r\nfunction findInDir(dir, fileList = []) {\r\n\tconst files = fs.readdirSync(dir);\r\n\r\n\tfiles.forEach((file) => {\r\n\t\tconst filePath = path.join(dir, file);\r\n\t\tconst fileStat = fs.lstatSync(filePath);\r\n\r\n\t\tif (fileStat.isDirectory()) {\r\n\t\t\tfindInDir(filePath, fileList);\r\n\t\t} else {\r\n\t\t\tfileList.push(filePath);\r\n\t\t}\r\n\t});\r\n}\r\n\r\nconst fileToTemplate = async (connection, files) => {\r\n\tfor (const file of files) {\r\n\t\tconst template = await pathToEmailTemplate(file);\r\n\t\tif (template && template.hbs) {\r\n\t\t\tawait insertTemplate(connection, template);\r\n\t\t}\r\n\t}\r\n};\r\n\r\nconst insertTemplate = async (\r\n\tconnection: Connection,\r\n\temailTemplate: EmailTemplate\r\n): Promise<void> => {\r\n\tawait connection\r\n\t\t.createQueryBuilder()\r\n\t\t.insert()\r\n\t\t.into(EmailTemplate)\r\n\t\t.values(emailTemplate)\r\n\t\t.execute();\r\n};\r\n\r\nconst pathToEmailTemplate = async (\r\n\tfullPath: string\r\n): Promise<EmailTemplate> => {\r\n\ttry {\r\n\t\tconst template = new EmailTemplate();\r\n\t\t//default template access for tenant organizations\r\n\r\n\t\tconst templatePath = fullPath.replace(/\\\\/g, '/').split('/');\r\n\t\tconst fileName = templatePath[templatePath.length - 1].split('.', 2);\r\n\t\tconst fileExtension = fileName[1];\r\n\t\tconst fileNameWithoutExtension = fileName[0];\r\n\t\ttemplate.languageCode = templatePath[templatePath.length - 2];\r\n\t\ttemplate.name = `${\r\n\t\t\ttemplatePath[templatePath.length - 3]\r\n\t\t}/${fileNameWithoutExtension}`;\r\n\t\tconst fileContent = fs.readFileSync(fullPath, 'utf8');\r\n\r\n\t\tswitch (fileExtension) {\r\n\t\t\tcase 'mjml':\r\n\t\t\t\ttemplate.mjml = fileContent;\r\n\t\t\t\ttemplate.hbs = mjml2html(fileContent).html;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'hbs':\r\n\t\t\t\ttemplate.hbs = fileContent;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t`Warning: ${path} Will be ignored. Only .hbs and .mjml files are supported!`\r\n\t\t\t\t);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tif (!template.hbs) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\treturn template;\r\n\t} catch (error) {\r\n\t\tconsole.log('Something went wrong', path, error);\r\n\t\treturn;\r\n\t}\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { CrudService } from '../core';\r\nimport { EmailTemplate as IEmailTemplate } from './email-template.entity';\r\n\r\n@Injectable()\r\nexport class EmailTemplateService extends CrudService<IEmailTemplate> {\r\n\tconstructor(\r\n\t\t@InjectRepository(IEmailTemplate)\r\n\t\tprivate readonly emailRepository: Repository<IEmailTemplate>\r\n\t) {\r\n\t\tsuper(emailRepository);\r\n\t}\r\n}\r\n","export { EmailTemplate } from './email-template.entity';\r\nexport { EmailTemplateModule } from './email-template.module';\r\nexport { EmailTemplateService } from './email-template.service';\r\n","import { ICustomizeEmailTemplateFindInput } from '@gauzy/models';\r\nimport { IQuery } from '@nestjs/cqrs';\r\n\r\nexport class FindEmailTemplateQuery implements IQuery {\r\n\tstatic readonly type = '[EmailTemplate] Find';\r\n\r\n\tconstructor(public readonly input: ICustomizeEmailTemplateFindInput) {}\r\n}\r\n","import { IQuery } from '@nestjs/cqrs';\r\n\r\nexport class EmailTemplateGeneratePreviewQuery implements IQuery {\r\n\tstatic readonly type = '[EmailTemplate] GeneratePreview';\r\n\r\n\tconstructor(public readonly input: string) {}\r\n}\r\n","import { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\r\nimport { EmailTemplateService } from '../../email-template.service';\r\nimport { FindEmailTemplateQuery } from '../email-template.find.query';\r\nimport {\r\n\tICustomizableEmailTemplate,\r\n\tLanguagesEnum,\r\n\tEmailTemplateNameEnum\r\n} from '@gauzy/models';\r\nimport { IsNull } from 'typeorm';\r\n\r\n@QueryHandler(FindEmailTemplateQuery)\r\nexport class FindEmailTemplateHandler\r\n\timplements IQueryHandler<FindEmailTemplateQuery> {\r\n\tconstructor(private readonly emailTemplateService: EmailTemplateService) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: FindEmailTemplateQuery\r\n\t): Promise<ICustomizableEmailTemplate> {\r\n\t\tconst {\r\n\t\t\tinput: { languageCode, name, organizationId, tenantId }\r\n\t\t} = command;\r\n\r\n\t\tconst emailTemplate: ICustomizableEmailTemplate = {\r\n\t\t\tsubject: '',\r\n\t\t\ttemplate: ''\r\n\t\t};\r\n\r\n\t\t[emailTemplate.subject, emailTemplate.template] = await Promise.all([\r\n\t\t\tthis._fetchTemplate(\r\n\t\t\t\tlanguageCode,\r\n\t\t\t\tname,\r\n\t\t\t\torganizationId,\r\n\t\t\t\ttenantId,\r\n\t\t\t\t'subject'\r\n\t\t\t),\r\n\t\t\tthis._fetchTemplate(\r\n\t\t\t\tlanguageCode,\r\n\t\t\t\tname,\r\n\t\t\t\torganizationId,\r\n\t\t\t\ttenantId,\r\n\t\t\t\t'html'\r\n\t\t\t)\r\n\t\t]);\r\n\r\n\t\treturn emailTemplate;\r\n\t}\r\n\r\n\tprivate async _fetchTemplate(\r\n\t\tlanguageCode: LanguagesEnum,\r\n\t\tname: EmailTemplateNameEnum,\r\n\t\torganizationId: string,\r\n\t\ttenantId: string,\r\n\t\ttype: 'html' | 'subject'\r\n\t): Promise<string> {\r\n\t\tlet subject = '';\r\n\t\tlet template = '';\r\n\t\ttry {\r\n\t\t\t// Find customized email template for given organization\r\n\t\t\tconst { hbs, mjml } = await this.emailTemplateService.findOne({\r\n\t\t\t\tlanguageCode,\r\n\t\t\t\tname: `${name}/${type}`,\r\n\t\t\t\torganizationId,\r\n\t\t\t\ttenantId\r\n\t\t\t});\r\n\t\t\tsubject = hbs;\r\n\t\t\ttemplate = mjml;\r\n\t\t} catch (error) {\r\n\t\t\t// If no email template present for given organization, use default email template\r\n\t\t\tconst { hbs, mjml } = await this.emailTemplateService.findOne({\r\n\t\t\t\tlanguageCode,\r\n\t\t\t\tname: `${name}/${type}`,\r\n\t\t\t\torganizationId: IsNull(),\r\n\t\t\t\ttenantId: IsNull()\r\n\t\t\t});\r\n\t\t\tsubject = hbs;\r\n\t\t\ttemplate = mjml;\r\n\t\t}\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase 'subject':\r\n\t\t\t\treturn subject;\r\n\t\t\tcase 'html':\r\n\t\t\t\treturn template;\r\n\t\t}\r\n\t}\r\n}\r\n","import { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\r\nimport * as Handlebars from 'handlebars';\r\nimport * as mjml2html from 'mjml';\r\nimport { EmailTemplateService } from '../../email-template.service';\r\nimport { EmailTemplateGeneratePreviewQuery } from '../email-template.generate-preview.query';\r\nimport { moment } from '../../../core/moment-extend';\r\n\r\n@QueryHandler(EmailTemplateGeneratePreviewQuery)\r\nexport class EmailTemplateGeneratePreviewHandler\r\n\timplements IQueryHandler<EmailTemplateGeneratePreviewQuery> {\r\n\tconstructor(private readonly emailTemplateService: EmailTemplateService) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: EmailTemplateGeneratePreviewQuery\r\n\t): Promise<{ html: string }> {\r\n\t\tconst { input } = command;\r\n\t\tlet textToHtml = input;\r\n\r\n\t\ttry {\r\n\t\t\tconst mjmlTohtml = mjml2html(input);\r\n\t\t\ttextToHtml = mjmlTohtml.errors.length ? input : mjmlTohtml.html;\r\n\t\t} catch (error) {\r\n\t\t\t// ignore mjml conversion errors for non-mjml text such as subject\r\n\t\t}\r\n\r\n\t\tconst handlebarsTemplate = Handlebars.compile(textToHtml);\r\n\t\tconst html = handlebarsTemplate({\r\n\t\t\torganizationName: 'Organization',\r\n\t\t\temail: 'user@domain.com',\r\n\t\t\tname: 'John Doe',\r\n\t\t\trole: 'USER_ROLE',\r\n\t\t\thost: 'Alish Meklyov',\r\n\t\t\thostEmail: '(alish@ever.com)',\r\n\t\t\tagenda: 'This booking is for gauzy call',\r\n\t\t\tdescription: 'This is a test appointment booking',\r\n\t\t\tparticipantEmails: 'kdashora@gmail.com,testmail@hotmail.com',\r\n\t\t\tlocation: 'zoom.us',\r\n\t\t\tduration: 'Fri, Jul 24, 2020 6:00 AM - Fri, Jul 24, 2020 6:15 AM',\r\n\t\t\tcandidateName: 'Alex',\r\n\t\t\tdate: 'Thursday, August 27, 2020',\r\n\t\t\tinterviewerName: 'John Doe',\r\n\t\t\ttotal_hours: '16',\r\n\t\t\taverage_activates: '25',\r\n\t\t\tlog_type: 'tracked',\r\n\t\t\tprojects: ['Gauzy Web Site', 'Gauzy Platform(open-source)'],\r\n\t\t\tproject: 'Gauzy Web Site',\r\n\t\t\ttimesheet_action: 'APPROVE/REJECT',\r\n\t\t\tequipment_status: 'APPROVE/REJECT',\r\n\t\t\treason: 'reason for this',\r\n\t\t\tequipment_name: 'Fiat Freemont',\r\n\t\t\tequipment_type: 'Car',\r\n\t\t\tequipment_serial_number: 'CB0950AT',\r\n\t\t\tmanufactured_year: '2015',\r\n\t\t\tinitial_cost: '40000',\r\n\t\t\tcurrency: 'BGN',\r\n\t\t\tmax_share_period: '5',\r\n\t\t\tautoApproveShare: false,\r\n\t\t\ttime_off_policy_requires_approval: 'APPROVE/REJECT',\r\n\t\t\ttime_off_policy_paid_status: true,\r\n\t\t\ttask_update_status: 'Update/Assign',\r\n\t\t\ttask_update_title: 'Bug: Consistency in \"Time Off\" feature',\r\n\t\t\ttask_update_description:\r\n\t\t\t\t'\"Time off\" should be called \"Time Off\" everywhere. \\n' +\r\n\t\t\t\t'Fix \"Request Days Off\" and change it to just \"Request\". \\n' +\r\n\t\t\t\t'Also, check all popups, etc. that it is called \"Time Off\" (not \"Day off\" or anything else) everywhere.\\n' +\r\n\t\t\t\t'\\n' +\r\n\t\t\t\t'![Artboard](https://user-images.githubusercontent.com/6750734/88939490-33939180-d2a4-11ea-8d13-3efed87a7846.png)\\n',\r\n\t\t\ttask_update_estimate: 'estimate',\r\n\t\t\ttask_update_due_date: moment(new Date()).add(10, 'days').toDate(),\r\n\t\t\ttask_status: 'In Progress',\r\n\t\t\ttask_update_project: 'Gauzy Project',\r\n\t\t\ttask_update_assign_by: 'Ruslan Konviser',\r\n\t\t\ttask_update_url: 'https://github.com/ever-co/gauzy/issues/1688'\r\n\t\t});\r\n\t\treturn { html };\r\n\t}\r\n}\r\n","import { FindEmailTemplateHandler } from './email-template.find.handler';\r\nimport { EmailTemplateGeneratePreviewHandler } from './email-template.generate-preview.handler';\r\n\r\nexport const QueryHandlers = [\r\n\tFindEmailTemplateHandler,\r\n\tEmailTemplateGeneratePreviewHandler\r\n];\r\n","export { FindEmailTemplateQuery } from './email-template.find.query';\r\nexport { EmailTemplateGeneratePreviewQuery } from './email-template.generate-preview.query';\r\n","import {\r\n\tController,\r\n\tHttpStatus,\r\n\tGet,\r\n\tQuery,\r\n\tUseGuards,\r\n\tBody,\r\n\tParam,\r\n\tPut,\r\n\tHttpCode\r\n} from '@nestjs/common';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport { CrudController } from '../core/crud/crud.controller';\r\nimport { Email } from './email.entity';\r\nimport { EmailService } from './email.service';\r\nimport { IPagination } from '../core';\r\nimport { ParseJsonPipe } from '../shared';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('Email')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class EmailController extends CrudController<Email> {\r\n\tconstructor(private readonly emailService: EmailService) {\r\n\t\tsuper(emailService);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find all emails.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found emails',\r\n\t\ttype: Email\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'No records found'\r\n\t})\r\n\t@Get()\r\n\tasync findAllEmails(\r\n\t\t@Query('data', ParseJsonPipe) data: any\r\n\t): Promise<IPagination<Email>> {\r\n\t\tconst { relations, findInput, take } = data;\r\n\r\n\t\tconst response = await this.emailService.findAll({\r\n\t\t\twhere: findInput,\r\n\t\t\trelations,\r\n\t\t\torder: {\r\n\t\t\t\tcreatedAt: 'DESC'\r\n\t\t\t},\r\n\t\t\ttake: take\r\n\t\t});\r\n\r\n\t\tresponse.items.forEach((email) => {\r\n\t\t\tconst name = email.emailTemplate.name;\r\n\t\t\temail.emailTemplate.name = name.split('/')[0].split('-').join(' ');\r\n\t\t});\r\n\r\n\t\treturn response;\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Update an existing record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully edited.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Put(':id')\r\n\tasync update(@Param('id') id: string, @Body() entity: Email): Promise<any> {\r\n\t\treturn this.emailService.update(id, entity);\r\n\t}\r\n}\r\n","import { IEmail, IEmailTemplate, IUser } from '@gauzy/models';\r\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\r\nimport { IsBoolean, IsNotEmpty, IsString } from 'class-validator';\r\nimport { Column, Entity, Index, JoinColumn, ManyToOne } from 'typeorm';\r\nimport { EmailTemplate } from '../email-template/email-template.entity';\r\nimport { User } from '../user/user.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('email_sent')\r\nexport class Email extends TenantOrganizationBase implements IEmail {\r\n\t@ApiProperty({ type: EmailTemplate })\r\n\t@ManyToOne((type) => EmailTemplate, {\r\n\t\tnullable: false,\r\n\t\tcascade: true,\r\n\t\tonDelete: 'CASCADE'\r\n\t})\r\n\t@JoinColumn()\r\n\temailTemplate: IEmailTemplate;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Column({ nullable: true })\r\n\temailTemplateId: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Index()\r\n\t@Column()\r\n\tname: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@Column()\r\n\tcontent: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Column()\r\n\temail: string;\r\n\r\n\t@ApiPropertyOptional({ type: Boolean })\r\n\t@IsBoolean()\r\n\t@Column({ nullable: true })\r\n\tisArchived?: boolean;\r\n\r\n\t@ApiProperty({ type: User })\r\n\t@ManyToOne((type) => User, {\r\n\t\tnullable: true,\r\n\t\tcascade: true,\r\n\t\tonDelete: 'CASCADE'\r\n\t})\r\n\t@JoinColumn()\r\n\tuser?: IUser;\r\n}\r\n","import { forwardRef, Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { EmailTemplate } from '../email-template';\r\nimport { Email } from './email.entity';\r\nimport { EmailService } from './email.service';\r\nimport { EmailController } from './email.controller';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tforwardRef(() =>\r\n\t\t\tTypeOrmModule.forFeature([Email, EmailTemplate, Organization])\r\n\t\t),\r\n\t\tforwardRef(() => TenantModule)\r\n\t],\r\n\tcontrollers: [EmailController],\r\n\tproviders: [EmailService],\r\n\texports: [TypeOrmModule]\r\n})\r\nexport class EmailModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { Email } from './email.entity';\r\nimport * as faker from 'faker';\r\nimport { EmailTemplate } from '../email-template/email-template.entity';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { IOrganization } from '@gauzy/models';\r\nimport { Organization } from '../organization/organization.entity';\r\n\r\nexport const createDefaultEmailSent = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\torganization: Organization,\r\n\tnoOfEmailsPerOrganization: number\r\n): Promise<any> => {\r\n\tconst emailTemplates = await connection.getRepository(EmailTemplate).find();\r\n\r\n\tlet sentEmails: Email[] = [];\r\n\tsentEmails = await dataOperation(\r\n\t\tconnection,\r\n\t\tsentEmails,\r\n\t\tnoOfEmailsPerOrganization,\r\n\t\torganization,\r\n\t\temailTemplates,\r\n\t\ttenant\r\n\t);\r\n\treturn sentEmails;\r\n};\r\n\r\nexport const createRandomEmailSent = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantOrganizationsMap: Map<Tenant, IOrganization[]>,\r\n\tnoOfEmailsPerOrganization: number\r\n): Promise<any> => {\r\n\tconst emailTemplates = await connection.getRepository(EmailTemplate).find();\r\n\r\n\tlet sentEmails: Email[] = [];\r\n\tfor (const tenant of tenants) {\r\n\t\tconst orgs = tenantOrganizationsMap.get(tenant);\r\n\t\tfor (const org of orgs) {\r\n\t\t\tsentEmails = await dataOperation(\r\n\t\t\t\tconnection,\r\n\t\t\t\tsentEmails,\r\n\t\t\t\tnoOfEmailsPerOrganization,\r\n\t\t\t\torg,\r\n\t\t\t\temailTemplates,\r\n\t\t\t\ttenant\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\treturn sentEmails;\r\n};\r\n\r\nconst dataOperation = async (\r\n\tconnection: Connection,\r\n\tsentEmails,\r\n\tnoOfEmailsPerOrganization,\r\n\torganization,\r\n\temailTemplates,\r\n\ttenant\r\n) => {\r\n\tfor (let i = 0; i < noOfEmailsPerOrganization; i++) {\r\n\t\tconst sentEmail = new Email();\r\n\t\tsentEmail.organizationId = organization.id;\r\n\t\tsentEmail.email = faker.internet.email();\r\n\t\tsentEmail.emailTemplate = faker.random.arrayElement(\r\n\t\t\temailTemplates.filter((x) => !x.name.includes('subject'))\r\n\t\t);\r\n\t\tsentEmail.name = sentEmail.emailTemplate.name.split('/')[0];\r\n\t\tsentEmail.content = sentEmail.emailTemplate.hbs;\r\n\t\tsentEmail.tenant = tenant;\r\n\t\tsentEmails.push(sentEmail);\r\n\t}\r\n\tawait connection.manager.save(sentEmails);\r\n\treturn sentEmails;\r\n};\r\n","import { environment } from '@env-api/environment';\r\nimport {\r\n\tIInviteEmployeeModel,\r\n\tIInviteUserModel,\r\n\tIOrganizationContact,\r\n\tLanguagesEnum\r\n} from '@gauzy/models';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport * as Email from 'email-templates';\r\nimport * as Handlebars from 'handlebars';\r\nimport * as nodemailer from 'nodemailer';\r\nimport { Repository, IsNull } from 'typeorm';\r\nimport { CrudService } from '../core';\r\nimport { EmailTemplate } from '../email-template/email-template.entity';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { User } from '../user/user.entity';\r\nimport { Email as IEmail } from './email.entity';\r\nimport { Invite } from '../invite/invite.entity';\r\nimport { Timesheet } from '../timesheet/timesheet.entity';\r\nimport { RequestContext } from '../core/context';\r\nimport { environment as env } from '@env-api/environment';\r\nimport { ISMTPConfig } from '../../environments/ISMTPConfig';\r\n@Injectable()\r\nexport class EmailService extends CrudService<IEmail> {\r\n\tconstructor(\r\n\t\t@InjectRepository(IEmail)\r\n\t\tprivate readonly emailRepository: Repository<IEmail>,\r\n\t\t@InjectRepository(EmailTemplate)\r\n\t\tprivate readonly emailTemplateRepository: Repository<EmailTemplate>,\r\n\t\t@InjectRepository(Organization)\r\n\t\tprivate readonly organizationRepository: Repository<Organization>\r\n\t) {\r\n\t\tsuper(emailRepository);\r\n\t}\r\n\r\n\temail = new Email({\r\n\t\tmessage: {\r\n\t\t\tfrom: env.smtpConfig.from || 'Gauzy@Ever.co'\r\n\t\t},\r\n\t\t//If you want to send emails in development or test environments, set options.send to true.\r\n\t\tsend: true,\r\n\t\ttransport: this.createSMTPTransporter(),\r\n\t\ti18n: {},\r\n\t\tviews: {\r\n\t\t\toptions: {\r\n\t\t\t\textension: 'hbs'\r\n\t\t\t}\r\n\t\t},\r\n\t\tpreview: {\r\n\t\t\topen: {\r\n\t\t\t\tapp: 'firefox',\r\n\t\t\t\twait: false\r\n\t\t\t}\r\n\t\t},\r\n\t\trender: (view, locals) => {\r\n\t\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\t\tview = view.replace('\\\\', '/');\r\n\t\t\t\tlet emailTemplate: EmailTemplate[];\r\n\t\t\t\t// Find email template for customized for given organization\r\n\t\t\t\tconst customEmailTemplate = await this.emailTemplateRepository.find(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: view,\r\n\t\t\t\t\t\tlanguageCode: locals.locale || 'en',\r\n\t\t\t\t\t\torganizationId: locals.organizationId,\r\n\t\t\t\t\t\ttenantId: locals.tenantId\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t\temailTemplate = customEmailTemplate;\r\n\t\t\t\t// if no email template present for given organization, use default email template\r\n\t\t\t\tif (!customEmailTemplate || customEmailTemplate.length < 1) {\r\n\t\t\t\t\tconst defaultEmailTemplate = await this.emailTemplateRepository.find(\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname: view,\r\n\t\t\t\t\t\t\tlanguageCode: locals.locale || 'en',\r\n\t\t\t\t\t\t\torganizationId: IsNull(),\r\n\t\t\t\t\t\t\ttenantId: IsNull()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t\temailTemplate = defaultEmailTemplate;\r\n\t\t\t\t}\r\n\t\t\t\tif (!emailTemplate || emailTemplate.length < 1) {\r\n\t\t\t\t\treturn resolve('');\r\n\t\t\t\t}\r\n\t\t\t\tconst template = Handlebars.compile(emailTemplate[0].hbs);\r\n\t\t\t\tconst html = template(locals);\r\n\r\n\t\t\t\treturn resolve(html);\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n\r\n\temailInvoice(\r\n\t\tlanguageCode: LanguagesEnum,\r\n\t\temail: string,\r\n\t\tbase64: string,\r\n\t\tinvoiceNumber: number,\r\n\t\tinvoiceId: string,\r\n\t\tisEstimate: boolean,\r\n\t\ttoken: any,\r\n\t\toriginUrl?: string,\r\n\t\ttenantId?: string,\r\n\t\torganizationId?: string\r\n\t) {\r\n\t\tthis.email\r\n\t\t\t.send({\r\n\t\t\t\ttemplate: isEstimate ? 'email-estimate' : 'email-invoice',\r\n\t\t\t\tmessage: {\r\n\t\t\t\t\tto: `${email}`,\r\n\t\t\t\t\tattachments: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tfilename: `${\r\n\t\t\t\t\t\t\t\tisEstimate ? 'Estimate' : 'Invoice'\r\n\t\t\t\t\t\t\t}-${invoiceNumber}.pdf`,\r\n\t\t\t\t\t\t\tcontent: base64,\r\n\t\t\t\t\t\t\tencoding: 'base64'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\tlocals: {\r\n\t\t\t\t\ttenantId,\r\n\t\t\t\t\torganizationId,\r\n\t\t\t\t\tlocale: languageCode,\r\n\t\t\t\t\thost: originUrl || environment.host,\r\n\t\t\t\t\tacceptUrl:\r\n\t\t\t\t\t\toriginUrl +\r\n\t\t\t\t\t\t`#/auth/estimate/?token=${token}&id=${invoiceId}&action=accept&email=${email}`,\r\n\t\t\t\t\trejectUrl:\r\n\t\t\t\t\t\toriginUrl +\r\n\t\t\t\t\t\t`#/auth/estimate/?token=${token}&id=${invoiceId}&action=reject&email=${email}`\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tthis.createEmailRecord({\r\n\t\t\t\t\ttemplateName: isEstimate\r\n\t\t\t\t\t\t? 'email-estimate'\r\n\t\t\t\t\t\t: 'email-invoice',\r\n\t\t\t\t\temail,\r\n\t\t\t\t\tlanguageCode,\r\n\t\t\t\t\tmessage: res.originalMessage\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch(console.error);\r\n\t}\r\n\r\n\tinviteOrganizationContact(\r\n\t\torganizationContact: IOrganizationContact,\r\n\t\tinviterUser: User,\r\n\t\torganization: Organization,\r\n\t\tinvite: Invite,\r\n\t\tlanguageCode: LanguagesEnum,\r\n\t\toriginUrl?: string\r\n\t) {\r\n\t\tconst sendOptions = {\r\n\t\t\ttemplate: 'invite-organization-client',\r\n\t\t\tmessage: {\r\n\t\t\t\tto: `${organizationContact.primaryEmail}`\r\n\t\t\t},\r\n\t\t\tlocals: {\r\n\t\t\t\tlocale: languageCode,\r\n\t\t\t\tname: organizationContact.name,\r\n\t\t\t\thost: originUrl || environment.host,\r\n\t\t\t\tid: organizationContact.id,\r\n\t\t\t\tinviterName: inviterUser\r\n\t\t\t\t\t? (inviterUser.firstName || '') +\r\n\t\t\t\t\t  (inviterUser.lastName || '')\r\n\t\t\t\t\t: '',\r\n\t\t\t\torganizationName: organization.name,\r\n\t\t\t\torganizationId: organization.id,\r\n\t\t\t\tgeneratedUrl:\r\n\t\t\t\t\toriginUrl +\r\n\t\t\t\t\t`#/auth/accept-client-invite?email=${organizationContact.primaryEmail}&token=${invite.token}`\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.email\r\n\t\t\t.send(sendOptions)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tthis.createEmailRecord({\r\n\t\t\t\t\ttemplateName: sendOptions.template,\r\n\t\t\t\t\temail: organizationContact.primaryEmail,\r\n\t\t\t\t\tlanguageCode,\r\n\t\t\t\t\tmessage: res.originalMessage,\r\n\t\t\t\t\torganization\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch(console.error);\r\n\t}\r\n\r\n\tinviteUser(inviteUserModel: IInviteUserModel) {\r\n\t\tconst {\r\n\t\t\temail,\r\n\t\t\trole,\r\n\t\t\torganization,\r\n\t\t\tregisterUrl,\r\n\t\t\toriginUrl,\r\n\t\t\tlanguageCode,\r\n\t\t\tinvitedBy\r\n\t\t} = inviteUserModel;\r\n\r\n\t\tconst sendOptions = {\r\n\t\t\ttemplate: 'invite-user',\r\n\t\t\tmessage: {\r\n\t\t\t\tto: `${email}`\r\n\t\t\t},\r\n\t\t\tlocals: {\r\n\t\t\t\tlocale: languageCode,\r\n\t\t\t\trole: role,\r\n\t\t\t\torganizationName: organization.name,\r\n\t\t\t\torganizationId: organization.id,\r\n\t\t\t\tgeneratedUrl: registerUrl,\r\n\t\t\t\thost: originUrl || environment.host\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.email\r\n\t\t\t.send(sendOptions)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tthis.createEmailRecord({\r\n\t\t\t\t\ttemplateName: sendOptions.template,\r\n\t\t\t\t\temail,\r\n\t\t\t\t\tlanguageCode,\r\n\t\t\t\t\tmessage: res.originalMessage,\r\n\t\t\t\t\torganization,\r\n\t\t\t\t\tuser: invitedBy\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch(console.error);\r\n\t}\r\n\r\n\tinviteEmployee(inviteEmployeeModel: IInviteEmployeeModel) {\r\n\t\tconst {\r\n\t\t\temail,\r\n\t\t\tregisterUrl,\r\n\t\t\tprojects,\r\n\t\t\torganization,\r\n\t\t\toriginUrl,\r\n\t\t\tlanguageCode,\r\n\t\t\tinvitedBy\r\n\t\t} = inviteEmployeeModel;\r\n\r\n\t\tconst sendOptions = {\r\n\t\t\ttemplate: 'invite-employee',\r\n\t\t\tmessage: {\r\n\t\t\t\tto: `${email}`\r\n\t\t\t},\r\n\t\t\tlocals: {\r\n\t\t\t\tlocale: languageCode,\r\n\t\t\t\trole: projects,\r\n\t\t\t\torganizationName: organization.name,\r\n\t\t\t\torganizationId: organization.id,\r\n\t\t\t\tgeneratedUrl: registerUrl,\r\n\t\t\t\thost: originUrl || environment.host\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.email\r\n\t\t\t.send(sendOptions)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tthis.createEmailRecord({\r\n\t\t\t\t\ttemplateName: sendOptions.template,\r\n\t\t\t\t\temail,\r\n\t\t\t\t\tlanguageCode,\r\n\t\t\t\t\tmessage: res.originalMessage,\r\n\t\t\t\t\torganization,\r\n\t\t\t\t\tuser: invitedBy\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch(console.error);\r\n\t}\r\n\r\n\tasync welcomeUser(\r\n\t\tuser: User,\r\n\t\tlanguageCode: LanguagesEnum,\r\n\t\torganizationId?: string,\r\n\t\toriginUrl?: string\r\n\t) {\r\n\t\tconst sendOptions = {\r\n\t\t\ttemplate: 'welcome-user',\r\n\t\t\tmessage: {\r\n\t\t\t\tto: `${user.email}`\r\n\t\t\t},\r\n\t\t\tlocals: {\r\n\t\t\t\tlocale: languageCode,\r\n\t\t\t\temail: user.email,\r\n\t\t\t\thost: originUrl || environment.host,\r\n\t\t\t\torganizationId: organizationId ? organizationId : IsNull()\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tlet organization: Organization;\r\n\r\n\t\tif (organizationId) {\r\n\t\t\torganization = await this.organizationRepository.findOne(\r\n\t\t\t\torganizationId\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tthis.email\r\n\t\t\t.send(sendOptions)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tthis.createEmailRecord({\r\n\t\t\t\t\ttemplateName: sendOptions.template,\r\n\t\t\t\t\temail: user.email,\r\n\t\t\t\t\tlanguageCode,\r\n\t\t\t\t\tmessage: res.originalMessage,\r\n\t\t\t\t\torganization\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch(console.error);\r\n\t}\r\n\r\n\tasync requestPassword(\r\n\t\tuser: User,\r\n\t\turl: string,\r\n\t\tlanguageCode: LanguagesEnum,\r\n\t\torganizationId: string,\r\n\t\toriginUrl?: string\r\n\t) {\r\n\t\tconst sendOptions = {\r\n\t\t\ttemplate: 'password',\r\n\t\t\tmessage: {\r\n\t\t\t\tto: `${user.email}`,\r\n\t\t\t\tsubject: 'Forgotten Password'\r\n\t\t\t},\r\n\t\t\tlocals: {\r\n\t\t\t\tlocale: languageCode,\r\n\t\t\t\tgeneratedUrl: url,\r\n\t\t\t\thost: originUrl || environment.host,\r\n\t\t\t\torganizationId: organizationId\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst organization = await this.organizationRepository.findOne(\r\n\t\t\torganizationId\r\n\t\t);\r\n\r\n\t\tthis.email\r\n\t\t\t.send(sendOptions)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tthis.createEmailRecord({\r\n\t\t\t\t\ttemplateName: sendOptions.template,\r\n\t\t\t\t\temail: user.email,\r\n\t\t\t\t\tlanguageCode,\r\n\t\t\t\t\tmessage: res.originalMessage,\r\n\t\t\t\t\torganization\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch(console.error);\r\n\t}\r\n\r\n\tasync createEmailRecord(createEmailOptions: {\r\n\t\ttemplateName: string;\r\n\t\temail: string;\r\n\t\tlanguageCode: LanguagesEnum;\r\n\t\tmessage: any;\r\n\t\torganization?: Organization;\r\n\t\tuser?: User;\r\n\t}): Promise<IEmail> {\r\n\t\tconst emailEntity = new IEmail();\r\n\r\n\t\tconst {\r\n\t\t\ttemplateName: template,\r\n\t\t\temail,\r\n\t\t\tlanguageCode,\r\n\t\t\tmessage,\r\n\t\t\torganization,\r\n\t\t\tuser\r\n\t\t} = createEmailOptions;\r\n\r\n\t\tconst emailTemplate = await this.emailTemplateRepository.findOne({\r\n\t\t\tname: template + '/html',\r\n\t\t\tlanguageCode\r\n\t\t});\r\n\r\n\t\temailEntity.name = message.subject;\r\n\t\temailEntity.email = email;\r\n\t\temailEntity.content = message.html;\r\n\t\temailEntity.emailTemplate = emailTemplate;\r\n\r\n\t\tif (organization) {\r\n\t\t\temailEntity.organizationId = organization.id;\r\n\t\t}\r\n\r\n\t\tif (user) {\r\n\t\t\temailEntity.user = user;\r\n\t\t}\r\n\r\n\t\treturn this.emailRepository.save(emailEntity);\r\n\t}\r\n\r\n\tasync sendAppointmentMail(\r\n\t\temail: string,\r\n\t\tlanguageCode: LanguagesEnum,\r\n\t\torganizationId?: string,\r\n\t\toriginUrl?: string\r\n\t) {\r\n\t\tconst sendOptions = {\r\n\t\t\ttemplate: 'email-appointment',\r\n\t\t\tmessage: {\r\n\t\t\t\tto: email\r\n\t\t\t},\r\n\t\t\tlocals: {\r\n\t\t\t\tlocale: languageCode,\r\n\t\t\t\temail: email,\r\n\t\t\t\thost: originUrl || environment.host,\r\n\t\t\t\torganizationId: organizationId ? organizationId : IsNull()\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tlet organization: Organization;\r\n\r\n\t\tif (organizationId) {\r\n\t\t\torganization = await this.organizationRepository.findOne(\r\n\t\t\t\torganizationId\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tthis.email\r\n\t\t\t.send(sendOptions)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tthis.createEmailRecord({\r\n\t\t\t\t\ttemplateName: sendOptions.template,\r\n\t\t\t\t\temail: email,\r\n\t\t\t\t\tlanguageCode,\r\n\t\t\t\t\tmessage: res.originalMessage,\r\n\t\t\t\t\torganization\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch(console.error);\r\n\t}\r\n\r\n\tasync setTimesheetAction(email: string, timesheet: Timesheet) {\r\n\t\tconst languageCode = RequestContext.getLanguageCode();\r\n\r\n\t\tconst sendOptions = {\r\n\t\t\ttemplate: 'timesheet-action',\r\n\t\t\tmessage: {\r\n\t\t\t\tto: email\r\n\t\t\t},\r\n\t\t\tlocals: {\r\n\t\t\t\tlocale: languageCode,\r\n\t\t\t\temail: email,\r\n\t\t\t\thost: environment.host,\r\n\t\t\t\ttimesheet: timesheet,\r\n\t\t\t\ttimesheet_action: timesheet.status\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst organization = await this.organizationRepository.findOne(\r\n\t\t\ttimesheet.employee.organizationId\r\n\t\t);\r\n\r\n\t\tthis.email\r\n\t\t\t.send(sendOptions)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tthis.createEmailRecord({\r\n\t\t\t\t\ttemplateName: sendOptions.template,\r\n\t\t\t\t\temail: email,\r\n\t\t\t\t\tlanguageCode,\r\n\t\t\t\t\tmessage: res.originalMessage,\r\n\t\t\t\t\torganization,\r\n\t\t\t\t\tuser: timesheet.employee.user\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch(console.error);\r\n\t}\r\n\r\n\tasync timesheetSubmit(email: string, timesheet: Timesheet) {\r\n\t\tconst languageCode = RequestContext.getLanguageCode();\r\n\r\n\t\tconst sendOptions = {\r\n\t\t\ttemplate: 'timesheet-submit',\r\n\t\t\tmessage: {\r\n\t\t\t\tto: email\r\n\t\t\t},\r\n\t\t\tlocals: {\r\n\t\t\t\tlocale: languageCode,\r\n\t\t\t\temail: email,\r\n\t\t\t\thost: environment.host,\r\n\t\t\t\ttimesheet: timesheet,\r\n\t\t\t\ttimesheet_action: timesheet.status\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst organization = await this.organizationRepository.findOne(\r\n\t\t\ttimesheet.employee.organizationId\r\n\t\t);\r\n\r\n\t\tthis.email\r\n\t\t\t.send(sendOptions)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tthis.createEmailRecord({\r\n\t\t\t\t\ttemplateName: sendOptions.template,\r\n\t\t\t\t\temail: email,\r\n\t\t\t\t\tlanguageCode,\r\n\t\t\t\t\tmessage: res.originalMessage,\r\n\t\t\t\t\torganization,\r\n\t\t\t\t\tuser: timesheet.employee.user\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch(console.error);\r\n\t}\r\n\r\n\t/*\r\n\t * This example would connect to a SMTP server separately for every single message\r\n\t */\r\n\tcreateSMTPTransporter() {\r\n\t\tconst smtp: ISMTPConfig = env.smtpConfig;\r\n\t\treturn {\r\n\t\t\thost: smtp.host,\r\n\t\t\tport: smtp.port,\r\n\t\t\tsecure: smtp.secure, // true for 465, false for other ports\r\n\t\t\tauth: {\r\n\t\t\t\tuser: smtp.auth.user,\r\n\t\t\t\tpass: smtp.auth.pass\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\t// tested e-mail send functionality\r\n\tasync nodemailerSendEmail(user: User, url: string) {\r\n\t\tconst testAccount = await nodemailer.createTestAccount();\r\n\r\n\t\tconst transporter = nodemailer.createTransport({\r\n\t\t\thost: 'smtp.ethereal.email',\r\n\t\t\tport: 587,\r\n\t\t\tsecure: false, // true for 465, false for other ports\r\n\t\t\tauth: {\r\n\t\t\t\tuser: testAccount.user,\r\n\t\t\t\tpass: testAccount.pass\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Gmail example:\r\n\r\n\t\t// const transporter = nodemailer.createTransport({\r\n\t\t// \tservice: 'gmail',\r\n\t\t// \tauth: {\r\n\t\t// \t\tuser: 'user@gmail.com',\r\n\t\t// \t\tpass: 'password'\r\n\t\t// \t}\r\n\t\t// });\r\n\r\n\t\tconst info = await transporter.sendMail({\r\n\t\t\tfrom: 'Gauzy',\r\n\t\t\tto: user.email,\r\n\t\t\tsubject: 'Forgotten Password',\r\n\t\t\ttext: 'Forgot Password',\r\n\t\t\thtml:\r\n\t\t\t\t'Hello! <br><br> We received a password change request.<br><br>If you requested to reset your password<br><br>' +\r\n\t\t\t\t'<a href=' +\r\n\t\t\t\turl +\r\n\t\t\t\t'>Click here</a>'\r\n\t\t});\r\n\r\n\t\tconsole.log('Message sent: %s', info.messageId);\r\n\t\tconsole.log('Preview URL: %s', nodemailer.getTestMessageUrl(info));\r\n\t}\r\n}\r\n","export { EmailModule } from './email.module';\r\nexport { Email } from './email.entity';\r\nexport { EmailService } from './email.service';\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { LanguagesEnum, IEmployeeAppointmentCreateInput } from '@gauzy/models';\r\n\r\nexport class EmployeeAppointmentCreateCommand implements ICommand {\r\n\tstatic readonly type = '[EmployeeAppointment] Register';\r\n\r\n\tconstructor(\r\n\t\tpublic readonly employeeAppointmentInput: IEmployeeAppointmentCreateInput,\r\n\t\tpublic readonly languageCode: LanguagesEnum\r\n\t) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { IEmployeeAppointmentUpdateInput } from '@gauzy/models';\r\n\r\nexport class EmployeeAppointmentUpdateCommand implements ICommand {\r\n\tstatic readonly type = '[EmployeeAppointment] Update';\r\n\r\n\tconstructor(\r\n\t\tpublic readonly id: string,\r\n\t\tpublic readonly employeeAppointmentUpdateRequest: IEmployeeAppointmentUpdateInput\r\n\t) {}\r\n}\r\n","import { ICommandHandler, CommandHandler } from '@nestjs/cqrs';\r\nimport { EmployeeAppointmentService } from '../../employee-appointment.service';\r\nimport { EmployeeAppointmentCreateCommand } from '../employee-appointment.create.command';\r\nimport { EmployeeAppointment } from '../../employee-appointment.entity';\r\nimport { LanguagesEnum } from '@gauzy/models';\r\nimport { EmailService } from '../../../email';\r\nimport { EmployeeService } from '../../../employee/employee.service';\r\nimport { OrganizationService } from '../../../organization/organization.service';\r\nimport { RequestContext } from '../../../core/context';\r\n\r\n@CommandHandler(EmployeeAppointmentCreateCommand)\r\nexport class EmployeeAppointmentCreateHandler\r\n\timplements ICommandHandler<EmployeeAppointmentCreateCommand> {\r\n\tconstructor(\r\n\t\tprivate employeeAppointmentService: EmployeeAppointmentService,\r\n\t\tprivate emailService: EmailService,\r\n\t\tprivate employeeService: EmployeeService,\r\n\t\tprivate organizationService: OrganizationService\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand?: EmployeeAppointmentCreateCommand\r\n\t): Promise<EmployeeAppointment> {\r\n\t\tconst { employeeAppointmentInput, languageCode } = command;\r\n\r\n\t\tconst appointment = new EmployeeAppointment();\r\n\t\tconst employee = employeeAppointmentInput.employeeId\r\n\t\t\t? await this.employeeService.findOne(\r\n\t\t\t\t\temployeeAppointmentInput.employeeId\r\n\t\t\t  )\r\n\t\t\t: null;\r\n\t\tconst organization = await this.organizationService.findOne(\r\n\t\t\temployeeAppointmentInput.organizationId\r\n\t\t);\r\n\r\n\t\tappointment.employee = employee;\r\n\t\tappointment.organization = organization;\r\n\t\tappointment.agenda = employeeAppointmentInput.agenda;\r\n\t\tappointment.description = employeeAppointmentInput.description;\r\n\t\tappointment.bufferTimeEnd = employeeAppointmentInput.bufferTimeEnd;\r\n\t\tappointment.bufferTimeInMins =\r\n\t\t\temployeeAppointmentInput.bufferTimeInMins;\r\n\t\tappointment.breakStartTime = employeeAppointmentInput.breakStartTime;\r\n\t\tappointment.breakTimeInMins = employeeAppointmentInput.breakTimeInMins;\r\n\t\tappointment.bufferTimeStart = employeeAppointmentInput.bufferTimeStart;\r\n\t\tappointment.emails = employeeAppointmentInput.emails;\r\n\t\tappointment.startDateTime = employeeAppointmentInput.startDateTime;\r\n\t\tappointment.endDateTime = employeeAppointmentInput.endDateTime;\r\n\t\tappointment.location = employeeAppointmentInput.location;\r\n\t\tappointment.tenantId = RequestContext.currentTenantId();\r\n\r\n\t\tconst createdAppointment = await this.employeeAppointmentService.create(\r\n\t\t\tappointment\r\n\t\t);\r\n\r\n\t\tif (appointment.emails) {\r\n\t\t\tthis._sendAppointmentEmail(appointment, languageCode);\r\n\t\t}\r\n\r\n\t\treturn createdAppointment;\r\n\t}\r\n\r\n\tprivate _sendAppointmentEmail(\r\n\t\tappointment: EmployeeAppointment,\r\n\t\tlanguageCode: LanguagesEnum\r\n\t) {\r\n\t\tappointment.emails\r\n\t\t\t.split(', ')\r\n\t\t\t.forEach((email) =>\r\n\t\t\t\tthis.emailService.sendAppointmentMail(email, languageCode)\r\n\t\t\t);\r\n\t}\r\n}\r\n","import { ICommandHandler, CommandHandler } from '@nestjs/cqrs';\r\nimport { EmployeeAppointmentService } from '../../employee-appointment.service';\r\nimport { EmployeeAppointmentUpdateCommand } from '../employee-appointment.update.command';\r\nimport { EmployeeAppointment } from '../../employee-appointment.entity';\r\nimport { UpdateResult } from 'typeorm';\r\nimport { EmployeeService } from '../../../employee/employee.service';\r\nimport { OrganizationService } from '../../../organization/organization.service';\r\n\r\n@CommandHandler(EmployeeAppointmentUpdateCommand)\r\nexport class EmployeeAppointmentUpdateHandler\r\n\timplements ICommandHandler<EmployeeAppointmentUpdateCommand> {\r\n\tconstructor(\r\n\t\tprivate employeeAppointmentService: EmployeeAppointmentService,\r\n\t\tprivate employeeService: EmployeeService,\r\n\t\tprivate organizationService: OrganizationService\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand?: EmployeeAppointmentUpdateCommand\r\n\t): Promise<UpdateResult | EmployeeAppointment> {\r\n\t\tconst { id, employeeAppointmentUpdateRequest } = command;\r\n\r\n\t\tconst appointment = new EmployeeAppointment();\r\n\t\tconst employee = employeeAppointmentUpdateRequest.employeeId\r\n\t\t\t? await this.employeeService.findOne(\r\n\t\t\t\t\temployeeAppointmentUpdateRequest.employeeId\r\n\t\t\t  )\r\n\t\t\t: null;\r\n\t\tconst organization = employeeAppointmentUpdateRequest.organizationId\r\n\t\t\t? await this.organizationService.findOne(\r\n\t\t\t\t\temployeeAppointmentUpdateRequest.organizationId\r\n\t\t\t  )\r\n\t\t\t: null;\r\n\r\n\t\temployee && (appointment.employee = employee);\r\n\t\torganization && (appointment.organization = organization);\r\n\t\temployeeAppointmentUpdateRequest.agenda &&\r\n\t\t\t(appointment.agenda = employeeAppointmentUpdateRequest.agenda);\r\n\t\temployeeAppointmentUpdateRequest.description &&\r\n\t\t\t(appointment.description =\r\n\t\t\t\temployeeAppointmentUpdateRequest.description);\r\n\t\temployeeAppointmentUpdateRequest.bufferTimeEnd &&\r\n\t\t\t(appointment.bufferTimeEnd =\r\n\t\t\t\temployeeAppointmentUpdateRequest.bufferTimeEnd);\r\n\t\temployeeAppointmentUpdateRequest.bufferTimeInMins &&\r\n\t\t\t(appointment.bufferTimeInMins =\r\n\t\t\t\temployeeAppointmentUpdateRequest.bufferTimeInMins);\r\n\t\temployeeAppointmentUpdateRequest.breakStartTime &&\r\n\t\t\t(appointment.breakStartTime =\r\n\t\t\t\temployeeAppointmentUpdateRequest.breakStartTime);\r\n\t\temployeeAppointmentUpdateRequest.breakTimeInMins &&\r\n\t\t\t(appointment.breakTimeInMins =\r\n\t\t\t\temployeeAppointmentUpdateRequest.breakTimeInMins);\r\n\t\temployeeAppointmentUpdateRequest.bufferTimeStart &&\r\n\t\t\t(appointment.bufferTimeStart =\r\n\t\t\t\temployeeAppointmentUpdateRequest.bufferTimeStart);\r\n\t\temployeeAppointmentUpdateRequest.startDateTime &&\r\n\t\t\t(appointment.startDateTime =\r\n\t\t\t\temployeeAppointmentUpdateRequest.startDateTime);\r\n\t\temployeeAppointmentUpdateRequest.endDateTime &&\r\n\t\t\t(appointment.endDateTime =\r\n\t\t\t\temployeeAppointmentUpdateRequest.endDateTime);\r\n\t\temployeeAppointmentUpdateRequest.location &&\r\n\t\t\t(appointment.location = employeeAppointmentUpdateRequest.location);\r\n\t\temployeeAppointmentUpdateRequest.status &&\r\n\t\t\t(appointment.status = employeeAppointmentUpdateRequest.status);\r\n\r\n\t\tconst updatedAppointment = await this.employeeAppointmentService.update(\r\n\t\t\tid,\r\n\t\t\tappointment\r\n\t\t);\r\n\r\n\t\treturn updatedAppointment;\r\n\t}\r\n}\r\n","export const AGENDAS: string[] = [\r\n\t'Meeting',\r\n\t'Knowledge Transfer',\r\n\t'Query Solution',\r\n\t'Sprint Planning'\r\n];\r\n","import { CrudController, IPagination } from '../core';\r\nimport { EmployeeAppointment } from './employee-appointment.entity';\r\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport {\r\n\tController,\r\n\tUseGuards,\r\n\tHttpStatus,\r\n\tBody,\r\n\tParam,\r\n\tGet,\r\n\tPost,\r\n\tPut,\r\n\tHttpCode,\r\n\tQuery\r\n} from '@nestjs/common';\r\nimport { CommandBus } from '@nestjs/cqrs';\r\nimport { EmployeeAppointmentService } from './employee-appointment.service';\r\nimport { EmployeeAppointmentCreateCommand } from './commands/employee-appointment.create.command';\r\nimport { EmployeeAppointmentUpdateCommand } from './commands/employee-appointment.update.command';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { UUIDValidationPipe } from '../shared';\r\nimport { I18nLang } from 'nestjs-i18n';\r\nimport {\r\n\tLanguagesEnum,\r\n\tIEmployeeAppointmentCreateInput,\r\n\tIEmployeeAppointmentUpdateInput\r\n} from '@gauzy/models';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('EmployeeAppointment')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class EmployeeAppointmentController extends CrudController<\r\n\tEmployeeAppointment\r\n> {\r\n\tconstructor(\r\n\t\tprivate readonly employeeAppointmentService: EmployeeAppointmentService,\r\n\t\tprivate commandBus: CommandBus\r\n\t) {\r\n\t\tsuper(employeeAppointmentService);\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find all employee appointments'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found employee appointments',\r\n\t\ttype: EmployeeAppointment\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get()\r\n\tasync findAllEmployeeAppointments(\r\n\t\t@Query('data') data: string\r\n\t): Promise<IPagination<EmployeeAppointment>> {\r\n\t\tconst { relations, findInput } = JSON.parse(data);\r\n\r\n\t\treturn this.employeeAppointmentService.findAllAppointments({\r\n\t\t\twhere: findInput,\r\n\t\t\trelations\r\n\t\t});\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Create new record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully created.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@Post('/create')\r\n\tasync createEmployeeAppointment(\r\n\t\t@Body() entity: IEmployeeAppointmentCreateInput,\r\n\t\t@I18nLang() languageCode: LanguagesEnum,\r\n\t\t...options: any[]\r\n\t) {\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew EmployeeAppointmentCreateCommand(entity, languageCode)\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Update an existing record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully edited.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Put(':id')\r\n\tasync update(\r\n\t\t@Param('id') id: string,\r\n\t\t@Body() entity: IEmployeeAppointmentUpdateInput\r\n\t): Promise<any> {\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew EmployeeAppointmentUpdateCommand(id, entity)\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find Employee appointment by id.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found one record',\r\n\t\ttype: EmployeeAppointment\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@UseGuards(AuthGuard('jwt'))\r\n\t@Get(':id')\r\n\tasync findOneById(\r\n\t\t@Param('id', UUIDValidationPipe) id: string\r\n\t): Promise<EmployeeAppointment> {\r\n\t\treturn this.employeeAppointmentService.findOne(id);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Sign appointment id payload' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Token generated',\r\n\t\ttype: String\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.EXPECTATION_FAILED,\r\n\t\tdescription: 'Token generation failure'\r\n\t})\r\n\t@UseGuards(AuthGuard('jwt'))\r\n\t@Get('/sign/:id')\r\n\tasync signAppointment(@Param('id') id: string): Promise<String> {\r\n\t\treturn await this.employeeAppointmentService.signAppointmentId(id);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Verify token' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Token verified',\r\n\t\ttype: String\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.EXPECTATION_FAILED,\r\n\t\tdescription: 'Token verification failure'\r\n\t})\r\n\t@UseGuards(AuthGuard('jwt'))\r\n\t@Get('/decode/:token')\r\n\tasync decodeToken(@Param('token') token: string): Promise<string> {\r\n\t\tconst decoded = this.employeeAppointmentService.decode(token);\r\n\t\treturn decoded['appointmentId'];\r\n\t}\r\n}\r\n","import { IEmployeeAppointment } from '@gauzy/models';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport {\r\n\tIsNotEmpty,\r\n\tIsString,\r\n\tIsDate,\r\n\tIsBoolean,\r\n\tIsNumber\r\n} from 'class-validator';\r\nimport {\r\n\tColumn,\r\n\tEntity,\r\n\tOneToMany,\r\n\tJoinColumn,\r\n\tManyToOne,\r\n\tRelationId\r\n} from 'typeorm';\r\nimport { AppointmentEmployee } from '../appointment-employees/appointment-employees.entity';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('employee_appointment')\r\nexport class EmployeeAppointment extends TenantOrganizationBase\r\n\timplements IEmployeeAppointment {\r\n\t@ApiProperty({ type: Employee })\r\n\t@ManyToOne((type) => Employee, { nullable: true, onDelete: 'CASCADE' })\r\n\t@JoinColumn()\r\n\temployee?: Employee;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@RelationId(\r\n\t\t(employeeAppointment: EmployeeAppointment) =>\r\n\t\t\temployeeAppointment.employee\r\n\t)\r\n\t@Column({ nullable: true })\r\n\treadonly employeeId?: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Column()\r\n\tagenda: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Column({ nullable: true })\r\n\tdescription?: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Column({ nullable: true })\r\n\tlocation?: string;\r\n\r\n\t@ApiProperty({ type: Date })\r\n\t@IsDate()\r\n\t@Column()\r\n\tstartDateTime: Date;\r\n\r\n\t@ApiProperty({ type: Date })\r\n\t@IsDate()\r\n\t@Column()\r\n\tendDateTime: Date;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@IsBoolean()\r\n\t@Column({ nullable: true })\r\n\tbufferTimeStart?: Boolean;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@IsBoolean()\r\n\t@Column({ nullable: true })\r\n\tbufferTimeEnd?: Boolean;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@IsNumber()\r\n\t@Column({ nullable: true })\r\n\tbufferTimeInMins?: Number;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@IsNumber()\r\n\t@Column({ nullable: true })\r\n\tbreakTimeInMins?: Number;\r\n\r\n\t@ApiProperty({ type: Date })\r\n\t@IsDate()\r\n\t@Column({ nullable: true })\r\n\tbreakStartTime?: Date;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@Column({ nullable: true })\r\n\temails?: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@Column({ nullable: true })\r\n\tstatus?: string;\r\n\r\n\t@ApiProperty({ type: AppointmentEmployee, isArray: true })\r\n\t@OneToMany(\r\n\t\t(type) => AppointmentEmployee,\r\n\t\t(entity) => entity.employeeAppointment,\r\n\t\t{\r\n\t\t\tonDelete: 'SET NULL'\r\n\t\t}\r\n\t)\r\n\t@JoinColumn()\r\n\tinvitees?: AppointmentEmployee[];\r\n}\r\n","import { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { Module } from '@nestjs/common';\r\nimport { EmployeeAppointment } from './employee-appointment.entity';\r\nimport { EmployeeAppointmentController } from './employee-appointment.controller';\r\nimport { EmployeeAppointmentService } from './employee-appointment.service';\r\nimport { CqrsModule } from '@nestjs/cqrs';\r\nimport { EmployeeAppointmentCreateHandler } from './commands/handlers/employee-appointment.create.handler';\r\nimport { EmployeeAppointmentUpdateHandler } from './commands/handlers/employee-appointment.update.handler';\r\nimport { EmailService, EmailModule } from '../email';\r\nimport { OrganizationService } from '../organization/organization.service';\r\nimport { EmployeeService } from '../employee/employee.service';\r\nimport { EmployeeModule } from '../employee/employee.module';\r\nimport { OrganizationModule } from '../organization/organization.module';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([EmployeeAppointment]),\r\n\t\tEmailModule,\r\n\t\tEmployeeModule,\r\n\t\tOrganizationModule,\r\n\t\tCqrsModule,\r\n\t\tTenantModule\r\n\t],\r\n\tcontrollers: [EmployeeAppointmentController],\r\n\tproviders: [\r\n\t\tEmailService,\r\n\t\tEmployeeService,\r\n\t\tOrganizationService,\r\n\t\tEmployeeAppointmentService,\r\n\t\tEmployeeAppointmentCreateHandler,\r\n\t\tEmployeeAppointmentUpdateHandler\r\n\t],\r\n\texports: [EmployeeAppointmentService]\r\n})\r\nexport class EmployeeAppointmentModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { IEmployee, IOrganization } from '@gauzy/models';\r\nimport { EmployeeAppointment } from './employee-appointment.entity';\r\nimport * as faker from 'faker';\r\nimport * as moment from 'moment';\r\nimport { AppointmentEmployee } from '../appointment-employees/appointment-employees.entity';\r\nimport { AGENDAS } from './default-employee-appointment';\r\n\r\nexport const createDefaultEmployeeAppointment = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\temployees: IEmployee[],\r\n\torganizations\r\n): Promise<EmployeeAppointment[]> => {\r\n\tif (!employees) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: Employees not found, Default Employee Appointment  will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\tif (!organizations) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: tenantOrganizations not found, Default Employee Appointment  will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tlet employeesAppointments: EmployeeAppointment[] = [];\r\n\tfor (const employee of employees) {\r\n\t\temployeesAppointments = await dataOperation(\r\n\t\t\tconnection,\r\n\t\t\temployeesAppointments,\r\n\t\t\temployee,\r\n\t\t\t[organizations],\r\n\t\t\ttenant\r\n\t\t);\r\n\t}\r\n\tawait connection.manager.save(employeesAppointments);\r\n};\r\n\r\nexport const createRandomEmployeeAppointment = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantEmployeeMap: Map<Tenant, IEmployee[]>,\r\n\ttenantOrganizationsMap: Map<Tenant, IOrganization[]>\r\n): Promise<EmployeeAppointment[]> => {\r\n\tif (!tenantEmployeeMap) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: tenantEmployeeMap not found, Employee Appointment  will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\tif (!tenantOrganizationsMap) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: tenantOrganizationsMap not found, Employee Appointment  will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tlet employeesAppointments: EmployeeAppointment[] = [];\r\n\r\n\tfor (const tenant of tenants) {\r\n\t\tconst tenantEmployees = tenantEmployeeMap.get(tenant);\r\n\t\tconst tenantOrgs = tenantOrganizationsMap.get(tenant);\r\n\r\n\t\tfor (const tenantEmployee of tenantEmployees) {\r\n\t\t\temployeesAppointments = await dataOperation(\r\n\t\t\t\tconnection,\r\n\t\t\t\temployeesAppointments,\r\n\t\t\t\ttenantEmployee,\r\n\t\t\t\ttenantOrgs,\r\n\t\t\t\ttenant\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\nconst dataOperation = async (\r\n\tconnection: Connection,\r\n\temployeesAppointments,\r\n\ttenantEmployee,\r\n\torganizations,\r\n\ttenant\r\n) => {\r\n\tfor (const organization of organizations) {\r\n\t\tconst employeesAppointment = new EmployeeAppointment();\r\n\r\n\t\tconst invitees = await connection.manager.find(AppointmentEmployee, {\r\n\t\t\twhere: [{ employeeId: tenantEmployee.id }]\r\n\t\t});\r\n\r\n\t\temployeesAppointment.employee = tenantEmployee;\r\n\t\temployeesAppointment.organization = organization;\r\n\t\temployeesAppointment.description = faker.name.jobDescriptor();\r\n\t\temployeesAppointment.location = faker.address.city();\r\n\t\temployeesAppointment.startDateTime = faker.date.between(\r\n\t\t\tnew Date(),\r\n\t\t\tmoment(new Date()).add(2, 'months').toDate()\r\n\t\t);\r\n\t\temployeesAppointment.endDateTime = moment(\r\n\t\t\temployeesAppointment.startDateTime\r\n\t\t)\r\n\t\t\t.add(1, 'hours')\r\n\t\t\t.toDate();\r\n\t\temployeesAppointment.invitees = invitees;\r\n\t\temployeesAppointment.agenda = faker.random.arrayElement(AGENDAS);\r\n\t\temployeesAppointment.tenant = tenant;\r\n\t\temployeesAppointments.push(employeesAppointment);\r\n\t}\r\n\r\n\tawait connection.manager.save(employeesAppointments);\r\n\treturn employeesAppointments;\r\n};\r\n","import { CrudService, IPagination } from '../core';\r\nimport { EmployeeAppointment } from './employee-appointment.entity';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository, FindManyOptions } from 'typeorm';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { IEmployeeAppointmentCreateInput } from '@gauzy/models';\r\nimport { environment as env } from '@env-api/environment';\r\nimport { sign, decode } from 'jsonwebtoken';\r\n\r\n@Injectable()\r\nexport class EmployeeAppointmentService extends CrudService<\r\n\tEmployeeAppointment\r\n> {\r\n\tconstructor(\r\n\t\t@InjectRepository(EmployeeAppointment)\r\n\t\tprivate readonly employeeAppointmentRepository: Repository<\r\n\t\t\tEmployeeAppointment\r\n\t\t>\r\n\t) {\r\n\t\tsuper(employeeAppointmentRepository);\r\n\t}\r\n\r\n\tasync findAllAppointments(\r\n\t\tfilter?: FindManyOptions<EmployeeAppointment>\r\n\t): Promise<IPagination<EmployeeAppointment>> {\r\n\t\tconst total = await this.employeeAppointmentRepository.count(filter);\r\n\t\tconst items = await this.employeeAppointmentRepository.find(filter);\r\n\r\n\t\treturn { items, total };\r\n\t}\r\n\r\n\tasync saveAppointment(\r\n\t\temployeeAppointmentRequest: IEmployeeAppointmentCreateInput\r\n\t): Promise<EmployeeAppointment> {\r\n\t\treturn await this.employeeAppointmentRepository.save(\r\n\t\t\temployeeAppointmentRequest\r\n\t\t);\r\n\t}\r\n\r\n\tsignAppointmentId(id: string) {\r\n\t\treturn sign(\r\n\t\t\t{\r\n\t\t\t\tappointmentId: id\r\n\t\t\t},\r\n\t\t\tenv.JWT_SECRET,\r\n\t\t\t{}\r\n\t\t);\r\n\t}\r\n\r\n\tdecode(token: string) {\r\n\t\treturn decode(token);\r\n\t}\r\n}\r\n","export { EmployeeAppointmentModule } from './employee-appointment.module';\r\nexport { EmployeeAppointment } from './employee-appointment.entity';\r\nexport { EmployeeAppointmentService } from './employee-appointment.service';\r\n","export const DEFAULT_EMPLOYEE_AWARDS = [\r\n\t{ name: 'Microsoft Most Valuable Professional (MVP)', year: '2015' },\r\n\t{ name: 'Google Developer Expert (GDE)', year: '2019' },\r\n\t{ name: 'Hackatoon Winner', year: '2018' }\r\n];\r\n","import { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport {\r\n\tController,\r\n\tHttpStatus,\r\n\tHttpCode,\r\n\tUseGuards,\r\n\tPost,\r\n\tBody,\r\n\tPut,\r\n\tParam,\r\n\tDelete,\r\n\tQuery,\r\n\tGet\r\n} from '@nestjs/common';\r\nimport { CrudController, IPagination } from '../core';\r\nimport { EmployeeAward } from './employee-award.entity';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { DeepPartial } from 'typeorm';\r\nimport { QueryDeepPartialEntity } from 'typeorm/query-builder/QueryPartialEntity';\r\nimport { EmployeeAwardService } from './employee-award.service';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('EmployeeAward')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class EmployeeAwardController extends CrudController<EmployeeAward> {\r\n\tconstructor(private readonly employeeAwardService: EmployeeAwardService) {\r\n\t\tsuper(employeeAwardService);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Create new record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully created.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.CREATED)\r\n\t@Post()\r\n\tasync create(\r\n\t\t@Body() entity: DeepPartial<EmployeeAward>\r\n\t): Promise<EmployeeAward> {\r\n\t\treturn this.employeeAwardService.create(entity);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Update an existing record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully edited.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Put(':id')\r\n\tasync update(\r\n\t\t@Param('id') id: string,\r\n\t\t@Body() entity: QueryDeepPartialEntity<EmployeeAward>\r\n\t): Promise<any> {\r\n\t\treturn this.employeeAwardService.update(id, entity);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Delete record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NO_CONTENT,\r\n\t\tdescription: 'The record has been successfully deleted'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Delete(':id')\r\n\tasync delete(@Param('id') id: string): Promise<any> {\r\n\t\treturn this.employeeAwardService.delete(id);\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find Employee Awards.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found Employee Awards',\r\n\t\ttype: EmployeeAward\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get()\r\n\tasync findAwardsByEmployeeId(\r\n\t\t@Query('data') data: string\r\n\t): Promise<IPagination<EmployeeAward>> {\r\n\t\tconst { findInput } = JSON.parse(data);\r\n\t\treturn this.employeeAwardService.findAll({\r\n\t\t\twhere: findInput\r\n\t\t});\r\n\t}\r\n}\r\n","import { Column, Entity, Index, ManyToOne } from 'typeorm';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsNotEmpty, IsString } from 'class-validator';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { IEmployeeAward } from '@gauzy/models';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('employee_award')\r\nexport class EmployeeAward extends TenantOrganizationBase\r\n\timplements IEmployeeAward {\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Index()\r\n\t@Column()\r\n\tname: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Column()\r\n\tyear: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Column()\r\n\temployeeId: string;\r\n\r\n\t@ManyToOne((type) => Employee, (employee) => employee.id)\r\n\temployee: Employee;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { EmployeeAward } from './employee-award.entity';\r\nimport { EmployeeAwardController } from './employee-award.controller';\r\nimport { EmployeeAwardService } from './employee-award.service';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [TypeOrmModule.forFeature([EmployeeAward]), TenantModule],\r\n\tcontrollers: [EmployeeAwardController],\r\n\tproviders: [EmployeeAwardService]\r\n})\r\nexport class EmployeeAwardModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { EmployeeAward } from './employee-award.entity';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { DEFAULT_EMPLOYEE_AWARDS } from './default-employee-awards';\r\n\r\nexport const createDefaultEmployeeAwards = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\temployee: Employee\r\n): Promise<EmployeeAward[]> => {\r\n\tconst awards: EmployeeAward[] = DEFAULT_EMPLOYEE_AWARDS.map(\r\n\t\t({ name, year }) => {\r\n\t\t\tconst award = new EmployeeAward();\r\n\t\t\taward.name = name;\r\n\t\t\taward.year = year;\r\n\t\t\taward.employee = employee;\r\n\t\t\taward.employeeId = employee.id;\r\n\t\t\taward.tenant = tenant;\r\n\t\t\taward.organization = employee.organization;\r\n\r\n\t\t\treturn award;\r\n\t\t}\r\n\t);\r\n\r\n\treturn await connection.manager.save(awards);\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { CrudService } from '../core/crud/crud.service';\r\nimport { EmployeeAward } from './employee-award.entity';\r\n\r\n@Injectable()\r\nexport class EmployeeAwardService extends CrudService<EmployeeAward> {\r\n\tconstructor(\r\n\t\t@InjectRepository(EmployeeAward)\r\n\t\tprivate readonly employeeAwardRepository: Repository<EmployeeAward>\r\n\t) {\r\n\t\tsuper(employeeAwardRepository);\r\n\t}\r\n}\r\n","import { IJobPreset } from '@gauzy/models';\r\nimport { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class CreateJobPresetCommand implements ICommand {\r\n\tstatic readonly type = '[JobPreset] Create';\r\n\r\n\tconstructor(public readonly input?: IJobPreset) {}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { RequestContext } from '../../../core/context/request-context';\r\nimport { Employee } from '../../../employee/employee.entity';\r\nimport { JobPresetUpworkJobSearchCriterion } from '../../job-preset-upwork-job-search-criterion.entity';\r\nimport { JobPreset } from '../../job-preset.entity';\r\nimport { CreateJobPresetCommand } from '../create-job-preset.command';\r\n\r\n@CommandHandler(CreateJobPresetCommand)\r\nexport class CreateJobPresetHandler\r\n\timplements ICommandHandler<CreateJobPresetCommand> {\r\n\tconstructor(\r\n\t\t@InjectRepository(JobPreset)\r\n\t\tprivate readonly jobPresetRepository: Repository<JobPreset>,\r\n\t\t@InjectRepository(Employee)\r\n\t\tprivate readonly employeeRepository: Repository<Employee>,\r\n\t\t@InjectRepository(JobPresetUpworkJobSearchCriterion)\r\n\t\tprivate readonly jobPresetUpworkJobSearchCriterionRepository: Repository<\r\n\t\t\tJobPresetUpworkJobSearchCriterion\r\n\t\t>\r\n\t) {}\r\n\r\n\tpublic async execute(command: CreateJobPresetCommand): Promise<JobPreset> {\r\n\t\tconst { input } = command;\r\n\r\n\t\tif (!input.organizationId) {\r\n\t\t\tconst user = RequestContext.currentUser();\r\n\t\t\tconst employee = await this.employeeRepository.findOne(\r\n\t\t\t\tuser.employeeId\r\n\t\t\t);\r\n\t\t\tinput.organizationId = employee.organizationId;\r\n\t\t}\r\n\t\tinput.tenantId = RequestContext.currentTenantId();\r\n\r\n\t\tconst jobPreset = new JobPreset(input);\r\n\r\n\t\tdelete jobPreset.jobPresetCriterions;\r\n\t\tawait this.jobPresetRepository.save(jobPreset);\r\n\r\n\t\tlet jobPresetCriterion: JobPresetUpworkJobSearchCriterion[] = [];\r\n\r\n\t\tif (input.jobPresetCriterions && input.jobPresetCriterions.length > 0) {\r\n\t\t\tjobPresetCriterion = input.jobPresetCriterions.map(\r\n\t\t\t\t(criterion) =>\r\n\t\t\t\t\tnew JobPresetUpworkJobSearchCriterion({\r\n\t\t\t\t\t\t...criterion,\r\n\t\t\t\t\t\tjobPresetId: jobPreset.id\r\n\t\t\t\t\t})\r\n\t\t\t);\r\n\r\n\t\t\tawait this.jobPresetUpworkJobSearchCriterionRepository.delete({\r\n\t\t\t\tjobPresetId: jobPreset.id\r\n\t\t\t});\r\n\r\n\t\t\tawait this.jobPresetUpworkJobSearchCriterionRepository.save(\r\n\t\t\t\tjobPresetCriterion\r\n\t\t\t);\r\n\r\n\t\t\tjobPreset.jobPresetCriterions = jobPresetCriterion;\r\n\r\n\t\t\t// jobPreset.jobPresetCriterion = jobPresetCriterion;\r\n\t\t\t// await this.jobPresetRepository.save(jobPreset);\r\n\t\t}\r\n\t\treturn jobPreset;\r\n\t}\r\n}\r\n","import { CreateJobPresetHandler } from './create-job-preset.handler';\r\nimport { SaveEmployeeCriterionHandler } from './save-employee-criterion.handler';\r\nimport { SaveEmployeePresetHandler } from './save-employee-preset.handler';\r\nimport { SavePresetCriterionHandler } from './save-preset-criterion.handler';\r\n\r\nexport const Handlers = [\r\n\tCreateJobPresetHandler,\r\n\tSavePresetCriterionHandler,\r\n\tSaveEmployeePresetHandler,\r\n\tSaveEmployeeCriterionHandler\r\n];\r\n","import { GauzyAIService } from '@gauzy/integration-ai';\r\nimport { IMatchingCriterions } from '@gauzy/models';\r\nimport { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { RequestContext } from '../../../core/context/request-context';\r\nimport { Employee } from '../../../employee/employee.entity';\r\nimport { EmployeeUpworkJobsSearchCriterion } from '../../employee-upwork-jobs-search-criterion.entity';\r\nimport { JobPresetUpworkJobSearchCriterion } from '../../job-preset-upwork-job-search-criterion.entity';\r\nimport { SaveEmployeeCriterionCommand } from '../save-employee-criterion.command';\r\n\r\n@CommandHandler(SaveEmployeeCriterionCommand)\r\nexport class SaveEmployeeCriterionHandler\r\n\timplements ICommandHandler<SaveEmployeeCriterionCommand> {\r\n\tconstructor(\r\n\t\t@InjectRepository(Employee)\r\n\t\tprivate readonly employeeRepository: Repository<Employee>,\r\n\t\t@InjectRepository(EmployeeUpworkJobsSearchCriterion)\r\n\t\tprivate readonly employeeUpworkJobsSearchCriterionRepository: Repository<\r\n\t\t\tEmployeeUpworkJobsSearchCriterion\r\n\t\t>,\r\n\t\t@InjectRepository(JobPresetUpworkJobSearchCriterion)\r\n\t\tprivate readonly jobPresetUpworkJobSearchCriterionRepository: Repository<\r\n\t\t\tJobPresetUpworkJobSearchCriterion\r\n\t\t>,\r\n\t\tprivate gauzyAIService: GauzyAIService\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: SaveEmployeeCriterionCommand\r\n\t): Promise<IMatchingCriterions> {\r\n\t\tconst { input } = command;\r\n\r\n\t\tinput.tenantId = RequestContext.currentTenantId();\r\n\r\n\t\tif (!input.organizationId) {\r\n\t\t\tconst user = RequestContext.currentUser();\r\n\t\t\tconst employee = await this.employeeRepository.findOne(\r\n\t\t\t\tinput.employeeId || user.employeeId\r\n\t\t\t);\r\n\t\t\tinput.organizationId = employee.organizationId;\r\n\t\t}\r\n\r\n\t\tconst creation = new EmployeeUpworkJobsSearchCriterion(input);\r\n\r\n\t\tawait this.employeeUpworkJobsSearchCriterionRepository.save(creation);\r\n\r\n\t\tconst employee = await this.employeeRepository.findOne(\r\n\t\t\tinput.employeeId,\r\n\t\t\t{ relations: ['user'] }\r\n\t\t);\r\n\t\tconst criteria = await this.employeeUpworkJobsSearchCriterionRepository.find(\r\n\t\t\t{\r\n\t\t\t\temployeeId: input.employeeId,\r\n\t\t\t\tjobPresetId: input.jobPresetId\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\tthis.gauzyAIService.syncGauzyEmployeeJobSearchCriteria(\r\n\t\t\temployee,\r\n\t\t\tcriteria\r\n\t\t);\r\n\t\treturn creation;\r\n\t}\r\n}\r\n","import { GauzyAIService } from '@gauzy/integration-ai';\r\nimport { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { In, Repository } from 'typeorm';\r\nimport { Employee } from '../../../employee/employee.entity';\r\nimport { EmployeeUpworkJobsSearchCriterion } from '../../employee-upwork-jobs-search-criterion.entity';\r\nimport { JobPreset } from '../../job-preset.entity';\r\nimport { SaveEmployeePresetCommand } from '../save-employee-preset.command';\r\n\r\n@CommandHandler(SaveEmployeePresetCommand)\r\nexport class SaveEmployeePresetHandler\r\n\timplements ICommandHandler<SaveEmployeePresetCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly gauzyAIService: GauzyAIService,\r\n\t\t@InjectRepository(JobPreset)\r\n\t\tprivate readonly jobPresetRepository: Repository<JobPreset>,\r\n\t\t@InjectRepository(Employee)\r\n\t\tprivate readonly employeeRepository: Repository<Employee>,\r\n\t\t@InjectRepository(EmployeeUpworkJobsSearchCriterion)\r\n\t\tprivate readonly employeeUpworkJobsSearchCriterionRepository: Repository<\r\n\t\t\tEmployeeUpworkJobsSearchCriterion\r\n\t\t>\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: SaveEmployeePresetCommand\r\n\t): Promise<JobPreset[]> {\r\n\t\tconst { input } = command;\r\n\r\n\t\tconst employee = await this.employeeRepository.findOne(\r\n\t\t\tinput.employeeId,\r\n\t\t\t{\r\n\t\t\t\trelations: ['jobPresets']\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\tconst jobPreset = await this.jobPresetRepository.findOne(\r\n\t\t\t{\r\n\t\t\t\tid: In(input.jobPresetIds)\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\trelations: ['jobPresetCriterions']\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\tconst employeeCriterions = jobPreset.jobPresetCriterions.map((item) => {\r\n\t\t\treturn new EmployeeUpworkJobsSearchCriterion({\r\n\t\t\t\t...item,\r\n\t\t\t\temployeeId: input.employeeId\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\temployee.jobPresets = input.jobPresetIds.map(\r\n\t\t\t(id) => new JobPreset({ id })\r\n\t\t);\r\n\t\tthis.employeeRepository.save(employee);\r\n\r\n\t\tawait this.employeeUpworkJobsSearchCriterionRepository.delete({\r\n\t\t\temployeeId: input.employeeId\r\n\t\t});\r\n\r\n\t\tawait this.employeeUpworkJobsSearchCriterionRepository.save(\r\n\t\t\temployeeCriterions\r\n\t\t);\r\n\r\n\t\tthis.gauzyAIService.syncGauzyEmployeeJobSearchCriteria(\r\n\t\t\temployee,\r\n\t\t\temployeeCriterions\r\n\t\t);\r\n\r\n\t\treturn employeeCriterions;\r\n\t}\r\n}\r\n","import { IMatchingCriterions } from '@gauzy/models';\r\nimport { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { RequestContext } from '../../../core/context/request-context';\r\nimport { Employee } from '../../../employee/employee.entity';\r\nimport { JobPresetUpworkJobSearchCriterion } from '../../job-preset-upwork-job-search-criterion.entity';\r\nimport { SavePresetCriterionCommand } from '../save-preset-criterion.command';\r\n\r\n@CommandHandler(SavePresetCriterionCommand)\r\nexport class SavePresetCriterionHandler\r\n\timplements ICommandHandler<SavePresetCriterionCommand> {\r\n\tconstructor(\r\n\t\t@InjectRepository(Employee)\r\n\t\tprivate readonly employeeRepository: Repository<Employee>,\r\n\t\t@InjectRepository(JobPresetUpworkJobSearchCriterion)\r\n\t\tprivate readonly jobPresetUpworkJobSearchCriterionRepository: Repository<\r\n\t\t\tJobPresetUpworkJobSearchCriterion\r\n\t\t>\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: SavePresetCriterionCommand\r\n\t): Promise<IMatchingCriterions> {\r\n\t\tconst { input } = command;\r\n\r\n\t\tif (!input.organizationId) {\r\n\t\t\tconst user = RequestContext.currentUser();\r\n\t\t\tconst employee = await this.employeeRepository.findOne(\r\n\t\t\t\tuser.employeeId\r\n\t\t\t);\r\n\t\t\tinput.organizationId = employee.organizationId;\r\n\t\t}\r\n\t\tinput.tenantId = RequestContext.currentTenantId();\r\n\r\n\t\tconst creation = new JobPresetUpworkJobSearchCriterion(input);\r\n\t\tawait this.jobPresetUpworkJobSearchCriterionRepository.save(creation);\r\n\r\n\t\treturn creation;\r\n\t}\r\n}\r\n","import { IMatchingCriterions } from '@gauzy/models';\r\nimport { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class SaveEmployeeCriterionCommand implements ICommand {\r\n\tstatic readonly type = '[EmployeeCriterion] Create';\r\n\r\n\tconstructor(public readonly input?: IMatchingCriterions) {}\r\n}\r\n","import { IEmployeePresetInput } from '@gauzy/models';\r\nimport { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class SaveEmployeePresetCommand implements ICommand {\r\n\tstatic readonly type = '[EmployeePreset] Create';\r\n\r\n\tconstructor(public readonly input?: IEmployeePresetInput) {}\r\n}\r\n","import { IMatchingCriterions } from '@gauzy/models';\r\nimport { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class SavePresetCriterionCommand implements ICommand {\r\n\tstatic readonly type = '[JobPresetCriterion] Create';\r\n\r\n\tconstructor(public readonly input?: IMatchingCriterions) {}\r\n}\r\n","import { GauzyAIService } from '@gauzy/integration-ai';\r\nimport { Module } from '@nestjs/common';\r\nimport { CqrsModule } from '@nestjs/cqrs';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { EmployeeService } from '../employee/employee.service';\r\nimport { Handlers } from './commands/handlers';\r\nimport { EmployeePresetController } from './employee-preset.controller';\r\nimport { EmployeeUpworkJobsSearchCriterion } from './employee-upwork-jobs-search-criterion.entity';\r\nimport { JobPresetUpworkJobSearchCriterion } from './job-preset-upwork-job-search-criterion.entity';\r\nimport { JobPreset } from './job-preset.entity';\r\nimport { JobPresetService } from './job-preset.service';\r\nimport { JobSearchCategoryController } from './job-search-category/job-search-category.controller';\r\nimport { JobSearchCategory } from './job-search-category/job-search-category.entity';\r\nimport { JobSearchCategoryService } from './job-search-category/job-search-category.service';\r\nimport { JobSearchOccupationController } from './job-search-occupation/job-search-occupation.controller';\r\nimport { JobSearchOccupation } from './job-search-occupation/job-search-occupation.entity';\r\nimport { JobSearchOccupationService } from './job-search-occupation/job-search-occupation.service';\r\nimport { JobSearchPresetController } from './job-search-preset.controller';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([\r\n\t\t\tJobPreset,\r\n\t\t\tJobPresetUpworkJobSearchCriterion,\r\n\t\t\tEmployeeUpworkJobsSearchCriterion,\r\n\t\t\tJobSearchOccupation,\r\n\t\t\tJobSearchCategory,\r\n\t\t\tEmployee\r\n\t\t]),\r\n\t\tCqrsModule\r\n\t],\r\n\tcontrollers: [\r\n\t\tJobSearchOccupationController,\r\n\t\tJobSearchCategoryController,\r\n\t\tEmployeePresetController,\r\n\t\tJobSearchPresetController\r\n\t],\r\n\tproviders: [\r\n\t\t...Handlers,\r\n\t\tEmployeeService,\r\n\t\tJobPresetService,\r\n\t\tJobSearchCategoryService,\r\n\t\tJobSearchOccupationService,\r\n\t\tGauzyAIService\r\n\t],\r\n\texports: [\r\n\t\tJobPresetService,\r\n\t\tJobSearchCategoryService,\r\n\t\tJobSearchOccupationService\r\n\t]\r\n})\r\nexport class EmployeeJobPresetModule {}\r\n","import {\r\n\tController,\r\n\tHttpStatus,\r\n\tGet,\r\n\tQuery,\r\n\tUseGuards,\r\n\tPost,\r\n\tBody,\r\n\tParam,\r\n\tDelete\r\n} from '@nestjs/common';\r\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport {\r\n\tIEmployeePresetInput,\r\n\tIGetMatchingCriterions,\r\n\tIMatchingCriterions\r\n} from '@gauzy/models';\r\nimport { JobPresetService } from './job-preset.service';\r\nimport { JobPreset } from './job-preset.entity';\r\n\r\n@ApiTags('EmployeeJobPreset')\r\n@UseGuards(AuthGuard('jwt'))\r\n@Controller('employee')\r\nexport class EmployeePresetController {\r\n\tconstructor(private readonly jobPresetService: JobPresetService) {}\r\n\r\n\t@ApiOperation({ summary: 'Save Employee preset' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found employee job preset',\r\n\t\ttype: JobPreset\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get(':employeeId')\r\n\tasync getEmployeePreset(@Param('employeeId') employeeId: string) {\r\n\t\treturn this.jobPresetService.getEmployeePreset(employeeId);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find all employee job posts' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found employee job preset',\r\n\t\ttype: JobPreset\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get(':employeeId/criterion')\r\n\tasync getEmployeeCriterion(\r\n\t\t@Param('employeeId') employeeId: string,\r\n\t\t@Query() request: IGetMatchingCriterions\r\n\t) {\r\n\t\treturn this.jobPresetService.getEmployeeCriterion({\r\n\t\t\t...request,\r\n\t\t\temployeeId\r\n\t\t});\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find all employee job posts' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found employee job preset',\r\n\t\ttype: JobPreset\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Post(':employeeId/criterion')\r\n\tasync saveUpdateEmployeeCriterion(\r\n\t\t@Param('employeeId') employeeId: string,\r\n\t\t@Body() request: IMatchingCriterions\r\n\t) {\r\n\t\treturn this.jobPresetService.saveEmployeeCriterion({\r\n\t\t\t...request,\r\n\t\t\temployeeId\r\n\t\t});\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Save Employee preset' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found employee job preset',\r\n\t\ttype: JobPreset\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Post()\r\n\tasync saveEmployeePreset(@Body() request: IEmployeePresetInput) {\r\n\t\treturn this.jobPresetService.saveEmployeePreset(request);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find all employee job posts' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found employee job preset',\r\n\t\ttype: JobPreset\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Delete(':employeeId/criterion/:criterionId')\r\n\tasync deleteEmployeeCriterion(\r\n\t\t@Param('criterionId') criterionId: string,\r\n\t\t@Param('employeeId') employeeId: string\r\n\t) {\r\n\t\treturn this.jobPresetService.deleteEmployeeCriterion(\r\n\t\t\tcriterionId,\r\n\t\t\temployeeId\r\n\t\t);\r\n\t}\r\n}\r\n","import { Column, Entity, ManyToOne } from 'typeorm';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsNotEmpty, IsString } from 'class-validator';\r\nimport {\r\n\tIEmployee,\r\n\tIEmployeeUpworkJobsSearchCriterion,\r\n\tIJobPreset,\r\n\tIJobSearchCategory,\r\n\tIJobSearchOccupation,\r\n\tJobPostTypeEnum\r\n} from '@gauzy/models';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\nimport { JobPreset } from './job-preset.entity';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { JobSearchOccupation } from './job-search-occupation/job-search-occupation.entity';\r\nimport { JobSearchCategory } from './job-search-category/job-search-category.entity';\r\n\r\n@Entity('employee_upwork_job_search_criterion')\r\nexport class EmployeeUpworkJobsSearchCriterion\r\n\textends TenantOrganizationBase\r\n\timplements IEmployeeUpworkJobsSearchCriterion {\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Column({ nullable: true })\r\n\tjobPresetId?: string;\r\n\r\n\t@ManyToOne(() => JobPreset, (jobPreset) => jobPreset.employeeCriterions)\r\n\tjobPreset?: IJobPreset;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Column()\r\n\temployeeId?: string;\r\n\r\n\t@ManyToOne(() => Employee, (employee) => employee.id)\r\n\temployee?: IEmployee;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Column({ nullable: true })\r\n\toccupationId?: string;\r\n\r\n\t@ManyToOne(\r\n\t\t() => JobSearchOccupation,\r\n\t\t(occupation) => occupation.employeeCriterions\r\n\t)\r\n\toccupation?: IJobSearchOccupation;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Column({ nullable: true })\r\n\tcategoryId?: string;\r\n\r\n\t@ManyToOne(\r\n\t\t() => JobSearchCategory,\r\n\t\t(category) => category.employeeCriterions\r\n\t)\r\n\tcategory?: IJobSearchCategory;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Column({ nullable: true })\r\n\tkeyword?: string;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Column({ type: 'text', nullable: true })\r\n\tjobType?: JobPostTypeEnum;\r\n}\r\n","import { Column, Entity, ManyToOne } from 'typeorm';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsNotEmpty, IsString } from 'class-validator';\r\nimport {\r\n\tIJobPresetUpworkJobSearchCriterion,\r\n\tJobPostTypeEnum\r\n} from '@gauzy/models';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\nimport { JobPreset } from './job-preset.entity';\r\nimport { JobSearchCategory } from './job-search-category/job-search-category.entity';\r\nimport { JobSearchOccupation } from './job-search-occupation/job-search-occupation.entity';\r\n\r\n@Entity('job_preset_upwork_job_search_criterion')\r\nexport class JobPresetUpworkJobSearchCriterion\r\n\textends TenantOrganizationBase\r\n\timplements IJobPresetUpworkJobSearchCriterion {\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Column()\r\n\tjobPresetId?: string;\r\n\r\n\t@ManyToOne(() => JobPreset, (jobPreset) => jobPreset.jobPresetCriterions)\r\n\tjobPreset?: JobPreset;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Column({ nullable: true })\r\n\toccupationId?: string;\r\n\r\n\t@ManyToOne(\r\n\t\t() => JobSearchOccupation,\r\n\t\t(occupation) => occupation.jobPresetCriterions\r\n\t)\r\n\toccupation?: JobSearchOccupation;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Column({ nullable: true })\r\n\tcategoryId?: string;\r\n\r\n\t@ManyToOne(\r\n\t\t() => JobSearchCategory,\r\n\t\t(category) => category.jobPresetCriterions\r\n\t)\r\n\tcategory?: JobSearchCategory;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Column({ nullable: true })\r\n\tkeyword?: string;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Column({ type: 'text', nullable: true })\r\n\tjobType?: JobPostTypeEnum;\r\n}\r\n","import {\r\n\tColumn,\r\n\tEntity,\r\n\tIndex,\r\n\tJoinTable,\r\n\tManyToMany,\r\n\tOneToMany\r\n} from 'typeorm';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsNotEmpty, IsString } from 'class-validator';\r\nimport {\r\n\tIEmployeeUpworkJobsSearchCriterion,\r\n\tIJobPresetUpworkJobSearchCriterion,\r\n\tIJobPreset\r\n} from '@gauzy/models';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { JobPresetUpworkJobSearchCriterion } from './job-preset-upwork-job-search-criterion.entity';\r\nimport { EmployeeUpworkJobsSearchCriterion } from './employee-upwork-jobs-search-criterion.entity';\r\n\r\n@Entity('job_preset')\r\nexport class JobPreset extends TenantOrganizationBase implements IJobPreset {\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Index()\r\n\t@Column()\r\n\tname?: string;\r\n\r\n\t@ManyToMany(() => Employee, (employee) => employee.jobPresets, {\r\n\t\tcascade: true\r\n\t})\r\n\t@JoinTable({\r\n\t\tname: 'employee_job_preset'\r\n\t})\r\n\temployees?: Employee[];\r\n\r\n\t@OneToMany(\r\n\t\t() => EmployeeUpworkJobsSearchCriterion,\r\n\t\t(employeeUpworkJobsSearchCriterion) =>\r\n\t\t\temployeeUpworkJobsSearchCriterion.jobPreset,\r\n\t\t{\r\n\t\t\tonDelete: 'CASCADE'\r\n\t\t}\r\n\t)\r\n\temployeeCriterions?: IEmployeeUpworkJobsSearchCriterion[];\r\n\r\n\t@OneToMany(\r\n\t\t() => JobPresetUpworkJobSearchCriterion,\r\n\t\t(jobPresetUpworkJobSearchCriterion) =>\r\n\t\t\tjobPresetUpworkJobSearchCriterion.jobPreset,\r\n\t\t{\r\n\t\t\tonDelete: 'CASCADE'\r\n\t\t}\r\n\t)\r\n\tjobPresetCriterions?: IJobPresetUpworkJobSearchCriterion[];\r\n}\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository, SelectQueryBuilder } from 'typeorm';\r\nimport { JobPreset } from './job-preset.entity';\r\nimport {\r\n\tIEmployeePresetInput,\r\n\tIGetJobPresetCriterionInput,\r\n\tIGetJobPresetInput,\r\n\tIGetMatchingCriterions,\r\n\tIJobPreset,\r\n\tIMatchingCriterions\r\n} from '@gauzy/models';\r\nimport { CrudService } from '../core/crud/crud.service';\r\nimport { JobPresetUpworkJobSearchCriterion } from './job-preset-upwork-job-search-criterion.entity';\r\nimport { EmployeeUpworkJobsSearchCriterion } from './employee-upwork-jobs-search-criterion.entity';\r\nimport { CommandBus } from '@nestjs/cqrs';\r\nimport { CreateJobPresetCommand } from './commands/create-job-preset.command';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { SavePresetCriterionCommand } from './commands/save-preset-criterion.command';\r\nimport { SaveEmployeePresetCommand } from './commands/save-employee-preset.command';\r\nimport { SaveEmployeeCriterionCommand } from './commands/save-employee-criterion.command';\r\n\r\n@Injectable()\r\nexport class JobPresetService extends CrudService<JobPreset> {\r\n\tconstructor(\r\n\t\tprivate readonly commandBus: CommandBus,\r\n\t\t@InjectRepository(JobPreset)\r\n\t\tprivate readonly jobPresetRepository: Repository<JobPreset>,\r\n\t\t@InjectRepository(JobPresetUpworkJobSearchCriterion)\r\n\t\tprivate readonly jobPresetUpworkJobSearchCriterionRepository: Repository<\r\n\t\t\tJobPresetUpworkJobSearchCriterion\r\n\t\t>,\r\n\t\t@InjectRepository(EmployeeUpworkJobsSearchCriterion)\r\n\t\tprivate readonly employeeUpworkJobsSearchCriterionRepository: Repository<\r\n\t\t\tEmployeeUpworkJobsSearchCriterion\r\n\t\t>,\r\n\t\t@InjectRepository(Employee)\r\n\t\tprivate readonly employeeRepository: Repository<Employee>\r\n\t) {\r\n\t\tsuper(jobPresetRepository);\r\n\t}\r\n\r\n\tpublic async getAll(request?: IGetJobPresetInput) {\r\n\t\tconst data = await this.jobPresetRepository.find({\r\n\t\t\tjoin: {\r\n\t\t\t\talias: 'job_preset',\r\n\t\t\t\tleftJoin: {\r\n\t\t\t\t\temployees: 'job_preset.employees'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\trelations: ['jobPresetCriterions'],\r\n\t\t\torder: {\r\n\t\t\t\tname: 'ASC'\r\n\t\t\t},\r\n\t\t\twhere: (qb: SelectQueryBuilder<IJobPreset>) => {\r\n\t\t\t\tif (request.search) {\r\n\t\t\t\t\tqb.andWhere('name LIKE :search', {\r\n\t\t\t\t\t\tsearch: request.search\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif (request.organizationId) {\r\n\t\t\t\t\tqb.andWhere(\r\n\t\t\t\t\t\t`\"${qb.alias}\".\"organizationId\" = :organizationId`,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\torganizationId: request.organizationId\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tif (request.employeeId) {\r\n\t\t\t\t\tqb.andWhere(`\"employees\".\"id\" = :employeeId`, {\r\n\t\t\t\t\t\temployeeId: request.employeeId\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn data;\r\n\t}\r\n\r\n\tpublic async get(id: string, request?: IGetJobPresetCriterionInput) {\r\n\t\tconst query = this.jobPresetRepository.createQueryBuilder();\r\n\t\tquery.leftJoinAndSelect(\r\n\t\t\t`${query.alias}.jobPresetCriterions`,\r\n\t\t\t'jobPresetCriterions'\r\n\t\t);\r\n\t\tif (request.employeeId) {\r\n\t\t\tquery.leftJoinAndSelect(\r\n\t\t\t\t`${query.alias}.employeeCriterions`,\r\n\t\t\t\t'employeeCriterions',\r\n\t\t\t\t'employeeCriterions.employeeId = :employeeId',\r\n\t\t\t\t{ employeeId: request.employeeId }\r\n\t\t\t);\r\n\t\t}\r\n\t\tquery.andWhere(`${query.alias}.id = :id`, { id });\r\n\r\n\t\treturn query.getOne();\r\n\t}\r\n\r\n\tpublic getJobPresetCriterion(presetId: string) {\r\n\t\treturn this.jobPresetUpworkJobSearchCriterionRepository.find({\r\n\t\t\twhere: {\r\n\t\t\t\tpresetId: presetId\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic getEmployeeCriterion(input: IGetMatchingCriterions) {\r\n\t\treturn this.employeeUpworkJobsSearchCriterionRepository.find({\r\n\t\t\twhere: {\r\n\t\t\t\t...(input.jobPresetId ? { presetId: input.jobPresetId } : {}),\r\n\t\t\t\temployeeId: input.employeeId\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic async createJobPreset(request?: IJobPreset) {\r\n\t\treturn this.commandBus.execute(new CreateJobPresetCommand(request));\r\n\t}\r\n\r\n\tasync saveJobPresetCriterion(request: IMatchingCriterions) {\r\n\t\treturn this.commandBus.execute(new SavePresetCriterionCommand(request));\r\n\t}\r\n\r\n\tasync saveEmployeeCriterion(request: IMatchingCriterions) {\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew SaveEmployeeCriterionCommand(request)\r\n\t\t);\r\n\t}\r\n\r\n\tasync getEmployeePreset(employeeId: string) {\r\n\t\tconst employee = await this.employeeRepository.findOne(employeeId, {\r\n\t\t\trelations: ['jobPresets']\r\n\t\t});\r\n\t\treturn employee.jobPresets;\r\n\t}\r\n\r\n\tasync saveEmployeePreset(request: IEmployeePresetInput) {\r\n\t\treturn this.commandBus.execute(new SaveEmployeePresetCommand(request));\r\n\t}\r\n\r\n\tdeleteEmployeeCriterion(creationId: string, employeeId: string) {\r\n\t\treturn this.employeeUpworkJobsSearchCriterionRepository.delete({\r\n\t\t\tid: creationId,\r\n\t\t\temployeeId: employeeId\r\n\t\t});\r\n\t}\r\n\r\n\tdeleteJobPresetCriterion(creationId: string) {\r\n\t\treturn this.jobPresetUpworkJobSearchCriterionRepository.delete(\r\n\t\t\tcreationId\r\n\t\t);\r\n\t}\r\n}\r\n","import { Controller, UseGuards } from '@nestjs/common';\r\nimport { ApiTags } from '@nestjs/swagger';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { CrudController } from '../../core/crud/crud.controller';\r\nimport { JobSearchCategory } from './job-search-category.entity';\r\nimport { JobSearchCategoryService } from './job-search-category.service';\r\n\r\n@ApiTags('JobSearchCategory')\r\n@UseGuards(AuthGuard('jwt'))\r\n@Controller('job-search-category')\r\nexport class JobSearchCategoryController extends CrudController<\r\n\tJobSearchCategory\r\n> {\r\n\tconstructor(categoryService: JobSearchCategoryService) {\r\n\t\tsuper(categoryService);\r\n\t}\r\n}\r\n","import { Column, Entity, Index, OneToMany } from 'typeorm';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsNotEmpty, IsString } from 'class-validator';\r\nimport {\r\n\tJobPostSourceEnum,\r\n\tIJobPreset,\r\n\tIEmployeeUpworkJobsSearchCriterion,\r\n\tIJobPresetUpworkJobSearchCriterion\r\n} from '@gauzy/models';\r\nimport { TenantOrganizationBase } from '../../core/entities/tenant-organization-base';\r\nimport { JobPresetUpworkJobSearchCriterion } from '../job-preset-upwork-job-search-criterion.entity';\r\nimport { EmployeeUpworkJobsSearchCriterion } from '../employee-upwork-jobs-search-criterion.entity';\r\n\r\n@Entity('job_search_category')\r\nexport class JobSearchCategory\r\n\textends TenantOrganizationBase\r\n\timplements IJobPreset {\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Index()\r\n\t@Column()\r\n\tname?: string;\r\n\r\n\t// Id of category in the job source (e.g. Upwork)\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@Index()\r\n\t@Column({ nullable: true })\r\n\tjobSourceCategoryId?: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Index()\r\n\t@Column({ type: 'text', default: JobPostSourceEnum.UPWORK })\r\n\tjobSource?: JobPostSourceEnum;\r\n\r\n\t@OneToMany(\r\n\t\t() => EmployeeUpworkJobsSearchCriterion,\r\n\t\t(employeeUpworkJobsSearchCriterion) =>\r\n\t\t\temployeeUpworkJobsSearchCriterion.jobPreset,\r\n\t\t{\r\n\t\t\tonDelete: 'CASCADE'\r\n\t\t}\r\n\t)\r\n\temployeeCriterions?: IEmployeeUpworkJobsSearchCriterion[];\r\n\r\n\t@OneToMany(\r\n\t\t() => JobPresetUpworkJobSearchCriterion,\r\n\t\t(jobPresetUpworkJobSearchCriterion) =>\r\n\t\t\tjobPresetUpworkJobSearchCriterion.jobPreset,\r\n\t\t{\r\n\t\t\tonDelete: 'CASCADE'\r\n\t\t}\r\n\t)\r\n\tjobPresetCriterions?: IJobPresetUpworkJobSearchCriterion[];\r\n}\r\n","import { Connection } from 'typeorm';\r\nimport { IOrganization, JobPostSourceEnum } from '@gauzy/models';\r\nimport { Tenant } from '../../tenant/tenant.entity';\r\nimport { JobSearchCategory } from './job-search-category.entity';\r\n\r\nexport const createDefaultJobSearchCategories = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\torganization: IOrganization\r\n): Promise<JobSearchCategory[]> => {\r\n\tconst categories: JobSearchCategory[] = [];\r\n\r\n\tconst upworkCategories = [\r\n\t\t{\r\n\t\t\tname: 'IT & Networking',\r\n\t\t\tjobSourceCategoryId: '531770282580668419'\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'Web, Mobile & Software Dev',\r\n\t\t\tjobSourceCategoryId: '531770282580668418'\r\n\t\t}\r\n\t];\r\n\r\n\tupworkCategories.forEach((category) => {\r\n\t\tconst cat = new JobSearchCategory();\r\n\r\n\t\tcat.jobSource = JobPostSourceEnum.UPWORK;\r\n\t\tcat.organizationId = organization.id;\r\n\t\tcat.tenantId = tenant.id;\r\n\t\tcat.name = category.name;\r\n\t\tcat.jobSourceCategoryId = category.jobSourceCategoryId;\r\n\r\n\t\tcategories.push(cat);\r\n\t});\r\n\r\n\tawait insertCategories(connection, categories);\r\n\treturn categories;\r\n};\r\n\r\nconst insertCategories = async (\r\n\tconnection: Connection,\r\n\tcategories: JobSearchCategory[]\r\n): Promise<void> => {\r\n\tawait connection.manager.save(categories);\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { CrudService } from '../../core/crud/crud.service';\r\nimport { JobSearchCategory } from './job-search-category.entity';\r\n\r\n@Injectable()\r\nexport class JobSearchCategoryService extends CrudService<JobSearchCategory> {\r\n\tconstructor(\r\n\t\t@InjectRepository(JobSearchCategory)\r\n\t\tcategoryRepository: Repository<JobSearchCategory>\r\n\t) {\r\n\t\tsuper(categoryRepository);\r\n\t}\r\n}\r\n","import { Controller, UseGuards } from '@nestjs/common';\r\nimport { ApiTags } from '@nestjs/swagger';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { JobSearchOccupationService } from './job-search-occupation.service';\r\nimport { CrudController } from '../../core/crud/crud.controller';\r\nimport { JobSearchOccupation } from './job-search-occupation.entity';\r\n\r\n@ApiTags('JobSearchOccupation')\r\n@UseGuards(AuthGuard('jwt'))\r\n@Controller('job-search-occupation')\r\nexport class JobSearchOccupationController extends CrudController<\r\n\tJobSearchOccupation\r\n> {\r\n\tconstructor(occupationService: JobSearchOccupationService) {\r\n\t\tsuper(occupationService);\r\n\t}\r\n}\r\n","import { Column, Entity, Index, OneToMany } from 'typeorm';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsNotEmpty, IsString } from 'class-validator';\r\nimport {\r\n\tJobPostSourceEnum,\r\n\tIJobSearchOccupation,\r\n\tIJobPresetUpworkJobSearchCriterion,\r\n\tIEmployeeUpworkJobsSearchCriterion\r\n} from '@gauzy/models';\r\nimport { TenantOrganizationBase } from '../../core/entities/tenant-organization-base';\r\nimport { JobPresetUpworkJobSearchCriterion } from '../job-preset-upwork-job-search-criterion.entity';\r\nimport { EmployeeUpworkJobsSearchCriterion } from '../employee-upwork-jobs-search-criterion.entity';\r\n\r\n@Entity('job_search_occupation')\r\nexport class JobSearchOccupation\r\n\textends TenantOrganizationBase\r\n\timplements IJobSearchOccupation {\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Index()\r\n\t@Column()\r\n\tname?: string;\r\n\r\n\t// Id of occupation in the job source (e.g. Upwork)\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@Index()\r\n\t@Column({ nullable: true })\r\n\tjobSourceOccupationId?: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Index()\r\n\t@Column({ type: 'text', default: JobPostSourceEnum.UPWORK })\r\n\tjobSource?: JobPostSourceEnum;\r\n\r\n\t@OneToMany(\r\n\t\t() => EmployeeUpworkJobsSearchCriterion,\r\n\t\t(employeeUpworkJobsSearchCriterion) =>\r\n\t\t\temployeeUpworkJobsSearchCriterion.jobPreset,\r\n\t\t{\r\n\t\t\tonDelete: 'CASCADE'\r\n\t\t}\r\n\t)\r\n\temployeeCriterions?: IEmployeeUpworkJobsSearchCriterion[];\r\n\r\n\t@OneToMany(\r\n\t\t() => JobPresetUpworkJobSearchCriterion,\r\n\t\t(jobPresetUpworkJobSearchCriterion) =>\r\n\t\t\tjobPresetUpworkJobSearchCriterion.jobPreset,\r\n\t\t{\r\n\t\t\tonDelete: 'CASCADE'\r\n\t\t}\r\n\t)\r\n\tjobPresetCriterions?: IJobPresetUpworkJobSearchCriterion[];\r\n}\r\n","import { Connection } from 'typeorm';\r\nimport { IOrganization, JobPostSourceEnum } from '@gauzy/models';\r\nimport { Tenant } from '../../tenant/tenant.entity';\r\nimport { JobSearchOccupation } from './job-search-occupation.entity';\r\n\r\nexport const createDefaultJobSearchOccupations = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\torganization: IOrganization\r\n): Promise<JobSearchOccupation[]> => {\r\n\tconst occupations: JobSearchOccupation[] = [];\r\n\r\n\tconst upworkOccupations = [\r\n\t\t{\r\n\t\t\tname: 'DevOps Engineering',\r\n\t\t\tjobSourceOccupationId: '1110580753140797440'\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'Project Management',\r\n\t\t\tjobSourceOccupationId: '1017484851352698979'\r\n\t\t}\r\n\t];\r\n\r\n\tupworkOccupations.forEach((occupation) => {\r\n\t\tconst occ = new JobSearchOccupation();\r\n\r\n\t\tocc.jobSource = JobPostSourceEnum.UPWORK;\r\n\t\tocc.organizationId = organization.id;\r\n\t\tocc.tenantId = tenant.id;\r\n\t\tocc.name = occupation.name;\r\n\t\tocc.jobSourceOccupationId = occupation.jobSourceOccupationId;\r\n\r\n\t\toccupations.push(occ);\r\n\t});\r\n\r\n\tawait insertOccupations(connection, occupations);\r\n\treturn occupations;\r\n};\r\n\r\nconst insertOccupations = async (\r\n\tconnection: Connection,\r\n\toccupations: JobSearchOccupation[]\r\n): Promise<void> => {\r\n\tawait connection.manager.save(occupations);\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { CrudService } from '../../core/crud/crud.service';\r\nimport { JobSearchOccupation } from './job-search-occupation.entity';\r\n\r\n@Injectable()\r\nexport class JobSearchOccupationService extends CrudService<\r\n\tJobSearchOccupation\r\n> {\r\n\tconstructor(\r\n\t\t@InjectRepository(JobSearchOccupation)\r\n\t\tcandidateSourceRepository: Repository<JobSearchOccupation>\r\n\t) {\r\n\t\tsuper(candidateSourceRepository);\r\n\t}\r\n}\r\n","import {\r\n\tController,\r\n\tHttpStatus,\r\n\tGet,\r\n\tQuery,\r\n\tUseGuards,\r\n\tPost,\r\n\tBody,\r\n\tParam,\r\n\tDelete\r\n} from '@nestjs/common';\r\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport {\r\n\tIGetJobPresetCriterionInput,\r\n\tIGetJobPresetInput,\r\n\tIJobPreset,\r\n\tIMatchingCriterions\r\n} from '@gauzy/models';\r\nimport { JobPresetService } from './job-preset.service';\r\nimport { JobPreset } from './job-preset.entity';\r\nimport { JobPresetUpworkJobSearchCriterion } from './job-preset-upwork-job-search-criterion.entity';\r\nimport { EmployeeUpworkJobsSearchCriterion } from './employee-upwork-jobs-search-criterion.entity';\r\nimport { GauzyAIService } from '@gauzy/integration-ai';\r\nimport { EmployeeService } from '../employee/employee.service';\r\n\r\n@ApiTags('JobSearchPreset')\r\n@UseGuards(AuthGuard('jwt'))\r\n@Controller()\r\nexport class JobSearchPresetController {\r\n\tconstructor(\r\n\t\tprivate readonly jobPresetService: JobPresetService,\r\n\t\tprivate readonly employeeService: EmployeeService,\r\n\t\tprivate readonly gauzyAIService: GauzyAIService\r\n\t) {}\r\n\r\n\t@ApiOperation({ summary: 'Find all employee job posts' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found employee job preset',\r\n\t\ttype: JobPreset\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get()\r\n\tasync getAll(@Query() data: IGetJobPresetInput) {\r\n\t\tconsole.log('GetAll Presets called. We will sync all employees now');\r\n\r\n\t\t// TODO: we can actually sync just for one employee if data.employeeId is defined\r\n\r\n\t\tconst employees = await this.employeeService.findAllActive();\r\n\r\n\t\tawait this.gauzyAIService.syncEmployees(employees);\r\n\r\n\t\treturn this.jobPresetService.getAll(data);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find all employee job posts' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found employee job preset',\r\n\t\ttype: JobPreset\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get(':id')\r\n\tasync get(\r\n\t\t@Param('id') presetId: string,\r\n\t\t@Query() request: IGetJobPresetCriterionInput\r\n\t) {\r\n\t\treturn this.jobPresetService.get(presetId, request);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find all employee job posts' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found employee job preset',\r\n\t\ttype: JobPresetUpworkJobSearchCriterion\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get(':id/criterion')\r\n\tasync getJobPresetCriterion(@Param('id') presetId: string) {\r\n\t\treturn this.jobPresetService.getJobPresetCriterion(presetId);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find all employee job posts' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found employee job preset',\r\n\t\ttype: EmployeeUpworkJobsSearchCriterion\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Post()\r\n\tasync createJobPreset(@Body() request: IJobPreset) {\r\n\t\treturn this.jobPresetService.createJobPreset(request);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find all employee job posts' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found employee job preset',\r\n\t\ttype: JobPreset\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Post(':jobPresetId/criterion')\r\n\tasync saveUpdate(\r\n\t\t@Param('jobPresetId') jobPresetId: string,\r\n\t\t@Body() request: IMatchingCriterions\r\n\t) {\r\n\t\treturn this.jobPresetService.saveJobPresetCriterion({\r\n\t\t\t...request,\r\n\t\t\tjobPresetId\r\n\t\t});\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find all employee job posts' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found employee job preset',\r\n\t\ttype: JobPreset\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Delete('criterion/:criterionId')\r\n\tasync deleteJobPresetCriterion(@Param('criterionId') creationId: string) {\r\n\t\treturn this.jobPresetService.deleteJobPresetCriterion(creationId);\r\n\t}\r\n}\r\n","import {\r\n\tController,\r\n\tHttpStatus,\r\n\tGet,\r\n\tQuery,\r\n\tUseGuards,\r\n\tPost,\r\n\tBody\r\n} from '@nestjs/common';\r\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport { EmployeeJobPostService } from './employee-job.service';\r\nimport { EmployeeJobPost } from './employee-job.entity';\r\nimport { IPagination } from '../core';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport {\r\n\tIApplyJobPostInput,\r\n\tIGetEmployeeJobPostInput,\r\n\tIVisibilityJobPostInput\r\n} from '@gauzy/models';\r\n\r\n@ApiTags('EmployeeJobPost')\r\n@UseGuards(AuthGuard('jwt'))\r\n@Controller()\r\nexport class EmployeeJobPostController {\r\n\tconstructor(\r\n\t\tprivate readonly employeeJobPostService: EmployeeJobPostService\r\n\t) {}\r\n\r\n\t@ApiOperation({ summary: 'Find all employee job posts' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found employee job posts',\r\n\t\ttype: EmployeeJobPost\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get()\r\n\tasync findAllEmployeesJobs(\r\n\t\t@Query() data: IGetEmployeeJobPostInput\r\n\t): Promise<IPagination<EmployeeJobPost>> {\r\n\t\treturn this.employeeJobPostService.findAll(data);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Apply on job' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found employee job posts',\r\n\t\ttype: EmployeeJobPost\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Post('applied')\r\n\tasync updateApplied(@Body() data: IApplyJobPostInput) {\r\n\t\treturn this.employeeJobPostService.updateApplied(data);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Hide job' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found employee job posts',\r\n\t\ttype: EmployeeJobPost\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Post('hide')\r\n\tasync updateVisibility(@Body() data: IVisibilityJobPostInput) {\r\n\t\treturn this.employeeJobPostService.updateVisibility(data);\r\n\t}\r\n}\r\n","import {\r\n\tIEmployeeJobPost,\r\n\tJobPostSourceEnum,\r\n\tJobPostStatusEnum,\r\n\tJobPostTypeEnum\r\n} from '@gauzy/models';\r\nimport { Model } from '../core/entities/base';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { JobPost } from './jobPost.entity';\r\n\r\nexport class EmployeeJobPost extends Model implements IEmployeeJobPost {\r\n\temployeeId: string;\r\n\temployee: Employee;\r\n\tjobPostId: string;\r\n\tisApplied?: boolean;\r\n\tappliedDate?: Date;\r\n\r\n\tjobPost: JobPost;\r\n\r\n\t// we de-normalize this fields for faster processing\r\n\tjobDateCreated?: Date;\r\n\tjobStatus?: JobPostStatusEnum;\r\n\tjobSource?: JobPostSourceEnum;\r\n\tjobType?: JobPostTypeEnum;\r\n\r\n\tproviderCode: string; // same as jobSource field, but as a string, e.g. 'upwork'\r\n\t// unique ID of job in the source (e.g. in Upwork)\r\n\tproviderJobId: string;\r\n\r\n\tcreatedAt?: Date;\r\n\tupdatedAt?: Date;\r\n\tisActive: boolean;\r\n\tisArchived: boolean;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { EmployeeJobPostService } from './employee-job.service';\r\nimport { EmployeeJobPostController } from './employee-job.controller';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { GauzyAIService } from '@gauzy/integration-ai';\r\nimport { EmployeeService } from '../employee/employee.service';\r\n\r\n@Module({\r\n\timports: [TypeOrmModule.forFeature([Employee])],\r\n\tcontrollers: [EmployeeJobPostController],\r\n\tproviders: [EmployeeJobPostService, EmployeeService, GauzyAIService],\r\n\texports: [EmployeeJobPostService]\r\n})\r\nexport class EmployeeJobPostModule {}\r\n","import { EmployeeJobPost } from './employee-job.entity';\r\nimport { JobPost } from './jobPost.entity';\r\nimport * as faker from 'faker';\r\nimport {\r\n\tICountry,\r\n\tIEmployee,\r\n\tIEmployeeJobPost,\r\n\tJobPostSourceEnum,\r\n\tJobPostStatusEnum,\r\n\tJobPostTypeEnum\r\n} from '@gauzy/models';\r\nimport { IPagination } from '../core';\r\nimport { Country } from '../country';\r\nimport { getConnection } from 'typeorm';\r\n\r\nexport const getRandomEmployeeJobPosts = async (\r\n\temployees?: IEmployee[],\r\n\tpage = 0,\r\n\tlimit = 10\r\n): Promise<IPagination<IEmployeeJobPost>> => {\r\n\tconst countries: ICountry[] = await getConnection().manager.find(Country);\r\n\tconst employeesJobs: EmployeeJobPost[] = [];\r\n\r\n\tfor (let i = 0; i < limit; i++) {\r\n\t\tconst employee = faker.random.arrayElement(employees);\r\n\t\tconst jobPostEmployee = new EmployeeJobPost({\r\n\t\t\temployeeId: employee ? employee.id : null,\r\n\t\t\temployee: employee\r\n\t\t});\r\n\r\n\t\tconst job = new JobPost({\r\n\t\t\tcountry: faker.random.arrayElement(countries).isoCode,\r\n\t\t\tcategory: faker.name.jobTitle(),\r\n\t\t\ttitle: faker.lorem.sentence(),\r\n\t\t\tdescription: faker.lorem.sentences(3),\r\n\t\t\tjobDateCreated: faker.date.past(0.1),\r\n\t\t\tjobStatus: faker.random.arrayElement(\r\n\t\t\t\tObject.values(JobPostStatusEnum)\r\n\t\t\t),\r\n\t\t\tjobSource: faker.random.arrayElement(\r\n\t\t\t\tObject.values(JobPostSourceEnum)\r\n\t\t\t),\r\n\t\t\tjobType: faker.random.arrayElement(Object.values(JobPostTypeEnum))\r\n\t\t});\r\n\r\n\t\tjobPostEmployee.jobPost = job;\r\n\t\temployeesJobs.push(jobPostEmployee);\r\n\t}\r\n\r\n\treturn {\r\n\t\titems: employeesJobs,\r\n\t\ttotal: 100\r\n\t};\r\n};\r\n","import { environment as env } from '@env-api/environment';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { IPagination } from '../core';\r\nimport { getRandomEmployeeJobPosts } from './employee-job.seed';\r\nimport { GauzyAIService } from '@gauzy/integration-ai';\r\nimport {\r\n\tIApplyJobPostInput,\r\n\tIEmployeeJobPost,\r\n\tIGetEmployeeJobPostInput,\r\n\tIUpdateEmployeeJobPostAppliedResult,\r\n\tIVisibilityJobPostInput\r\n} from '@gauzy/models';\r\nimport { EmployeeService } from '../employee/employee.service';\r\n\r\n@Injectable()\r\nexport class EmployeeJobPostService {\r\n\tconstructor(\r\n\t\tprivate readonly employeeService: EmployeeService,\r\n\t\tprivate readonly gauzyAIService: GauzyAIService\r\n\t) {}\r\n\r\n\t/**\r\n\t * Updates job visibility\r\n\t * @param hide Should job be hidden or visible. This will set isActive field to false in Gauzy AI\r\n\t * @param employeeId If employeeId set, job will be set not active only for that specific employee (using EmployeeJobPost record update in Gauzy AI)\r\n\t * If employeeId is not set, job will be set not active for all employees (using JobPost record update in Gauzy AI)\r\n\t * @param providerCode e.g. 'upwork'\r\n\t * @param providerJobId Unique job id in the provider, e.g. in Upwork\r\n\t */\r\n\tpublic async updateVisibility(\r\n\t\tinput: IVisibilityJobPostInput\r\n\t): Promise<boolean> {\r\n\t\treturn await this.gauzyAIService.updateVisibility(input);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates if Employee Applied to a job\r\n\t * @param applied This will set isApplied and appliedDate fields in Gauzy AI\r\n\t * @param employeeId Employee who applied for a job\r\n\t * @param providerCode e.g. 'upwork'\r\n\t * @param providerJobId Unique job id in the provider, e.g. in Upwork\r\n\t */\r\n\tpublic async updateApplied(\r\n\t\tinput: IApplyJobPostInput\r\n\t): Promise<IUpdateEmployeeJobPostAppliedResult> {\r\n\t\treturn await this.gauzyAIService.updateApplied(input);\r\n\t}\r\n\r\n\t/**\r\n\t * Find all available Jobs matched to Gauzy Employees\r\n\t * @param data\r\n\t */\r\n\tpublic async findAll(\r\n\t\tdata: IGetEmployeeJobPostInput\r\n\t): Promise<IPagination<IEmployeeJobPost>> {\r\n\t\tconst employees = await this.employeeService.findAllActive();\r\n\r\n\t\tlet jobs: IPagination<IEmployeeJobPost>;\r\n\r\n\t\tif (env.gauzyAIGraphQLEndpoint) {\r\n\t\t\tconst result = await this.gauzyAIService.getEmployeesJobPosts(data);\r\n\r\n\t\t\tif (result === null) {\r\n\t\t\t\tif (env.production) {\r\n\t\t\t\t\t// OK, so for some reason connection go Gauzy AI failed, we can't get jobs ...\r\n\t\t\t\t\tjobs = {\r\n\t\t\t\t\t\titems: [],\r\n\t\t\t\t\t\ttotal: 0\r\n\t\t\t\t\t};\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// In development, even if connection failed, we want to show fake jobs in UI\r\n\t\t\t\t\tjobs = await getRandomEmployeeJobPosts(\r\n\t\t\t\t\t\temployees,\r\n\t\t\t\t\t\tdata.page,\r\n\t\t\t\t\t\tdata.limit\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tconst jobsConverted = result.items.map((jo) => {\r\n\t\t\t\t\tif (jo.employeeId) {\r\n\t\t\t\t\t\tconst employee = employees.find(\r\n\t\t\t\t\t\t\t(emp) => emp.id === jo.employeeId\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tjo.employee = employee;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn jo;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tjobs = {\r\n\t\t\t\t\titems: jobsConverted,\r\n\t\t\t\t\ttotal: result.total\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// If it's production, we should return empty here because we don't want fake jobs in production\r\n\t\t\tif (env.production === false) {\r\n\t\t\t\tjobs = await getRandomEmployeeJobPosts(\r\n\t\t\t\t\temployees,\r\n\t\t\t\t\tdata.page,\r\n\t\t\t\t\tdata.limit\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tjobs = {\r\n\t\t\t\t\titems: [],\r\n\t\t\t\t\ttotal: 0\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn jobs;\r\n\t}\r\n}\r\n","export { EmployeeJobPostModule } from './employee-job.module';\r\nexport { EmployeeJobPost } from './employee-job.entity';\r\nexport { EmployeeJobPostService } from './employee-job.service';\r\n","import {\r\n\tIJobPost,\r\n\tJobPostSourceEnum,\r\n\tJobPostStatusEnum,\r\n\tJobPostTypeEnum\r\n} from '@gauzy/models';\r\nimport { Model } from '../core/entities/base';\r\n\r\nexport class JobPost extends Model implements IJobPost {\r\n\tjobPostId: string;\r\n\tid?: string;\r\n\tproviderCode: string;\r\n\tproviderJobId: string;\r\n\ttitle: string;\r\n\tdescription: string;\r\n\tjobDateCreated?: Date;\r\n\tjobStatus?: JobPostStatusEnum;\r\n\tjobSource?: JobPostSourceEnum;\r\n\tjobType?: JobPostTypeEnum;\r\n\turl?: string;\r\n\tbudget?: string;\r\n\tduration?: string;\r\n\tworkload?: string;\r\n\tskills?: string;\r\n\tcategory?: string;\r\n\tsubcategory?: string;\r\n\tcountry?: string;\r\n\tclientFeedback?: string;\r\n\tclientReviewsCount?: number;\r\n\tclientJobsPosted?: number;\r\n\tclientPastHires?: number;\r\n\tclientPaymentVerificationStatus?: boolean;\r\n\r\n\tsearchCategory?: string;\r\n\tsearchCategoryId?: string;\r\n\tsearchOccupation?: string;\r\n\tsearchOccupationId?: string;\r\n\tsearchJobType?: string;\r\n\tsearchKeyword?: string;\r\n\r\n\tcreatedAt?: Date;\r\n\tupdatedAt?: Date;\r\n\tisActive: boolean;\r\n\tisArchived: boolean;\r\n}\r\n","import { IPagination } from '@gauzy/models';\r\nimport {\r\n\tController,\r\n\tGet,\r\n\tHttpStatus,\r\n\tParam,\r\n\tPost,\r\n\tQuery\r\n} from '@nestjs/common';\r\nimport { ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport { FindManyOptions } from 'typeorm';\r\nimport { CrudController } from '../core';\r\nimport { EmployeeProposalTemplate } from './employee-proposal-template.entity';\r\nimport { EmployeeProposalTemplateService } from './employee-proposal-template.service';\r\n\r\n@Controller('employee-proposal-template')\r\nexport class EmployeeProposalTemplateController extends CrudController<\r\n\tEmployeeProposalTemplate\r\n> {\r\n\tconstructor(\r\n\t\tprivate readonly employeeProposalTemplateService: EmployeeProposalTemplateService\r\n\t) {\r\n\t\tsuper(employeeProposalTemplateService);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'find all' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found records'\r\n\t})\r\n\t@Get()\r\n\tasync getAll(\r\n\t\t@Query() filter?: FindManyOptions<EmployeeProposalTemplate>\r\n\t): Promise<IPagination<EmployeeProposalTemplate>> {\r\n\t\treturn this.employeeProposalTemplateService.findAll(filter);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Make Default' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Record Updated'\r\n\t})\r\n\t@Post(':id/make-default')\r\n\tasync makeDefault(\r\n\t\t@Param('id') employeeProposalTemplate?: string\r\n\t): Promise<EmployeeProposalTemplate> {\r\n\t\treturn this.employeeProposalTemplateService.makeDefault(\r\n\t\t\temployeeProposalTemplate\r\n\t\t);\r\n\t}\r\n}\r\n","import { Column, Entity, Index, ManyToOne } from 'typeorm';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsNotEmpty, IsString } from 'class-validator';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { IEmployee, IEmployeeProposalTemplate } from '@gauzy/models';\r\n\r\n@Entity('employee_proposal_template')\r\nexport class EmployeeProposalTemplate\r\n\textends TenantOrganizationBase\r\n\timplements IEmployeeProposalTemplate {\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Column()\r\n\temployeeId?: string;\r\n\r\n\t@ManyToOne(() => Employee, (employee) => employee.id)\r\n\temployee?: IEmployee;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Index()\r\n\t@Column()\r\n\tname?: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Index()\r\n\t@Column({ nullable: true })\r\n\tcontent?: string;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Index()\r\n\t@Column({ default: false })\r\n\tisDefault?: boolean;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { CqrsModule } from '@nestjs/cqrs';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { EmployeeProposalTemplateController } from './employee-proposal-template.controller';\r\nimport { EmployeeProposalTemplate } from './employee-proposal-template.entity';\r\nimport { EmployeeProposalTemplateService } from './employee-proposal-template.service';\r\n\r\n@Module({\r\n\timports: [TypeOrmModule.forFeature([EmployeeProposalTemplate]), CqrsModule],\r\n\tcontrollers: [EmployeeProposalTemplateController],\r\n\tproviders: [EmployeeProposalTemplateService]\r\n})\r\nexport class EmployeeProposalTemplateModule {}\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { CrudService } from '../core';\r\nimport { EmployeeProposalTemplate } from './employee-proposal-template.entity';\r\n\r\n@Injectable()\r\nexport class EmployeeProposalTemplateService extends CrudService<\r\n\tEmployeeProposalTemplate\r\n> {\r\n\tconstructor(\r\n\t\t@InjectRepository(EmployeeProposalTemplate)\r\n\t\tprivate readonly employeeProposalTemplateRepository: Repository<\r\n\t\t\tEmployeeProposalTemplate\r\n\t\t>\r\n\t) {\r\n\t\tsuper(employeeProposalTemplateRepository);\r\n\t}\r\n\r\n\tasync makeDefault(id: string) {\r\n\t\tconst proposalTemplate = await this.employeeProposalTemplateRepository.findOne(\r\n\t\t\tid\r\n\t\t);\r\n\t\tproposalTemplate.isDefault = true;\r\n\r\n\t\tawait this.employeeProposalTemplateRepository.update(\r\n\t\t\t{\r\n\t\t\t\temployeeId: proposalTemplate.employeeId\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tisDefault: false\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\tawait this.employeeProposalTemplateRepository.save(proposalTemplate);\r\n\r\n\t\treturn proposalTemplate;\r\n\t}\r\n}\r\n","import { IEmployeeRecurringExpense } from '@gauzy/models';\r\nimport { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class EmployeeRecurringExpenseCreateCommand implements ICommand {\r\n\tstatic readonly type = '[EmployeeRecurringExpense] Create';\r\n\r\n\tconstructor(public readonly input: IEmployeeRecurringExpense) {}\r\n}\r\n","import { IRecurringExpenseDeleteInput } from '@gauzy/models';\r\nimport { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class EmployeeRecurringExpenseDeleteCommand implements ICommand {\r\n\tstatic readonly type = '[EmployeeRecurringExpense] Delete';\r\n\r\n\tconstructor(\r\n\t\tpublic readonly id: string,\r\n\t\tpublic readonly deleteInput: IRecurringExpenseDeleteInput\r\n\t) {}\r\n}\r\n","import { IRecurringExpenseEditInput as IExpenseEditInput } from '@gauzy/models';\r\nimport { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class EmployeeRecurringExpenseEditCommand implements ICommand {\r\n\tstatic readonly type = '[EmployeeRecurringExpense] Edit';\r\n\r\n\tconstructor(\r\n\t\tpublic readonly id: string,\r\n\t\tpublic readonly input: IExpenseEditInput\r\n\t) {}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { EmployeeRecurringExpenseService } from '../../employee-recurring-expense.service';\r\nimport { EmployeeRecurringExpenseCreateCommand } from '../employee-recurring-expense.create.command';\r\n\r\n/**\r\n * Creates a recurring expense for an employee.\r\n * The parentRecurringExpenseId is it's own id since this is a new expense.\r\n */\r\n@CommandHandler(EmployeeRecurringExpenseCreateCommand)\r\nexport class EmployeeRecurringExpenseCreateHandler\r\n\timplements ICommandHandler<EmployeeRecurringExpenseCreateCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly employeeRecurringExpenseService: EmployeeRecurringExpenseService\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: EmployeeRecurringExpenseCreateCommand\r\n\t): Promise<any> {\r\n\t\tconst { input } = command;\r\n\t\tconst createdExpense = await this.employeeRecurringExpenseService.create(\r\n\t\t\tinput\r\n\t\t);\r\n\r\n\t\tawait this.employeeRecurringExpenseService.update(createdExpense.id, {\r\n\t\t\tparentRecurringExpenseId: createdExpense.id\r\n\t\t});\r\n\r\n\t\treturn {\r\n\t\t\t...createdExpense,\r\n\t\t\tparentRecurringExpenseId: createdExpense.id\r\n\t\t};\r\n\t}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { RecurringExpenseDeleteHandler } from '../../../shared';\r\nimport { EmployeeRecurringExpense } from '../../employee-recurring-expense.entity';\r\nimport { EmployeeRecurringExpenseService } from '../../employee-recurring-expense.service';\r\nimport { EmployeeRecurringExpenseDeleteCommand } from '../employee-recurring-expense.delete.command';\r\n\r\n/**\r\n * Deletes a EmployeeRecurringExpense based on command.deleteInput.deletionType:\r\n *\r\n * 1. ALL: Delete all entries for an expense (By actually deleting it from the db)\r\n * 2. FUTURE : Delete only current and future events (By reducing the end date)\r\n * 3. CURRENT : Delete only one month (By splitting the expense into two)\r\n *\r\n */\r\n@CommandHandler(EmployeeRecurringExpenseDeleteCommand)\r\nexport class EmployeeRecurringExpenseDeleteHandler\r\n\textends RecurringExpenseDeleteHandler<EmployeeRecurringExpense>\r\n\timplements ICommandHandler<EmployeeRecurringExpenseDeleteCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly employeeRecurringExpenseService: EmployeeRecurringExpenseService\r\n\t) {\r\n\t\tsuper(employeeRecurringExpenseService);\r\n\t}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: EmployeeRecurringExpenseDeleteCommand\r\n\t): Promise<any> {\r\n\t\tconst { id, deleteInput } = command;\r\n\t\treturn await this.executeCommand(id, deleteInput);\r\n\t}\r\n}\r\n","import { IStartUpdateTypeInfo } from '@gauzy/models';\r\nimport { CommandHandler, ICommandHandler, QueryBus } from '@nestjs/cqrs';\r\nimport { RecurringExpenseEditHandler } from '../../../shared';\r\nimport { EmployeeRecurringExpense } from '../../employee-recurring-expense.entity';\r\nimport { EmployeeRecurringExpenseService } from '../../employee-recurring-expense.service';\r\nimport { EmployeeRecurringExpenseStartDateUpdateTypeQuery } from '../../queries/employee-recurring-expense.update-type.query';\r\nimport { EmployeeRecurringExpenseEditCommand } from '../employee-recurring-expense.edit.command';\r\n\r\n/**\r\n * This edits the value of a recurring expense.\r\n * To edit a recurring expense\r\n * 1. Change the end date of the original expense so that old value is not modified for previous expense.\r\n * 2. Create a new expense to have new values for all future dates.\r\n */\r\n@CommandHandler(EmployeeRecurringExpenseEditCommand)\r\nexport class EmployeeRecurringExpenseEditHandler\r\n\textends RecurringExpenseEditHandler<EmployeeRecurringExpense>\r\n\timplements ICommandHandler<EmployeeRecurringExpenseEditCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly employeeRecurringExpenseService: EmployeeRecurringExpenseService,\r\n\t\tprivate readonly queryBus: QueryBus\r\n\t) {\r\n\t\tsuper(employeeRecurringExpenseService);\r\n\t}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: EmployeeRecurringExpenseEditCommand\r\n\t): Promise<any> {\r\n\t\tconst { id, input } = command;\r\n\r\n\t\t//TODO: Remove this, RecurringExpenseEditHandler should not need startDateUpdateType\r\n\t\tconst updateType: IStartUpdateTypeInfo = await this.queryBus.execute(\r\n\t\t\tnew EmployeeRecurringExpenseStartDateUpdateTypeQuery({\r\n\t\t\t\tnewStartDate: new Date(\r\n\t\t\t\t\tinput.startYear,\r\n\t\t\t\t\tinput.startMonth,\r\n\t\t\t\t\tinput.startDay\r\n\t\t\t\t),\r\n\t\t\t\trecurringExpenseId: id\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\treturn await this.executeCommand(id, {\r\n\t\t\t...input,\r\n\t\t\tstartDateUpdateType: updateType.value\r\n\t\t});\r\n\t}\r\n}\r\n","import { EmployeeRecurringExpenseDeleteHandler } from './employee-recurring-expense.delete.handler';\r\nimport { EmployeeRecurringExpenseEditHandler } from './employee-recurring-expense.edit.handler';\r\nimport { EmployeeRecurringExpenseCreateHandler } from './employee-recurring-expense.create.handler';\r\n\r\nexport const CommandHandlers = [\r\n\tEmployeeRecurringExpenseEditHandler,\r\n\tEmployeeRecurringExpenseDeleteHandler,\r\n\tEmployeeRecurringExpenseCreateHandler\r\n];\r\n","import {\r\n\tIStartUpdateTypeInfo,\r\n\tPermissionsEnum,\r\n\tIRecurringExpenseEditInput\r\n} from '@gauzy/models';\r\nimport {\r\n\tBody,\r\n\tController,\r\n\tDelete,\r\n\tGet,\r\n\tHttpCode,\r\n\tHttpStatus,\r\n\tParam,\r\n\tPost,\r\n\tPut,\r\n\tQuery,\r\n\tUseGuards\r\n} from '@nestjs/common';\r\nimport { CommandBus, QueryBus } from '@nestjs/cqrs';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\r\nimport { IPagination } from '../core';\r\nimport { CrudController } from '../core/crud/crud.controller';\r\nimport { Permissions } from '../shared/decorators/permissions';\r\nimport { PermissionGuard } from '../shared/guards/auth/permission.guard';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\nimport { ParseJsonPipe } from '../shared/pipes/parse-json.pipe';\r\nimport { EmployeeRecurringExpenseCreateCommand } from './commands/employee-recurring-expense.create.command';\r\nimport { EmployeeRecurringExpenseDeleteCommand } from './commands/employee-recurring-expense.delete.command';\r\nimport { EmployeeRecurringExpenseEditCommand } from './commands/employee-recurring-expense.edit.command';\r\nimport { EmployeeRecurringExpense } from './employee-recurring-expense.entity';\r\nimport { EmployeeRecurringExpenseService } from './employee-recurring-expense.service';\r\nimport { EmployeeRecurringExpenseByMonthQuery } from './queries/employee-recurring-expense.by-month.query';\r\nimport { EmployeeRecurringExpenseStartDateUpdateTypeQuery } from './queries/employee-recurring-expense.update-type.query';\r\n\r\n@ApiTags('EmployeeRecurringExpense')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class EmployeeRecurringExpenseController extends CrudController<\r\n\tEmployeeRecurringExpense\r\n> {\r\n\tconstructor(\r\n\t\tprivate readonly employeeRecurringExpenseService: EmployeeRecurringExpenseService,\r\n\t\tprivate readonly queryBus: QueryBus,\r\n\t\tprivate readonly commandBus: CommandBus\r\n\t) {\r\n\t\tsuper(employeeRecurringExpenseService);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Create new expense' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The expense has been successfully created.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.CREATED)\r\n\t@Post()\r\n\tasync create(\r\n\t\t@Body() entity: EmployeeRecurringExpense\r\n\t): Promise<EmployeeRecurringExpense> {\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew EmployeeRecurringExpenseCreateCommand(entity)\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Delete record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'The record has been successfully deleted'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_EMPLOYEES_EDIT)\r\n\t@Delete(':id')\r\n\tasync delete(\r\n\t\t@Param('id') id: string,\r\n\t\t@Query('data') data: string\r\n\t): Promise<any> {\r\n\t\tconst { deleteInput } = JSON.parse(data);\r\n\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew EmployeeRecurringExpenseDeleteCommand(id, deleteInput)\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Update an existing record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully edited.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Put(':id')\r\n\tasync update(\r\n\t\t@Param('id') id: string,\r\n\t\t@Body() entity: IRecurringExpenseEditInput\r\n\t): Promise<any> {\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew EmployeeRecurringExpenseEditCommand(id, entity)\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find all employee recurring expense.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found employee recurring expense',\r\n\t\ttype: EmployeeRecurringExpense\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get('/month')\r\n\tasync findAllEmployees(\r\n\t\t@Query('data', ParseJsonPipe) data: any\r\n\t): Promise<IPagination<EmployeeRecurringExpense>> {\r\n\t\tconst { findInput, relations } = data;\r\n\t\treturn this.queryBus.execute(\r\n\t\t\tnew EmployeeRecurringExpenseByMonthQuery(findInput, relations)\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find all employee recurring expenses.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found employee recurring expense',\r\n\t\ttype: EmployeeRecurringExpense\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get()\r\n\tasync findAllRecurringExpenses(\r\n\t\t@Query('data', ParseJsonPipe) data: any\r\n\t): Promise<IPagination<EmployeeRecurringExpense>> {\r\n\t\tconst { findInput, order = {}, relations = [] } = data;\r\n\t\treturn this.employeeRecurringExpenseService.findAll({\r\n\t\t\twhere: findInput,\r\n\t\t\torder: order,\r\n\t\t\trelations\r\n\t\t});\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find the start date update type for a recurring expense.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found start date update type'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get('/date-update-type')\r\n\tasync findStartDateUpdateType(\r\n\t\t@Query('data') data: string\r\n\t): Promise<IStartUpdateTypeInfo> {\r\n\t\tconst { findInput } = JSON.parse(data);\r\n\r\n\t\treturn this.queryBus.execute(\r\n\t\t\tnew EmployeeRecurringExpenseStartDateUpdateTypeQuery(findInput)\r\n\t\t);\r\n\t}\r\n}\r\n","import { CurrenciesEnum, IEmployeeRecurringExpense } from '@gauzy/models';\r\nimport { Optional } from '@nestjs/common';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport {\r\n\tIsEnum,\r\n\tIsNotEmpty,\r\n\tIsNumber,\r\n\tIsString,\r\n\tMax,\r\n\tMin,\r\n\tIsDate,\r\n\tIsOptional\r\n} from 'class-validator';\r\nimport { Column, Entity, Index, ManyToOne } from 'typeorm';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('employee_recurring_expense')\r\nexport class EmployeeRecurringExpense extends TenantOrganizationBase\r\n\timplements IEmployeeRecurringExpense {\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Index()\r\n\t@Column()\r\n\temployeeId: string;\r\n\r\n\t@ApiProperty({ type: Number, minimum: 1, maximum: 31 })\r\n\t@IsNumber()\r\n\t@IsNotEmpty()\r\n\t@Min(1)\r\n\t@Max(31)\r\n\t@Column()\r\n\tstartDay: number;\r\n\r\n\t@ApiProperty({ type: Number, minimum: 1, maximum: 12 })\r\n\t@IsNumber()\r\n\t@IsNotEmpty()\r\n\t@Min(1)\r\n\t@Max(12)\r\n\t@Column()\r\n\tstartMonth: number;\r\n\r\n\t@ApiProperty({ type: Number, minimum: 1 })\r\n\t@IsNumber()\r\n\t@IsNotEmpty()\r\n\t@Min(0)\r\n\t@Column()\r\n\tstartYear: number;\r\n\r\n\t@ApiProperty({ type: Date })\r\n\t@IsDate()\r\n\t@Column()\r\n\tstartDate: Date;\r\n\r\n\t@ApiProperty({ type: Number, minimum: 1, maximum: 31 })\r\n\t@IsNumber()\r\n\t@Optional()\r\n\t@Min(1)\r\n\t@Max(31)\r\n\t@Column({ nullable: true })\r\n\tendDay: number;\r\n\r\n\t@ApiProperty({ type: Number, minimum: 1, maximum: 12 })\r\n\t@IsNumber()\r\n\t@Optional()\r\n\t@Min(1)\r\n\t@Max(12)\r\n\t@Column({ nullable: true })\r\n\tendMonth: number;\r\n\r\n\t@ApiProperty({ type: Number, minimum: 1 })\r\n\t@IsNumber()\r\n\t@Optional()\r\n\t@Min(0)\r\n\t@Column({ nullable: true })\r\n\tendYear: number;\r\n\r\n\t@ApiProperty({ type: Date })\r\n\t@IsDate()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tendDate?: Date;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Index()\r\n\t@Column()\r\n\tcategoryName: string;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@IsNumber()\r\n\t@IsNotEmpty()\r\n\t@Column({ type: 'numeric' })\r\n\tvalue: number;\r\n\r\n\t@ApiProperty({ type: String, enum: CurrenciesEnum })\r\n\t@IsEnum(CurrenciesEnum)\r\n\t@IsNotEmpty()\r\n\t@Index()\r\n\t@Column()\r\n\tcurrency: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@Index()\r\n\t@Column({ nullable: true })\r\n\tparentRecurringExpenseId?: string;\r\n\r\n\t@ManyToOne((type) => Employee, (employee) => employee.id)\r\n\temployee: Employee;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { CqrsModule } from '@nestjs/cqrs';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { CommandHandlers } from './commands/handlers';\r\nimport { EmployeeRecurringExpenseController } from './employee-recurring-expense.controller';\r\nimport { EmployeeRecurringExpense } from './employee-recurring-expense.entity';\r\nimport { EmployeeRecurringExpenseService } from './employee-recurring-expense.service';\r\nimport { QueryHandlers } from './queries/handlers';\r\nimport { User } from '../user/user.entity';\r\nimport { UserService } from '../user/user.service';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([EmployeeRecurringExpense, User]),\r\n\t\tCqrsModule,\r\n\t\tTenantModule\r\n\t],\r\n\tcontrollers: [EmployeeRecurringExpenseController],\r\n\tproviders: [\r\n\t\tEmployeeRecurringExpenseService,\r\n\t\t...QueryHandlers,\r\n\t\tUserService,\r\n\t\t...CommandHandlers\r\n\t],\r\n\texports: [EmployeeRecurringExpenseService]\r\n})\r\nexport class EmployeeRecurringExpenseModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport {\r\n\tIEmployee,\r\n\tRecurringExpenseDefaultCategoriesEnum\r\n} from '@gauzy/models';\r\nimport { EmployeeRecurringExpense } from './employee-recurring-expense.entity';\r\nimport * as faker from 'faker';\r\nimport * as moment from 'moment';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { environment as env } from '@env-api/environment';\r\n\r\nexport const createRandomEmployeeRecurringExpense = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantEmployeeMap: Map<Tenant, IEmployee[]>\r\n): Promise<EmployeeRecurringExpense[]> => {\r\n\tif (!tenantEmployeeMap) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: tenantCandidatesMap not found, Employee Recurring Expense  will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst employees: EmployeeRecurringExpense[] = [];\r\n\r\n\tfor (const tenant of tenants) {\r\n\t\tconst organizations = await connection.manager.find(Organization, {\r\n\t\t\twhere: [{ tenant: tenant }]\r\n\t\t});\r\n\t\tconst tenantEmployees = tenantEmployeeMap.get(tenant);\r\n\r\n\t\tfor (const [index, tenantEmployee] of tenantEmployees.entries()) {\r\n\t\t\tconst employee = new EmployeeRecurringExpense();\r\n\t\t\temployee.employeeId = tenantEmployee.id;\r\n\r\n\t\t\tconst startDate = faker.date.past();\r\n\t\t\temployee.startDay = startDate.getDate();\r\n\t\t\temployee.startMonth = startDate.getMonth() + 1;\r\n\t\t\temployee.startYear = startDate.getFullYear();\r\n\t\t\temployee.startDate = startDate;\r\n\r\n\t\t\t// TODO: fix endDate generation for some entities only, most should not have end date really\r\n\t\t\tif (index % 2 === 0) {\r\n\t\t\t\t// new changes\r\n\t\t\t\tconst endDate = faker.date.between(\r\n\t\t\t\t\tnew Date(startDate),\r\n\t\t\t\t\tmoment(startDate).add(4, 'months').toDate()\r\n\t\t\t\t);\r\n\t\t\t\temployee.endDay = endDate.getDate();\r\n\t\t\t\temployee.endMonth = endDate.getMonth();\r\n\t\t\t\temployee.endYear = endDate.getFullYear();\r\n\t\t\t\temployee.endDate = endDate;\r\n\t\t\t}\r\n\t\t\t// TODO: seed with random Categories from that enum, but make sure that SALARY exists in most of employees anyway (except contractors)\r\n\t\t\temployee.categoryName =\r\n\t\t\t\tRecurringExpenseDefaultCategoriesEnum.SALARY;\r\n\r\n\t\t\temployee.value = faker.random.number(999); // new changes\r\n\t\t\temployee.currency = env.defaultCurrency; // new changes\r\n\r\n\t\t\t// TODO: some expenses should have a parent if they change \"over time\"\r\n\t\t\temployee.parentRecurringExpenseId = null;\r\n\t\t\temployee.employee = tenantEmployee;\r\n\r\n\t\t\temployee.tenant = tenant;\r\n\t\t\temployee.organization = faker.random.arrayElement(organizations);\r\n\t\t\temployees.push(employee);\r\n\t\t}\r\n\t}\r\n\r\n\tawait insertRandomEmployeeRecurringExpense(connection, employees);\r\n\r\n\treturn employees;\r\n};\r\n\r\nconst insertRandomEmployeeRecurringExpense = async (\r\n\tconnection: Connection,\r\n\tEmployees: EmployeeRecurringExpense[]\r\n) => {\r\n\tawait connection\r\n\t\t.createQueryBuilder()\r\n\t\t.insert()\r\n\t\t.into(EmployeeRecurringExpense)\r\n\t\t.values(Employees)\r\n\t\t.execute();\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { TenantAwareCrudService } from '../core/crud/tenant-aware-crud.service';\r\nimport { EmployeeRecurringExpense } from './employee-recurring-expense.entity';\r\n\r\n@Injectable()\r\nexport class EmployeeRecurringExpenseService extends TenantAwareCrudService<\r\n\tEmployeeRecurringExpense\r\n> {\r\n\tconstructor(\r\n\t\t@InjectRepository(EmployeeRecurringExpense)\r\n\t\tprivate readonly employeeRecurringExpense: Repository<\r\n\t\t\tEmployeeRecurringExpense\r\n\t\t>\r\n\t) {\r\n\t\tsuper(employeeRecurringExpense);\r\n\t}\r\n}\r\n","export { EmployeeRecurringExpenseModule } from './employee-recurring-expense.module';\r\nexport { EmployeeRecurringExpense } from './employee-recurring-expense.entity';\r\nexport { EmployeeRecurringExpenseService } from './employee-recurring-expense.service';","import { IEmployeeRecurringExpenseByMonthFindInput } from '@gauzy/models';\r\nimport { IQuery } from '@nestjs/cqrs';\r\n\r\nexport class EmployeeRecurringExpenseByMonthQuery implements IQuery {\r\n\tstatic readonly type = '[EmployeeRecurringExpense] By Month';\r\n\r\n\tconstructor(\r\n\t\tpublic readonly input: IEmployeeRecurringExpenseByMonthFindInput,\r\n\t\tpublic readonly relations?: string[]\r\n\t) {}\r\n}\r\n","import { IFindStartDateUpdateTypeInput } from '@gauzy/models';\r\nimport { IQuery } from '@nestjs/cqrs';\r\n\r\nexport class EmployeeRecurringExpenseStartDateUpdateTypeQuery\r\n\timplements IQuery {\r\n\tstatic readonly type = '[EmployeeRecurringExpense] Start Date Update Type';\r\n\r\n\tconstructor(public readonly input: IFindStartDateUpdateTypeInput) {}\r\n}\r\n","import { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\r\nimport { IPagination } from '../../../core';\r\nimport { FindRecurringExpenseByMonthHandler } from '../../../shared';\r\nimport { EmployeeRecurringExpense } from '../../employee-recurring-expense.entity';\r\nimport { EmployeeRecurringExpenseService } from '../../employee-recurring-expense.service';\r\nimport { EmployeeRecurringExpenseByMonthQuery } from '../employee-recurring-expense.by-month.query';\r\n\r\n/**\r\n * Finds income, expense, profit and bonus for all employees for the given month.\r\n *\r\n * (start date) < (input date) < (end date, null for end date is treated as infinity)\r\n *\r\n * If year is different, only company year.\r\n * If year is same, compare month\r\n */\r\n@QueryHandler(EmployeeRecurringExpenseByMonthQuery)\r\nexport class EmployeeRecurringExpenseByMonthHandler\r\n\textends FindRecurringExpenseByMonthHandler<EmployeeRecurringExpense>\r\n\timplements IQueryHandler<EmployeeRecurringExpenseByMonthQuery> {\r\n\tconstructor(\r\n\t\tprivate readonly employeeRecurringExpenseService: EmployeeRecurringExpenseService\r\n\t) {\r\n\t\tsuper(employeeRecurringExpenseService);\r\n\t}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: EmployeeRecurringExpenseByMonthQuery\r\n\t): Promise<IPagination<EmployeeRecurringExpense>> {\r\n\t\tconst { input, relations = [] } = command;\r\n\r\n\t\treturn await this.executeCommand(input, relations);\r\n\t}\r\n}\r\n","import { IStartUpdateTypeInfo } from '@gauzy/models';\r\nimport { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\r\nimport { FindRecurringExpenseStartDateUpdateTypeHandler } from '../../../shared/handlers/recurring-expense.find-update-type.handler';\r\nimport { EmployeeRecurringExpense } from '../../employee-recurring-expense.entity';\r\nimport { EmployeeRecurringExpenseService } from '../../employee-recurring-expense.service';\r\nimport { EmployeeRecurringExpenseStartDateUpdateTypeQuery } from '../employee-recurring-expense.update-type.query';\r\n\r\n@QueryHandler(EmployeeRecurringExpenseStartDateUpdateTypeQuery)\r\nexport class EmployeeRecurringExpenseUpdateTypeHandler\r\n\textends FindRecurringExpenseStartDateUpdateTypeHandler<\r\n\t\tEmployeeRecurringExpense\r\n\t>\r\n\timplements IQueryHandler<EmployeeRecurringExpenseStartDateUpdateTypeQuery> {\r\n\tconstructor(\r\n\t\tprivate readonly employeeRecurringExpenseService: EmployeeRecurringExpenseService\r\n\t) {\r\n\t\tsuper(employeeRecurringExpenseService);\r\n\t}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: EmployeeRecurringExpenseStartDateUpdateTypeQuery\r\n\t): Promise<IStartUpdateTypeInfo> {\r\n\t\treturn await this.executeQuery(command.input);\r\n\t}\r\n}\r\n","import { EmployeeRecurringExpenseByMonthHandler } from './employee-recurring-expense.by-month.handler';\r\nimport { EmployeeRecurringExpenseUpdateTypeHandler } from './employee-recurring-expense.start-date-update-type.handler';\r\n\r\nexport const QueryHandlers = [\r\n\tEmployeeRecurringExpenseByMonthHandler,\r\n\tEmployeeRecurringExpenseUpdateTypeHandler\r\n];\r\n","import { Controller, HttpStatus, Get, Query, UseGuards } from '@nestjs/common';\r\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport { EmployeeSettingService } from './employee-setting.service';\r\nimport { EmployeeSetting } from './employee-setting.entity';\r\nimport { CrudController } from '../core/crud/crud.controller';\r\nimport { IPagination } from '../core';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('EmployeeSetting')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class EmployeeSettingController extends CrudController<EmployeeSetting> {\r\n\tconstructor(\r\n\t\tprivate readonly employeeSettingService: EmployeeSettingService\r\n\t) {\r\n\t\tsuper(employeeSettingService);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find all employee settings.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found employee settings',\r\n\t\ttype: EmployeeSetting\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get()\r\n\tasync findAllEmployees(\r\n\t\t@Query('data') data: string\r\n\t): Promise<IPagination<EmployeeSetting>> {\r\n\t\tconst { relations, findInput } = JSON.parse(data);\r\n\r\n\t\treturn this.employeeSettingService.findAll({\r\n\t\t\twhere: findInput,\r\n\t\t\trelations\r\n\t\t});\r\n\t}\r\n}\r\n","import { Column, Entity, Index, ManyToOne } from 'typeorm';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport {\r\n\tIsNotEmpty,\r\n\tIsString,\r\n\tIsNumber,\r\n\tMin,\r\n\tMax,\r\n\tIsEnum\r\n} from 'class-validator';\r\nimport { IEmployeeSetting, CurrenciesEnum } from '@gauzy/models';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('employee_setting')\r\nexport class EmployeeSetting extends TenantOrganizationBase\r\n\timplements IEmployeeSetting {\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Index()\r\n\t@Column()\r\n\temployeeId: string;\r\n\r\n\t@ApiProperty({ type: Number, minimum: 1, maximum: 12 })\r\n\t@IsNumber()\r\n\t@IsNotEmpty()\r\n\t@Min(1)\r\n\t@Max(12)\r\n\t@Column()\r\n\tmonth: number;\r\n\r\n\t@ApiProperty({ type: Number, minimum: 1 })\r\n\t@IsNumber()\r\n\t@IsNotEmpty()\r\n\t@Min(0)\r\n\t@Column()\r\n\tyear: number;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Index()\r\n\t@Column()\r\n\tsettingType: string;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@IsNumber()\r\n\t@IsNotEmpty()\r\n\t@Column()\r\n\tvalue: number;\r\n\r\n\t@ApiProperty({ type: String, enum: CurrenciesEnum })\r\n\t@IsEnum(CurrenciesEnum)\r\n\t@IsNotEmpty()\r\n\t@Index()\r\n\t@Column()\r\n\tcurrency: string;\r\n\r\n\t@ManyToOne((type) => Employee, (employee) => employee.id)\r\n\temployee: Employee;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { EmployeeSetting } from './employee-setting.entity';\r\nimport { EmployeeSettingService } from './employee-setting.service';\r\nimport { EmployeeSettingController } from './employee-setting.controller';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [TypeOrmModule.forFeature([EmployeeSetting]), TenantModule],\r\n\tcontrollers: [EmployeeSettingController],\r\n\tproviders: [EmployeeSettingService],\r\n\texports: [EmployeeSettingService]\r\n})\r\nexport class EmployeeSettingModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { IEmployee } from '@gauzy/models';\r\nimport { EmployeeSetting } from './employee-setting.entity';\r\nimport * as faker from 'faker';\r\nimport { Organization } from '../organization/organization.entity';\r\n\r\nexport const createRandomEmployeeSetting = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantEmployeeMap: Map<Tenant, IEmployee[]>\r\n): Promise<EmployeeSetting[]> => {\r\n\tif (!tenantEmployeeMap) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: tenantCandidatesMap not found, Employee settings  will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst employees: EmployeeSetting[] = [];\r\n\tconst currency = ['USD', 'BGN', 'ILS'];\r\n\tconst setting = ['Normal', 'Custom'];\r\n\r\n\tfor (const tenant of tenants) {\r\n\t\tconst organizations = await connection.manager.find(Organization, {\r\n\t\t\twhere: [{ tenant: tenant }]\r\n\t\t});\r\n\t\tconst tenantEmployees = tenantEmployeeMap.get(tenant);\r\n\t\tfor (const tenantEmployee of tenantEmployees) {\r\n\t\t\tconst employee = new EmployeeSetting();\r\n\t\t\tconst startDate = faker.date.past();\r\n\r\n\t\t\temployee.employeeId = tenantEmployee.id;\r\n\t\t\temployee.month = startDate.getMonth() + 1;\r\n\t\t\temployee.year = startDate.getFullYear();\r\n\t\t\temployee.settingType = setting[Math.random() > 0.5 ? 1 : 0];\r\n\t\t\temployee.value = Math.floor(Math.random() * 999) + 1;\r\n\t\t\temployee.currency = currency[Math.floor(Math.random() * 2)];\r\n\t\t\temployee.employee = tenantEmployee;\r\n\t\t\temployee.organization = faker.random.arrayElement(organizations);\r\n\t\t\temployee.tenant = tenant;\r\n\t\t\temployees.push(employee);\r\n\t\t}\r\n\t}\r\n\tawait insertRandomEmployeeSetting(connection, employees);\r\n\treturn employees;\r\n};\r\n\r\nconst insertRandomEmployeeSetting = async (\r\n\tconnection: Connection,\r\n\tEmployees: EmployeeSetting[]\r\n) => {\r\n\tawait connection\r\n\t\t.createQueryBuilder()\r\n\t\t.insert()\r\n\t\t.into(EmployeeSetting)\r\n\t\t.values(Employees)\r\n\t\t.execute();\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { EmployeeSetting } from './employee-setting.entity';\r\nimport { CrudService } from '../core/crud/crud.service';\r\n\r\n@Injectable()\r\nexport class EmployeeSettingService extends CrudService<EmployeeSetting> {\r\n    constructor(@InjectRepository(EmployeeSetting) private readonly employeeSettingRepository: Repository<EmployeeSetting>) {\r\n        super(employeeSettingRepository);\r\n    }\r\n}\r\n","export { EmployeeSettingModule } from './employee-setting.module';\r\nexport { EmployeeSetting } from './employee-setting.entity';\r\nexport { EmployeeSettingService } from './employee-setting.service';","import {\r\n\tIAggregatedEmployeeStatistic,\r\n\tIEmployeeStatistics,\r\n\tIMonthAggregatedEmployeeStatistics,\r\n\tIEmployeeStatisticsHistory\r\n} from '@gauzy/models';\r\nimport {\r\n\tController,\r\n\tGet,\r\n\tHttpStatus,\r\n\tParam,\r\n\tQuery,\r\n\tUseGuards\r\n} from '@nestjs/common';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { QueryBus } from '@nestjs/cqrs';\r\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\r\nimport { parseISO } from 'date-fns';\r\nimport { EmployeeStatisticsService } from './employee-statistics.service';\r\nimport { AggregatedEmployeeStatisticQuery } from './queries/aggregate-employee-statistic.query';\r\nimport { MonthAggregatedEmployeeStatisticsQuery } from './queries/month-aggregated-employee-statistics.query';\r\nimport { EmployeeStatisticsHistoryQuery } from './queries/employee-statistics-history.query';\r\nimport { ParseJsonPipe } from '../shared/pipes/parse-json.pipe';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('EmployeeStatistics')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class EmployeeStatisticsController {\r\n\tconstructor(\r\n\t\tprivate employeeStatisticsService: EmployeeStatisticsService,\r\n\t\tprivate readonly queryBus: QueryBus\r\n\t) {}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find aggregate for all employees by organization id'\r\n\t})\r\n\t@ApiResponse({ status: HttpStatus.OK, description: 'Found records' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'No records found'\r\n\t})\r\n\t@Get('/aggregate')\r\n\tasync findAggregatedByOrganizationId(\r\n\t\t@Query('data', ParseJsonPipe) data?: any\r\n\t): Promise<IAggregatedEmployeeStatistic[]> {\r\n\t\tconst { findInput } = data;\r\n\t\t/**\r\n\t\t * JSON parse changes Date object to String type\r\n\t\t * Changing Date String to Date Object using parseISO\r\n\t\t */\r\n\t\tfindInput.filterDate = findInput.filterDate\r\n\t\t\t? parseISO(findInput.filterDate)\r\n\t\t\t: null;\r\n\t\treturn this.queryBus.execute(\r\n\t\t\tnew AggregatedEmployeeStatisticQuery(findInput)\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find by id' })\r\n\t@ApiResponse({ status: HttpStatus.OK, description: 'Found one record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get('/months/:id')\r\n\tasync findAllByEmloyeeId(\r\n\t\t@Param('id') id: string,\r\n\t\t@Query('data', ParseJsonPipe) data?: any\r\n\t): Promise<IEmployeeStatistics> {\r\n\t\tconst { findInput } = data;\r\n\t\treturn this.employeeStatisticsService.getStatisticsByEmployeeId(\r\n\t\t\tid,\r\n\t\t\tfindInput\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary:\r\n\t\t\t'Find Aggregated Statistics by Employee id, valueDate and past N months'\r\n\t})\r\n\t@ApiResponse({ status: HttpStatus.OK, description: 'Found one record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get('/months')\r\n\tasync findAggregatedStatisticsByEmployeeId(\r\n\t\t@Query('data', ParseJsonPipe) data?: any\r\n\t): Promise<IMonthAggregatedEmployeeStatistics> {\r\n\t\tconst { findInput } = data;\r\n\t\t/**\r\n\t\t * JSON parse changes Date object to String type\r\n\t\t * Changing Date String to Date Object using parseISO\r\n\t\t */\r\n\t\tfindInput.valueDate = parseISO(findInput.valueDate);\r\n\r\n\t\treturn this.queryBus.execute(\r\n\t\t\tnew MonthAggregatedEmployeeStatisticsQuery(findInput)\r\n\t\t);\r\n\t}\r\n\t@ApiOperation({\r\n\t\tsummary:\r\n\t\t\t'Find Statistics History by Employee id, valueDate and past N months'\r\n\t})\r\n\t@ApiResponse({ status: HttpStatus.OK, description: 'Found one record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get('/history')\r\n\tasync findEmployeeStatisticsHistory(\r\n\t\t@Query('data', ParseJsonPipe) data?: any\r\n\t): Promise<IEmployeeStatisticsHistory[]> {\r\n\t\tconst { findInput } = data;\r\n\t\t/**\r\n\t\t * JSON parse changes Date object to String type\r\n\t\t * Changing Date String to Date Object using parseISO\r\n\t\t */\r\n\t\tfindInput.valueDate = parseISO(findInput.valueDate);\r\n\r\n\t\treturn this.queryBus.execute(\r\n\t\t\tnew EmployeeStatisticsHistoryQuery(findInput)\r\n\t\t);\r\n\t}\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { CqrsModule } from '@nestjs/cqrs';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { EmployeeService } from '../employee/employee.service';\r\nimport { EmployeeRecurringExpense } from '../employee-recurring-expense/employee-recurring-expense.entity';\r\nimport { EmployeeRecurringExpenseService } from '../employee-recurring-expense/employee-recurring-expense.service';\r\nimport { Expense } from '../expense/expense.entity';\r\nimport { ExpenseService } from '../expense/expense.service';\r\nimport { Income } from '../income/income.entity';\r\nimport { IncomeService } from '../income/income.service';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { OrganizationService } from '../organization/organization.service';\r\nimport { EmployeeStatisticsController } from './employee-statistics.controller';\r\nimport { EmployeeStatisticsService } from './employee-statistics.service';\r\nimport { QueryHandlers } from './queries/handlers';\r\nimport { OrganizationRecurringExpense } from '../organization-recurring-expense/organization-recurring-expense.entity';\r\nimport { OrganizationRecurringExpenseService } from '../organization-recurring-expense/organization-recurring-expense.service';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([\r\n\t\t\tIncome,\r\n\t\t\tExpense,\r\n\t\t\tEmployee,\r\n\t\t\tOrganization,\r\n\t\t\tEmployeeRecurringExpense,\r\n\t\t\tOrganizationRecurringExpense\r\n\t\t]),\r\n\t\tCqrsModule,\r\n\t\tTenantModule\r\n\t],\r\n\tcontrollers: [EmployeeStatisticsController],\r\n\tproviders: [\r\n\t\tEmployeeStatisticsService,\r\n\t\tIncomeService,\r\n\t\tExpenseService,\r\n\t\tEmployeeService,\r\n\t\tOrganizationService,\r\n\t\tEmployeeRecurringExpenseService,\r\n\t\tOrganizationRecurringExpenseService,\r\n\t\t...QueryHandlers\r\n\t],\r\n\texports: [EmployeeStatisticsService]\r\n})\r\nexport class EmployeeStatisticsModule {}\r\n","import {\r\n\tBonusTypeEnum,\r\n\tIEmployeeStatistics,\r\n\tIEmployeeStatisticsFindInput,\r\n\tDEFAULT_PROFIT_BASED_BONUS,\r\n\tDEFAULT_REVENUE_BASED_BONUS,\r\n\tIMonthAggregatedSplitExpense\r\n} from '@gauzy/models';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { EmployeeService } from '../employee/employee.service';\r\nimport { ExpenseService } from '../expense/expense.service';\r\nimport { IncomeService } from '../income/income.service';\r\nimport { Between, In, LessThanOrEqual, MoreThanOrEqual, IsNull } from 'typeorm';\r\nimport { subMonths, startOfMonth, endOfMonth } from 'date-fns';\r\nimport { EmployeeRecurringExpenseService } from '../employee-recurring-expense/employee-recurring-expense.service';\r\nimport { OrganizationRecurringExpenseService } from '../organization-recurring-expense/organization-recurring-expense.service';\r\n\r\n@Injectable()\r\nexport class EmployeeStatisticsService {\r\n\tprivate _monthNames = [\r\n\t\t'January',\r\n\t\t'February',\r\n\t\t'March',\r\n\t\t'April',\r\n\t\t'May',\r\n\t\t'June',\r\n\t\t'July',\r\n\t\t'August',\r\n\t\t'September',\r\n\t\t'October',\r\n\t\t'November',\r\n\t\t'December'\r\n\t];\r\n\r\n\tconstructor(\r\n\t\tprivate incomeService: IncomeService,\r\n\t\tprivate expenseService: ExpenseService,\r\n\t\tprivate employeeRecurringExpenseService: EmployeeRecurringExpenseService,\r\n\t\tprivate employeeService: EmployeeService,\r\n\t\tprivate organizationRecurringExpenseService: OrganizationRecurringExpenseService\r\n\t) {}\r\n\r\n\tasync getStatisticsByEmployeeId(\r\n\t\temployeeId: string,\r\n\t\tfindInput?: IEmployeeStatisticsFindInput\r\n\t): Promise<IEmployeeStatistics> {\r\n\t\tconst mappedEmployeeIncome = (\r\n\t\t\tawait this.incomeService.findAllIncomes(\r\n\t\t\t\t{\r\n\t\t\t\t\twhere: {\r\n\t\t\t\t\t\temployee: {\r\n\t\t\t\t\t\t\tid: employeeId\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tfindInput ? findInput.valueDate.toString() : null\r\n\t\t\t)\r\n\t\t).items.map((e) => {\r\n\t\t\tconst obj = {};\r\n\t\t\tconst formattedDate = this._formatDate(e.valueDate);\r\n\r\n\t\t\tobj[formattedDate] = +e.amount;\r\n\r\n\t\t\treturn obj;\r\n\t\t});\r\n\r\n\t\tconst mappedEmployeeExpenses = (\r\n\t\t\tawait this.expenseService.findAllExpenses(\r\n\t\t\t\t{\r\n\t\t\t\t\twhere: {\r\n\t\t\t\t\t\temployee: {\r\n\t\t\t\t\t\t\tid: employeeId\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tfindInput ? findInput.valueDate.toString() : null\r\n\t\t\t)\r\n\t\t).items.map((e) => {\r\n\t\t\tconst obj = {};\r\n\t\t\tconst formattedDate = this._formatDate(e.valueDate);\r\n\r\n\t\t\tobj[formattedDate] = +e.amount;\r\n\r\n\t\t\treturn obj;\r\n\t\t});\r\n\r\n\t\tconst sortedEmployeeExpenses: Object[] = [];\r\n\r\n\t\tmappedEmployeeExpenses.forEach((obj) => {\r\n\t\t\t// tslint:disable-next-line: forin\r\n\t\t\tfor (const key in obj) {\r\n\t\t\t\tconst foundObject = sortedEmployeeExpenses.find((o) =>\r\n\t\t\t\t\to.hasOwnProperty(key)\r\n\t\t\t\t);\r\n\t\t\t\tif (foundObject) {\r\n\t\t\t\t\tfoundObject[key] += obj[key];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsortedEmployeeExpenses.push(obj);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst sortedEmployeeIncome: Object[] = [];\r\n\r\n\t\tmappedEmployeeIncome.forEach((obj) => {\r\n\t\t\t// tslint:disable-next-line: forin\r\n\t\t\tfor (const key in obj) {\r\n\t\t\t\tconst foundObject = sortedEmployeeIncome.find((o) =>\r\n\t\t\t\t\to.hasOwnProperty(key)\r\n\t\t\t\t);\r\n\t\t\t\tif (foundObject) {\r\n\t\t\t\t\tfoundObject[key] += obj[key];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsortedEmployeeIncome.push(obj);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tlet incomeStatistics = [];\r\n\t\tlet expenseStatistics = [];\r\n\r\n\t\tthis._getLast12months().forEach((month) => {\r\n\t\t\tconst incomeStatForTheMonth = sortedEmployeeIncome.find(\r\n\t\t\t\t(incomeStat) => incomeStat.hasOwnProperty(month)\r\n\t\t\t);\r\n\r\n\t\t\tincomeStatForTheMonth\r\n\t\t\t\t? incomeStatistics.push(incomeStatForTheMonth[month])\r\n\t\t\t\t: incomeStatistics.push(0);\r\n\r\n\t\t\tconst expenseStatForTheMonth = sortedEmployeeExpenses.find(\r\n\t\t\t\t(expenseStat) => expenseStat.hasOwnProperty(month)\r\n\t\t\t);\r\n\r\n\t\t\texpenseStatForTheMonth\r\n\t\t\t\t? expenseStatistics.push(expenseStatForTheMonth[month])\r\n\t\t\t\t: expenseStatistics.push(0);\r\n\t\t});\r\n\r\n\t\tconst {\r\n\t\t\torganization: { bonusType, bonusPercentage }\r\n\t\t} = await this.employeeService.findOne(employeeId, {\r\n\t\t\trelations: ['organization']\r\n\t\t});\r\n\r\n\t\tlet profitStatistics = [];\r\n\t\tlet bonusStatistics = [];\r\n\r\n\t\texpenseStatistics.forEach((expenseStat, index) => {\r\n\t\t\tconst income = incomeStatistics[index];\r\n\t\t\tconst profit = income - expenseStat;\r\n\t\t\tconst bonus = this.calculateEmployeeBonus(\r\n\t\t\t\tbonusType,\r\n\t\t\t\tbonusPercentage,\r\n\t\t\t\tincome,\r\n\t\t\t\tprofit\r\n\t\t\t);\r\n\t\t\tprofitStatistics.push(profit);\r\n\t\t\tbonusStatistics.push(bonus);\r\n\t\t});\r\n\r\n\t\tif (findInput && findInput.valueDate) {\r\n\t\t\texpenseStatistics = expenseStatistics.filter(Number);\r\n\t\t\tincomeStatistics = incomeStatistics.filter(Number);\r\n\t\t\tprofitStatistics = profitStatistics.filter(Number);\r\n\t\t\tbonusStatistics = bonusStatistics.filter(Number);\r\n\t\t}\r\n\t\treturn {\r\n\t\t\texpenseStatistics,\r\n\t\t\tincomeStatistics,\r\n\t\t\tprofitStatistics,\r\n\t\t\tbonusStatistics\r\n\t\t};\r\n\t}\r\n\r\n\tprivate _getLast12months() {\r\n\t\tconst start = new Date(Date.now()).getMonth() + 1;\r\n\t\tconst end = start + 11;\r\n\t\tconst currentYear = new Date(Date.now()).getFullYear() - 2000;\r\n\r\n\t\tconst monthsNeeded = [];\r\n\r\n\t\tfor (let i = start; i <= end; i++) {\r\n\t\t\tif (i > 11) {\r\n\t\t\t\tmonthsNeeded.push(\r\n\t\t\t\t\tthis._monthNames[i - 12] + ` '${currentYear}`\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tmonthsNeeded.push(this._monthNames[i] + ` '${currentYear - 1}`);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn monthsNeeded.reverse();\r\n\t}\r\n\r\n\tprivate _formatDate(date: Date) {\r\n\t\treturn `${this._monthNames[date.getMonth()]} '${\r\n\t\t\tdate.getFullYear() - 2000\r\n\t\t}`;\r\n\t}\r\n\t/**\r\n\t * Return bonus value based on the bonus type and percentage\r\n\t * For revenue based bonus, bonus is calculated based on income\r\n\t * For profit based bonus, bonus is calculated based on profit\r\n\t */\r\n\tcalculateEmployeeBonus = (\r\n\t\tbonusType: string,\r\n\t\tbonusPercentage: number,\r\n\t\tincome: number,\r\n\t\tprofit: number\r\n\t) => {\r\n\t\tbonusType = bonusType ? bonusType : BonusTypeEnum.PROFIT_BASED_BONUS;\r\n\t\tswitch (bonusType) {\r\n\t\t\tcase BonusTypeEnum.PROFIT_BASED_BONUS:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t(profit * (bonusPercentage || DEFAULT_PROFIT_BASED_BONUS)) /\r\n\t\t\t\t\t100\r\n\t\t\t\t);\r\n\t\t\tcase BonusTypeEnum.REVENUE_BASED_BONUS:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t(income *\r\n\t\t\t\t\t\t(bonusPercentage || DEFAULT_REVENUE_BASED_BONUS)) /\r\n\t\t\t\t\t100\r\n\t\t\t\t);\r\n\t\t\tdefault:\r\n\t\t\t\treturn 0;\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * helper function to create a date range to use in SQL between condition\r\n\t */\r\n\tprivate _beforeDateFilter = (date: Date, lastNMonths: number) =>\r\n\t\tBetween(\r\n\t\t\tsubMonths(startOfMonth(date), lastNMonths - 1),\r\n\t\t\tendOfMonth(date)\r\n\t\t);\r\n\r\n\t/**\r\n\t * Gets all income records of one or more employees(using employeeId)\r\n\t * in last N months(lastNMonths),\r\n\t * till the specified Date(searchMonth)\r\n\t * lastNMonths = 1, for last 1 month and 12 for an year\r\n\t */\r\n\temployeeIncomeInNMonths = async (\r\n\t\temployeeIds: string[],\r\n\t\tsearchMonth: Date,\r\n\t\tlastNMonths: number,\r\n\t\torganizationId: string\r\n\t) =>\r\n\t\tawait this.incomeService.findAll({\r\n\t\t\tselect: [\r\n\t\t\t\t'employeeId',\r\n\t\t\t\t'valueDate',\r\n\t\t\t\t'clientName',\r\n\t\t\t\t'amount',\r\n\t\t\t\t'currency',\r\n\t\t\t\t'notes',\r\n\t\t\t\t'isBonus'\r\n\t\t\t],\r\n\t\t\twhere: {\r\n\t\t\t\torganizationId,\r\n\t\t\t\temployee: {\r\n\t\t\t\t\tid: In(employeeIds)\r\n\t\t\t\t},\r\n\t\t\t\tvalueDate: this._beforeDateFilter(searchMonth, lastNMonths)\r\n\t\t\t},\r\n\t\t\torder: {\r\n\t\t\t\tvalueDate: 'DESC'\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t/**\r\n\t * Gets all expense records of one or more employees(using employeeId)\r\n\t * in last N months(lastNMonths),\r\n\t * till the specified Date(searchMonth)\r\n\t * lastNMonths = 1, for last 1 month and 12 for an year\r\n\t */\r\n\temployeeExpenseInNMonths = async (\r\n\t\temployeeIds: string[],\r\n\t\tsearchMonth: Date,\r\n\t\tlastNMonths: number,\r\n\t\torganizationId: string\r\n\t) =>\r\n\t\tawait this.expenseService.findAll({\r\n\t\t\tselect: [\r\n\t\t\t\t'employeeId',\r\n\t\t\t\t'valueDate',\r\n\t\t\t\t'amount',\r\n\t\t\t\t'currency',\r\n\t\t\t\t'notes',\r\n\t\t\t\t'vendor',\r\n\t\t\t\t'category'\r\n\t\t\t],\r\n\t\t\twhere: {\r\n\t\t\t\torganizationId,\r\n\t\t\t\temployee: {\r\n\t\t\t\t\tid: In(employeeIds)\r\n\t\t\t\t},\r\n\t\t\t\tsplitExpense: false,\r\n\t\t\t\tvalueDate: this._beforeDateFilter(searchMonth, lastNMonths)\r\n\t\t\t},\r\n\t\t\torder: {\r\n\t\t\t\tvalueDate: 'DESC'\r\n\t\t\t},\r\n\t\t\trelations: ['vendor', 'category']\r\n\t\t});\r\n\r\n\t/**\r\n\t * Fetch all recurring expenses of one or more employees using employeeId\r\n\t */\r\n\temployeeRecurringExpenses = async (\r\n\t\temployeeIds: string[],\r\n\t\torganizationId: string\r\n\t) =>\r\n\t\tawait this.employeeRecurringExpenseService.findAll({\r\n\t\t\tselect: [\r\n\t\t\t\t'employeeId',\r\n\t\t\t\t'currency',\r\n\t\t\t\t'value',\r\n\t\t\t\t'categoryName',\r\n\t\t\t\t'startDate',\r\n\t\t\t\t'endDate'\r\n\t\t\t],\r\n\t\t\twhere: {\r\n\t\t\t\temployeeId: In(employeeIds),\r\n\t\t\t\torganizationId\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t/**\r\n\t * Gets all expense records of a employee's organization(employeeId)\r\n\t * that were marked to be split among its employees,\r\n\t * in last N months(lastNMonths),till the specified Date(searchMonth)\r\n\t * lastNMonths = 1, for last 1 month and 12 for an year\r\n\t *\r\n\t * @returns {Promise<Map<string, IMonthAggregatedSplitExpense>>} A map with\r\n\t * the key as 'month-year' for every month in the range & for which at least\r\n\t * one expense is available\r\n\t */\r\n\temployeeSplitExpenseInNMonths = async (\r\n\t\temployeeId: string,\r\n\t\tsearchMonth: Date,\r\n\t\tlastNMonths: number,\r\n\t\torganizationId: string\r\n\t): Promise<Map<string, IMonthAggregatedSplitExpense>> => {\r\n\t\t// 1 Get Employee's Organization\r\n\t\tconst employee = await this.employeeService.findOne({\r\n\t\t\twhere: {\r\n\t\t\t\tid: employeeId,\r\n\t\t\t\torganizationId\r\n\t\t\t},\r\n\t\t\trelations: ['organization']\r\n\t\t});\r\n\r\n\t\t// 2 Find split expenses for Employee's Organization in last N months\r\n\t\tconst { items } = await this.expenseService.findAll({\r\n\t\t\tselect: ['valueDate', 'amount', 'currency', 'notes', 'category'],\r\n\t\t\twhere: {\r\n\t\t\t\torganization: { id: employee.organization.id },\r\n\t\t\t\tsplitExpense: true,\r\n\t\t\t\tvalueDate: this._beforeDateFilter(searchMonth, lastNMonths)\r\n\t\t\t},\r\n\t\t\trelations: ['category']\r\n\t\t});\r\n\r\n\t\tconst monthlySplitExpenseMap: Map<\r\n\t\t\tstring,\r\n\t\t\tIMonthAggregatedSplitExpense\r\n\t\t> = new Map();\r\n\r\n\t\t// 3 Find the number of active employees for each month, and split the expenses among the active employees for each month\r\n\t\tfor (const expense of items) {\r\n\t\t\tconst key = `${expense.valueDate.getMonth()}-${expense.valueDate.getFullYear()}`;\r\n\t\t\tconst amount = Number(expense.amount);\r\n\r\n\t\t\tif (monthlySplitExpenseMap.has(key)) {\r\n\t\t\t\t// Update expense statistics values in map if key pre-exists\r\n\t\t\t\tconst stat = monthlySplitExpenseMap.get(key);\r\n\t\t\t\tconst splitAmount = amount / stat.splitAmong;\r\n\t\t\t\tstat.splitExpense = Number(\r\n\t\t\t\t\t(splitAmount + stat.splitExpense).toFixed(2)\r\n\t\t\t\t);\r\n\t\t\t\tstat.expense.push(expense);\r\n\t\t\t} else {\r\n\t\t\t\t// Add a new map entry if the key(month-year) does not already exist\r\n\t\t\t\tconst {\r\n\t\t\t\t\ttotal: splitAmong\r\n\t\t\t\t} = await this.employeeService.findWorkingEmployees(\r\n\t\t\t\t\temployee.organization.id,\r\n\t\t\t\t\temployee.organization.tenantId,\r\n\t\t\t\t\texpense.valueDate,\r\n\t\t\t\t\tfalse\r\n\t\t\t\t);\r\n\r\n\t\t\t\tconst newStat = {\r\n\t\t\t\t\tmonth: expense.valueDate.getMonth(),\r\n\t\t\t\t\tyear: expense.valueDate.getFullYear(),\r\n\t\t\t\t\tsplitExpense: Number((amount / splitAmong).toFixed(2)),\r\n\t\t\t\t\tsplitAmong,\r\n\t\t\t\t\texpense: [expense]\r\n\t\t\t\t};\r\n\r\n\t\t\t\tmonthlySplitExpenseMap.set(key, newStat);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn monthlySplitExpenseMap;\r\n\t};\r\n\r\n\t/**\r\n\t * Fetch all recurring split expenses of the employee's Organization\r\n\t */\r\n\torganizationRecurringSplitExpenses = async (\r\n\t\temployeeId: string,\r\n\t\tsearchMonth: Date,\r\n\t\tlastNMonths: number,\r\n\t\torganizationId: string\r\n\t) => {\r\n\t\t// 1 Get Employee's Organization\r\n\t\tconst employee = await this.employeeService.findOne({\r\n\t\t\twhere: {\r\n\t\t\t\tid: employeeId,\r\n\t\t\t\torganizationId\r\n\t\t\t},\r\n\t\t\trelations: ['organization']\r\n\t\t});\r\n\r\n\t\t// 2 Fetch all split recurring expenses of the Employee's Organization\r\n\t\tconst {\r\n\t\t\titems\r\n\t\t} = await this.organizationRecurringExpenseService.findAll({\r\n\t\t\tselect: [\r\n\t\t\t\t'currency',\r\n\t\t\t\t'value',\r\n\t\t\t\t'categoryName',\r\n\t\t\t\t'startDate',\r\n\t\t\t\t'endDate'\r\n\t\t\t],\r\n\t\t\twhere: [\r\n\t\t\t\t{\r\n\t\t\t\t\torganizationId: employee.organization.id,\r\n\t\t\t\t\tsplitExpense: true,\r\n\t\t\t\t\tstartDate: LessThanOrEqual(endOfMonth(searchMonth)),\r\n\t\t\t\t\tendDate: MoreThanOrEqual(\r\n\t\t\t\t\t\tsubMonths(startOfMonth(searchMonth), lastNMonths - 1)\r\n\t\t\t\t\t)\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\torganizationId: employee.organization.id,\r\n\t\t\t\t\tsplitExpense: true,\r\n\t\t\t\t\tstartDate: LessThanOrEqual(endOfMonth(searchMonth)),\r\n\t\t\t\t\tendDate: IsNull()\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t});\r\n\r\n\t\tconst monthlySplitExpenseMap: Map<\r\n\t\t\tstring,\r\n\t\t\tIMonthAggregatedSplitExpense\r\n\t\t> = new Map();\r\n\r\n\t\t/**\r\n\t\t * Add Organization split recurring expense from the\r\n\t\t * expense start date\r\n\t\t * OR\r\n\t\t * past N months to each month's expense, whichever is lesser\r\n\t\t * Stop adding recurring expenses at the month where it was stopped\r\n\t\t * OR\r\n\t\t * till the input date\r\n\t\t */\r\n\t\tfor (const expense of items) {\r\n\t\t\t// Find start date based on input date and X months.\r\n\t\t\tconst inputStartDate = subMonths(\r\n\t\t\t\tstartOfMonth(searchMonth),\r\n\t\t\t\tlastNMonths - 1\r\n\t\t\t);\r\n\r\n\t\t\t/**\r\n\t\t\t * Add Organization split recurring expense from the\r\n\t\t\t * expense start date\r\n\t\t\t * OR\r\n\t\t\t * past N months to each month's expense, whichever is more recent\r\n\t\t\t */\r\n\t\t\tconst requiredStartDate =\r\n\t\t\t\texpense.startDate > inputStartDate\r\n\t\t\t\t\t? expense.startDate\r\n\t\t\t\t\t: inputStartDate;\r\n\r\n\t\t\tfor (\r\n\t\t\t\tconst date = requiredStartDate;\r\n\t\t\t\tdate <= endOfMonth(searchMonth);\r\n\t\t\t\tdate.setMonth(date.getMonth() + 1)\r\n\t\t\t) {\r\n\t\t\t\t// Stop loading expense if the split recurring expense has ended before input date\r\n\t\t\t\tif (expense.endDate && date > expense.endDate) break;\r\n\r\n\t\t\t\tconst key = `${date.getMonth()}-${date.getFullYear()}`;\r\n\t\t\t\tconst amount = Number(expense.value);\r\n\t\t\t\tif (monthlySplitExpenseMap.has(key)) {\r\n\t\t\t\t\t// Update expense statistics values in map if key pre-exists\r\n\t\t\t\t\tconst stat = monthlySplitExpenseMap.get(key);\r\n\t\t\t\t\tconst splitExpense = amount / stat.splitAmong;\r\n\t\t\t\t\tstat.splitExpense = Number(\r\n\t\t\t\t\t\t(splitExpense + stat.splitExpense).toFixed(2)\r\n\t\t\t\t\t);\r\n\t\t\t\t\tstat.recurringExpense.push(expense);\r\n\t\t\t\t\tstat.valueDate = date;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst {\r\n\t\t\t\t\t\ttotal: splitAmong\r\n\t\t\t\t\t} = await this.employeeService.findWorkingEmployees(\r\n\t\t\t\t\t\temployee.organization.id,\r\n\t\t\t\t\t\temployee.organization.tenantId,\r\n\t\t\t\t\t\tdate,\r\n\t\t\t\t\t\tfalse\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\t// Add a new map entry if the key(month-year) does not already exist\r\n\t\t\t\t\tconst newStat: IMonthAggregatedSplitExpense = {\r\n\t\t\t\t\t\tmonth: date.getMonth(),\r\n\t\t\t\t\t\tyear: date.getFullYear(),\r\n\t\t\t\t\t\tsplitExpense: Number((amount / splitAmong).toFixed(2)),\r\n\t\t\t\t\t\tsplitAmong,\r\n\t\t\t\t\t\trecurringExpense: [expense],\r\n\t\t\t\t\t\tvalueDate: date\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tmonthlySplitExpenseMap.set(key, newStat);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn monthlySplitExpenseMap;\r\n\t};\r\n}\r\n","export { EmployeeStatisticsService } from './employee-statistics.service';\r\nexport { EmployeeStatisticsModule } from './employee-statistics.module';\r\nexport { EmployeeStatisticsController } from './employee-statistics.controller';","import { IAggregatedEmployeeStatisticFindInput } from '@gauzy/models';\r\nimport { IQuery } from '@nestjs/cqrs';\r\n\r\nexport class AggregatedEmployeeStatisticQuery implements IQuery {\r\n\tstatic readonly type = '[EmployeeStatistic] Aggregated Employee Statistic';\r\n\r\n\tconstructor(public readonly input: IAggregatedEmployeeStatisticFindInput) {}\r\n}\r\n","import { IQuery } from '@nestjs/cqrs';\r\nimport { IEmployeeStatisticsHistoryFindInput } from '@gauzy/models';\r\n\r\nexport class EmployeeStatisticsHistoryQuery implements IQuery {\r\n\tstatic readonly type = '[EmployeeStatistics] History';\r\n\r\n\tconstructor(public readonly input: IEmployeeStatisticsHistoryFindInput) {}\r\n}\r\n","import {\r\n\tIAggregatedEmployeeStatistic,\r\n\tIEmployeeStatisticSum,\r\n\tIMonthAggregatedSplitExpense,\r\n\tIStatisticSum\r\n} from '@gauzy/models';\r\nimport { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\r\nimport { startOfMonth, subMonths } from 'date-fns';\r\nimport { RequestContext } from '../../../core/context';\r\nimport { EmployeeService } from '../../../employee/employee.service';\r\nimport { AggregatedEmployeeStatisticQuery } from '../aggregate-employee-statistic.query';\r\nimport { EmployeeStatisticsService } from './../../employee-statistics.service';\r\n/**\r\n * Finds income, expense, profit and bonus for all employees for the given month.\r\n * If month is not specified, finds from the start of time till now.\r\n */\r\n@QueryHandler(AggregatedEmployeeStatisticQuery)\r\nexport class AggregateOrganizationQueryHandler\r\n\timplements IQueryHandler<AggregatedEmployeeStatisticQuery> {\r\n\tconstructor(\r\n\t\tprivate employeeService: EmployeeService,\r\n\t\tprivate employeeStatisticsService: EmployeeStatisticsService\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: AggregatedEmployeeStatisticQuery\r\n\t): Promise<IAggregatedEmployeeStatistic> {\r\n\t\tconst {\r\n\t\t\tinput: { filterDate, organizationId }\r\n\t\t} = command;\r\n\t\tconst tenantId = RequestContext.currentTenantId();\r\n\r\n\t\t// Calculate transactions for 1 month if filterDate is available,\r\n\t\t// TODO: last 20 years otherwise. More than one month can be very complex, since in any given month, any number of employees can be working\r\n\t\tconst searchInput = {\r\n\t\t\tmonths: 1,\r\n\t\t\tvalueDate: filterDate ? filterDate : new Date()\r\n\t\t};\r\n\r\n\t\t// Get employees of input organization\r\n\t\t// const { items: employees } = await this.employeeService.findAll({\r\n\t\t// \tselect: ['id'],\r\n\t\t// \twhere: {\r\n\t\t// \t\torganization: {\r\n\t\t// \t\t\tid: organizationId\r\n\t\t// \t\t},\r\n\t\t// \t\tstartedWorkOn: filterDate ? LessThanOrEqual(\r\n\t\t// \t\t\tmoment(filterDate)\r\n\t\t// \t\t\t\t.endOf('month')\r\n\t\t// \t\t\t\t.toDate()\r\n\t\t// \t\t) : Not(IsNull()) //Only employees that started work on before the filter date\r\n\t\t// \t},\r\n\t\t// \trelations: ['user']\r\n\t\t// });\r\n\r\n\t\tconst {\r\n\t\t\titems: employees\r\n\t\t} = await this.employeeService.findWorkingEmployees(\r\n\t\t\torganizationId,\r\n\t\t\ttenantId,\r\n\t\t\tfilterDate,\r\n\t\t\ttrue\r\n\t\t);\r\n\r\n\t\tconst employeeMap: Map<string, IEmployeeStatisticSum> = new Map();\r\n\r\n\t\temployees.forEach((employee) => {\r\n\t\t\t// Hide user hash\r\n\t\t\temployee.user.hash = '';\r\n\t\t\temployeeMap.set(employee.id, {\r\n\t\t\t\tincome: 0,\r\n\t\t\t\texpense: 0,\r\n\t\t\t\tbonus: 0,\r\n\t\t\t\tprofit: 0,\r\n\t\t\t\temployee: {\r\n\t\t\t\t\tid: employee.id,\r\n\t\t\t\t\tuser: employee.user\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tif (employees.length > 0) {\r\n\t\t\t// 1.Load Income and Direct Bonus in employeeMap\r\n\t\t\tawait this._loadIncomeAndDirectBonus(\r\n\t\t\t\tsearchInput,\r\n\t\t\t\temployeeMap,\r\n\t\t\t\torganizationId\r\n\t\t\t);\r\n\r\n\t\t\t// 2. Populate Expenses(One time, Recurring, and split expenses) in employeeMap\r\n\t\t\tawait this._loadEmployeeExpenses(\r\n\t\t\t\tsearchInput,\r\n\t\t\t\temployeeMap,\r\n\t\t\t\torganizationId\r\n\t\t\t);\r\n\t\t\tawait this._loadEmployeeRecurringExpenses(\r\n\t\t\t\tsearchInput,\r\n\t\t\t\temployeeMap,\r\n\t\t\t\torganizationId\r\n\t\t\t);\r\n\t\t\tawait this._loadOrganizationSplitExpenses(\r\n\t\t\t\tsearchInput,\r\n\t\t\t\temployeeMap,\r\n\t\t\t\torganizationId\r\n\t\t\t);\r\n\t\t\tawait this._loadOrganizationRecurringSplitExpenses(\r\n\t\t\t\tsearchInput,\r\n\t\t\t\temployeeMap,\r\n\t\t\t\torganizationId\r\n\t\t\t);\r\n\r\n\t\t\t// 3. Populate Profit in employeeMap\r\n\t\t\tthis._calculateProfit(employeeMap);\r\n\r\n\t\t\t// 4. Populate Bonus in employeeMap\r\n\t\t\tawait this._loadEmployeeBonus(employeeMap);\r\n\t\t}\r\n\r\n\t\tconst employeeStats = [...employeeMap.values()];\r\n\t\tconst total: IStatisticSum = employeeStats.reduce(\r\n\t\t\tthis._aggregateEmployeeStats,\r\n\t\t\t{ income: 0, expense: 0, bonus: 0, profit: 0 }\r\n\t\t);\r\n\r\n\t\treturn {\r\n\t\t\ttotal,\r\n\t\t\temployees: employeeStats\r\n\t\t};\r\n\t}\r\n\r\n\tprivate async _loadIncomeAndDirectBonus(\r\n\t\tsearchInput: { valueDate: Date; months: number },\r\n\t\temployeeMap: Map<string, IEmployeeStatisticSum>,\r\n\t\torganizationId: string\r\n\t) {\r\n\t\t// Fetch employees' incomes for past N months from given date\r\n\t\tconst {\r\n\t\t\titems: incomes\r\n\t\t} = await this.employeeStatisticsService.employeeIncomeInNMonths(\r\n\t\t\t[...employeeMap.keys()],\r\n\t\t\tsearchInput.valueDate,\r\n\t\t\tsearchInput.months,\r\n\t\t\torganizationId\r\n\t\t);\r\n\t\tincomes.forEach((income) => {\r\n\t\t\tconst stat = employeeMap.get(income.employeeId);\r\n\t\t\tconst amount = Number(income.amount);\r\n\t\t\tstat.income = Number((stat.income + amount).toFixed(2));\r\n\t\t\tstat.bonus = income.isBonus\r\n\t\t\t\t? Number((stat.bonus + amount).toFixed(2))\r\n\t\t\t\t: stat.bonus;\r\n\t\t});\r\n\t}\r\n\r\n\tprivate async _loadEmployeeExpenses(\r\n\t\tsearchInput: { valueDate: Date; months: number },\r\n\t\temployeeMap: Map<string, IEmployeeStatisticSum>,\r\n\t\torganizationId: string\r\n\t) {\r\n\t\t// Fetch employees' expenses for past N months from given date\r\n\t\tconst {\r\n\t\t\titems: expenses\r\n\t\t} = await this.employeeStatisticsService.employeeExpenseInNMonths(\r\n\t\t\t[...employeeMap.keys()],\r\n\t\t\tsearchInput.valueDate,\r\n\t\t\tsearchInput.months,\r\n\t\t\torganizationId\r\n\t\t);\r\n\t\texpenses.forEach((expense) => {\r\n\t\t\tconst stat = employeeMap.get(expense.employeeId);\r\n\t\t\tconst amount = Number(expense.amount);\r\n\t\t\tstat.expense = Number((amount + stat.expense).toFixed(2));\r\n\t\t});\r\n\t}\r\n\r\n\tprivate async _loadEmployeeRecurringExpenses(\r\n\t\tsearchInput: { valueDate: Date; months: number },\r\n\t\temployeeMap: Map<string, IEmployeeStatisticSum>,\r\n\t\torganizationId: string\r\n\t) {\r\n\t\t// Fetch employees' recurring expenses for past N months from given date\r\n\t\tconst {\r\n\t\t\titems: employeeRecurringExpenses\r\n\t\t} = await this.employeeStatisticsService.employeeRecurringExpenses(\r\n\t\t\t[...employeeMap.keys()],\r\n\t\t\torganizationId\r\n\t\t);\r\n\r\n\t\t/**\r\n\t\t * Add recurring expense from the\r\n\t\t * expense start date\r\n\t\t * OR\r\n\t\t * past N months to each month's expense, whichever is lesser\r\n\t\t * Stop adding recurring expenses at the month where it was stopped\r\n\t\t * OR\r\n\t\t * till the input date\r\n\t\t */\r\n\t\temployeeRecurringExpenses.forEach((expense) => {\r\n\t\t\t// Find start date based on input date and X months.\r\n\t\t\tconst inputStartDate = subMonths(\r\n\t\t\t\tstartOfMonth(searchInput.valueDate),\r\n\t\t\t\tsearchInput.months - 1\r\n\t\t\t);\r\n\r\n\t\t\t/**\r\n\t\t\t * Add recurring expense from the\r\n\t\t\t * expense start date\r\n\t\t\t * OR\r\n\t\t\t * past N months to each month's expense, whichever is more recent\r\n\t\t\t */\r\n\t\t\tconst requiredStartDate =\r\n\t\t\t\texpense.startDate > inputStartDate\r\n\t\t\t\t\t? expense.startDate\r\n\t\t\t\t\t: inputStartDate;\r\n\r\n\t\t\tfor (\r\n\t\t\t\tconst date = requiredStartDate;\r\n\t\t\t\tdate <= searchInput.valueDate;\r\n\t\t\t\tdate.setMonth(date.getMonth() + 1)\r\n\t\t\t) {\r\n\t\t\t\t// Stop loading expense if the recurring expense has ended before input date\r\n\t\t\t\tif (expense.endDate && date > expense.endDate) break;\r\n\r\n\t\t\t\tconst amount = Number(expense.value);\r\n\t\t\t\tconst stat = employeeMap.get(expense.employeeId);\r\n\t\t\t\tstat.expense = Number((amount + stat.expense).toFixed(2));\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tprivate async _loadOrganizationSplitExpenses(\r\n\t\tsearchInput: { valueDate: Date; months: number },\r\n\t\temployeeMap: Map<string, IEmployeeStatisticSum>,\r\n\t\torganizationId: string\r\n\t) {\r\n\t\tconst employeeIds = [...employeeMap.keys()];\r\n\r\n\t\t// Fetch split expenses and the number of employees the expense need to be split among for each month\r\n\t\t// TODO: Handle case when searchInput.months > 1\r\n\t\tconst expenses = await this.employeeStatisticsService.employeeSplitExpenseInNMonths(\r\n\t\t\temployeeIds[0], // split expenses are fetched at organization level, 1st Employee\r\n\t\t\tsearchInput.valueDate,\r\n\t\t\tsearchInput.months, //this is always 1\r\n\t\t\torganizationId\r\n\t\t);\r\n\r\n\t\t//Since we are only calculating for one month, we only expect one value here.\r\n\t\tconst monthSplitExpense: IMonthAggregatedSplitExpense = expenses\r\n\t\t\t.values()\r\n\t\t\t.next().value;\r\n\r\n\t\tif (monthSplitExpense) {\r\n\t\t\t// Add split expense share to each employee's expenses\r\n\t\t\temployeeMap.forEach((emp) => {\r\n\t\t\t\temp.expense = Number(\r\n\t\t\t\t\t(emp.expense + monthSplitExpense.splitExpense).toFixed(2)\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tprivate async _loadOrganizationRecurringSplitExpenses(\r\n\t\tsearchInput: { valueDate: Date; months: number },\r\n\t\temployeeMap: Map<string, IEmployeeStatisticSum>,\r\n\t\torganizationId: string\r\n\t) {\r\n\t\tconst employeeIds = [...employeeMap.keys()];\r\n\r\n\t\t// Fetch split expenses and the number of employees the expense need to be split among\r\n\t\tconst organizationRecurringSplitExpenses = await this.employeeStatisticsService.organizationRecurringSplitExpenses(\r\n\t\t\temployeeIds[0],\r\n\t\t\tsearchInput.valueDate,\r\n\t\t\tsearchInput.months, //this is always 1\r\n\t\t\torganizationId\r\n\t\t);\r\n\r\n\t\t//Since we are only calculating for one month, we only expect one value here.\r\n\t\tconst monthSplitExpense: IMonthAggregatedSplitExpense = organizationRecurringSplitExpenses\r\n\t\t\t.values()\r\n\t\t\t.next().value;\r\n\r\n\t\tif (monthSplitExpense) {\r\n\t\t\temployeeMap.forEach(\r\n\t\t\t\t(emp) =>\r\n\t\t\t\t\t(emp.expense = Number(\r\n\t\t\t\t\t\t(emp.expense + monthSplitExpense.splitExpense).toFixed(\r\n\t\t\t\t\t\t\t2\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t))\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _calculateProfit(employeeMap: Map<string, IEmployeeStatisticSum>) {\r\n\t\temployeeMap.forEach((emp) => {\r\n\t\t\temp.profit = Number((emp.income - emp.expense).toFixed(2));\r\n\t\t});\r\n\t}\r\n\r\n\tprivate async _loadEmployeeBonus(\r\n\t\temployeeMap: Map<string, IEmployeeStatisticSum>\r\n\t) {\r\n\t\tconst employeeIds = [...employeeMap.keys()];\r\n\t\tconst {\r\n\t\t\torganization: { bonusType, bonusPercentage }\r\n\t\t} = await this.employeeService.findOne(employeeIds[0], {\r\n\t\t\trelations: ['organization']\r\n\t\t});\r\n\r\n\t\temployeeMap.forEach((emp) => {\r\n\t\t\tconst bonus = this.employeeStatisticsService.calculateEmployeeBonus(\r\n\t\t\t\tbonusType,\r\n\t\t\t\tbonusPercentage,\r\n\t\t\t\temp.income,\r\n\t\t\t\temp.profit\r\n\t\t\t);\r\n\t\t\temp.bonus = Number((emp.bonus + bonus).toFixed(2));\r\n\t\t});\r\n\t}\r\n\r\n\tprivate _aggregateEmployeeStats(\r\n\t\taccumulator: IStatisticSum,\r\n\t\tvalue: IStatisticSum\r\n\t): IStatisticSum {\r\n\t\taccumulator.income = Number(\r\n\t\t\t(accumulator.income + value.income).toFixed(2)\r\n\t\t);\r\n\t\taccumulator.expense = Number(\r\n\t\t\t(accumulator.expense + value.expense).toFixed(2)\r\n\t\t);\r\n\t\taccumulator.profit = Number(\r\n\t\t\t(accumulator.profit + value.profit).toFixed(2)\r\n\t\t);\r\n\t\taccumulator.bonus = Number(\r\n\t\t\t(accumulator.bonus + value.bonus).toFixed(2)\r\n\t\t);\r\n\t\treturn accumulator;\r\n\t}\r\n}\r\n","import { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\r\nimport { EmployeeStatisticsService } from '../../employee-statistics.service';\r\nimport { startOfMonth, subMonths } from 'date-fns';\r\nimport {\r\n\tIEmployeeStatisticsHistory,\r\n\tEmployeeStatisticsHistoryEnum,\r\n\tIEmployeeStatisticsHistoryFindInput,\r\n\tRecurringExpenseDefaultCategoriesEnum\r\n} from '@gauzy/models';\r\nimport { EmployeeStatisticsHistoryQuery } from '../employee-statistics-history.query';\r\n\r\n/**\r\n * Finds income, expense history\r\n * for past N months of an employee a given value date.\r\n */\r\n@QueryHandler(EmployeeStatisticsHistoryQuery)\r\nexport class EmployeeStatisticsHistoryQueryHandler\r\n\timplements IQueryHandler<EmployeeStatisticsHistoryQuery> {\r\n\tconstructor(private employeeStatisticsService: EmployeeStatisticsService) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: EmployeeStatisticsHistoryQuery\r\n\t): Promise<IEmployeeStatisticsHistory[]> {\r\n\t\tconst { input } = command;\r\n\r\n\t\tswitch (input.type) {\r\n\t\t\tcase EmployeeStatisticsHistoryEnum.INCOME:\r\n\t\t\tcase EmployeeStatisticsHistoryEnum.BONUS_INCOME:\r\n\t\t\tcase EmployeeStatisticsHistoryEnum.NON_BONUS_INCOME:\r\n\t\t\t\treturn this._incomeHistory(input);\r\n\r\n\t\t\tcase EmployeeStatisticsHistoryEnum.EXPENSES:\r\n\t\t\tcase EmployeeStatisticsHistoryEnum.EXPENSES_WITHOUT_SALARY:\r\n\t\t\t\treturn this._expenseHistory(input);\r\n\r\n\t\t\tdefault:\r\n\t\t\t\treturn [];\r\n\t\t}\r\n\t}\r\n\r\n\tprivate async _incomeHistory(\r\n\t\tinput: IEmployeeStatisticsHistoryFindInput\r\n\t): Promise<IEmployeeStatisticsHistory[]> {\r\n\t\t// 1. Fetch employee's incomes for past N months from given date\r\n\t\tconst {\r\n\t\t\titems: incomes\r\n\t\t} = await this.employeeStatisticsService.employeeIncomeInNMonths(\r\n\t\t\t[input.employeeId],\r\n\t\t\tinput.valueDate,\r\n\t\t\tinput.months,\r\n\t\t\tinput.organizationId\r\n\t\t);\r\n\t\tconst history: IEmployeeStatisticsHistory[] = [];\r\n\t\t// 2. Populate  EmployeeStatisticsHistory\r\n\t\tincomes.forEach(({ amount, clientName, valueDate, notes, isBonus }) => {\r\n\t\t\thistory.push({ valueDate, amount, notes, clientName, isBonus });\r\n\t\t});\r\n\r\n\t\t// 3. Filter Bonus, Non-Bonus or All incomes\r\n\t\tswitch (input.type) {\r\n\t\t\tcase EmployeeStatisticsHistoryEnum.BONUS_INCOME:\r\n\t\t\t\treturn history.filter((income) => income.isBonus);\r\n\r\n\t\t\tcase EmployeeStatisticsHistoryEnum.NON_BONUS_INCOME:\r\n\t\t\t\treturn history.filter((income) => !income.isBonus);\r\n\r\n\t\t\tdefault:\r\n\t\t\t\treturn history;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate async _expenseHistory(\r\n\t\tinput: IEmployeeStatisticsHistoryFindInput\r\n\t): Promise<IEmployeeStatisticsHistory[]> {\r\n\t\tconst history: IEmployeeStatisticsHistory[] = [];\r\n\r\n\t\t// 1. Employee One time expenses\r\n\t\tawait this._loadEmployeeExpenses(input, history);\r\n\t\t// 2. Employee Recurring Expenses\r\n\t\tawait this._loadEmployeeRecurringExpenses(input, history);\r\n\t\t// 3. Organization Split Expenses\r\n\t\tawait this._loadOrganizationSplitExpenses(input, history);\r\n\t\t// 4. Organization Recurring Split Expenses\r\n\t\tawait this._loadOrganizationRecurringSplitExpenses(input, history);\r\n\r\n\t\t// Filter out salary expenses based on input\r\n\t\treturn input.type ===\r\n\t\t\tEmployeeStatisticsHistoryEnum.EXPENSES_WITHOUT_SALARY\r\n\t\t\t? history.filter((stat) => !stat.isSalary)\r\n\t\t\t: history;\r\n\t}\r\n\r\n\tprivate async _loadEmployeeExpenses(\r\n\t\tinput: IEmployeeStatisticsHistoryFindInput,\r\n\t\thistory: IEmployeeStatisticsHistory[]\r\n\t) {\r\n\t\t// 1. Fetch employee's  one time expenses for past N months from given date\r\n\t\tconst {\r\n\t\t\titems: expenses\r\n\t\t} = await this.employeeStatisticsService.employeeExpenseInNMonths(\r\n\t\t\t[input.employeeId],\r\n\t\t\tinput.valueDate,\r\n\t\t\tinput.months,\r\n\t\t\tinput.organizationId\r\n\t\t);\r\n\r\n\t\t// 2. Extract required attributes from the expense and populate EmployeeStatisticsHistory\r\n\t\texpenses.forEach(({ valueDate, amount, notes, vendor, category }) => {\r\n\t\t\thistory.push({\r\n\t\t\t\tvalueDate,\r\n\t\t\t\tamount,\r\n\t\t\t\tnotes,\r\n\t\t\t\tvendorName: vendor.name,\r\n\t\t\t\tcategoryName: category.name,\r\n\t\t\t\tisSalary: false,\r\n\t\t\t\tsource: 'employee'\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tprivate async _loadEmployeeRecurringExpenses(\r\n\t\tinput: IEmployeeStatisticsHistoryFindInput,\r\n\t\thistory: IEmployeeStatisticsHistory[]\r\n\t) {\r\n\t\t// 1. Fetch employee's  recurring expenses\r\n\t\tconst {\r\n\t\t\titems: employeeRecurringExpenses\r\n\t\t} = await this.employeeStatisticsService.employeeRecurringExpenses(\r\n\t\t\t[input.employeeId],\r\n\t\t\tinput.organizationId\r\n\t\t);\r\n\r\n\t\t// 2. Filter recurring expenses based on input data and N Months and populate EmployeeStatisticsHistory\r\n\t\temployeeRecurringExpenses.forEach((expense) => {\r\n\t\t\t// Find start date based on input date and X months.\r\n\t\t\tconst inputStartDate = subMonths(\r\n\t\t\t\tstartOfMonth(input.valueDate),\r\n\t\t\t\tinput.months - 1\r\n\t\t\t);\r\n\r\n\t\t\t/**\r\n\t\t\t * Add recurring expense from the\r\n\t\t\t * expense start date\r\n\t\t\t * OR\r\n\t\t\t * past N months to each month's expense, whichever is more recent\r\n\t\t\t */\r\n\t\t\tconst requiredStartDate =\r\n\t\t\t\texpense.startDate > inputStartDate\r\n\t\t\t\t\t? expense.startDate\r\n\t\t\t\t\t: inputStartDate;\r\n\r\n\t\t\tfor (\r\n\t\t\t\tconst date = requiredStartDate;\r\n\t\t\t\tdate <= input.valueDate;\r\n\t\t\t\tdate.setMonth(date.getMonth() + 1)\r\n\t\t\t) {\r\n\t\t\t\t// Stop loading expense if the recurring expense has ended before input date\r\n\t\t\t\tif (expense.endDate && date > expense.endDate) break;\r\n\r\n\t\t\t\t// Extract required attributes from expense and Populate EmployeeStatisticsHistory\r\n\t\t\t\thistory.push({\r\n\t\t\t\t\tvalueDate: date,\r\n\t\t\t\t\tamount: expense.value,\r\n\t\t\t\t\tisRecurring: true,\r\n\t\t\t\t\tcategoryName: expense.categoryName,\r\n\t\t\t\t\tisSalary:\r\n\t\t\t\t\t\texpense.categoryName ===\r\n\t\t\t\t\t\tRecurringExpenseDefaultCategoriesEnum.SALARY\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tprivate async _loadOrganizationSplitExpenses(\r\n\t\tinput: IEmployeeStatisticsHistoryFindInput,\r\n\t\thistory: IEmployeeStatisticsHistory[]\r\n\t) {\r\n\t\t// 1. Fetch employee's split expenses for past N months from given date\r\n\t\tconst splitExpensesMap = await this.employeeStatisticsService.employeeSplitExpenseInNMonths(\r\n\t\t\tinput.employeeId,\r\n\t\t\tinput.valueDate,\r\n\t\t\tinput.months,\r\n\t\t\tinput.organizationId\r\n\t\t);\r\n\r\n\t\t// 2. Extract required attributes from the expense and populate EmployeeStatisticsHistory\r\n\t\tsplitExpensesMap.forEach((value) => {\r\n\t\t\tvalue.expense.forEach(({ amount, category, valueDate }) => {\r\n\t\t\t\thistory.push({\r\n\t\t\t\t\tamount: Number((amount / value.splitAmong).toFixed(2)),\r\n\t\t\t\t\tvalueDate,\r\n\t\t\t\t\tcategoryName: category.name,\r\n\t\t\t\t\tsplitExpense: {\r\n\t\t\t\t\t\toriginalValue: amount,\r\n\t\t\t\t\t\temployeeCount: value.splitAmong\r\n\t\t\t\t\t},\r\n\t\t\t\t\tsource: 'org'\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tprivate async _loadOrganizationRecurringSplitExpenses(\r\n\t\tinput: IEmployeeStatisticsHistoryFindInput,\r\n\t\thistory: IEmployeeStatisticsHistory[]\r\n\t) {\r\n\t\t// 1. Fetch employee's Organization Recurring split expenses for past N months from given date\r\n\t\tconst splitExpensesMap = await this.employeeStatisticsService.organizationRecurringSplitExpenses(\r\n\t\t\tinput.employeeId,\r\n\t\t\tinput.valueDate,\r\n\t\t\tinput.months,\r\n\t\t\tinput.organizationId\r\n\t\t);\r\n\t\t// 2. Extract required attributes from the expense and populate EmployeeStatisticsHistory\r\n\t\tsplitExpensesMap.forEach((mapValue) => {\r\n\t\t\tmapValue.recurringExpense.forEach(({ value, categoryName }) => {\r\n\t\t\t\thistory.push({\r\n\t\t\t\t\tamount: Number((value / mapValue.splitAmong).toFixed(2)),\r\n\t\t\t\t\tvalueDate: mapValue.valueDate,\r\n\t\t\t\t\tcategoryName,\r\n\t\t\t\t\tsplitExpense: {\r\n\t\t\t\t\t\toriginalValue: value,\r\n\t\t\t\t\t\temployeeCount: mapValue.splitAmong\r\n\t\t\t\t\t},\r\n\t\t\t\t\tsource: 'org',\r\n\t\t\t\t\tisRecurring: true\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\n","import { AggregateOrganizationQueryHandler } from './aggregate-employee-statistic.handler';\r\nimport { MonthAggregatedEmployeeStatisticsQueryHandler } from './month-aggregated-employee-statistics.handler';\r\nimport { EmployeeStatisticsHistoryQueryHandler } from './employee-statistics-history.handler';\r\n\r\nexport const QueryHandlers = [\r\n\tAggregateOrganizationQueryHandler,\r\n\tMonthAggregatedEmployeeStatisticsQueryHandler,\r\n\tEmployeeStatisticsHistoryQueryHandler\r\n];\r\n","import {\r\n\tIMonthAggregatedEmployeeStatistics,\r\n\tIMonthAggregatedEmployeeStatisticsFindInput,\r\n\tRecurringExpenseDefaultCategoriesEnum\r\n} from '@gauzy/models';\r\nimport { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\r\nimport { EmployeeService } from '../../../employee/employee.service';\r\nimport { EmployeeStatisticsService } from '../../employee-statistics.service';\r\nimport { MonthAggregatedEmployeeStatisticsQuery } from '../month-aggregated-employee-statistics.query';\r\nimport { startOfMonth, subMonths } from 'date-fns';\r\n\r\n/**\r\n * Finds income, expense, profit and bonus\r\n * for past N months of an employee a given value date.\r\n */\r\n@QueryHandler(MonthAggregatedEmployeeStatisticsQuery)\r\nexport class MonthAggregatedEmployeeStatisticsQueryHandler\r\n\timplements IQueryHandler<MonthAggregatedEmployeeStatisticsQuery> {\r\n\tconstructor(\r\n\t\tprivate employeeStatisticsService: EmployeeStatisticsService,\r\n\t\tprivate employeeService: EmployeeService\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: MonthAggregatedEmployeeStatisticsQuery\r\n\t): Promise<IMonthAggregatedEmployeeStatistics[]> {\r\n\t\tconst { input } = command;\r\n\r\n\t\t/**\r\n\t\t * Map to hold income, expense, bonus and profit statistics\r\n\t\t * key formed using month-year\r\n\t\t * value will be populated with statistics\r\n\t\t */\r\n\t\tconst statisticsMap: Map<\r\n\t\t\tstring,\r\n\t\t\tIMonthAggregatedEmployeeStatistics\r\n\t\t> = new Map();\r\n\r\n\t\t// 1. Populate Income and Direct Bonus in statisticsMap\r\n\t\tawait this._loadEmployeeIncomeAndDirectBonus(input, statisticsMap);\r\n\r\n\t\t// 2. Populate Expenses(One time, Recurring, and split expenses) in statisticsMap\r\n\t\tawait this._loadEmployeeExpenses(input, statisticsMap);\r\n\t\tawait this._loadEmployeeRecurringExpenses(input, statisticsMap);\r\n\t\tawait this._loadOrganizationSplitExpenses(input, statisticsMap);\r\n\t\tawait this._loadOrganizationRecurringSplitExpenses(\r\n\t\t\tinput,\r\n\t\t\tstatisticsMap\r\n\t\t);\r\n\r\n\t\t// 3. Populate Profit in statisticsMap\r\n\t\tthis._calculateProfit(statisticsMap);\r\n\r\n\t\t// 4. Populate Bonus in statisticsMap\r\n\t\tawait this._loadEmployeeBonus(input, statisticsMap);\r\n\r\n\t\t// 5. statisticsMap values are sorted based on date in descending order\r\n\t\tconst response = [...statisticsMap.values()].sort((a, b) =>\r\n\t\t\ta.year === b.year ? b.month - a.month : b.year - a.year\r\n\t\t);\r\n\r\n\t\treturn response;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param input\r\n\t * @param statisticsMap\r\n\t * Fetches employee's incomes for past N months from given date\r\n\t * Updates income and bonus statistics values(in case direct bonus income) in map if key pre-exists\r\n\t * Adds a new map entry if the key(month-year) does not already exist\r\n\t */\r\n\tprivate async _loadEmployeeIncomeAndDirectBonus(\r\n\t\tinput: IMonthAggregatedEmployeeStatisticsFindInput,\r\n\t\tstatisticsMap: Map<string, IMonthAggregatedEmployeeStatistics>\r\n\t) {\r\n\t\t// Fetch employee's incomes for past N months from given date\r\n\t\tconst {\r\n\t\t\titems: incomes\r\n\t\t} = await this.employeeStatisticsService.employeeIncomeInNMonths(\r\n\t\t\t[input.employeeId],\r\n\t\t\tinput.valueDate,\r\n\t\t\tinput.months,\r\n\t\t\tinput.organizationId\r\n\t\t);\r\n\t\tincomes.forEach((income) => {\r\n\t\t\tconst key = `${income.valueDate.getMonth()}-${income.valueDate.getFullYear()}`;\r\n\t\t\tconst amount = Number(income.amount);\r\n\r\n\t\t\tif (statisticsMap.has(key)) {\r\n\t\t\t\t// Update income and bonus statistics values(in case direct bonus income) in map if key pre-exists\r\n\t\t\t\tconst stat = statisticsMap.get(key);\r\n\t\t\t\tstat.income = Number((stat.income + amount).toFixed(2));\r\n\t\t\t\tstat.bonus = income.isBonus\r\n\t\t\t\t\t? Number((stat.bonus + amount).toFixed(2))\r\n\t\t\t\t\t: stat.bonus;\r\n\t\t\t\tstat.directIncomeBonus = income.isBonus\r\n\t\t\t\t\t? Number((stat.directIncomeBonus + amount).toFixed(2))\r\n\t\t\t\t\t: stat.directIncomeBonus;\r\n\t\t\t} else {\r\n\t\t\t\t// Add a new map entry if the key(month-year) does not already exist\r\n\t\t\t\tconst newStat: IMonthAggregatedEmployeeStatistics = {\r\n\t\t\t\t\tmonth: income.valueDate.getMonth(),\r\n\t\t\t\t\tyear: income.valueDate.getFullYear(),\r\n\t\t\t\t\tincome: Number(amount.toFixed(2)),\r\n\t\t\t\t\texpense: 0,\r\n\t\t\t\t\texpenseWithoutSalary: 0,\r\n\t\t\t\t\tprofit: 0,\r\n\t\t\t\t\tdirectIncomeBonus: income.isBonus\r\n\t\t\t\t\t\t? Number(amount.toFixed(2))\r\n\t\t\t\t\t\t: 0,\r\n\t\t\t\t\tbonus: income.isBonus ? Number(amount.toFixed(2)) : 0\r\n\t\t\t\t};\r\n\t\t\t\tstatisticsMap.set(key, newStat);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param input\r\n\t * @param statisticsMap\r\n\t * Fetches employee's expenses for past N months from given date\r\n\t * Updates expense statistics values in map if key pre-exists\r\n\t * Adds a new map entry if the key(month-year) does not already exist\r\n\t */\r\n\tprivate async _loadEmployeeExpenses(\r\n\t\tinput: IMonthAggregatedEmployeeStatisticsFindInput,\r\n\t\tstatisticsMap: Map<string, IMonthAggregatedEmployeeStatistics>\r\n\t) {\r\n\t\t// Fetch employee's expenses for past N months from given date\r\n\t\tconst {\r\n\t\t\titems: expenses\r\n\t\t} = await this.employeeStatisticsService.employeeExpenseInNMonths(\r\n\t\t\t[input.employeeId],\r\n\t\t\tinput.valueDate,\r\n\t\t\tinput.months,\r\n\t\t\tinput.organizationId\r\n\t\t);\r\n\r\n\t\texpenses.forEach((expense) => {\r\n\t\t\tconst key = `${expense.valueDate.getMonth()}-${expense.valueDate.getFullYear()}`;\r\n\t\t\tconst amount = Number(expense.amount);\r\n\t\t\tif (statisticsMap.has(key)) {\r\n\t\t\t\t// Update expense statistics values in map if key pre-exists\r\n\t\t\t\tconst stat = statisticsMap.get(key);\r\n\t\t\t\tstat.expense = Number((amount + stat.expense).toFixed(2));\r\n\t\t\t\tstat.expenseWithoutSalary = Number(\r\n\t\t\t\t\t(amount + stat.expenseWithoutSalary).toFixed(2)\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\t// Add a new map entry if the key(month-year) does not already exist\r\n\t\t\t\tconst newStat: IMonthAggregatedEmployeeStatistics = {\r\n\t\t\t\t\tmonth: expense.valueDate.getMonth(),\r\n\t\t\t\t\tyear: expense.valueDate.getFullYear(),\r\n\t\t\t\t\tincome: 0,\r\n\t\t\t\t\texpense: Number(amount.toFixed(2)),\r\n\t\t\t\t\texpenseWithoutSalary: Number(amount.toFixed(2)),\r\n\t\t\t\t\tprofit: 0,\r\n\t\t\t\t\tbonus: 0,\r\n\t\t\t\t\tdirectIncomeBonus: 0\r\n\t\t\t\t};\r\n\t\t\t\tstatisticsMap.set(key, newStat);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param input\r\n\t * @param statisticsMap\r\n\t * Fetches employee's recurring expenses\r\n\t * Updates expense statistics values in map if key pre-exists\r\n\t * Adds a new map entry if the key(month-year) does not already exist\r\n\t */\r\n\tprivate async _loadEmployeeRecurringExpenses(\r\n\t\tinput: IMonthAggregatedEmployeeStatisticsFindInput,\r\n\t\tstatisticsMap: Map<string, IMonthAggregatedEmployeeStatistics>\r\n\t) {\r\n\t\tconst {\r\n\t\t\titems: employeeRecurringExpenses\r\n\t\t} = await this.employeeStatisticsService.employeeRecurringExpenses(\r\n\t\t\t[input.employeeId],\r\n\t\t\tinput.organizationId\r\n\t\t);\r\n\r\n\t\t/**\r\n\t\t * Add recurring expense from the\r\n\t\t * expense start date\r\n\t\t * OR\r\n\t\t * past N months to each month's expense, whichever is lesser\r\n\t\t * Stop adding recurring expenses at the month where it was stopped\r\n\t\t * OR\r\n\t\t * till the input date\r\n\t\t */\r\n\t\temployeeRecurringExpenses.forEach((expense) => {\r\n\t\t\t// Find start date based on input date and X months.\r\n\t\t\tconst inputStartDate = subMonths(\r\n\t\t\t\tstartOfMonth(input.valueDate),\r\n\t\t\t\tinput.months - 1\r\n\t\t\t);\r\n\r\n\t\t\t/**\r\n\t\t\t * Add recurring expense from the\r\n\t\t\t * expense start date\r\n\t\t\t * OR\r\n\t\t\t * past N months to each month's expense, whichever is more recent\r\n\t\t\t */\r\n\t\t\tconst requiredStartDate =\r\n\t\t\t\texpense.startDate > inputStartDate\r\n\t\t\t\t\t? expense.startDate\r\n\t\t\t\t\t: inputStartDate;\r\n\r\n\t\t\tfor (\r\n\t\t\t\tconst date = requiredStartDate;\r\n\t\t\t\tdate <= input.valueDate;\r\n\t\t\t\tdate.setMonth(date.getMonth() + 1)\r\n\t\t\t) {\r\n\t\t\t\t// Stop loading expense if the recurring expense has ended before input date\r\n\t\t\t\tif (expense.endDate && date > expense.endDate) break;\r\n\r\n\t\t\t\tconst key = `${date.getMonth()}-${date.getFullYear()}`;\r\n\t\t\t\tconst amount = Number(expense.value);\r\n\t\t\t\tconst salaryExpense =\r\n\t\t\t\t\texpense.categoryName ===\r\n\t\t\t\t\tRecurringExpenseDefaultCategoriesEnum.SALARY;\r\n\r\n\t\t\t\tif (statisticsMap.has(key)) {\r\n\t\t\t\t\t// Update expense statistics values in map if key pre-exists\r\n\t\t\t\t\tconst stat = statisticsMap.get(key);\r\n\t\t\t\t\tstat.expense = Number((amount + stat.expense).toFixed(2));\r\n\t\t\t\t\tstat.expenseWithoutSalary = salaryExpense\r\n\t\t\t\t\t\t? stat.expenseWithoutSalary\r\n\t\t\t\t\t\t: Number(\r\n\t\t\t\t\t\t\t\t(amount + stat.expenseWithoutSalary).toFixed(2)\r\n\t\t\t\t\t\t  );\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Add a new map entry if the key(month-year) does not already exist\r\n\t\t\t\t\tconst newStat: IMonthAggregatedEmployeeStatistics = {\r\n\t\t\t\t\t\tmonth: date.getMonth(),\r\n\t\t\t\t\t\tyear: date.getFullYear(),\r\n\t\t\t\t\t\tincome: 0,\r\n\t\t\t\t\t\texpense: Number(amount.toFixed(2)),\r\n\t\t\t\t\t\texpenseWithoutSalary: salaryExpense\r\n\t\t\t\t\t\t\t? 0\r\n\t\t\t\t\t\t\t: Number(amount.toFixed(2)),\r\n\t\t\t\t\t\tprofit: 0,\r\n\t\t\t\t\t\tbonus: 0,\r\n\t\t\t\t\t\tdirectIncomeBonus: 0\r\n\t\t\t\t\t};\r\n\t\t\t\t\tstatisticsMap.set(key, newStat);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param input\r\n\t * @param statisticsMap\r\n\t * Fetches employee's organization expenses that were marked to be split among\r\n\t * its employees for past N months from given date\r\n\t * Updates expense statistics values in map if key pre-exists\r\n\t * Adds a new map entry if the key(month-year) does not already exist\r\n\t */\r\n\tprivate async _loadOrganizationSplitExpenses(\r\n\t\tinput: IMonthAggregatedEmployeeStatisticsFindInput,\r\n\t\tstatisticsMap: Map<string, IMonthAggregatedEmployeeStatistics>\r\n\t) {\r\n\t\t// Fetch split expenses and the number of employees the expense need to be split among\r\n\t\t// the split among will be different for every month, depending upon the number of active employees in the month\r\n\t\tconst splitExpensesMap = await this.employeeStatisticsService.employeeSplitExpenseInNMonths(\r\n\t\t\tinput.employeeId,\r\n\t\t\tinput.valueDate,\r\n\t\t\tinput.months,\r\n\t\t\tinput.organizationId\r\n\t\t);\r\n\r\n\t\tsplitExpensesMap.forEach((value, key) => {\r\n\t\t\tif (statisticsMap.has(key)) {\r\n\t\t\t\t// Update expense statistics values in map if key pre-exists\r\n\t\t\t\tconst stat = statisticsMap.get(key);\r\n\t\t\t\tstat.expense = Number(\r\n\t\t\t\t\t(value.splitExpense + stat.expense).toFixed(2)\r\n\t\t\t\t);\r\n\t\t\t\tstat.expenseWithoutSalary = Number(\r\n\t\t\t\t\t(value.splitExpense + stat.expenseWithoutSalary).toFixed(2)\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\t// Add a new map entry if the key(month-year) does not already exist\r\n\t\t\t\tconst newStat: IMonthAggregatedEmployeeStatistics = {\r\n\t\t\t\t\tmonth: value.month,\r\n\t\t\t\t\tyear: value.year,\r\n\t\t\t\t\tincome: 0,\r\n\t\t\t\t\texpense: Number(value.splitExpense.toFixed(2)),\r\n\t\t\t\t\texpenseWithoutSalary: Number(value.splitExpense.toFixed(2)),\r\n\t\t\t\t\tprofit: 0,\r\n\t\t\t\t\tbonus: 0,\r\n\t\t\t\t\tdirectIncomeBonus: 0\r\n\t\t\t\t};\r\n\t\t\t\tstatisticsMap.set(key, newStat);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param input\r\n\t * @param statisticsMap\r\n\t * Fetches employee's organization recurring expenses that were marked to be split among\r\n\t * its employees for past N months from given date\r\n\t * Updates expense statistics values in map if key pre-exists\r\n\t * Adds a new map entry if the key(month-year) does not already exist\r\n\r\n\t */\r\n\tprivate async _loadOrganizationRecurringSplitExpenses(\r\n\t\tinput: IMonthAggregatedEmployeeStatisticsFindInput,\r\n\t\tstatisticsMap: Map<string, IMonthAggregatedEmployeeStatistics>\r\n\t) {\r\n\t\tconst splitExpensesMap = await this.employeeStatisticsService.organizationRecurringSplitExpenses(\r\n\t\t\tinput.employeeId,\r\n\t\t\tinput.valueDate,\r\n\t\t\tinput.months,\r\n\t\t\tinput.organizationId\r\n\t\t);\r\n\r\n\t\tsplitExpensesMap.forEach((value, key) => {\r\n\t\t\tif (statisticsMap.has(key)) {\r\n\t\t\t\t// Update expense statistics values in map if key pre-exists\r\n\t\t\t\tconst stat = statisticsMap.get(key);\r\n\t\t\t\tstat.expense = Number(\r\n\t\t\t\t\t(value.splitExpense + stat.expense).toFixed(2)\r\n\t\t\t\t);\r\n\t\t\t\tstat.expenseWithoutSalary = Number(\r\n\t\t\t\t\t(value.splitExpense + stat.expenseWithoutSalary).toFixed(2)\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\t// Add a new map entry if the key(month-year) does not already exist\r\n\t\t\t\tconst newStat: IMonthAggregatedEmployeeStatistics = {\r\n\t\t\t\t\tmonth: value.month,\r\n\t\t\t\t\tyear: value.year,\r\n\t\t\t\t\tincome: 0,\r\n\t\t\t\t\texpense: Number(value.splitExpense.toFixed(2)),\r\n\t\t\t\t\texpenseWithoutSalary: Number(value.splitExpense.toFixed(2)),\r\n\t\t\t\t\tprofit: 0,\r\n\t\t\t\t\tdirectIncomeBonus: 0,\r\n\t\t\t\t\tbonus: 0\r\n\t\t\t\t};\r\n\t\t\t\tstatisticsMap.set(key, newStat);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param statisticsMap\r\n\t * Profit = Income - Expense\r\n\t * For every stat entry in the map, update profit value\r\n\t */\r\n\r\n\tprivate _calculateProfit(\r\n\t\tstatisticsMap: Map<string, IMonthAggregatedEmployeeStatistics>\r\n\t) {\r\n\t\t// For every stat entry in the map, update profit value\r\n\t\tstatisticsMap.forEach((stat) => {\r\n\t\t\tstat.profit = Number((stat.income - stat.expense).toFixed(2));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param input\r\n\t * @param statisticsMap\r\n\t * Fetch employee's organization bonus type and percentage\r\n\t * For every stat entry in the map, update bonus value\r\n\t */\r\n\tprivate async _loadEmployeeBonus(\r\n\t\tinput: IMonthAggregatedEmployeeStatisticsFindInput,\r\n\t\tstatisticsMap: Map<string, IMonthAggregatedEmployeeStatistics>\r\n\t) {\r\n\t\tconst {\r\n\t\t\torganization: { bonusType, bonusPercentage }\r\n\t\t} = await this.employeeService.findOne(input.employeeId, {\r\n\t\t\trelations: ['organization']\r\n\t\t});\r\n\t\tstatisticsMap.forEach((stat) => {\r\n\t\t\t// Get calculated bonus value for stat\r\n\t\t\tconst bonus = this.employeeStatisticsService.calculateEmployeeBonus(\r\n\t\t\t\tbonusType,\r\n\t\t\t\tbonusPercentage,\r\n\t\t\t\tstat.income,\r\n\t\t\t\tstat.profit\r\n\t\t\t);\r\n\t\t\tstat.bonus = Number((stat.bonus + bonus).toFixed(2));\r\n\t\t});\r\n\t}\r\n}\r\n","import { IMonthAggregatedEmployeeStatisticsFindInput } from '@gauzy/models';\r\nimport { IQuery } from '@nestjs/cqrs';\r\n\r\nexport class MonthAggregatedEmployeeStatisticsQuery implements IQuery {\r\n\tstatic readonly type =\r\n\t\t'[MonthAggregatedEmployeeStatistics] Employee Statistics';\r\n\r\n\tconstructor(\r\n\t\tpublic readonly input: IMonthAggregatedEmployeeStatisticsFindInput\r\n\t) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { IEmployeeCreateInput, LanguagesEnum } from '@gauzy/models';\r\n\r\nexport class EmployeeBulkCreateCommand implements ICommand {\r\n\tstatic readonly type = '[Employee] Register';\r\n\r\n\tconstructor(\r\n\t\tpublic readonly input: IEmployeeCreateInput[],\r\n\t\tpublic readonly languageCode: LanguagesEnum\r\n\t) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { IEmployeeCreateInput, LanguagesEnum } from '@gauzy/models';\r\n\r\nexport class EmployeeCreateCommand implements ICommand {\r\n\tstatic readonly type = '[Employee] Register';\r\n\r\n\tconstructor(\r\n\t\tpublic readonly input: IEmployeeCreateInput,\r\n\t\tpublic readonly languageCode?: LanguagesEnum\r\n\t) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { FindOneOptions } from 'typeorm';\r\n\r\nexport class EmployeeGetCommand implements ICommand {\r\n\tstatic readonly type = '[Employee] Get';\r\n\r\n\tconstructor(public readonly input: FindOneOptions) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { FindManyOptions } from 'typeorm';\r\n\r\nexport class GetEmployeeJobStatisticsCommand implements ICommand {\r\n\tstatic readonly type = '[EmployeeJobStatistics] Get';\r\n\r\n\tconstructor(public readonly request: FindManyOptions) {}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { EmployeeService } from '../../employee.service';\r\nimport { IEmployee, IEmployeeCreateInput, LanguagesEnum } from '@gauzy/models';\r\nimport { EmployeeBulkCreateCommand } from '../employee.bulk.create.command';\r\nimport { AuthService } from '../../../auth/auth.service';\r\nimport { EmailService } from '../../../email';\r\nimport { UserOrganizationService } from '../../../user-organization/user-organization.services';\r\n\r\n@CommandHandler(EmployeeBulkCreateCommand)\r\nexport class EmployeeBulkCreateHandler\r\n\timplements ICommandHandler<EmployeeBulkCreateCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly employeeService: EmployeeService,\r\n\t\tprivate readonly authService: AuthService,\r\n\t\tprivate readonly emailService: EmailService,\r\n\t\tprivate readonly userOrganizationService: UserOrganizationService\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: EmployeeBulkCreateCommand\r\n\t): Promise<IEmployee[]> {\r\n\t\tconst { input, languageCode } = command;\r\n\t\tconst inputWithHash = await this._loadPasswordHash(input);\r\n\r\n\t\tconst createdEmployees = await this.employeeService.createBulk(\r\n\t\t\tinputWithHash\r\n\t\t);\r\n\r\n\t\tconst usersWithOrganizations = createdEmployees.map((employee) =>\r\n\t\t\tthis.userOrganizationService.addUserToOrganization(\r\n\t\t\t\temployee.user,\r\n\t\t\t\temployee.organizationId\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tawait Promise.all(usersWithOrganizations);\r\n\r\n\t\tthis._sendWelcomeEmail(createdEmployees, languageCode);\r\n\r\n\t\treturn createdEmployees;\r\n\t}\r\n\r\n\tprivate _sendWelcomeEmail(\r\n\t\temployees: IEmployee[],\r\n\t\tlanguageCode: LanguagesEnum\r\n\t) {\r\n\t\temployees.forEach((employee) =>\r\n\t\t\tthis.emailService.welcomeUser(\r\n\t\t\t\temployee.user,\r\n\t\t\t\tlanguageCode,\r\n\t\t\t\temployee.organization.id\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n\r\n\tprivate async _loadPasswordHash(input: IEmployeeCreateInput[]) {\r\n\t\tconst mappedInput = input.map(async (entity) => {\r\n\t\t\tentity.user.hash = await this.authService.getPasswordHash(\r\n\t\t\t\tentity.password\r\n\t\t\t);\r\n\t\t\treturn entity;\r\n\t\t});\r\n\t\treturn Promise.all(mappedInput);\r\n\t}\r\n}\r\n","import { IEmployee, IEmployeeCreateInput, LanguagesEnum } from '@gauzy/models';\r\nimport { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { AuthService } from '../../../auth/auth.service';\r\nimport { UserOrganizationService } from '../../../user-organization/user-organization.services';\r\nimport { EmployeeService } from '../../employee.service';\r\nimport { EmployeeCreateCommand } from '../employee.create.command';\r\nimport { EmailService } from '../../../email/email.service';\r\n\r\n@CommandHandler(EmployeeCreateCommand)\r\nexport class EmployeeCreateHandler\r\n\timplements ICommandHandler<EmployeeCreateCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly employeeService: EmployeeService,\r\n\t\tprivate readonly userOrganizationService: UserOrganizationService,\r\n\t\tprivate readonly authService: AuthService,\r\n\t\tprivate readonly emailService: EmailService\r\n\t) {}\r\n\r\n\tpublic async execute(command: EmployeeCreateCommand): Promise<IEmployee> {\r\n\t\tconst { input } = command;\r\n\t\tconst languageCode = command.languageCode || LanguagesEnum.ENGLISH;\r\n\t\tconst inputWithHash = await this._addHashAndLanguage(\r\n\t\t\tinput,\r\n\t\t\tlanguageCode\r\n\t\t);\r\n\t\tconst employee = await this.employeeService.create(inputWithHash);\r\n\r\n\t\tawait this.userOrganizationService.addUserToOrganization(\r\n\t\t\temployee.user,\r\n\t\t\tinput.organization.id\r\n\t\t);\r\n\r\n\t\tthis.emailService.welcomeUser(\r\n\t\t\temployee.user,\r\n\t\t\tlanguageCode,\r\n\t\t\temployee.organization.id\r\n\t\t);\r\n\r\n\t\treturn employee;\r\n\t}\r\n\r\n\tprivate async _addHashAndLanguage(\r\n\t\tinput: IEmployeeCreateInput,\r\n\t\tlanguageCode: LanguagesEnum\r\n\t) {\r\n\t\tinput.user.hash = await this.authService.getPasswordHash(\r\n\t\t\tinput.password\r\n\t\t);\r\n\t\tinput.user.preferredLanguage = languageCode;\r\n\t\treturn input;\r\n\t}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { EmployeeService } from '../../employee.service';\r\nimport { IEmployee } from '@gauzy/models';\r\nimport { EmployeeGetCommand } from '../employee.get.command';\r\n\r\n@CommandHandler(EmployeeGetCommand)\r\nexport class EmployeeGetHandler implements ICommandHandler<EmployeeGetCommand> {\r\n\tconstructor(private readonly employeeService: EmployeeService) {}\r\n\r\n\tpublic async execute(command: EmployeeGetCommand): Promise<IEmployee> {\r\n\t\tconst { input } = command;\r\n\r\n\t\treturn await this.employeeService.findOne(input);\r\n\t}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { EmployeeService } from '../../employee.service';\r\nimport { GauzyAIService } from '@gauzy/integration-ai';\r\nimport { GetEmployeeJobStatisticsCommand } from '../get-employee-job-statistics.command';\r\nimport { indexBy } from 'underscore';\r\n\r\n@CommandHandler(GetEmployeeJobStatisticsCommand)\r\nexport class GetEmployeeJobStatisticsHandler\r\n\timplements ICommandHandler<GetEmployeeJobStatisticsCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly employeeService: EmployeeService,\r\n\t\tprivate readonly gauzyAIService: GauzyAIService\r\n\t) {}\r\n\r\n\tpublic async execute(command: GetEmployeeJobStatisticsCommand) {\r\n\t\tconst { request } = command;\r\n\r\n\t\tlet { items, total } = await this.employeeService.findAll(request);\r\n\t\tconst employeesStatistics = await this.gauzyAIService.getEmployeesStatistics();\r\n\t\tconst employeesStatisticsById = indexBy(\r\n\t\t\temployeesStatistics,\r\n\t\t\t'employeeId'\r\n\t\t);\r\n\r\n\t\titems = items.map((employee) => {\r\n\t\t\tconst employeesStatistic = employeesStatisticsById[employee.id];\r\n\t\t\treturn {\r\n\t\t\t\t...employee,\r\n\t\t\t\t...employeesStatistic\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn { items, total };\r\n\t}\r\n}\r\n","import { EmployeeBulkCreateHandler } from './employee.bulk.create.handler';\r\nimport { EmployeeCreateHandler } from './employee.create.handler';\r\nimport { EmployeeGetHandler } from './employee.get.handler';\r\nimport { GetEmployeeJobStatisticsHandler } from './get-employee-job-statistics.handler';\r\nimport { UpdateEmployeeJobSearchStatusHandler } from './update-employee-job-search-status.handler';\r\nimport { UpdateEmployeeTotalWorkedHoursHandler } from './update-employee-total-worked-hours.handler';\r\n\r\nexport const CommandHandlers = [\r\n\tEmployeeCreateHandler,\r\n\tEmployeeBulkCreateHandler,\r\n\tEmployeeGetHandler,\r\n\tUpdateEmployeeTotalWorkedHoursHandler,\r\n\tUpdateEmployeeJobSearchStatusHandler,\r\n\tGetEmployeeJobStatisticsHandler\r\n];\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { EmployeeService } from '../../employee.service';\r\nimport { UpdateEmployeeJobSearchStatusCommand } from '../update-employee-job-search-status.command';\r\nimport { GauzyAIService } from '@gauzy/integration-ai';\r\n\r\n@CommandHandler(UpdateEmployeeJobSearchStatusCommand)\r\nexport class UpdateEmployeeJobSearchStatusHandler\r\n\timplements ICommandHandler<UpdateEmployeeJobSearchStatusCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly employeeService: EmployeeService,\r\n\t\tprivate readonly gauzyAIService: GauzyAIService\r\n\t) {}\r\n\r\n\tpublic async execute(command: UpdateEmployeeJobSearchStatusCommand) {\r\n\t\tconst { employeeId, request } = command;\r\n\r\n\t\tthis.gauzyAIService.updateEmployeeStatus(\r\n\t\t\temployeeId,\r\n\t\t\trequest.isJobSearchActive\r\n\t\t);\r\n\t\treturn this.employeeService.update(employeeId, request);\r\n\t}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { EmployeeService } from '../../employee.service';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { UpdateEmployeeTotalWorkedHoursCommand } from '../update-employee-total-worked-hours.command';\r\nimport { TimeLog } from '../../../timesheet/time-log.entity';\r\nimport { environment } from '@env-api/environment';\r\n\r\n@CommandHandler(UpdateEmployeeTotalWorkedHoursCommand)\r\nexport class UpdateEmployeeTotalWorkedHoursHandler\r\n\timplements ICommandHandler<UpdateEmployeeTotalWorkedHoursCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly employeeService: EmployeeService,\r\n\t\t@InjectRepository(TimeLog)\r\n\t\tprivate readonly timeLogRepository: Repository<TimeLog>\r\n\t) {}\r\n\r\n\tpublic async execute(command: UpdateEmployeeTotalWorkedHoursCommand) {\r\n\t\tconst { employeeId, hours } = command;\r\n\t\tlet totalWorkHours: number;\r\n\t\tif (hours) {\r\n\t\t\ttotalWorkHours = hours;\r\n\t\t} else {\r\n\t\t\tconst logs = await this.timeLogRepository\r\n\t\t\t\t.createQueryBuilder()\r\n\t\t\t\t.select(\r\n\t\t\t\t\t`${\r\n\t\t\t\t\t\tenvironment.database.type === 'sqlite'\r\n\t\t\t\t\t\t\t? 'SUM((julianday(\"stoppedAt\") - julianday(\"startedAt\")) * 86400)'\r\n\t\t\t\t\t\t\t: 'SUM(extract(epoch from (\"stoppedAt\" - \"startedAt\")))'\r\n\t\t\t\t\t}`,\r\n\t\t\t\t\t`duration`\r\n\t\t\t\t)\r\n\t\t\t\t.where({\r\n\t\t\t\t\temployeeId\r\n\t\t\t\t})\r\n\t\t\t\t.getRawOne();\r\n\t\t\ttotalWorkHours = (logs.duration || 0) / 3600;\r\n\t\t}\r\n\r\n\t\tawait this.employeeService.update(employeeId, {\r\n\t\t\ttotalWorkHours: parseInt(totalWorkHours + '', 10)\r\n\t\t});\r\n\t}\r\n}\r\n","export { EmployeeCreateCommand } from './employee.create.command';\r\nexport { EmployeeBulkCreateCommand } from './employee.bulk.create.command';\r\nexport { UpdateEmployeeTotalWorkedHoursCommand } from './update-employee-total-worked-hours.command';\r\n","import { UpdateEmployeeJobsStatistics } from '@gauzy/models';\r\nimport { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class UpdateEmployeeJobSearchStatusCommand implements ICommand {\r\n\tstatic readonly type = '[Employee] Get';\r\n\r\n\tconstructor(\r\n\t\tpublic readonly employeeId: string,\r\n\t\tpublic readonly request: UpdateEmployeeJobsStatistics\r\n\t) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class UpdateEmployeeTotalWorkedHoursCommand implements ICommand {\r\n\tstatic readonly type = '[Employee] Update Total Worked Hours';\r\n\r\n\tconstructor(\r\n\t\tpublic readonly employeeId: string,\r\n\t\tpublic readonly hours?: number\r\n\t) {}\r\n}\r\n","import { LanguagesEnum } from '@gauzy/models';\r\n\r\nexport const DEFAULT_EMPLOYEES = [\r\n\t{\r\n\t\temail: 'ruslan@ever.co',\r\n\t\tpassword: '123456',\r\n\t\tfirstName: 'Ruslan',\r\n\t\tlastName: 'Konviser',\r\n\t\timageUrl: 'assets/images/avatars/ruslan.jpg',\r\n\t\temployeeLevel: 'A',\r\n\t\tpreferredLanguage: LanguagesEnum.ENGLISH\r\n\t},\r\n\t{\r\n\t\temail: 'alish@ever.co',\r\n\t\tpassword: '123456',\r\n\t\tfirstName: 'Alish',\r\n\t\tlastName: 'Meklyov',\r\n\t\timageUrl: 'assets/images/avatars/alish.jpg',\r\n\t\tstartedWorkOn: '2018-03-20',\r\n\t\tendWork: null,\r\n\t\temployeeLevel: 'D',\r\n\t\tpreferredLanguage: LanguagesEnum.ENGLISH\r\n\t},\r\n\t{\r\n\t\temail: 'blagovest@ever.co',\r\n\t\tpassword: '123456',\r\n\t\tfirstName: 'Blagovest',\r\n\t\tlastName: 'Gerov',\r\n\t\timageUrl: 'assets/images/avatars/blagovest.jpg',\r\n\t\tstartedWorkOn: '2018-03-19',\r\n\t\tendWork: null,\r\n\t\temployeeLevel: 'C',\r\n\t\tpreferredLanguage: LanguagesEnum.ENGLISH\r\n\t},\r\n\t{\r\n\t\temail: 'elvis@ever.co',\r\n\t\tpassword: '123456',\r\n\t\tfirstName: 'Elvis',\r\n\t\tlastName: 'Arabadjiiski',\r\n\t\timageUrl: 'assets/images/avatars/elvis.jpg',\r\n\t\tstartedWorkOn: '2018-05-25',\r\n\t\tendWork: null,\r\n\t\temployeeLevel: 'C',\r\n\t\tpreferredLanguage: LanguagesEnum.ENGLISH\r\n\t},\r\n\t{\r\n\t\temail: 'hristo@ever.co',\r\n\t\tpassword: '123456',\r\n\t\tfirstName: 'Hristo',\r\n\t\tlastName: 'Hristov',\r\n\t\timageUrl: 'assets/images/avatars/hristo.jpg',\r\n\t\tstartedWorkOn: '2019-06-17',\r\n\t\tendWork: null,\r\n\t\temployeeLevel: 'B',\r\n\t\tpreferredLanguage: LanguagesEnum.ENGLISH\r\n\t},\r\n\t{\r\n\t\temail: 'alex@ever.co',\r\n\t\tpassword: '123456',\r\n\t\tfirstName: 'Aleksandar',\r\n\t\tlastName: 'Tasev',\r\n\t\timageUrl: 'assets/images/avatars/alexander.jpg',\r\n\t\tstartedWorkOn: '2019-08-01',\r\n\t\tendWork: null,\r\n\t\temployeeLevel: 'B',\r\n\t\tpreferredLanguage: LanguagesEnum.ENGLISH\r\n\t},\r\n\t{\r\n\t\temail: 'rachit@ever.co',\r\n\t\tpassword: '123456',\r\n\t\tfirstName: 'Rachit',\r\n\t\tlastName: 'Magon',\r\n\t\timageUrl: 'assets/images/avatars/rachit.png',\r\n\t\tstartedWorkOn: '2019-11-27',\r\n\t\tendWork: null,\r\n\t\temployeeLevel: null,\r\n\t\tpreferredLanguage: LanguagesEnum.ENGLISH\r\n\t},\r\n\t{\r\n\t\temail: 'dimana@ever.co',\r\n\t\tpassword: '123456',\r\n\t\tfirstName: 'Dimana',\r\n\t\tlastName: 'Tsvetkova',\r\n\t\timageUrl: 'assets/images/avatars/dimana.jpeg',\r\n\t\tstartedWorkOn: '2019-11-26',\r\n\t\tendWork: null,\r\n\t\temployeeLevel: null,\r\n\t\tpreferredLanguage: LanguagesEnum.ENGLISH\r\n\t},\r\n\t{\r\n\t\temail: 'pavel@ever.co',\r\n\t\tpassword: '123456',\r\n\t\tfirstName: 'Pavel',\r\n\t\tlastName: 'Denchev',\r\n\t\timageUrl: 'assets/images/avatars/pavel.jpg',\r\n\t\tstartedWorkOn: '2020-03-16',\r\n\t\tendWork: null,\r\n\t\temployeeLevel: 'A',\r\n\t\tpreferredLanguage: LanguagesEnum.ENGLISH\r\n\t},\r\n\t{\r\n\t\temail: 'yavor@ever.co',\r\n\t\tpassword: '123456',\r\n\t\tfirstName: 'Yavor',\r\n\t\tlastName: 'Grancharov',\r\n\t\timageUrl: 'assets/images/avatars/yavor.jpg',\r\n\t\tstartedWorkOn: '2020-02-05',\r\n\t\tendWork: null,\r\n\t\temployeeLevel: 'A',\r\n\t\tpreferredLanguage: LanguagesEnum.ENGLISH\r\n\t},\r\n\t{\r\n\t\temail: 'tsvetelina@ever.co',\r\n\t\tpassword: '123456',\r\n\t\tfirstName: 'Tsvetelina',\r\n\t\tlastName: 'Yordanova',\r\n\t\timageUrl: 'assets/images/avatars/tsvetelina.jpg',\r\n\t\tstartedWorkOn: '2020-03-02',\r\n\t\tendWork: null,\r\n\t\temployeeLevel: 'A',\r\n\t\tpreferredLanguage: LanguagesEnum.ENGLISH\r\n\t},\r\n\t{\r\n\t\temail: 'muiz@smooper.xyz',\r\n\t\tpassword: '123456',\r\n\t\tfirstName: 'Muiz',\r\n\t\tlastName: 'Nadeem',\r\n\t\timageUrl: 'assets/images/avatars/muiz.jpg',\r\n\t\tstartedWorkOn: '2019-11-27',\r\n\t\tendWork: null,\r\n\t\temployeeLevel: null,\r\n\t\tpreferredLanguage: LanguagesEnum.ENGLISH\r\n\t},\r\n\t{\r\n\t\temail: 'deko898@hotmail.com',\r\n\t\tpassword: '123456',\r\n\t\tfirstName: 'Dejan',\r\n\t\tlastName: 'Obradovikj',\r\n\t\timageUrl: 'assets/images/avatars/dejan.jpg',\r\n\t\tstartedWorkOn: '2020-03-07',\r\n\t\tendWork: null,\r\n\t\temployeeLevel: null,\r\n\t\tpreferredLanguage: LanguagesEnum.ENGLISH\r\n\t},\r\n\t{\r\n\t\temail: 'ckhandla94@gmail.com',\r\n\t\tpassword: '123456',\r\n\t\tfirstName: 'Chetan',\r\n\t\tlastName: 'Khandla',\r\n\t\timageUrl: 'assets/images/avatars/chetan.png',\r\n\t\tstartedWorkOn: '2020-03-07',\r\n\t\tendWork: null,\r\n\t\temployeeLevel: null,\r\n\t\tpreferredLanguage: LanguagesEnum.ENGLISH\r\n\t},\r\n\t{\r\n\t\temail: 'julia@ever.co',\r\n\t\tpassword: '123456',\r\n\t\tfirstName: 'Julia',\r\n\t\tlastName: 'Konviser',\r\n\t\timageUrl: 'assets/images/avatars/julia.png',\r\n\t\tstartedWorkOn: '2018-08-01',\r\n\t\tendWork: null,\r\n\t\temployeeLevel: 'C',\r\n\t\tpreferredLanguage: LanguagesEnum.ENGLISH\r\n\t},\r\n\t{\r\n\t\temail: 'yordan@ever.co',\r\n\t\tpassword: '123456',\r\n\t\tfirstName: 'Yordan ',\r\n\t\tlastName: 'Genovski',\r\n\t\timageUrl: 'assets/images/avatars/yordan.jpg',\r\n\t\tstartedWorkOn: '2018-08-01',\r\n\t\tendWork: null,\r\n\t\temployeeLevel: 'C',\r\n\t\tpreferredLanguage: LanguagesEnum.ENGLISH\r\n\t}\r\n];\r\n","import {\r\n\tIEmployeeCreateInput,\r\n\tPermissionsEnum,\r\n\tLanguagesEnum,\r\n\tUpdateEmployeeJobsStatistics\r\n} from '@gauzy/models';\r\nimport {\r\n\tBody,\r\n\tController,\r\n\tGet,\r\n\tHttpCode,\r\n\tHttpStatus,\r\n\tParam,\r\n\tPost,\r\n\tPut,\r\n\tQuery,\r\n\tUseGuards,\r\n\tReq\r\n} from '@nestjs/common';\r\nimport { CommandBus } from '@nestjs/cqrs';\r\nimport { EmployeeCreateCommand, EmployeeBulkCreateCommand } from './commands';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\r\nimport { IPagination, getUserDummyImage } from '../core';\r\nimport { CrudController } from '../core/crud/crud.controller';\r\nimport { Permissions } from '../shared/decorators/permissions';\r\nimport { PermissionGuard } from '../shared/guards/auth/permission.guard';\r\nimport { Employee } from './employee.entity';\r\nimport { EmployeeService } from './employee.service';\r\nimport { ParseJsonPipe } from '../shared';\r\nimport { I18nLang } from 'nestjs-i18n';\r\nimport { ITryRequest } from '../core/crud/try-request';\r\nimport { Request } from 'express';\r\nimport { RequestContext } from '../core/context';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\nimport { UpdateEmployeeJobSearchStatusCommand } from './commands/update-employee-job-search-status.command';\r\nimport { FindManyOptions } from 'typeorm';\r\nimport { GetEmployeeJobStatisticsCommand } from './commands/get-employee-job-statistics.command';\r\n\r\n@ApiTags('Employee')\r\n@Controller()\r\nexport class EmployeeController extends CrudController<Employee> {\r\n\tconstructor(\r\n\t\tprivate readonly employeeService: EmployeeService,\r\n\t\tprivate readonly commandBus: CommandBus\r\n\t) {\r\n\t\tsuper(employeeService);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Get Employee Jobs Statistics' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'Found employee'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_EMPLOYEES_EDIT)\r\n\t@Get('/job-statistics')\r\n\t@UseGuards(AuthGuard('jwt'))\r\n\tasync getEmployeeJobsStatistics(@Query() request: FindManyOptions) {\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew GetEmployeeJobStatisticsCommand(request)\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Update an existing record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully edited.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Put(':id')\r\n\t@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n\tasync update(\r\n\t\t@Param('id') id: string,\r\n\t\t@Body() entity: Employee\r\n\t): Promise<any> {\r\n\t\t//We are using create here because create calls the method save()\r\n\t\t//We need save() to save ManyToMany relations\r\n\t\ttry {\r\n\t\t\treturn await this.employeeService.create({\r\n\t\t\t\tid,\r\n\t\t\t\t...entity\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find all employees in the same tenant.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found employees in the tenant',\r\n\t\ttype: Employee\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get()\r\n\t@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n\tasync findAllEmployees(\r\n\t\t@Query('data', ParseJsonPipe) data: any\r\n\t): Promise<IPagination<Employee>> {\r\n\t\tconst { relations, findInput } = data;\r\n\t\treturn this.employeeService.findAll({\r\n\t\t\twhere: findInput,\r\n\t\t\trelations\r\n\t\t});\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find all public information employees in the same tenant.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found employees in the tenant',\r\n\t\ttype: Employee\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get('public')\r\n\t/**\r\n\t * TODO: This is a public service, the response should only contain\r\n\t * those fields (columns) of an employee that can be shown to the public\r\n\t */\r\n\tasync findAllEmployeesPublicData(\r\n\t\t@Query('data') data: string\r\n\t): Promise<IPagination<Employee>> {\r\n\t\tconst { relations, findInput } = JSON.parse(data);\r\n\t\treturn this.employeeService.findAll({ where: findInput, relations });\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find all public information employee in the same tenant.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found employee in the tenant',\r\n\t\ttype: Employee\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get('public/:id')\r\n\tasync findEmployeePublicData(\r\n\t\t@Param('id') id: string,\r\n\t\t@Query('data') data: string\r\n\t): Promise<Employee> {\r\n\t\tconst { relations } = JSON.parse(data);\r\n\r\n\t\treturn this.employeeService.findOne(id, {\r\n\t\t\trelations\r\n\t\t});\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find all working employees.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found working employees',\r\n\t\ttype: Employee\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get('/working')\r\n\t@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n\tasync findAllWorkingEmployees(\r\n\t\t@Query('data', ParseJsonPipe) data: any\r\n\t): Promise<IPagination<Employee>> {\r\n\t\tconst { findInput } = data;\r\n\t\tconst { organizationId, forMonth = new Date(), withUser } = findInput;\r\n\t\tconst tenantId = RequestContext.currentTenantId();\r\n\r\n\t\treturn this.employeeService.findWorkingEmployees(\r\n\t\t\torganizationId,\r\n\t\t\ttenantId,\r\n\t\t\tnew Date(forMonth),\r\n\t\t\twithUser\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find employee by id in the same tenant.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found employee in the same tenant',\r\n\t\ttype: Employee\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get(':id')\r\n\t@UseGuards(AuthGuard('jwt'))\r\n\tasync findById(\r\n\t\t@Param('id') id: string,\r\n\t\t@Query('data', ParseJsonPipe) data?: any\r\n\t): Promise<Employee> {\r\n\t\tconst { relations = [], useTenant } = data;\r\n\r\n\t\tif (useTenant) {\r\n\t\t\treturn this.employeeService.findOne(id, {\r\n\t\t\t\trelations\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\treturn this.employeeService.findWithoutTenant(id, {\r\n\t\t\t\trelations\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find employee by user id in the same tenant.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found employee in the same tenant',\r\n\t\ttype: Employee\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get('/user/:userId')\r\n\t@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n\tasync findByUserId(\r\n\t\t@Param('userId') userId: string,\r\n\t\t@Query('data', ParseJsonPipe) data?: any\r\n\t): Promise<ITryRequest> {\r\n\t\tconst { relations = [] } = data;\r\n\t\tconst tenantId = RequestContext.currentTenantId();\r\n\t\treturn this.employeeService.findOneOrFail({\r\n\t\t\twhere: {\r\n\t\t\t\tuserId,\r\n\t\t\t\ttenantId\r\n\t\t\t},\r\n\t\t\trelations\r\n\t\t});\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Create new record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully created.' /*, type: T*/\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_EMPLOYEES_EDIT)\r\n\t@Post('/create')\r\n\t@UseGuards(AuthGuard('jwt'))\r\n\tasync create(\r\n\t\t@Body() entity: IEmployeeCreateInput,\r\n\t\t@Req() request: Request,\r\n\t\t@I18nLang() languageCode: LanguagesEnum,\r\n\t\t...options: any[]\r\n\t): Promise<Employee> {\r\n\t\tif (!entity.user.imageUrl) {\r\n\t\t\tentity.user.imageUrl = getUserDummyImage(entity.user);\r\n\t\t}\r\n\t\tentity.originalUrl = request.get('Origin');\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew EmployeeCreateCommand(entity, languageCode)\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Create records in Bulk' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'Records have been successfully created.' /*, type: T*/\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_EMPLOYEES_EDIT)\r\n\t@Post('/createBulk')\r\n\t@UseGuards(AuthGuard('jwt'))\r\n\tasync createBulk(\r\n\t\t@Body() input: IEmployeeCreateInput[],\r\n\t\t@I18nLang() languageCode: LanguagesEnum,\r\n\t\t...options: any[]\r\n\t): Promise<Employee[]> {\r\n\t\t/**\r\n\t\t * Use a dummy image avatar if no image is uploaded for any of the employees in the list\r\n\t\t */\r\n\r\n\t\tinput\r\n\t\t\t.filter((entity) => !entity.user.imageUrl)\r\n\t\t\t.forEach(\r\n\t\t\t\t(entity) =>\r\n\t\t\t\t\t(entity.user.imageUrl = getUserDummyImage(entity.user))\r\n\t\t\t);\r\n\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew EmployeeBulkCreateCommand(input, languageCode)\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Update Job Search Status' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'Records have been successfully updated.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_EMPLOYEES_EDIT)\r\n\t@Put('/:id/job-search-status')\r\n\t@UseGuards(AuthGuard('jwt'))\r\n\tasync updateJobSearchStatus(\r\n\t\t@Param('id') employeeId: string,\r\n\t\t@Body() request: UpdateEmployeeJobsStatistics\r\n\t): Promise<Employee[]> {\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew UpdateEmployeeJobSearchStatusCommand(employeeId, request)\r\n\t\t);\r\n\t}\r\n}\r\n","import {\r\n\tCurrenciesEnum,\r\n\tIEmployee,\r\n\tPayPeriodEnum,\r\n\tITag,\r\n\tIContact,\r\n\tISkill,\r\n\tIUser,\r\n\tIOrganizationPosition,\r\n\tIOrganizationTeam,\r\n\tITimeLog,\r\n\tIOrganizationDepartment,\r\n\tIOrganizationEmploymentType,\r\n\tIInvoiceItem,\r\n\tIRequestApprovalEmployee,\r\n\tIPayment\r\n} from '@gauzy/models';\r\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\r\nimport {\r\n\tIsDate,\r\n\tIsEnum,\r\n\tIsNumber,\r\n\tIsOptional,\r\n\tIsBoolean\r\n} from 'class-validator';\r\nimport {\r\n\tColumn,\r\n\tEntity,\r\n\tJoinColumn,\r\n\tJoinTable,\r\n\tManyToMany,\r\n\tManyToOne,\r\n\tOneToOne,\r\n\tRelationId,\r\n\tOneToMany\r\n} from 'typeorm';\r\nimport { OrganizationDepartment } from '../organization-department/organization-department.entity';\r\nimport { OrganizationEmploymentType } from '../organization-employment-type/organization-employment-type.entity';\r\nimport { OrganizationPositions } from '../organization-positions/organization-positions.entity';\r\nimport { OrganizationTeamEmployee } from '../organization-team-employee/organization-team-employee.entity';\r\nimport { Tag } from '../tags/tag.entity';\r\nimport { User } from '../user/user.entity';\r\nimport { InvoiceItem } from '../invoice-item/invoice-item.entity';\r\nimport { RequestApprovalEmployee } from '../request-approval-employee/request-approval-employee.entity';\r\nimport { Skill } from '../skills/skill.entity';\r\nimport { Contact } from '../contact/contact.entity';\r\nimport { TimeLog } from '../timesheet/time-log.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\nimport { Payment } from '../payment/payment.entity';\r\nimport { JobPreset } from '../employee-job-preset/job-preset.entity';\r\n\r\n@Entity('employee')\r\nexport class Employee extends TenantOrganizationBase implements IEmployee {\r\n\t@ManyToMany((type) => Tag, (tag) => tag.employee)\r\n\t@JoinTable({\r\n\t\tname: 'tag_employee'\r\n\t})\r\n\ttags: ITag[];\r\n\r\n\t@ApiProperty({ type: Contact })\r\n\t@ManyToOne(() => Contact, (contact) => contact.employees, {\r\n\t\tnullable: true,\r\n\t\tcascade: true,\r\n\t\tonDelete: 'SET NULL'\r\n\t})\r\n\t@JoinColumn()\r\n\tcontact: IContact;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@RelationId((employee: Employee) => employee.contact)\r\n\treadonly contactId?: string;\r\n\r\n\t@ManyToMany((type) => Skill, (skill) => skill.employees)\r\n\t@JoinTable({\r\n\t\tname: 'skill_employee'\r\n\t})\r\n\tskills: ISkill[];\r\n\r\n\t@ApiProperty({ type: User })\r\n\t@OneToOne((type) => User, {\r\n\t\tnullable: false,\r\n\t\tcascade: true,\r\n\t\tonDelete: 'CASCADE'\r\n\t})\r\n\t@JoinColumn()\r\n\tuser: IUser;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@RelationId((employee: Employee) => employee.user)\r\n\t@Column()\r\n\treadonly userId: string;\r\n\r\n\t@ApiProperty({ type: OrganizationPositions })\r\n\t@ManyToOne((type) => OrganizationPositions, { nullable: true })\r\n\t@JoinColumn()\r\n\torganizationPosition?: IOrganizationPosition;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@RelationId((employee: Employee) => employee.organizationPosition)\r\n\treadonly organizationPositionId?: string;\r\n\r\n\t@ApiPropertyOptional({ type: Date })\r\n\t@IsDate()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tvalueDate?: Date;\r\n\r\n\t@ApiPropertyOptional({ type: Boolean, default: true })\r\n\t@Column({ nullable: true, default: true })\r\n\tisActive: boolean;\r\n\r\n\t@ApiPropertyOptional({ type: String, maxLength: 200 })\r\n\t@IsOptional()\r\n\t@Column({ length: 200, nullable: true })\r\n\tshort_description?: string;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tdescription?: string;\r\n\r\n\t@ApiPropertyOptional({ type: Date })\r\n\t@IsDate()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tstartedWorkOn?: Date;\r\n\r\n\t@ApiPropertyOptional({ type: Date })\r\n\t@IsDate()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tendWork?: Date;\r\n\r\n\t@ApiProperty({ type: String, enum: PayPeriodEnum })\r\n\t@IsEnum(PayPeriodEnum)\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tpayPeriod?: string;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@IsNumber()\r\n\t@IsOptional()\r\n\t@Column({ type: 'numeric', nullable: true })\r\n\tbillRateValue?: number;\r\n\r\n\t@ApiProperty({ type: String, enum: CurrenciesEnum })\r\n\t@IsEnum(CurrenciesEnum)\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tbillRateCurrency?: string;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@IsNumber()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\treWeeklyLimit?: number;\r\n\r\n\t@OneToMany(\r\n\t\t(type) => OrganizationTeamEmployee,\r\n\t\t(organizationTeamEmployee) => organizationTeamEmployee.employee\r\n\t)\r\n\tteams?: IOrganizationTeam[];\r\n\r\n\t@OneToMany((type) => TimeLog, (timeLog) => timeLog.employee)\r\n\ttimeLogs?: ITimeLog[];\r\n\r\n\t@ApiPropertyOptional({ type: Date })\r\n\t@IsDate()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tofferDate?: Date;\r\n\r\n\t@ApiPropertyOptional({ type: Date })\r\n\t@IsDate()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tacceptDate?: Date;\r\n\r\n\t@ApiPropertyOptional({ type: Date })\r\n\t@IsDate()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\trejectDate?: Date;\r\n\r\n\t@ManyToMany(\r\n\t\t(type) => OrganizationDepartment,\r\n\t\t(organizationDepartment) => organizationDepartment.members,\r\n\t\t{ cascade: true }\r\n\t)\r\n\torganizationDepartments?: IOrganizationDepartment[];\r\n\r\n\t@ManyToMany(\r\n\t\t(type) => OrganizationEmploymentType,\r\n\t\t(organizationEmploymentType) => organizationEmploymentType.members,\r\n\t\t{ cascade: true }\r\n\t)\r\n\torganizationEmploymentTypes?: IOrganizationEmploymentType[];\r\n\r\n\t@ManyToMany(() => JobPreset, (jobPreset) => jobPreset.employees)\r\n\tjobPresets?: JobPreset[];\r\n\r\n\t@ApiPropertyOptional({ type: String, maxLength: 500 })\r\n\t@IsOptional()\r\n\t@Column({ length: 500, nullable: true })\r\n\temployeeLevel?: string;\r\n\r\n\t@ApiPropertyOptional({ type: Boolean })\r\n\t@Column({ nullable: true })\r\n\tanonymousBonus?: boolean;\r\n\r\n\t@ApiPropertyOptional({ type: InvoiceItem, isArray: true })\r\n\t@OneToMany((type) => InvoiceItem, (invoiceItem) => invoiceItem.employee, {\r\n\t\tonDelete: 'SET NULL'\r\n\t})\r\n\t@JoinColumn()\r\n\tinvoiceItems?: IInvoiceItem[];\r\n\r\n\t@ApiPropertyOptional({ type: Payment, isArray: true })\r\n\t@OneToMany((type) => Payment, (payments) => payments.recordedBy)\r\n\t@JoinColumn()\r\n\tpayments?: IPayment[];\r\n\r\n\t@OneToMany(\r\n\t\t(type) => RequestApprovalEmployee,\r\n\t\t(requestApprovals) => requestApprovals.employee\r\n\t)\r\n\trequestApprovals?: IRequestApprovalEmployee[];\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@IsNumber()\r\n\t@IsOptional()\r\n\t@Column({ type: 'numeric', nullable: true })\r\n\taverageIncome?: number;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@IsNumber()\r\n\t@IsOptional()\r\n\t@Column({ type: 'numeric', nullable: true })\r\n\taverageBonus?: number;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@IsNumber()\r\n\t@IsOptional()\r\n\t@Column({ type: 'numeric', default: 0 })\r\n\ttotalWorkHours?: number;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@IsNumber()\r\n\t@IsOptional()\r\n\t@Column({ type: 'numeric', nullable: true })\r\n\taverageExpenses?: number;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@IsBoolean()\r\n\t@Column({ nullable: true })\r\n\tshow_anonymous_bonus?: boolean;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@IsBoolean()\r\n\t@Column({ nullable: true })\r\n\tshow_average_bonus?: boolean;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@IsBoolean()\r\n\t@Column({ nullable: true })\r\n\tshow_average_expenses?: boolean;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@IsBoolean()\r\n\t@Column({ nullable: true })\r\n\tshow_average_income?: boolean;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@IsBoolean()\r\n\t@Column({ nullable: true })\r\n\tshow_billrate?: boolean;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@IsBoolean()\r\n\t@Column({ nullable: true })\r\n\tshow_payperiod?: boolean;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@IsBoolean()\r\n\t@Column({ nullable: true })\r\n\tshow_start_work_on?: boolean;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@IsBoolean()\r\n\t@Column({ nullable: true })\r\n\tisJobSearchActive?: boolean;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tlinkedInUrl?: string;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tfacebookUrl?: string;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tinstagramUrl?: string;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\ttwitterUrl?: string;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tgithubUrl?: string;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tgitlabUrl?: string;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tupworkUrl?: string;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@IsBoolean()\r\n\t@Column({ nullable: true })\r\n\tisVerified?: boolean;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@IsBoolean()\r\n\t@Column({ nullable: true })\r\n\tisVetted?: boolean;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@IsNumber()\r\n\t@IsOptional()\r\n\t@Column({ type: 'numeric', nullable: true })\r\n\ttotalJobs?: number;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@IsNumber()\r\n\t@IsOptional()\r\n\t@Column({ type: 'numeric', nullable: true })\r\n\tjobSuccess?: number;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { CqrsModule } from '@nestjs/cqrs';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { User } from '../user/user.entity';\r\nimport { UserService } from '../user/user.service';\r\nimport { CommandHandlers } from './commands/handlers';\r\nimport { EmployeeController } from './employee.controller';\r\nimport { Employee } from './employee.entity';\r\nimport { EmployeeService } from './employee.service';\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { EmailService, EmailModule } from '../email';\r\nimport { UserOrganizationModule } from '../user-organization/user-organization.module';\r\nimport { TimeLog } from '../timesheet/time-log.entity';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\nimport { GauzyAIService } from '@gauzy/integration-ai';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([Employee, User, TimeLog]),\r\n\t\tEmailModule,\r\n\t\tUserOrganizationModule,\r\n\t\tCqrsModule,\r\n\t\tTenantModule\r\n\t],\r\n\tcontrollers: [EmployeeController],\r\n\tproviders: [\r\n\t\tEmployeeService,\r\n\t\tUserService,\r\n\t\tAuthService,\r\n\t\tEmailService,\r\n\t\tGauzyAIService,\r\n\t\t...CommandHandlers\r\n\t],\r\n\texports: [TypeOrmModule, EmployeeService]\r\n})\r\nexport class EmployeeModule {}\r\n","import { Tenant } from '../tenant/tenant.entity';\r\nimport { Connection } from 'typeorm';\r\nimport { Employee } from './employee.entity';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { User } from '../user/user.entity';\r\nimport { date as fakerDate } from 'faker';\r\nimport { ISeedUsers, PayPeriodEnum } from '@gauzy/models';\r\nimport * as faker from 'faker';\r\nimport { DEFAULT_EMPLOYEES } from './default-employees';\r\nimport * as moment from 'moment';\r\nimport { environment as env } from '@env-api/environment';\r\n\r\nexport const createDefaultEmployees = async (\r\n\tconnection: Connection,\r\n\tdefaultData: {\r\n\t\ttenant: Tenant;\r\n\t\torg: Organization;\r\n\t\tusers: User[];\r\n\t}\r\n): Promise<Employee[]> => {\r\n\tconst defaultEmployees = DEFAULT_EMPLOYEES;\r\n\tconst defaultUsers = defaultData.users;\r\n\tconst defaultOrg = defaultData.org;\r\n\tconst defaultTenant = defaultData.tenant;\r\n\r\n\tconst employees: Employee[] = [];\r\n\tfor (const user of defaultUsers) {\r\n\t\tconst employee = new Employee();\r\n\t\temployee.organization = defaultOrg;\r\n\t\temployee.user = user;\r\n\t\temployee.employeeLevel = defaultEmployees.find(\r\n\t\t\t(e) => e.email === employee.user.email\r\n\t\t).employeeLevel;\r\n\t\temployee.startedWorkOn = getDate(\r\n\t\t\tdefaultEmployees.find((e) => e.email === employee.user.email)\r\n\t\t\t\t.startedWorkOn\r\n\t\t);\r\n\t\temployee.endWork = getDate(\r\n\t\t\tdefaultEmployees.find((e) => e.email === employee.user.email)\r\n\t\t\t\t.endWork\r\n\t\t);\r\n\t\t// TODO: check below value as its correct or not, and into frontend too\r\n\t\temployee.payPeriod = faker.random.arrayElement(\r\n\t\t\tObject.keys(PayPeriodEnum)\r\n\t\t);\r\n\t\temployee.billRateValue = faker.random.number(100);\r\n\t\temployee.billRateCurrency = defaultOrg.currency || env.defaultCurrency;\r\n\t\temployee.reWeeklyLimit = faker.random.number(40);\r\n\t\temployee.tenant = defaultTenant;\r\n\t\temployees.push(employee);\r\n\t}\r\n\r\n\tawait insertEmployees(connection, employees);\r\n\treturn employees;\r\n};\r\n\r\nexport const createRandomEmployees = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantOrganizationsMap: Map<Tenant, Organization[]>,\r\n\ttenantUsersMap: Map<Tenant, ISeedUsers>,\r\n\temployeesPerOrganization: number\r\n): Promise<Map<Tenant, Employee[]>> => {\r\n\tconst employeeMap: Map<Tenant, Employee[]> = new Map();\r\n\r\n\tfor (const tenant of tenants) {\r\n\t\tconst employees: Employee[] = [];\r\n\t\tconst randomUsers = tenantUsersMap.get(tenant).employeeUsers;\r\n\t\tconst randomOrgs = tenantOrganizationsMap.get(tenant);\r\n\r\n\t\tfor (const organization of randomOrgs) {\r\n\t\t\tif (randomUsers.length) {\r\n\t\t\t\tfor (let index = 0; index < employeesPerOrganization; index++) {\r\n\t\t\t\t\tconst employee = new Employee();\r\n\t\t\t\t\temployee.organization = organization;\r\n\t\t\t\t\temployee.user = randomUsers.pop();\r\n\t\t\t\t\temployee.isActive = true;\r\n\t\t\t\t\temployee.endWork = null;\r\n\t\t\t\t\temployee.startedWorkOn = new Date(\r\n\t\t\t\t\t\tmoment(fakerDate.past(index % 5)).format(\r\n\t\t\t\t\t\t\t'YYYY-MM-DD hh:mm:ss'\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t);\r\n\t\t\t\t\temployee.payPeriod = faker.random.arrayElement(\r\n\t\t\t\t\t\tObject.keys(PayPeriodEnum)\r\n\t\t\t\t\t);\r\n\t\t\t\t\temployee.billRateValue = faker.random.number(100);\r\n\t\t\t\t\temployee.billRateCurrency =\r\n\t\t\t\t\t\torganization.currency || env.defaultCurrency;\r\n\t\t\t\t\temployee.reWeeklyLimit = faker.random.number(40);\r\n\t\t\t\t\temployee.tenant = tenant;\r\n\r\n\t\t\t\t\tif (employee.user) {\r\n\t\t\t\t\t\temployees.push(employee);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\temployeeMap.set(tenant, employees);\r\n\t\tawait insertEmployees(connection, employees);\r\n\t}\r\n\r\n\treturn employeeMap;\r\n};\r\n\r\nconst insertEmployees = async (\r\n\tconnection: Connection,\r\n\temployees: Employee[]\r\n): Promise<Employee[]> => {\r\n\treturn await connection.manager.save(employees);\r\n};\r\n\r\nconst getDate = (dateString: string): Date => {\r\n\tif (dateString) {\r\n\t\tconst date = new Date(dateString);\r\n\t\treturn date;\r\n\t}\r\n\treturn null;\r\n};\r\n","import { IEmployeeCreateInput } from '@gauzy/models';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport * as moment from 'moment';\r\nimport { Brackets, Repository } from 'typeorm';\r\nimport { RequestContext } from '../core/context';\r\nimport { TenantAwareCrudService } from '../core/crud/tenant-aware-crud.service';\r\nimport { Employee } from './employee.entity';\r\n\r\n@Injectable()\r\nexport class EmployeeService extends TenantAwareCrudService<Employee> {\r\n\tconstructor(\r\n\t\t@InjectRepository(Employee)\r\n\t\tprotected readonly employeeRepository: Repository<Employee>\r\n\t) {\r\n\t\tsuper(employeeRepository);\r\n\t}\r\n\r\n\tasync createBulk(input: IEmployeeCreateInput[]): Promise<Employee[]> {\r\n\t\treturn Promise.all(\r\n\t\t\tinput.map((emp) => {\r\n\t\t\t\temp.user.tenant = {\r\n\t\t\t\t\tid: emp.organization.tenantId\r\n\t\t\t\t};\r\n\t\t\t\treturn this.create(emp);\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\tpublic async findAllActive(): Promise<Employee[]> {\r\n\t\tconst user = RequestContext.currentUser();\r\n\r\n\t\tif (user && user.tenantId) {\r\n\t\t\treturn await this.repository.find({\r\n\t\t\t\twhere: { isActive: true, tenantId: user.tenantId },\r\n\t\t\t\trelations: ['user']\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Find the employees working in the organization for a particular month.\r\n\t * An employee is considered to be 'working' if:\r\n\t * 1. The startedWorkOn date is (not null and) less than the last day forMonth\r\n\t * 2. The endWork date is either null or greater than the first day forMonth\r\n\t * @param organizationId  The organization id of the employees to find\r\n\t * @param forMonth  Only the month & year is considered\r\n\t */\r\n\tasync findWorkingEmployees(\r\n\t\torganizationId: string,\r\n\t\ttenantId: string,\r\n\t\tforMonth: Date,\r\n\t\twithUser: boolean\r\n\t): Promise<{ total: number; items: Employee[] }> {\r\n\t\tconst query = this.employeeRepository.createQueryBuilder('employee');\r\n\t\tquery\r\n\t\t\t.where(`${query.alias}.\"organizationId\" = :organizationId`, {\r\n\t\t\t\torganizationId\r\n\t\t\t})\r\n\t\t\t.andWhere(`${query.alias}.\"tenantId\" = :tenantId`, {\r\n\t\t\t\ttenantId\r\n\t\t\t})\r\n\t\t\t.andWhere(\r\n\t\t\t\t`${query.alias}.\"startedWorkOn\" <= :startedWorkOnCondition`,\r\n\t\t\t\t{\r\n\t\t\t\t\tstartedWorkOnCondition: moment(forMonth)\r\n\t\t\t\t\t\t.endOf('month')\r\n\t\t\t\t\t\t.format('YYYY-MM-DD hh:mm:ss')\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\t.andWhere(\r\n\t\t\t\tnew Brackets((notEndedCondition) => {\r\n\t\t\t\t\tnotEndedCondition\r\n\t\t\t\t\t\t.where(`${query.alias}.\"endWork\" IS NULL`)\r\n\t\t\t\t\t\t.orWhere(\r\n\t\t\t\t\t\t\t`${query.alias}.\"endWork\" >= :endWorkOnCondition`,\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tendWorkOnCondition: moment(forMonth)\r\n\t\t\t\t\t\t\t\t\t.startOf('month')\r\n\t\t\t\t\t\t\t\t\t.format('YYYY-MM-DD hh:mm:ss')\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t);\r\n\t\t\t\t})\r\n\t\t\t);\r\n\r\n\t\tif (withUser) {\r\n\t\t\tquery.leftJoinAndSelect(`${query.alias}.user`, 'user');\r\n\t\t}\r\n\r\n\t\tconst [items, total] = await query.getManyAndCount();\r\n\t\treturn {\r\n\t\t\ttotal,\r\n\t\t\titems\r\n\t\t};\r\n\t}\r\n\r\n\tasync findWithoutTenant(id: string, relations?: any) {\r\n\t\treturn await this.repository.findOne(id, relations);\r\n\t}\r\n}\r\n","import { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport {\r\n\tController,\r\n\tHttpStatus,\r\n\tGet,\r\n\tHttpCode,\r\n\tUseGuards,\r\n\tPut,\r\n\tParam,\r\n\tBody,\r\n\tQuery,\r\n\tPost\r\n} from '@nestjs/common';\r\nimport { CrudController } from '../core';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { IEquipmentSharingPolicy } from '@gauzy/models';\r\nimport { EquipmentSharingPolicy } from './equipment-sharing-policy.entity';\r\nimport { PermissionGuard } from '../shared/guards/auth/permission.guard';\r\nimport { EquipmentSharingPolicyService } from './equipment-sharing-policy.service';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('EquipmentSharingPolicy')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class EquipmentSharingPolicyController extends CrudController<\r\n\tEquipmentSharingPolicy\r\n> {\r\n\tconstructor(\r\n\t\tprivate readonly equipmentSharingPolicyService: EquipmentSharingPolicyService\r\n\t) {\r\n\t\tsuper(equipmentSharingPolicyService);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find all policies.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found policies',\r\n\t\ttype: EquipmentSharingPolicy\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@UseGuards(PermissionGuard)\r\n\t@Get()\r\n\tfindAllEquipmentSharingPolicies(@Query('data') data: string): any {\r\n\t\tconst { findInput, relations } = JSON.parse(data);\r\n\r\n\t\treturn this.equipmentSharingPolicyService.findAllPolicies({\r\n\t\t\twhere: findInput,\r\n\t\t\trelations\r\n\t\t});\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Create new record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully created.' /*, type: T*/\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@UseGuards(PermissionGuard)\r\n\t@Post('')\r\n\tasync createEquipmentSharingPolicy(\r\n\t\t@Body() entity: IEquipmentSharingPolicy\r\n\t): Promise<EquipmentSharingPolicy> {\r\n\t\treturn this.equipmentSharingPolicyService.create(entity);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Update record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully edited.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@UseGuards(PermissionGuard)\r\n\t@Put(':id')\r\n\tasync updateEquipmentSharingPolicy(\r\n\t\t@Param('id') id: string,\r\n\t\t@Body() entity: IEquipmentSharingPolicy\r\n\t): Promise<EquipmentSharingPolicy> {\r\n\t\treturn this.equipmentSharingPolicyService.update(id, entity);\r\n\t}\r\n}\r\n","/*\r\n  Approval Policy is predefined approval types for the organization.\r\nE.g. for example, \"Business Trip\", \"Borrow Items\", ...\r\n  Approval Policy table has the many to one relationship to the Organization table and Tenant by organizationId and tenantId\r\n*/\r\nimport { Entity, Index, Column } from 'typeorm';\r\nimport { IEquipmentSharingPolicy } from '@gauzy/models';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsString, IsNotEmpty } from 'class-validator';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('equipment_sharing_policy')\r\nexport class EquipmentSharingPolicy extends TenantOrganizationBase\r\n\timplements IEquipmentSharingPolicy {\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Index()\r\n\t@Column()\r\n\tname: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@Column({ nullable: true })\r\n\tdescription: string;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { EquipmentSharingPolicyController } from './equipment-sharing-policy.controller';\r\nimport { EquipmentSharingPolicyService } from './equipment-sharing-policy.service';\r\nimport { EquipmentSharingPolicy } from './equipment-sharing-policy.entity';\r\nimport { User } from '../user/user.entity';\r\nimport { UserService } from '../user/user.service';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([User, EquipmentSharingPolicy]),\r\n\t\tTenantModule\r\n\t],\r\n\tcontrollers: [EquipmentSharingPolicyController],\r\n\tproviders: [EquipmentSharingPolicyService, UserService],\r\n\texports: [TypeOrmModule, EquipmentSharingPolicyService]\r\n})\r\nexport class EquipmentSharingPolicyModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { IOrganization } from '@gauzy/models';\r\nimport { EquipmentSharingPolicy } from './equipment-sharing-policy.entity';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\n\r\nexport const createDefaultEquipmentSharingPolicyForOrg = async (\r\n\tconnection: Connection,\r\n\tdefaultData: {\r\n\t\torgs: IOrganization[];\r\n\t\ttenant: Tenant;\r\n\t}\r\n): Promise<void> => {\r\n\tconst promises = [];\r\n\r\n\tdefaultData.orgs.forEach((org) => {\r\n\t\tconst defaultEquipmentSharingPolicy = new EquipmentSharingPolicy();\r\n\t\tdefaultEquipmentSharingPolicy.name = 'Default Approval Policy';\r\n\t\tdefaultEquipmentSharingPolicy.organization = org;\r\n\t\tdefaultEquipmentSharingPolicy.tenant = org.tenant;\r\n\t\tdefaultEquipmentSharingPolicy.description = 'Default approval policy';\r\n\t\tpromises.push(\r\n\t\t\tinsertDefaultPolicy(connection, defaultEquipmentSharingPolicy)\r\n\t\t);\r\n\t});\r\n\r\n\tawait Promise.all(promises);\r\n};\r\n\r\nconst insertDefaultPolicy = async (\r\n\tconnection: Connection,\r\n\tdefaultPolicy: EquipmentSharingPolicy\r\n): Promise<void> => {\r\n\tawait connection\r\n\t\t.createQueryBuilder()\r\n\t\t.insert()\r\n\t\t.into(EquipmentSharingPolicy)\r\n\t\t.values(defaultPolicy)\r\n\t\t.execute();\r\n};\r\n\r\nexport const createRandomEquipmentSharingPolicyForOrg = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantOrganizationsMap: Map<Tenant, IOrganization[]>\r\n): Promise<EquipmentSharingPolicy[]> => {\r\n\tconst policies: EquipmentSharingPolicy[] = [];\r\n\tconst policyArray = ['Equipment Sharing Policy'];\r\n\tfor (const tenant of tenants) {\r\n\t\tconst orgs = tenantOrganizationsMap.get(tenant);\r\n\t\torgs.forEach((org) => {\r\n\t\t\tpolicyArray.forEach((name) => {\r\n\t\t\t\tconst policy = new EquipmentSharingPolicy();\r\n\t\t\t\tpolicy.description = name;\r\n\t\t\t\tpolicy.name = name;\r\n\t\t\t\tpolicy.organization = org;\r\n\t\t\t\tpolicy.tenant = tenant;\r\n\t\t\t\tpolicies.push(policy);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\tawait connection\r\n\t\t.createQueryBuilder()\r\n\t\t.insert()\r\n\t\t.into(EquipmentSharingPolicy)\r\n\t\t.values(policies)\r\n\t\t.execute();\r\n\r\n\treturn policies;\r\n};\r\n","import { CrudService, IPagination } from '../core';\r\nimport { BadRequestException, Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository, FindManyOptions } from 'typeorm';\r\nimport { IEquipmentSharingPolicy } from '@gauzy/models';\r\nimport { EquipmentSharingPolicy } from './equipment-sharing-policy.entity';\r\n\r\n@Injectable()\r\nexport class EquipmentSharingPolicyService extends CrudService<\r\n\tEquipmentSharingPolicy\r\n> {\r\n\tconstructor(\r\n\t\t@InjectRepository(EquipmentSharingPolicy)\r\n\t\tprivate readonly equipmentSharingRepository: Repository<\r\n\t\t\tEquipmentSharingPolicy\r\n\t\t>\r\n\t) {\r\n\t\tsuper(equipmentSharingRepository);\r\n\t}\r\n\r\n\tasync findAllPolicies(\r\n\t\tfilter?: FindManyOptions<EquipmentSharingPolicy>\r\n\t): Promise<IPagination<IEquipmentSharingPolicy>> {\r\n\t\tconst total = await this.equipmentSharingRepository.count(filter);\r\n\t\tconst items = await this.equipmentSharingRepository.find(filter);\r\n\r\n\t\treturn { items, total };\r\n\t}\r\n\r\n\tasync create(\r\n\t\tentity: IEquipmentSharingPolicy\r\n\t): Promise<EquipmentSharingPolicy> {\r\n\t\ttry {\r\n\t\t\tconst policy = new EquipmentSharingPolicy();\r\n\r\n\t\t\tpolicy.name = entity.name;\r\n\t\t\tpolicy.organizationId = entity.organizationId;\r\n\t\t\tpolicy.tenantId = entity.tenantId;\r\n\t\t\tpolicy.description = entity.description;\r\n\t\t\treturn this.equipmentSharingRepository.save(policy);\r\n\t\t} catch (error) {\r\n\t\t\tthrow new BadRequestException(error);\r\n\t\t}\r\n\t}\r\n\r\n\tasync update(\r\n\t\tid: string,\r\n\t\tentity: IEquipmentSharingPolicy\r\n\t): Promise<EquipmentSharingPolicy> {\r\n\t\ttry {\r\n\t\t\tconst policy = await this.equipmentSharingRepository.findOne(id);\r\n\t\t\tpolicy.name = entity.name;\r\n\t\t\tpolicy.organizationId = entity.organizationId;\r\n\t\t\tpolicy.description = entity.description;\r\n\t\t\treturn this.equipmentSharingRepository.save(policy);\r\n\t\t} catch (err /*: WriteError*/) {\r\n\t\t\tthrow new BadRequestException(err);\r\n\t\t}\r\n\t}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { EquipmentSharing } from '../equipment-sharing.entity';\r\n\r\nexport class EquipmentSharingCreateCommand implements ICommand {\r\n\tstatic readonly type = '[EquipmentSharing] Create';\r\n\r\n\tconstructor(\r\n\t\tpublic readonly orgId: string,\r\n\t\tpublic readonly equipmentSharing: EquipmentSharing\r\n\t) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class EquipmentSharingStatusCommand implements ICommand {\r\n\tstatic readonly type = '[EquipmentSharing] Status';\r\n\r\n\tconstructor(public readonly id: string, public readonly status: number) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { EquipmentSharing } from '../equipment-sharing.entity';\r\n\r\nexport class EquipmentSharingUpdateCommand implements ICommand {\r\n\tstatic readonly type = '[EquipmentSharing] Update';\r\n\r\n\tconstructor(\r\n\t\tpublic readonly id: string,\r\n\t\tpublic readonly equipmentSharing: EquipmentSharing\r\n\t) {}\r\n}\r\n","import { ICommandHandler, CommandHandler } from '@nestjs/cqrs';\r\nimport { EquipmentSharing } from '../../equipment-sharing.entity';\r\nimport {\r\n\tRequestApprovalStatusTypesEnum,\r\n\tApprovalPolicyTypesStringEnum\r\n} from '@gauzy/models';\r\nimport { EquipmentSharingCreateCommand } from '../equipment-sharing.create.command';\r\nimport { RequestApproval } from '../../../request-approval/request-approval.entity';\r\nimport { RequestContext } from '../../../core/context';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\n\r\n@CommandHandler(EquipmentSharingCreateCommand)\r\nexport class EquipmentSharingCreateHandler\r\n\timplements ICommandHandler<EquipmentSharingCreateCommand> {\r\n\tconstructor(\r\n\t\t@InjectRepository(EquipmentSharing)\r\n\t\tprivate readonly equipmentSharingRepository: Repository<\r\n\t\t\tEquipmentSharing\r\n\t\t>,\r\n\t\t@InjectRepository(RequestApproval)\r\n\t\tprivate readonly requestApprovalRepository: Repository<RequestApproval>\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand?: EquipmentSharingCreateCommand\r\n\t): Promise<EquipmentSharing> {\r\n\t\tconst { orgId, equipmentSharing } = command;\r\n\t\tequipmentSharing.createdBy = RequestContext.currentUser().id;\r\n\t\tequipmentSharing.createdByName = RequestContext.currentUser().name;\r\n\t\tequipmentSharing.organizationId = orgId;\r\n\t\tconst equipmentSharingSaved = await this.equipmentSharingRepository.save(\r\n\t\t\tequipmentSharing\r\n\t\t);\r\n\t\tconst requestApproval = new RequestApproval();\r\n\t\trequestApproval.requestId = equipmentSharingSaved.id;\r\n\t\trequestApproval.requestType =\r\n\t\t\tApprovalPolicyTypesStringEnum.EQUIPMENT_SHARING;\r\n\t\trequestApproval.status = equipmentSharingSaved.status\r\n\t\t\t? equipmentSharingSaved.status\r\n\t\t\t: RequestApprovalStatusTypesEnum.REQUESTED;\r\n\t\trequestApproval.createdBy = RequestContext.currentUser().id;\r\n\t\trequestApproval.createdByName = RequestContext.currentUser().name;\r\n\t\trequestApproval.name = equipmentSharing.name;\r\n\t\trequestApproval.min_count = 1;\r\n\t\tawait this.requestApprovalRepository.save(requestApproval);\r\n\t\treturn equipmentSharingSaved;\r\n\t}\r\n}\r\n","import { ICommandHandler, CommandHandler } from '@nestjs/cqrs';\r\nimport { EquipmentSharingStatusCommand } from '../equipment-sharing.status.command';\r\nimport { EquipmentSharing } from '../../equipment-sharing.entity';\r\nimport { NotFoundException, ConflictException } from '@nestjs/common';\r\nimport { RequestApprovalStatusTypesEnum } from '@gauzy/models';\r\nimport { Repository } from 'typeorm';\r\nimport { RequestApproval } from '../../../request-approval/request-approval.entity';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\n\r\n@CommandHandler(EquipmentSharingStatusCommand)\r\nexport class EquipmentSharingStatusHandler\r\n\timplements ICommandHandler<EquipmentSharingStatusCommand> {\r\n\tconstructor(\r\n\t\t@InjectRepository(EquipmentSharing)\r\n\t\tprivate readonly equipmentSharingRepository: Repository<\r\n\t\t\tEquipmentSharing\r\n\t\t>,\r\n\t\t@InjectRepository(RequestApproval)\r\n\t\tprivate readonly requestApprovalRepository: Repository<RequestApproval>\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand?: EquipmentSharingStatusCommand\r\n\t): Promise<EquipmentSharing> {\r\n\t\tconst { id, status } = command;\r\n\r\n\t\tconst [equipmentSharing, requestApproval] = await Promise.all([\r\n\t\t\tawait this.equipmentSharingRepository.findOne(id),\r\n\t\t\tawait this.requestApprovalRepository.findOne({\r\n\t\t\t\trequestId: id\r\n\t\t\t})\r\n\t\t]);\r\n\r\n\t\tif (!equipmentSharing) {\r\n\t\t\tthrow new NotFoundException('Equiment Sharing not found');\r\n\t\t}\r\n\t\tif (\r\n\t\t\tequipmentSharing.status === RequestApprovalStatusTypesEnum.REQUESTED\r\n\t\t) {\r\n\t\t\tequipmentSharing.status = status;\r\n\t\t\tif (requestApproval) {\r\n\t\t\t\trequestApproval.status = status;\r\n\t\t\t\tawait this.requestApprovalRepository.save(requestApproval);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthrow new ConflictException('Equiment Sharing is Conflict');\r\n\t\t}\r\n\t\treturn await this.equipmentSharingRepository.save(equipmentSharing);\r\n\t}\r\n}\r\n","import { ICommandHandler, CommandHandler } from '@nestjs/cqrs';\r\nimport { EquipmentSharing } from '../../equipment-sharing.entity';\r\nimport { RequestApprovalStatusTypesEnum } from '@gauzy/models';\r\nimport { RequestApproval } from '../../../request-approval/request-approval.entity';\r\nimport { RequestContext } from '../../../core/context';\r\nimport { EquipmentSharingUpdateCommand } from '../equipment-sharing.update.command';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\n\r\n@CommandHandler(EquipmentSharingUpdateCommand)\r\nexport class EquipmentSharingUpdateHandler\r\n\timplements ICommandHandler<EquipmentSharingUpdateCommand> {\r\n\tconstructor(\r\n\t\t@InjectRepository(EquipmentSharing)\r\n\t\tprivate readonly equipmentSharingRepository: Repository<\r\n\t\t\tEquipmentSharing\r\n\t\t>,\r\n\t\t@InjectRepository(RequestApproval)\r\n\t\tprivate readonly requestApprovalRepository: Repository<RequestApproval>\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand?: EquipmentSharingUpdateCommand\r\n\t): Promise<EquipmentSharing> {\r\n\t\tconst { id, equipmentSharing } = command;\r\n\r\n\t\tawait this.equipmentSharingRepository.delete(id);\r\n\t\tconst equipmentSharingSaved = await this.equipmentSharingRepository.save(\r\n\t\t\tequipmentSharing\r\n\t\t);\r\n\r\n\t\tawait this.requestApprovalRepository.delete({\r\n\t\t\trequestId: id\r\n\t\t});\r\n\r\n\t\tconst requestApproval = new RequestApproval();\r\n\t\trequestApproval.requestId = equipmentSharingSaved.id;\r\n\t\trequestApproval.status = equipmentSharingSaved.status\r\n\t\t\t? equipmentSharingSaved.status\r\n\t\t\t: RequestApprovalStatusTypesEnum.REQUESTED;\r\n\r\n\t\trequestApproval.createdBy = RequestContext.currentUser().id;\r\n\t\trequestApproval.createdByName = RequestContext.currentUser().name;\r\n\t\trequestApproval.name = equipmentSharing.name;\r\n\t\trequestApproval.min_count = 1;\r\n\t\tawait this.requestApprovalRepository.save(requestApproval);\r\n\r\n\t\treturn equipmentSharingSaved;\r\n\t}\r\n}\r\n","import { EquipmentSharingStatusHandler } from './equipment-sharing.status.handler';\r\nimport { EquipmentSharingCreateHandler } from './equipment-sharing.create.handler';\r\nimport { EquipmentSharingUpdateHandler } from './equipment-sharing.update.handler';\r\n\r\nexport const CommandHandlers = [\r\n\tEquipmentSharingStatusHandler,\r\n\tEquipmentSharingCreateHandler,\r\n\tEquipmentSharingUpdateHandler\r\n];\r\n","export { EquipmentSharingStatusCommand } from './equipment-sharing.status.command';\r\nexport { EquipmentSharingCreateCommand } from './equipment-sharing.create.command';\r\nexport { EquipmentSharingUpdateCommand } from './equipment-sharing.update.command';\r\n","import { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport {\r\n\tController,\r\n\tHttpStatus,\r\n\tGet,\r\n\tHttpCode,\r\n\tUseGuards,\r\n\tPut,\r\n\tParam,\r\n\tBody\r\n} from '@nestjs/common';\r\nimport { CrudController, IPagination } from '../core';\r\nimport { EquipmentSharing } from './equipment-sharing.entity';\r\nimport { EquipmentSharingService } from './equipment-sharing.service';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { RequestApprovalStatusTypesEnum } from '@gauzy/models';\r\nimport { Post } from '@nestjs/common';\r\nimport { CommandBus } from '@nestjs/cqrs';\r\nimport {\r\n\tEquipmentSharingStatusCommand,\r\n\tEquipmentSharingCreateCommand,\r\n\tEquipmentSharingUpdateCommand\r\n} from './commands';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('EquipmentSharing')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class EquipmentSharingController extends CrudController<\r\n\tEquipmentSharing\r\n> {\r\n\tconstructor(\r\n\t\tprivate readonly equipmentSharingService: EquipmentSharingService,\r\n\t\tprivate commandBus: CommandBus\r\n\t) {\r\n\t\tsuper(equipmentSharingService);\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find all equipment sharings'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found equipment sharings',\r\n\t\ttype: EquipmentSharing\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get()\r\n\tasync findAllEquipmentSharings(): Promise<IPagination<EquipmentSharing>> {\r\n\t\treturn this.equipmentSharingService.findAllEquipmentSharings();\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find equipment sharings By Orgization Id'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found equipment sharings',\r\n\t\ttype: EquipmentSharing\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get('/organization/:id')\r\n\tasync findEquipmentSharingsByOrgId(\r\n\t\t@Param('id') orgId: string\r\n\t): Promise<IPagination<EquipmentSharing>> {\r\n\t\treturn this.equipmentSharingService.findEquipmentSharingsByOrgId(orgId);\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find equipment sharings By Employee Id'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found equipment sharings',\r\n\t\ttype: EquipmentSharing\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get('employee/:id')\r\n\tasync findEquipmentSharingsByEmployeeId(\r\n\t\t@Param('id') empId: string\r\n\t): Promise<IPagination<EquipmentSharing>> {\r\n\t\treturn this.equipmentSharingService.findRequestApprovalsByEmployeeId(\r\n\t\t\tempId\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Update an existing record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully edited.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Post('organization/:id')\r\n\tasync createEquipmentSharing(\r\n\t\t@Param('id') orgId: string,\r\n\t\t@Body() equipmentSharing: EquipmentSharing\r\n\t): Promise<any> {\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew EquipmentSharingCreateCommand(orgId, equipmentSharing)\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Update an existing record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully edited.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Put(':id')\r\n\tasync update(\r\n\t\t@Param('id') id: string,\r\n\t\t@Body() equipmentSharing: EquipmentSharing\r\n\t): Promise<any> {\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew EquipmentSharingUpdateCommand(id, equipmentSharing)\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'equipment sharings request approval' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found equipment sharings',\r\n\t\ttype: EquipmentSharing\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Put('approval/:id')\r\n\tasync equipmentSharingsRequestApproval(\r\n\t\t@Param('id') id: string\r\n\t): Promise<EquipmentSharing> {\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew EquipmentSharingStatusCommand(\r\n\t\t\t\tid,\r\n\t\t\t\tRequestApprovalStatusTypesEnum.APPROVED\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'equipment sharings request refuse' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found equipment sharings',\r\n\t\ttype: EquipmentSharing\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Put('refuse/:id')\r\n\tasync equipmentSharingsRequestRefuse(\r\n\t\t@Param('id') id: string\r\n\t): Promise<EquipmentSharing> {\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew EquipmentSharingStatusCommand(\r\n\t\t\t\tid,\r\n\t\t\t\tRequestApprovalStatusTypesEnum.REFUSED\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n}\r\n","import {\r\n\tEntity,\r\n\tRelationId,\r\n\tColumn,\r\n\tManyToMany,\r\n\tJoinTable,\r\n\tJoinColumn,\r\n\tManyToOne\r\n} from 'typeorm';\r\nimport {\r\n\tIEquipmentSharing,\r\n\tRequestApprovalStatusTypesEnum\r\n} from '@gauzy/models';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsDate, IsEnum, IsNotEmpty, IsString } from 'class-validator';\r\nimport { Equipment } from '../equipment/equipment.entity';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { OrganizationTeam } from '../organization-team/organization-team.entity';\r\nimport { EquipmentSharingPolicy } from '../equipment-sharing-policy/equipment-sharing-policy.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('equipment_sharing')\r\nexport class EquipmentSharing extends TenantOrganizationBase\r\n\timplements IEquipmentSharing {\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@Column({ nullable: true })\r\n\tname: string;\r\n\r\n\t@ApiProperty({ type: Equipment })\r\n\t@ManyToOne((type) => Equipment, (equipment) => equipment.equipmentSharings)\r\n\t@JoinColumn()\r\n\tequipment: Equipment;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@RelationId(\r\n\t\t(equipmentSharing: EquipmentSharing) => equipmentSharing.equipment\r\n\t)\r\n\t@Column({ nullable: true })\r\n\tequipmentId: string;\r\n\r\n\t@ApiProperty({ type: Date })\r\n\t@IsDate()\r\n\t@Column({ nullable: true })\r\n\tshareRequestDay: Date;\r\n\r\n\t@ApiProperty({ type: Date })\r\n\t@IsDate()\r\n\t@Column({ nullable: true })\r\n\tshareStartDay: Date;\r\n\r\n\t@ApiProperty({ type: Date })\r\n\t@IsDate()\r\n\t@Column({ nullable: true })\r\n\tshareEndDay: Date;\r\n\r\n\t@IsEnum(RequestApprovalStatusTypesEnum)\r\n\t@IsNotEmpty()\r\n\t@Column()\r\n\tstatus: number;\r\n\r\n\t@ManyToMany((type) => Employee, { cascade: true })\r\n\t@JoinTable({\r\n\t\tname: 'equipment_shares_employees'\r\n\t})\r\n\temployees: Employee[];\r\n\r\n\t@ManyToMany((type) => OrganizationTeam, { cascade: true })\r\n\t@JoinTable({\r\n\t\tname: 'equipment_shares_teams'\r\n\t})\r\n\tteams: OrganizationTeam[];\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@IsString()\r\n\t@Column({ nullable: true })\r\n\tcreatedBy: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@Column({ nullable: true })\r\n\tcreatedByName: string;\r\n\r\n\t@ApiProperty({ type: EquipmentSharingPolicy })\r\n\t@ManyToOne((type) => EquipmentSharingPolicy, {\r\n\t\tnullable: true,\r\n\t\tonDelete: 'CASCADE'\r\n\t})\r\n\t@JoinColumn()\r\n\tequipmentSharingPolicy: EquipmentSharingPolicy;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@RelationId((policy: EquipmentSharing) => policy.equipmentSharingPolicy)\r\n\t@IsString()\r\n\t@Column({ nullable: true })\r\n\tequipmentSharingPolicyId: string;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { EquipmentSharing } from './equipment-sharing.entity';\r\nimport { EquipmentSharingController } from './equipment-sharing.controller';\r\nimport { EquipmentSharingService } from './equipment-sharing.service';\r\nimport { RequestApproval } from '../request-approval/request-approval.entity';\r\nimport { CqrsModule } from '@nestjs/cqrs';\r\nimport { CommandHandlers } from './commands/handlers';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([RequestApproval, EquipmentSharing]),\r\n\t\tCqrsModule,\r\n\t\tTenantModule\r\n\t],\r\n\tcontrollers: [EquipmentSharingController],\r\n\tproviders: [EquipmentSharingService, ...CommandHandlers],\r\n\texports: [EquipmentSharingService]\r\n})\r\nexport class EquipmentSharingModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { Equipment } from '../equipment/equipment.entity';\r\nimport { EquipmentSharing } from './equipment-sharing.entity';\r\nimport * as faker from 'faker';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { addDays } from 'date-fns';\r\nimport { IEmployee } from '@gauzy/models';\r\nimport { Organization } from '../organization/organization.entity';\r\n\r\nexport const createDefaultEquipmentSharing = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\torganization: Organization,\r\n\tdefaultEmployees,\r\n\tnoOfEquipmentSharingPerTenant: number\r\n): Promise<EquipmentSharing[]> => {\r\n\tlet equipmentSharings: EquipmentSharing[] = [];\r\n\tconst equipments = await connection.manager.find(Equipment, {\r\n\t\twhere: [{ tenant: tenant }]\r\n\t});\r\n\tequipmentSharings = await dataOperation(\r\n\t\tconnection,\r\n\t\tequipmentSharings,\r\n\t\tnoOfEquipmentSharingPerTenant,\r\n\t\tequipments,\r\n\t\tdefaultEmployees,\r\n\t\ttenant,\r\n\t\torganization\r\n\t);\r\n\r\n\treturn await connection.manager.save(equipmentSharings);\r\n};\r\n\r\nexport const createRandomEquipmentSharing = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantEmployeeMap: Map<Tenant, IEmployee[]>,\r\n\tnoOfEquipmentSharingPerTenant: number\r\n): Promise<EquipmentSharing[]> => {\r\n\tlet equipmentSharings: EquipmentSharing[] = [];\r\n\tfor (const tenant of tenants) {\r\n\t\tconst equipments = await connection.manager.find(Equipment, {\r\n\t\t\twhere: [{ tenant: tenant }]\r\n\t\t});\r\n\t\tconst employees = tenantEmployeeMap.get(tenant);\r\n\t\tequipmentSharings = await dataOperation(\r\n\t\t\tconnection,\r\n\t\t\tequipmentSharings,\r\n\t\t\tnoOfEquipmentSharingPerTenant,\r\n\t\t\tequipments,\r\n\t\t\temployees,\r\n\t\t\ttenant,\r\n\t\t\tnull\r\n\t\t);\r\n\t}\r\n\treturn equipmentSharings;\r\n};\r\n\r\nconst dataOperation = async (\r\n\tconnection: Connection,\r\n\tequipmentSharings,\r\n\tnoOfEquipmentSharingPerTenant,\r\n\tequipments,\r\n\temployees,\r\n\ttenant,\r\n\torganization\r\n) => {\r\n\tfor (let i = 0; i < noOfEquipmentSharingPerTenant; i++) {\r\n\t\tconst sharing = new EquipmentSharing();\r\n\t\tsharing.equipment = faker.random.arrayElement(equipments);\r\n\t\tsharing.equipmentId = sharing.equipment.id;\r\n\t\tsharing.shareRequestDay = faker.date.recent(30);\r\n\t\tsharing.shareStartDay = faker.date.future(0.5);\r\n\t\tsharing.shareEndDay = addDays(\r\n\t\t\tsharing.shareStartDay,\r\n\t\t\tfaker.random.number(15)\r\n\t\t);\r\n\t\tsharing.status = faker.random.number({ min: 1, max: 3 });\r\n\t\t// sharing.teams =[faker.random.arrayElement(teams)];\r\n\t\tsharing.employees = [faker.random.arrayElement(employees)];\r\n\t\tsharing.organization = organization;\r\n\t\tsharing.tenant = tenant;\r\n\t\tequipmentSharings.push(sharing);\r\n\t}\r\n\tawait connection.manager.save(equipmentSharings);\r\n\treturn equipmentSharings;\r\n};\r\n","import { CrudService } from '../core';\r\nimport {\r\n\tInjectable,\r\n\tBadRequestException,\r\n\tNotFoundException,\r\n\tConflictException\r\n} from '@nestjs/common';\r\nimport { EquipmentSharing } from './equipment-sharing.entity';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { RequestApprovalStatusTypesEnum } from '@gauzy/models';\r\nimport { RequestContext } from '../core/context';\r\nimport { RequestApproval } from '../request-approval/request-approval.entity';\r\nimport { environment as env } from '@env-api/environment';\r\n\r\n@Injectable()\r\nexport class EquipmentSharingService extends CrudService<EquipmentSharing> {\r\n\tconstructor(\r\n\t\t@InjectRepository(EquipmentSharing)\r\n\t\tprivate readonly equipmentSharingRepository: Repository<\r\n\t\t\tEquipmentSharing\r\n\t\t>,\r\n\t\t@InjectRepository(RequestApproval)\r\n\t\tprivate readonly requestApprovalRepository: Repository<RequestApproval>\r\n\t) {\r\n\t\tsuper(equipmentSharingRepository);\r\n\t}\r\n\r\n\tasync findEquipmentSharingsByOrgId(organizationId: string): Promise<any> {\r\n\t\ttry {\r\n\t\t\tconst query = this.equipmentSharingRepository.createQueryBuilder(\r\n\t\t\t\t'equipment_sharing'\r\n\t\t\t);\r\n\t\t\tquery\r\n\t\t\t\t.leftJoinAndSelect(`${query.alias}.employees`, 'employees')\r\n\t\t\t\t.leftJoinAndSelect(`${query.alias}.teams`, 'teams')\r\n\t\t\t\t.innerJoinAndSelect(`${query.alias}.equipment`, 'equipment')\r\n\t\t\t\t.leftJoinAndSelect(\r\n\t\t\t\t\t`${query.alias}.equipmentSharingPolicy`,\r\n\t\t\t\t\t'equipmentSharingPolicy'\r\n\t\t\t\t);\r\n\r\n\t\t\tif (env.database.type === 'sqlite') {\r\n\t\t\t\tquery.leftJoinAndSelect(\r\n\t\t\t\t\t'request_approval',\r\n\t\t\t\t\t'request_approval',\r\n\t\t\t\t\t'\"equipment_sharing\".\"id\" = \"request_approval\".\"requestId\"'\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tquery.leftJoinAndSelect(\r\n\t\t\t\t\t'request_approval',\r\n\t\t\t\t\t'request_approval',\r\n\t\t\t\t\t'\"equipment_sharing\".\"id\"::\"varchar\" = \"request_approval\".\"requestId\"'\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\treturn await query\r\n\t\t\t\t.leftJoinAndSelect(\r\n\t\t\t\t\t'request_approval.approvalPolicy',\r\n\t\t\t\t\t'approvalPolicy'\r\n\t\t\t\t)\r\n\t\t\t\t.where(\r\n\t\t\t\t\t'equipmentSharingPolicy.organizationId =:organizationId',\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\torganizationId\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t\t.getMany();\r\n\t\t} catch (err) {\r\n\t\t\tthrow new BadRequestException(err);\r\n\t\t}\r\n\t}\r\n\r\n\tasync findRequestApprovalsByEmployeeId(id: string): Promise<any> {\r\n\t\ttry {\r\n\t\t\treturn await this.equipmentSharingRepository.find({\r\n\t\t\t\twhere: {\r\n\t\t\t\t\tcreatedBy: id\r\n\t\t\t\t},\r\n\t\t\t\trelations: ['equipment', 'employees', 'teams']\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tthrow new BadRequestException(error);\r\n\t\t}\r\n\t}\r\n\r\n\tasync findAllEquipmentSharings(): Promise<any> {\r\n\t\treturn await this.equipmentSharingRepository.find({\r\n\t\t\trelations: ['equipment', 'employees', 'teams']\r\n\t\t});\r\n\t}\r\n\r\n\tasync createEquipmentSharing(\r\n\t\tequipmentSharing: EquipmentSharing\r\n\t): Promise<EquipmentSharing> {\r\n\t\ttry {\r\n\t\t\tequipmentSharing.createdBy = RequestContext.currentUser().id;\r\n\t\t\tequipmentSharing.createdByName = RequestContext.currentUser().name;\r\n\t\t\tconst equipmentSharingSaved = await this.equipmentSharingRepository.save(\r\n\t\t\t\tequipmentSharing\r\n\t\t\t);\r\n\t\t\treturn equipmentSharingSaved;\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log('err', err);\r\n\t\t\tthrow new BadRequestException(err);\r\n\t\t}\r\n\t}\r\n\r\n\tasync update(\r\n\t\tid: string,\r\n\t\tequipmentSharing: EquipmentSharing\r\n\t): Promise<EquipmentSharing> {\r\n\t\ttry {\r\n\t\t\tawait this.equipmentSharingRepository.delete(id);\r\n\t\t\tconst equipmentSharingSaved = await this.equipmentSharingRepository.save(\r\n\t\t\t\tequipmentSharing\r\n\t\t\t);\r\n\r\n\t\t\treturn equipmentSharingSaved;\r\n\t\t} catch (err) {\r\n\t\t\tthrow new BadRequestException(err);\r\n\t\t}\r\n\t}\r\n\r\n\tasync delete(id: string): Promise<any> {\r\n\t\ttry {\r\n\t\t\tconst [equipmentSharing] = await Promise.all([\r\n\t\t\t\tawait this.equipmentSharingRepository.delete(id),\r\n\t\t\t\tawait this.requestApprovalRepository.delete({\r\n\t\t\t\t\trequestId: id\r\n\t\t\t\t})\r\n\t\t\t]);\r\n\r\n\t\t\treturn equipmentSharing;\r\n\t\t} catch (error) {\r\n\t\t\tthrow new BadRequestException(error);\r\n\t\t}\r\n\t}\r\n\r\n\tasync updateStatusEquipmentSharingByAdmin(\r\n\t\tid: string,\r\n\t\tstatus: number\r\n\t): Promise<EquipmentSharing> {\r\n\t\ttry {\r\n\t\t\tconst equipmentSharing = await this.equipmentSharingRepository.findOne(\r\n\t\t\t\tid\r\n\t\t\t);\r\n\r\n\t\t\tif (!equipmentSharing) {\r\n\t\t\t\tthrow new NotFoundException('Equiment Sharing not found');\r\n\t\t\t}\r\n\t\t\tif (\r\n\t\t\t\tequipmentSharing.status ===\r\n\t\t\t\tRequestApprovalStatusTypesEnum.REQUESTED\r\n\t\t\t) {\r\n\t\t\t\tequipmentSharing.status = status;\r\n\t\t\t} else {\r\n\t\t\t\tthrow new ConflictException('Equiment Sharing is Conflict');\r\n\t\t\t}\r\n\t\t\treturn await this.equipmentSharingRepository.save(equipmentSharing);\r\n\t\t} catch (err) {\r\n\t\t\tthrow new BadRequestException(err);\r\n\t\t}\r\n\t}\r\n}\r\n","export { EquipmentSharingModule } from './equipment-sharing.module';\r\nexport { EquipmentSharing } from './equipment-sharing.entity';\r\nexport { EquipmentSharingService } from './equipment-sharing.service';\r\n","export const DEFAULT_RANDOM_EQUIPMENTS = [\r\n\t{\r\n\t\tkey: 'Car',\r\n\t\tvalue: [\r\n\t\t\t'Audi A6',\r\n\t\t\t'Audi A8',\r\n\t\t\t'Audi Q8',\r\n\t\t\t'BMW X1',\r\n\t\t\t'BMW X5',\r\n\t\t\t'Maruti Dzire',\r\n\t\t\t'Kia Telluride',\r\n\t\t\t'Chevrolet Corvette',\r\n\t\t\t'Jeep Gladiator',\r\n\t\t\t'Hyundai Palisade',\r\n\t\t\t'Toyota GR Supra',\r\n\t\t\t'Subaru Outback',\r\n\t\t\t'Ford Explorer'\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tkey: 'Laptop',\r\n\t\tvalue: [\r\n\t\t\t'Apple MacBook Pro 16-inch',\r\n\t\t\t'Lenovo ThinkPad E590 Notebook',\r\n\t\t\t'Dell XPS15',\r\n\t\t\t'Acer Aspire E15',\r\n\t\t\t'Microsoft Surface Pro (Intel Core i7)',\r\n\t\t\t'ASUS P-Series P2440UQ-XS71',\r\n\t\t\t'HP Notebook 15-ay011nr',\r\n\t\t\t'Apple 13″ MacBook Air',\r\n\t\t\t'Asus VivoBook M580VD-EB54',\r\n\t\t\t'Lenovo 320-15',\r\n\t\t\t'Dell Alienware',\r\n\t\t\t'HP Spectre x360',\r\n\t\t\t'AORUS 15-X9-RT4BD 15'\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tkey: 'Monitor',\r\n\t\tvalue: [\r\n\t\t\t'Dell P2720DC',\r\n\t\t\t' Acer Predator XB272',\r\n\t\t\t'Samsung 27″ SF354',\r\n\t\t\t'Dell Ultrasharp U2720Q',\r\n\t\t\t'LG 34WK95U',\r\n\t\t\t'Samsung CF791',\r\n\t\t\t'BenQ EX3203R'\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tkey: 'Printer',\r\n\t\tvalue: [\r\n\t\t\t'HP DeskJet Ink Advantage',\r\n\t\t\t'HP DeskJet 4535',\r\n\t\t\t'Canon Pixma MG2577s',\r\n\t\t\t'HP LaserJet M1005',\r\n\t\t\t' Samsung SCX-3401',\r\n\t\t\t'Epson L361 ',\r\n\t\t\t'Brother DCP-T300 ',\r\n\t\t\t'Xerox WorkCentre 6515 printer',\r\n\t\t\t'Canon Pixma TR8550 printer',\r\n\t\t\t'HP LaserJet Pro MFP M227fdw printer'\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tkey: 'Camera',\r\n\t\tvalue: [\r\n\t\t\t'Nikon Z6',\r\n\t\t\t'Fujifilm X-T4',\r\n\t\t\t'Sony A7 III ',\r\n\t\t\t'Nikon Z50 ',\r\n\t\t\t'Sony A6100',\r\n\t\t\t'Olympus OM-D E-M5 Mark III',\r\n\t\t\t'Sony ZV-1'\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tkey: 'Mobile',\r\n\t\tvalue: [\r\n\t\t\t'Iphone 7',\r\n\t\t\t'Iphone 8',\r\n\t\t\t'Iphone 11 pro',\r\n\t\t\t'Samsung s10',\r\n\t\t\t'Samsumg s11',\r\n\t\t\t'Blackberry',\r\n\t\t\t'Nokia'\r\n\t\t]\r\n\t}\r\n];\r\n","import { CrudController, IPagination } from '../core';\r\nimport { Equipment } from './equipment.entity';\r\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport {\r\n\tController,\r\n\tUseGuards,\r\n\tHttpStatus,\r\n\tGet,\r\n\tPut,\r\n\tParam,\r\n\tBody,\r\n\tQuery\r\n} from '@nestjs/common';\r\nimport { EquipmentService } from './equipment.service';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('Equipment')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class EquipmentController extends CrudController<Equipment> {\r\n\tconstructor(private equipmentService: EquipmentService) {\r\n\t\tsuper(equipmentService);\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find all equipment sharings'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found equipment sharings',\r\n\t\ttype: Equipment\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get()\r\n\tasync findAllEquipmentSharings(\r\n\t\t@Query('data') data: string\r\n\t): Promise<IPagination<Equipment>> {\r\n\t\tconst { relations, findInput } = JSON.parse(data);\r\n\t\treturn await this.equipmentService.findAll({\r\n\t\t\twhere: {\r\n\t\t\t\t...findInput\r\n\t\t\t},\r\n\t\t\trelations\r\n\t\t});\r\n\t}\r\n\t@Put(':id')\r\n\tasync update(\r\n\t\t@Param('id') id: string,\r\n\t\t@Body() entity: Equipment,\r\n\t\t...options: any[]\r\n\t): Promise<any> {\r\n\t\treturn this.equipmentService.create({\r\n\t\t\tid,\r\n\t\t\t...entity\r\n\t\t});\r\n\t}\r\n}\r\n","import {\r\n\tIEquipment,\r\n\tCurrenciesEnum,\r\n\tIEquipmentSharing,\r\n\tITag\r\n} from '@gauzy/models';\r\nimport { Entity, Column, OneToMany, ManyToMany, JoinTable } from 'typeorm';\r\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\r\nimport {\r\n\tIsString,\r\n\tIsNotEmpty,\r\n\tIsOptional,\r\n\tIsNumber,\r\n\tIsEnum,\r\n\tIsBoolean\r\n} from 'class-validator';\r\nimport { EquipmentSharing } from '../equipment-sharing/equipment-sharing.entity';\r\nimport { Tag } from '../tags/tag.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('equipment')\r\nexport class Equipment extends TenantOrganizationBase implements IEquipment {\r\n\t@ApiProperty()\r\n\t@ManyToMany((type) => Tag, (tag) => tag.equipment)\r\n\t@JoinTable({ name: 'tag_equipment' })\r\n\ttags: ITag[];\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Column()\r\n\tname: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsOptional()\r\n\t@Column()\r\n\ttype: string;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@IsOptional()\r\n\t@Column()\r\n\tserialNumber?: string;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@IsNumber()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true, type: 'numeric' })\r\n\tmanufacturedYear: number;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@IsNumber()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true, type: 'numeric' })\r\n\tinitialCost: number;\r\n\r\n\t@ApiProperty({ type: String, enum: CurrenciesEnum })\r\n\t@IsEnum(CurrenciesEnum)\r\n\t@IsOptional()\r\n\t@Column()\r\n\tcurrency: string;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@IsNumber()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true, type: 'numeric' })\r\n\tmaxSharePeriod: number;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@IsBoolean()\r\n\t@IsOptional()\r\n\t@Column()\r\n\tautoApproveShare: boolean;\r\n\r\n\t@OneToMany(\r\n\t\t(type) => EquipmentSharing,\r\n\t\t(equipmentSharing) => equipmentSharing.equipment\r\n\t)\r\n\tequipmentSharings: IEquipmentSharing[];\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { Equipment } from './equipment.entity';\r\nimport { EquipmentController } from './equipment.controller';\r\nimport { EquipmentService } from './equipment.service';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [TypeOrmModule.forFeature([Equipment]), TenantModule],\r\n\tcontrollers: [EquipmentController],\r\n\tproviders: [EquipmentService],\r\n\texports: [EquipmentService]\r\n})\r\nexport class EquipmentModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { Equipment } from './equipment.entity';\r\nimport * as faker from 'faker';\r\nimport { Tag } from '../tags/tag.entity';\r\nimport { IOrganization } from '@gauzy/models';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { DEFAULT_RANDOM_EQUIPMENTS } from './default-equipments';\r\nimport { environment as env } from '@env-api/environment';\r\n\r\nexport const createDefaultEquipments = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\torganization: IOrganization\r\n): Promise<Equipment[]> => {\r\n\tconst tags = await connection\r\n\t\t.getRepository(Tag)\r\n\t\t.createQueryBuilder()\r\n\t\t.getMany();\r\n\tconst equipments: Equipment[] = [];\r\n\r\n\tconst equipment = new Equipment();\r\n\tequipment.name = 'Fiat Freemont';\r\n\tequipment.type = 'Car';\r\n\tequipment.serialNumber = 'CB0950AT';\r\n\tequipment.manufacturedYear = 2015;\r\n\tequipment.initialCost = 40000;\r\n\tequipment.currency = env.defaultCurrency;\r\n\tequipment.maxSharePeriod = 7;\r\n\tequipment.tags = [faker.random.arrayElement(tags)];\r\n\tequipment.tenant = tenant;\r\n\tequipment.organization = organization;\r\n\tequipment.autoApproveShare = true;\r\n\tequipments.push(equipment);\r\n\r\n\tawait insertEquipment(connection, equipments);\r\n\treturn equipments;\r\n};\r\n\r\nconst insertEquipment = async (\r\n\tconnection: Connection,\r\n\tequipment: Equipment[]\r\n): Promise<void> => {\r\n\tawait connection.manager.save(equipment);\r\n};\r\n\r\nexport const createRandomEquipments = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\tnoOfEquipmentsPerTenant: number\r\n): Promise<Equipment[]> => {\r\n\tconst equipments: Equipment[] = [];\r\n\tconst tags = await connection\r\n\t\t.getRepository(Tag)\r\n\t\t.createQueryBuilder()\r\n\t\t.getMany();\r\n\r\n\tfor await (const tenant of tenants || []) {\r\n\t\tconst organizations = await connection.manager.find(Organization, {\r\n\t\t\twhere: [{ tenant: tenant }]\r\n\t\t});\r\n\r\n\t\tfor (let i = 0; i < noOfEquipmentsPerTenant; i++) {\r\n\t\t\tconst equipment = new Equipment();\r\n\t\t\tconst randomElement = faker.random.arrayElement(\r\n\t\t\t\tDEFAULT_RANDOM_EQUIPMENTS\r\n\t\t\t);\r\n\t\t\tequipment.type = randomElement.key;\r\n\t\t\tequipment.name = faker.random.arrayElement(randomElement.value);\r\n\t\t\tequipment.serialNumber = faker.random.uuid();\r\n\t\t\tequipment.manufacturedYear = faker.random.number({\r\n\t\t\t\tmin: 2000,\r\n\t\t\t\tmax: 2020\r\n\t\t\t});\r\n\t\t\tequipment.initialCost = faker.random.number({\r\n\t\t\t\tmin: 10000,\r\n\t\t\t\tmax: 50000\r\n\t\t\t});\r\n\r\n\t\t\tequipment.currency = env.defaultCurrency;\r\n\t\t\tequipment.maxSharePeriod = faker.random.number({ min: 1, max: 15 });\r\n\t\t\tequipment.tags = [faker.random.arrayElement(tags)];\r\n\t\t\tequipment.tenant = tenant;\r\n\t\t\t(equipment.organization = faker.random.arrayElement(organizations)),\r\n\t\t\t\t(equipment.autoApproveShare = faker.random.boolean());\r\n\t\t\tequipments.push(equipment);\r\n\t\t}\r\n\t}\r\n\r\n\tawait insertEquipment(connection, equipments);\r\n\treturn equipments;\r\n};\r\n","import { IPagination } from '../core';\r\nimport { Equipment } from './equipment.entity';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { TenantAwareCrudService } from '../core/crud/tenant-aware-crud.service';\r\n\r\n@Injectable()\r\nexport class EquipmentService extends TenantAwareCrudService<Equipment> {\r\n\tconstructor(\r\n\t\t@InjectRepository(Equipment)\r\n\t\tprivate readonly equipmentRepository: Repository<Equipment>\r\n\t) {\r\n\t\tsuper(equipmentRepository);\r\n\t}\r\n\r\n\tasync getAll(): Promise<IPagination<Equipment>> {\r\n\t\treturn await this.findAll({\r\n\t\t\trelations: ['equipmentSharings', 'tags']\r\n\t\t});\r\n\t}\r\n}\r\n","import { CrudController } from '../core';\r\nimport { ApiTags } from '@nestjs/swagger';\r\nimport {\r\n\tController,\r\n\tGet,\r\n\tQuery,\r\n\tBadRequestException,\r\n\tUseGuards\r\n} from '@nestjs/common';\r\nimport { EstimateEmail } from './estimate-email.entity';\r\nimport { EstimateEmailService } from './estimate-email.service';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('EstimateEmail')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class EstimateEmailController extends CrudController<EstimateEmail> {\r\n\tconstructor(private estimateEmailService: EstimateEmailService) {\r\n\t\tsuper(estimateEmailService);\r\n\t}\r\n\r\n\t@Get('validate')\r\n\tasync validateEstimateEmail(\r\n\t\t@Query('data') data: string\r\n\t): Promise<EstimateEmail> {\r\n\t\tconst {\r\n\t\t\trelations,\r\n\t\t\tfindInput: { email, token }\r\n\t\t} = JSON.parse(data);\r\n\r\n\t\tif (!email && !token) {\r\n\t\t\tthrow new BadRequestException('Email & Token Mandatory');\r\n\t\t}\r\n\r\n\t\treturn this.estimateEmailService.validate(relations, email, token);\r\n\t}\r\n}\r\n","import { IEstimateEmail } from '@gauzy/models';\r\nimport { ApiPropertyOptional } from '@nestjs/swagger';\r\nimport { IsDate, IsEmail, IsString } from 'class-validator';\r\nimport { Column, Entity } from 'typeorm';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('estimate_email')\r\nexport class EstimateEmail extends TenantOrganizationBase\r\n\timplements IEstimateEmail {\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@IsString()\r\n\t@Column()\r\n\ttoken?: string;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@IsEmail()\r\n\t@Column()\r\n\temail?: string;\r\n\r\n\t@ApiPropertyOptional({ type: Date })\r\n\t@IsDate()\r\n\t@Column()\r\n\texpireDate?: Date;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { User } from '../user/user.entity';\r\nimport { UserService } from '../user/user.service';\r\nimport { EstimateEmailController } from './estimate-email.controller';\r\nimport { EstimateEmailService } from './estimate-email.service';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { Invoice } from '../invoice/invoice.entity';\r\nimport { EstimateEmail } from './estimate-email.entity';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([User, EstimateEmail, Invoice, Organization]),\r\n\t\tTenantModule\r\n\t],\r\n\tcontrollers: [EstimateEmailController],\r\n\tproviders: [EstimateEmailService, UserService],\r\n\texports: [EstimateEmailService, UserService]\r\n})\r\nexport class EstimateEmailModule {}\r\n","import { CrudService } from '../core';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { MoreThanOrEqual, Repository } from 'typeorm';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { EstimateEmail } from './estimate-email.entity';\r\nimport { addDays } from 'date-fns';\r\nimport { Invoice } from '../invoice/invoice.entity';\r\nimport { Organization } from '../organization/organization.entity';\r\n\r\n@Injectable()\r\nexport class EstimateEmailService extends CrudService<EstimateEmail> {\r\n\tconstructor(\r\n\t\t@InjectRepository(EstimateEmail)\r\n\t\tprivate readonly estimateEmailRepository: Repository<EstimateEmail>,\r\n\t\t@InjectRepository(Invoice)\r\n\t\tprivate readonly invoiceRepository: Repository<Invoice>,\r\n\t\t@InjectRepository(Organization)\r\n\t\tprivate readonly organizationRepository: Repository<Organization>\r\n\t) {\r\n\t\tsuper(estimateEmailRepository);\r\n\t}\r\n\r\n\tasync createEstimateEmail(id: string, email: string, token: string) {\r\n\t\tconst invoice: Invoice = await this.invoiceRepository.findOne(id);\r\n\r\n\t\tconst organization: Organization = await this.organizationRepository.findOne(\r\n\t\t\tinvoice.organizationId\r\n\t\t);\r\n\r\n\t\tconst tokenExpiryPeriod =\r\n\t\t\torganization && organization.inviteExpiryPeriod\r\n\t\t\t\t? organization.inviteExpiryPeriod\r\n\t\t\t\t: 7;\r\n\r\n\t\tconst expireDate = addDays(new Date(), tokenExpiryPeriod);\r\n\r\n\t\tconst estimateEmail = new EstimateEmail();\r\n\r\n\t\testimateEmail.email = email;\r\n\t\testimateEmail.token = token;\r\n\t\testimateEmail.expireDate = expireDate;\r\n\r\n\t\tawait this.repository.save(estimateEmail);\r\n\t}\r\n\r\n\tasync validate(relations, email, token): Promise<EstimateEmail> {\r\n\t\treturn this.findOne({\r\n\t\t\trelations,\r\n\t\t\twhere: {\r\n\t\t\t\temail,\r\n\t\t\t\ttoken,\r\n\t\t\t\texpireDate: MoreThanOrEqual(new Date())\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { IEventTypeCreateInput } from '@gauzy/models';\r\n\r\nexport class EventTypeCreateCommand implements ICommand {\r\n\tstatic readonly type = '[EventType] Create';\r\n\r\n\tconstructor(public readonly input: IEventTypeCreateInput) {}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { EventTypeCreateCommand } from '../event-type.create.command';\r\nimport { EventType } from '../../event-type.entity';\r\nimport { EventTypeService } from '../../event-type.service';\r\nimport { EmployeeService } from '../../../employee/employee.service';\r\nimport { OrganizationService } from '../../../organization/organization.service';\r\nimport { RequestContext } from '../../../core/context';\r\n\r\n@CommandHandler(EventTypeCreateCommand)\r\nexport class EventTypeCreateHandler\r\n\timplements ICommandHandler<EventTypeCreateCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly eventTypeService: EventTypeService,\r\n\t\tprivate readonly employeeService: EmployeeService,\r\n\t\tprivate readonly organizationService: OrganizationService\r\n\t) {}\r\n\r\n\tpublic async execute(command: EventTypeCreateCommand): Promise<EventType> {\r\n\t\tconst { input } = command;\r\n\r\n\t\tconst eventType = new EventType();\r\n\t\tconst employee = input.employeeId\r\n\t\t\t? await this.employeeService.findOne(input.employeeId)\r\n\t\t\t: null;\r\n\t\tconst organization = await this.organizationService.findOne(\r\n\t\t\tinput.organizationId\r\n\t\t);\r\n\r\n\t\teventType.employee = employee;\r\n\t\teventType.organization = organization;\r\n\t\teventType.isActive = input.isActive || false;\r\n\t\teventType.description = input.description;\r\n\t\teventType.title = input.title;\r\n\t\teventType.durationUnit = input.durationUnit;\r\n\t\teventType.duration = input.duration;\r\n\t\teventType.tags = input.tags;\r\n\t\teventType.tenantId = RequestContext.currentTenantId();\r\n\r\n\t\treturn await this.eventTypeService.create(eventType);\r\n\t}\r\n}\r\n","import { EventTypeCreateHandler } from './event-type.create.handler';\r\n\r\nexport const CommandHandlers = [EventTypeCreateHandler];\r\n","import { IEventTypeCreateInput } from '@gauzy/models';\r\nimport {\r\n\tBody,\r\n\tController,\r\n\tGet,\r\n\tHttpCode,\r\n\tHttpStatus,\r\n\tParam,\r\n\tPut,\r\n\tPost,\r\n\tQuery,\r\n\tUseGuards\r\n} from '@nestjs/common';\r\nimport { CommandBus } from '@nestjs/cqrs';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\r\nimport { IPagination } from '../core';\r\nimport { CrudController } from '../core/crud/crud.controller';\r\nimport { EventTypeCreateCommand } from './commands/event-type.create.command';\r\nimport { EventType } from './event-type.entity';\r\nimport { EventTypeService } from './event-type.service';\r\nimport { ParseJsonPipe } from '../shared';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('EventType')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class EventTypeController extends CrudController<EventType> {\r\n\tconstructor(\r\n\t\tprivate readonly eventTypeService: EventTypeService,\r\n\t\tprivate readonly commandBus: CommandBus\r\n\t) {\r\n\t\tsuper(eventTypeService);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find all event types' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found expense',\r\n\t\ttype: EventType\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get()\r\n\tasync findAllEventTypes(\r\n\t\t@Query('data') data: string\r\n\t): Promise<IPagination<EventType>> {\r\n\t\tconst { relations, findInput } = JSON.parse(data);\r\n\t\treturn this.eventTypeService.findAll({ where: findInput, relations });\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Update record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully updated.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Put(':id')\r\n\tasync update(\r\n\t\t@Param('id') id: string,\r\n\t\t@Body() entity: EventType,\r\n\t\t...options: any[]\r\n\t): Promise<any> {\r\n\t\treturn this.eventTypeService.create({\r\n\t\t\tid,\r\n\t\t\t...entity\r\n\t\t});\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find event type by id.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Find Event type',\r\n\t\ttype: EventType\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get(':id')\r\n\tasync findById(\r\n\t\t@Param('id') id: string,\r\n\t\t@Query('data', ParseJsonPipe) data?: any\r\n\t): Promise<EventType> {\r\n\t\tconst { relations = [] } = data;\r\n\t\treturn this.eventTypeService.findOne(id, {\r\n\t\t\trelations\r\n\t\t});\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Create new record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully created.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@Post()\r\n\tasync create(\r\n\t\t@Body() entity: IEventTypeCreateInput,\r\n\t\t...options: any[]\r\n\t): Promise<EventType> {\r\n\t\treturn this.commandBus.execute(new EventTypeCreateCommand(entity));\r\n\t}\r\n}\r\n","import {\r\n\tColumn,\r\n\tEntity,\r\n\tIndex,\r\n\tManyToOne,\r\n\tRelationId,\r\n\tJoinColumn,\r\n\tManyToMany,\r\n\tJoinTable\r\n} from 'typeorm';\r\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\r\nimport {\r\n\tIsNotEmpty,\r\n\tIsString,\r\n\tIsNumber,\r\n\tIsOptional,\r\n\tIsBoolean\r\n} from 'class-validator';\r\nimport { IEventType } from '@gauzy/models';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { Tag } from '../tags/tag.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('event_type')\r\nexport class EventType extends TenantOrganizationBase implements IEventType {\r\n\t@ApiProperty({ type: Tag })\r\n\t@ManyToMany((type) => Tag, (tag) => tag.eventType)\r\n\t@JoinTable({ name: 'tag_event_type' })\r\n\ttags?: Tag[];\r\n\r\n\t@ApiProperty({ type: Employee })\r\n\t@ManyToOne((type) => Employee, { nullable: true, onDelete: 'CASCADE' })\r\n\t@JoinColumn()\r\n\temployee?: Employee;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@RelationId((eventType: EventType) => eventType.employee)\r\n\t@Column({ nullable: true })\r\n\treadonly employeeId?: string;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@IsNumber()\r\n\t@IsNotEmpty()\r\n\t@Index()\r\n\t@Column({ type: 'numeric' })\r\n\tduration: number;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@Index()\r\n\t@Column({ nullable: true })\r\n\tdurationUnit: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Index()\r\n\t@Column({ nullable: true })\r\n\ttitle: string;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@Index()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tdescription?: string;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@IsBoolean()\r\n\t@Column({ nullable: true })\r\n\tisActive: boolean;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { EventType } from './event-type.entity';\r\nimport { EventTypeService } from './event-type.service';\r\nimport { EventTypeController } from './event-type.controller';\r\nimport { CommandHandlers } from './commands/handlers';\r\nimport { CqrsModule } from '@nestjs/cqrs';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { EmployeeService } from '../employee/employee.service';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { OrganizationService } from '../organization/organization.service';\r\nimport { UserModule } from '../user/user.module';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tUserModule,\r\n\t\tTypeOrmModule.forFeature([EventType, Employee, Organization]),\r\n\t\tCqrsModule,\r\n\t\tTenantModule\r\n\t],\r\n\tcontrollers: [EventTypeController],\r\n\tproviders: [\r\n\t\tEventTypeService,\r\n\t\tEmployeeService,\r\n\t\tOrganizationService,\r\n\t\t...CommandHandlers\r\n\t],\r\n\texports: [EventTypeService]\r\n})\r\nexport class EventTypeModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { IEmployee, IOrganization } from '@gauzy/models';\r\nimport { EventType } from './event-type.entity';\r\nimport * as faker from 'faker';\r\nimport { Tag } from '../tags/tag.entity';\r\n\r\nexport const createRandomEventType = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantEmployeeMap: Map<Tenant, IEmployee[]>,\r\n\ttenantOrganizationsMap: Map<Tenant, IOrganization[]>\r\n): Promise<EventType[]> => {\r\n\tif (!tenantEmployeeMap) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: tenantEmployeeMap not found, deal  will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\tif (!tenantOrganizationsMap) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: tenantOrganizationsMap not found, deal  will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tfor (const tenant of tenants) {\r\n\t\tconst tenantEmployees = tenantEmployeeMap.get(tenant);\r\n\t\tconst tenantOrgs = tenantOrganizationsMap.get(tenant);\r\n\t\tfor (const tenantEmployee of tenantEmployees) {\r\n\t\t\tconst eventTypes: EventType[] = [];\r\n\t\t\tfor (const tenantOrg of tenantOrgs) {\r\n\t\t\t\tconst tags = await connection.manager.find(Tag, {\r\n\t\t\t\t\twhere: [{ organization: tenantOrg }]\r\n\t\t\t\t});\r\n\r\n\t\t\t\tconst event = new EventType();\r\n\t\t\t\tevent.isActive = faker.random.boolean();\r\n\t\t\t\tevent.description = faker.name.jobDescriptor();\r\n\t\t\t\tevent.title = faker.name.jobTitle();\r\n\t\t\t\tevent.durationUnit = 'minutes';\r\n\t\t\t\tevent.duration = faker.random.number(50);\r\n\t\t\t\tevent.organization = tenantOrg;\r\n\t\t\t\tevent.employee = tenantEmployee;\r\n\t\t\t\tevent.tags = tags;\r\n\t\t\t\tevent.tenant = tenant;\r\n\r\n\t\t\t\teventTypes.push(event);\r\n\t\t\t}\r\n\t\t\tawait connection.manager.save(eventTypes);\r\n\t\t}\r\n\t}\r\n};\r\n\r\nexport const createDefaultEventTypes = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\torgs: IOrganization[]\r\n): Promise<EventType[]> => {\r\n\tconst eventTypes: EventType[] = [];\r\n\torgs.forEach((org) => {\r\n\t\tconst eventType = new EventType();\r\n\t\teventType.title = '15 Minutes Event';\r\n\t\teventType.description = 'This is a default event type.';\r\n\t\teventType.duration = 15;\r\n\t\teventType.durationUnit = 'Minute(s)';\r\n\t\teventType.isActive = true;\r\n\t\teventType.organization = org;\r\n\t\teventType.tenant = tenant;\r\n\t\teventTypes.push(eventType);\r\n\r\n\t\tconst eventTypeOne = new EventType();\r\n\t\teventTypeOne.title = '30 Minutes Event';\r\n\t\teventTypeOne.description = 'This is a default event type.';\r\n\t\teventTypeOne.duration = 30;\r\n\t\teventTypeOne.durationUnit = 'Minute(s)';\r\n\t\teventTypeOne.isActive = true;\r\n\t\teventTypeOne.organization = org;\r\n\t\teventTypeOne.tenant = tenant;\r\n\t\teventTypes.push(eventTypeOne);\r\n\r\n\t\tconst eventTypeTwo = new EventType();\r\n\t\teventTypeTwo.title = '60 Minutes Event';\r\n\t\teventTypeTwo.description = 'This is a default event type.';\r\n\t\teventTypeTwo.duration = 60;\r\n\t\teventTypeTwo.durationUnit = 'Minute(s)';\r\n\t\teventTypeTwo.isActive = true;\r\n\t\teventTypeTwo.organization = org;\r\n\t\teventTypeTwo.tenant = tenant;\r\n\t\teventTypes.push(eventTypeTwo);\r\n\t});\r\n\r\n\treturn await insertEventTypes(connection, eventTypes);\r\n};\r\n\r\nconst insertEventTypes = async (\r\n\tconnection: Connection,\r\n\teventTypes: EventType[]\r\n): Promise<EventType[]> => {\r\n\treturn await connection.manager.save(eventTypes);\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository, FindManyOptions } from 'typeorm';\r\nimport { EventType } from './event-type.entity';\r\nimport { CrudService } from '../core/crud/crud.service';\r\nimport { IPagination } from '../core';\r\n\r\n@Injectable()\r\nexport class EventTypeService extends CrudService<EventType> {\r\n\tconstructor(\r\n\t\t@InjectRepository(EventType)\r\n\t\tprivate readonly eventTypeRepository: Repository<EventType>\r\n\t) {\r\n\t\tsuper(eventTypeRepository);\r\n\t}\r\n\r\n\tpublic async findAll(\r\n\t\tfilter?: FindManyOptions<EventType>\r\n\t): Promise<IPagination<EventType>> {\r\n\t\tconst total = await this.repository.count(filter);\r\n\t\tlet items = await this.repository.find(filter);\r\n\r\n\t\treturn { items, total };\r\n\t}\r\n}\r\n","import {\r\n\tController,\r\n\tUseGuards,\r\n\tGet,\r\n\tQuery,\r\n\tPut,\r\n\tParam,\r\n\tBody\r\n} from '@nestjs/common';\r\nimport { ApiTags } from '@nestjs/swagger';\r\nimport { CrudController, IPagination } from '../core';\r\nimport { ExpenseCategoriesService } from './expense-categories.service';\r\nimport { ExpenseCategory } from './expense-category.entity';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('ExpenseCategories')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class ExpenseCategoriesController extends CrudController<\r\n\tExpenseCategory\r\n> {\r\n\tconstructor(\r\n\t\tprivate readonly expenseCategoriesService: ExpenseCategoriesService\r\n\t) {\r\n\t\tsuper(expenseCategoriesService);\r\n\t}\r\n\r\n\t@Get()\r\n\tasync findAllOrganizationExpenseCategories(\r\n\t\t@Query('data') data: string\r\n\t): Promise<IPagination<ExpenseCategory>> {\r\n\t\tconst { relations, findInput } = JSON.parse(data);\r\n\t\treturn this.expenseCategoriesService.findAll({\r\n\t\t\twhere: findInput,\r\n\t\t\trelations\r\n\t\t});\r\n\t}\r\n\t@Put(':id')\r\n\tasync updateOrganizationExpenseCategories(\r\n\t\t@Param('id') id: string,\r\n\t\t@Body() entity: ExpenseCategory,\r\n\t\t...options: any[]\r\n\t): Promise<ExpenseCategory> {\r\n\t\treturn this.expenseCategoriesService.create({\r\n\t\t\tid,\r\n\t\t\t...entity\r\n\t\t});\r\n\t}\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { ExpenseCategory } from './expense-category.entity';\r\nimport { ExpenseCategoriesService } from './expense-categories.service';\r\nimport { ExpenseCategoriesController } from './expense-categories.controller';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [TypeOrmModule.forFeature([ExpenseCategory]), TenantModule],\r\n\tcontrollers: [ExpenseCategoriesController],\r\n\tproviders: [ExpenseCategoriesService]\r\n})\r\nexport class ExpenseCategoriesModule {}\r\n","import { ExpenseCategoriesEnum, IOrganization } from '@gauzy/models';\r\nimport { Connection } from 'typeorm';\r\nimport { ExpenseCategory } from './expense-category.entity';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\n\r\nexport const createExpenseCategories = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\torganizations: IOrganization[]\r\n): Promise<ExpenseCategory[]> => {\r\n\tlet defaultExpenseCategories: ExpenseCategory[] = [];\r\n\torganizations.forEach((organization) => {\r\n\t\tconst categories = Object.values(ExpenseCategoriesEnum).map((name) => {\r\n\t\t\tconst category = new ExpenseCategory();\r\n\t\t\tcategory.name = name;\r\n\t\t\tcategory.organization = organization;\r\n\t\t\tcategory.tenant = tenant;\r\n\t\t\treturn category;\r\n\t\t});\r\n\t\tdefaultExpenseCategories = [...defaultExpenseCategories, ...categories];\r\n\t});\r\n\r\n\treturn insertExpenseCategories(connection, defaultExpenseCategories);\r\n};\r\n\r\nexport const createRandomExpenseCategories = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantOrganizationMap: Map<Tenant, IOrganization[]>\r\n): Promise<Map<IOrganization, ExpenseCategory[]>> => {\r\n\tlet expenseCategories: ExpenseCategory[] = [];\r\n\tconst expenseCategoryMap: Map<IOrganization, ExpenseCategory[]> = new Map();\r\n\r\n\t(tenants || []).forEach((tenant) => {\r\n\t\tconst organizations = tenantOrganizationMap.get(tenant);\r\n\t\t(organizations || []).forEach((organization) => {\r\n\t\t\tconst categories = Object.values(ExpenseCategoriesEnum).map(\r\n\t\t\t\t(name) => {\r\n\t\t\t\t\tconst category = new ExpenseCategory();\r\n\t\t\t\t\tcategory.name = name;\r\n\t\t\t\t\tcategory.organization = organization;\r\n\t\t\t\t\tcategory.tenant = tenant;\r\n\t\t\t\t\treturn category;\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\texpenseCategoryMap.set(organization, categories);\r\n\t\t\texpenseCategories = [...expenseCategories, ...categories];\r\n\t\t});\r\n\t});\r\n\r\n\tawait insertExpenseCategories(connection, expenseCategories);\r\n\treturn expenseCategoryMap;\r\n};\r\n\r\nconst insertExpenseCategories = async (\r\n\tconnection: Connection,\r\n\texpenseCategories: ExpenseCategory[]\r\n): Promise<ExpenseCategory[]> => {\r\n\treturn await connection.manager.save(expenseCategories);\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { CrudService } from '../core/crud/crud.service';\r\nimport { ExpenseCategory } from './expense-category.entity';\r\n\r\n@Injectable()\r\nexport class ExpenseCategoriesService extends CrudService<ExpenseCategory> {\r\n\tconstructor(\r\n\t\t@InjectRepository(ExpenseCategory)\r\n\t\tprivate readonly expenseCategoryRepository: Repository<ExpenseCategory>\r\n\t) {\r\n\t\tsuper(expenseCategoryRepository);\r\n\t}\r\n}\r\n","import { Column, Entity, ManyToMany, JoinTable } from 'typeorm';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsNotEmpty, IsString } from 'class-validator';\r\nimport { IExpenseCategory } from '@gauzy/models';\r\nimport { Tag } from '../tags/tag.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('expense_category')\r\nexport class ExpenseCategory extends TenantOrganizationBase\r\n\timplements IExpenseCategory {\r\n\t@ApiProperty()\r\n\t@ManyToMany((type) => Tag, (tag) => tag.expenseCategory)\r\n\t@JoinTable({\r\n\t\tname: 'tag_organization_expense_category'\r\n\t})\r\n\ttags?: Tag[];\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Column()\r\n\tname: string;\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { IExpenseCreateInput } from '@gauzy/models';\r\n\r\nexport class ExpenseCreateCommand implements ICommand {\r\n\tstatic readonly type = '[Expense] Create';\r\n\r\n\tconstructor(public readonly input: IExpenseCreateInput) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class ExpenseDeleteCommand implements ICommand {\r\n\tstatic readonly type = '[Expense] Delete';\r\n\r\n\tconstructor(\r\n\t\tpublic readonly employeeId: string,\r\n\t\tpublic readonly expenseId: string\r\n\t) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { IExpense } from '@gauzy/models';\r\n\r\nexport class ExpenseUpdateCommand implements ICommand {\r\n\tstatic readonly type = '[Expense] Update';\r\n\r\n\tconstructor(public readonly id: string, public readonly entity: IExpense) {}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { ExpenseCreateCommand } from '../expense.create.command';\r\nimport { Expense } from '../../expense.entity';\r\nimport { ExpenseService } from '../../expense.service';\r\nimport { EmployeeService } from '../../../employee/employee.service';\r\nimport { OrganizationService } from '../../../organization/organization.service';\r\nimport { EmployeeStatisticsService } from '../../../employee-statistics';\r\nimport { RequestContext } from '../../../core/context';\r\n\r\n@CommandHandler(ExpenseCreateCommand)\r\nexport class ExpenseCreateHandler\r\n\timplements ICommandHandler<ExpenseCreateCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly expenseService: ExpenseService,\r\n\t\tprivate readonly employeeService: EmployeeService,\r\n\t\tprivate readonly organizationService: OrganizationService,\r\n\t\tprivate readonly employeeStatisticsService: EmployeeStatisticsService\r\n\t) {}\r\n\r\n\tpublic async execute(command: ExpenseCreateCommand): Promise<Expense> {\r\n\t\tconst expense = await this.createExpense(command);\r\n\t\tlet averageExpense = 0;\r\n\t\tif (expense && expense.employeeId) {\r\n\t\t\tconst id = expense.employeeId;\r\n\t\t\tconst stat = await this.employeeStatisticsService.getStatisticsByEmployeeId(\r\n\t\t\t\texpense.employeeId\r\n\t\t\t);\r\n\t\t\taverageExpense = this.expenseService.countStatistic(\r\n\t\t\t\tstat.expenseStatistics\r\n\t\t\t);\r\n\t\t\tawait this.employeeService.create({\r\n\t\t\t\tid,\r\n\t\t\t\taverageExpenses: averageExpense\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn expense;\r\n\t}\r\n\r\n\tpublic async createExpense(\r\n\t\tcommand: ExpenseCreateCommand\r\n\t): Promise<Expense> {\r\n\t\tconst { input } = command;\r\n\t\tconst expense = new Expense();\r\n\t\tconst employee = input.employeeId\r\n\t\t\t? await this.employeeService.findOne(input.employeeId)\r\n\t\t\t: null;\r\n\t\tconst organization = await this.organizationService.findOne(\r\n\t\t\tinput.organizationId\r\n\t\t);\r\n\r\n\t\texpense.amount = Math.abs(input.amount);\r\n\t\texpense.category = input.category;\r\n\t\texpense.vendor = input.vendor;\r\n\t\texpense.typeOfExpense = input.typeOfExpense;\r\n\t\texpense.organizationContactName = input.organizationContactName;\r\n\t\texpense.organizationContactId = input.organizationContactId;\r\n\t\texpense.projectName = input.projectName;\r\n\t\texpense.projectId = input.projectId;\r\n\t\texpense.notes = input.notes;\r\n\t\texpense.valueDate = input.valueDate;\r\n\t\texpense.employee = employee;\r\n\t\texpense.organization = organization;\r\n\t\texpense.currency = input.currency;\r\n\t\texpense.purpose = input.purpose;\r\n\t\texpense.taxType = input.taxType;\r\n\t\texpense.taxLabel = input.taxLabel;\r\n\t\texpense.rateValue = input.rateValue;\r\n\t\texpense.receipt = input.receipt;\r\n\t\texpense.splitExpense = input.splitExpense;\r\n\t\texpense.tags = input.tags;\r\n\t\texpense.status = input.status;\r\n\t\texpense.tenantId = RequestContext.currentTenantId();\r\n\r\n\t\tif (!expense.currency) {\r\n\t\t\texpense.currency = organization.currency;\r\n\t\t}\r\n\t\treturn await this.expenseService.create(expense);\r\n\t}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { ExpenseService } from '../../expense.service';\r\nimport { EmployeeService } from '../../../employee/employee.service';\r\nimport { EmployeeStatisticsService } from '../../../employee-statistics';\r\nimport { ExpenseDeleteCommand } from '../expense.delete.command';\r\n\r\n@CommandHandler(ExpenseDeleteCommand)\r\nexport class ExpenseDeleteHandler\r\n\timplements ICommandHandler<ExpenseDeleteCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly expenseService: ExpenseService,\r\n\t\tprivate readonly employeeService: EmployeeService,\r\n\t\tprivate readonly employeeStatisticsService: EmployeeStatisticsService\r\n\t) {}\r\n\r\n\tpublic async execute(command: ExpenseDeleteCommand): Promise<any> {\r\n\t\tconst { employeeId, expenseId } = command;\r\n\t\tawait this.deleteExpense(expenseId);\r\n\t\tif (employeeId) {\r\n\t\t\tconst id = employeeId;\r\n\t\t\tlet averageExpense = 0;\r\n\r\n\t\t\tconst stat = await this.employeeStatisticsService.getStatisticsByEmployeeId(\r\n\t\t\t\tid\r\n\t\t\t);\r\n\r\n\t\t\taverageExpense = this.expenseService.countStatistic(\r\n\t\t\t\tstat.expenseStatistics\r\n\t\t\t);\r\n\t\t\treturn await this.employeeService.create({\r\n\t\t\t\tid,\r\n\t\t\t\taverageExpenses: averageExpense\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tpublic async deleteExpense(expenseId: string): Promise<any> {\r\n\t\treturn await this.expenseService.delete(expenseId);\r\n\t}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { ExpenseService } from '../../expense.service';\r\nimport { EmployeeService } from '../../../employee/employee.service';\r\nimport { EmployeeStatisticsService } from '../../../employee-statistics';\r\nimport { ExpenseUpdateCommand } from '../expense.update.command';\r\nimport { IExpense } from '@gauzy/models';\r\n\r\n@CommandHandler(ExpenseUpdateCommand)\r\nexport class ExpenseUpdateHandler\r\n\timplements ICommandHandler<ExpenseUpdateCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly expenseService: ExpenseService,\r\n\t\tprivate readonly employeeService: EmployeeService,\r\n\t\tprivate readonly employeeStatisticsService: EmployeeStatisticsService\r\n\t) {}\r\n\r\n\tpublic async execute(command: ExpenseUpdateCommand): Promise<any> {\r\n\t\tlet { id } = command;\r\n\t\tconst { entity } = command;\r\n\t\tconst expense = await this.updateExpense(id, entity);\r\n\t\tlet averageExpense = 0;\r\n\t\tif (expense && expense.employeeId) {\r\n\t\t\tid = expense.employeeId;\r\n\r\n\t\t\tconst stat = await this.employeeStatisticsService.getStatisticsByEmployeeId(\r\n\t\t\t\tid\r\n\t\t\t);\r\n\r\n\t\t\taverageExpense = this.expenseService.countStatistic(\r\n\t\t\t\tstat.expenseStatistics\r\n\t\t\t);\r\n\r\n\t\t\treturn await this.employeeService.create({\r\n\t\t\t\tid,\r\n\t\t\t\taverageExpenses: averageExpense\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tpublic async updateExpense(\r\n\t\texpenseId: string,\r\n\t\tentity: IExpense\r\n\t): Promise<IExpense> {\r\n\t\tconst id = expenseId;\r\n\t\treturn this.expenseService.create({\r\n\t\t\tid,\r\n\t\t\t...entity\r\n\t\t});\r\n\t}\r\n}\r\n","import { ExpenseCreateHandler } from './expense.create.handler';\r\nimport { ExpenseDeleteHandler } from './expense.delete.handler';\r\nimport { ExpenseUpdateHandler } from './expense.update.handler';\r\n\r\nexport const CommandHandlers = [\r\n\tExpenseCreateHandler,\r\n\tExpenseDeleteHandler,\r\n\tExpenseUpdateHandler\r\n];\r\n","import {\r\n\tIExpenseCreateInput,\r\n\tPermissionsEnum,\r\n\tISplitExpenseOutput,\r\n\tIGetExpenseInput,\r\n\tIExpenseReportData\r\n} from '@gauzy/models';\r\nimport {\r\n\tBody,\r\n\tController,\r\n\tGet,\r\n\tHttpCode,\r\n\tHttpStatus,\r\n\tParam,\r\n\tPut,\r\n\tPost,\r\n\tQuery,\r\n\tUseGuards,\r\n\tDelete\r\n} from '@nestjs/common';\r\nimport { CommandBus, QueryBus } from '@nestjs/cqrs';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\r\nimport { IPagination } from '../core';\r\nimport { CrudController } from '../core/crud/crud.controller';\r\nimport { EmployeeService } from '../employee/employee.service';\r\nimport { Permissions } from '../shared/decorators/permissions';\r\nimport { PermissionGuard } from '../shared/guards/auth/permission.guard';\r\nimport { ExpenseCreateCommand } from './commands/expense.create.command';\r\nimport { Expense } from './expense.entity';\r\nimport { ExpenseService } from './expense.service';\r\nimport { RequestContext } from '../core/context';\r\nimport { FindSplitExpenseQuery } from './queries/expense.find-split-expense.query';\r\nimport { ParseJsonPipe } from '../shared';\r\nimport { ExpenseDeleteCommand } from './commands/expense.delete.command';\r\nimport { ExpenseUpdateCommand } from './commands/expense.update.command';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\nimport { ExpenseMapService } from './expense.map.service';\r\n\r\n@ApiTags('Expense')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class ExpenseController extends CrudController<Expense> {\r\n\tconstructor(\r\n\t\tprivate readonly expenseService: ExpenseService,\r\n\t\tprivate readonly expenseMapService: ExpenseMapService,\r\n\t\tprivate readonly employeeService: EmployeeService,\r\n\t\tprivate readonly commandBus: CommandBus,\r\n\t\tprivate readonly queryBus: QueryBus\r\n\t) {\r\n\t\tsuper(expenseService);\r\n\t}\r\n\r\n\t// If user is not an employee, then this will return 404\r\n\t@ApiOperation({\r\n\t\tsummary:\r\n\t\t\t'Find all expense for the logged in employee, including split expenses.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found expense',\r\n\t\ttype: Expense\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get('me')\r\n\tasync findMyExpenseWithSplitIncluded(\r\n\t\t@Query('data') data: string\r\n\t): Promise<IPagination<Expense>> {\r\n\t\tconst { relations, filterDate } = JSON.parse(data);\r\n\r\n\t\tconst employee = await this.employeeService.findOne({\r\n\t\t\tuser: { id: RequestContext.currentUser().id }\r\n\t\t});\r\n\r\n\t\treturn await this.queryBus.execute(\r\n\t\t\tnew FindSplitExpenseQuery({\r\n\t\t\t\temployeeId: employee.id,\r\n\t\t\t\trelations,\r\n\t\t\t\tfilterDate\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find all expenses for an employee, including split expenses.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found split expenses'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_EXPENSES_VIEW)\r\n\t@Get('include-split/:employeeId')\r\n\tasync findAllSplitExpenses(\r\n\t\t@Query('data') data: string,\r\n\t\t@Param('employeeId') employeeId: string\r\n\t): Promise<IPagination<ISplitExpenseOutput>> {\r\n\t\tconst { relations, filterDate } = JSON.parse(data);\r\n\r\n\t\treturn await this.queryBus.execute(\r\n\t\t\tnew FindSplitExpenseQuery({\r\n\t\t\t\temployeeId,\r\n\t\t\t\trelations,\r\n\t\t\t\tfilterDate\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find all expenses for an employee, including split expenses.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found split expenses'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_EXPENSES_VIEW)\r\n\t@Get('report')\r\n\tasync getExpanseReport(\r\n\t\t@Query() request: IGetExpenseInput\r\n\t): Promise<IExpenseReportData[]> {\r\n\t\tconst expenses = await this.expenseService.getExpanse(request);\r\n\r\n\t\tlet response: IExpenseReportData[] = [];\r\n\t\tif (request.groupBy === 'date') {\r\n\t\t\tresponse = this.expenseMapService.mapByDate(expenses);\r\n\t\t} else if (request.groupBy === 'employee') {\r\n\t\t\tresponse = this.expenseMapService.mapByEmployee(expenses);\r\n\t\t} else if (request.groupBy === 'project') {\r\n\t\t\tresponse = this.expenseMapService.mapByProject(expenses);\r\n\t\t}\r\n\t\treturn response;\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Report daily chart' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found one record'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get('report/daily-chart')\r\n\tasync getDailyReportChartData(@Query() options: IGetExpenseInput) {\r\n\t\treturn this.expenseService.getDailyReportChartData(options);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find all expense.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found expense',\r\n\t\ttype: Expense\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_EXPENSES_VIEW)\r\n\t@Get()\r\n\tasync findAllExpenses(\r\n\t\t@Query('data') data: string\r\n\t): Promise<IPagination<Expense>> {\r\n\t\tconst { relations, findInput, filterDate } = JSON.parse(data);\r\n\r\n\t\treturn this.expenseService.findAllExpenses(\r\n\t\t\t{ where: findInput, relations },\r\n\t\t\tfilterDate\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Create new record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully created.' /*, type: T*/\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_EXPENSES_EDIT)\r\n\t@Put(':id')\r\n\tasync update(\r\n\t\t@Param('id') id: string,\r\n\t\t@Body() entity: Expense\r\n\t): Promise<any> {\r\n\t\treturn this.commandBus.execute(new ExpenseUpdateCommand(id, entity));\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Create new record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully created.' /*, type: T*/\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_EXPENSES_EDIT)\r\n\t@Post('/create')\r\n\tasync create(\r\n\t\t@Body() entity: IExpenseCreateInput,\r\n\t\t...options: any[]\r\n\t): Promise<Expense> {\r\n\t\treturn this.commandBus.execute(new ExpenseCreateCommand(entity));\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Delete record'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'The record has been successfully deleted'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_EXPENSES_EDIT)\r\n\t@Delete('deleteExpense')\r\n\tasync deleteExpense(@Query('data', ParseJsonPipe) data: any): Promise<any> {\r\n\t\tconst { expenseId = null, employeeId = null } = data;\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew ExpenseDeleteCommand(employeeId, expenseId)\r\n\t\t);\r\n\t}\r\n}\r\n","import {\r\n\tColumn,\r\n\tEntity,\r\n\tIndex,\r\n\tManyToOne,\r\n\tRelationId,\r\n\tJoinColumn,\r\n\tManyToMany,\r\n\tJoinTable,\r\n\tOneToMany\r\n} from 'typeorm';\r\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\r\nimport {\r\n\tIsNotEmpty,\r\n\tIsString,\r\n\tIsNumber,\r\n\tIsOptional,\r\n\tIsDate,\r\n\tIsEnum,\r\n\tIsBoolean\r\n} from 'class-validator';\r\nimport {\r\n\tIExpense,\r\n\tCurrenciesEnum,\r\n\tIOrganizationVendor,\r\n\tIExpenseCategory,\r\n\tITag,\r\n\tIEmployee,\r\n\tIOrganizationProject\r\n} from '@gauzy/models';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { Tag } from '../tags/tag.entity';\r\nimport { ExpenseCategory } from '../expense-categories/expense-category.entity';\r\nimport { OrganizationVendor } from '../organization-vendors/organization-vendors.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\nimport { InvoiceItem } from '../invoice-item/invoice-item.entity';\r\nimport { OrganizationProject } from '../organization-projects/organization-projects.entity';\r\n\r\n@Entity('expense')\r\nexport class Expense extends TenantOrganizationBase implements IExpense {\r\n\t@ApiProperty({ type: Tag })\r\n\t@ManyToMany((type) => Tag, (tag) => tag.expense)\r\n\t@JoinTable({\r\n\t\tname: 'tag_expense'\r\n\t})\r\n\ttags: ITag[];\r\n\r\n\t@ApiProperty({ type: Employee })\r\n\t@ManyToOne((type) => Employee, { nullable: true, onDelete: 'CASCADE' })\r\n\t@JoinColumn()\r\n\temployee?: IEmployee;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@RelationId((expense: Expense) => expense.employee)\r\n\t@Column({ nullable: true })\r\n\treadonly employeeId?: string;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@IsNumber()\r\n\t@IsNotEmpty()\r\n\t@Index()\r\n\t@Column({ type: 'numeric' })\r\n\tamount: number;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@IsString()\r\n\t@IsOptional()\r\n\t@Index()\r\n\t@Column({ nullable: true })\r\n\ttypeOfExpense: string;\r\n\r\n\t@ApiProperty({ type: OrganizationVendor })\r\n\t@ManyToOne((type) => OrganizationVendor, {\r\n\t\tnullable: false\r\n\t})\r\n\t@JoinColumn()\r\n\tvendor: IOrganizationVendor;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@RelationId((expense: Expense) => expense.vendor)\r\n\treadonly vendorId: string;\r\n\r\n\t@ApiProperty({ type: ExpenseCategory })\r\n\t@ManyToOne((type) => ExpenseCategory, {\r\n\t\tnullable: false\r\n\t})\r\n\t@JoinColumn()\r\n\tcategory: IExpenseCategory;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@RelationId((expense: Expense) => expense.category)\r\n\treadonly categoryId: string;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@Index()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\torganizationContactId?: string;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@Index()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\torganizationContactName?: string;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@Index()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\t@RelationId((expense: Expense) => expense.project)\r\n\tprojectId?: string;\r\n\r\n\t@ApiProperty({ type: OrganizationProject })\r\n\t@ManyToOne((type) => OrganizationProject, {\r\n\t\tnullable: false\r\n\t})\r\n\t@JoinColumn()\r\n\tproject: IOrganizationProject;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@Index()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tprojectName?: string;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@Index()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tnotes?: string;\r\n\r\n\t@ApiProperty({ type: String, enum: CurrenciesEnum })\r\n\t@IsEnum(CurrenciesEnum)\r\n\t@IsNotEmpty()\r\n\t@Index()\r\n\t@Column()\r\n\tcurrency: string;\r\n\r\n\t@ApiPropertyOptional({ type: Date })\r\n\t@IsDate()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tvalueDate?: Date;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@Index()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tpurpose?: string;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@Index()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\ttaxType?: string;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@Index()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\ttaxLabel?: string;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@IsNumber()\r\n\t@Index()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true, type: 'numeric' })\r\n\trateValue: number;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@Index()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\treceipt?: string;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@IsBoolean()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tsplitExpense: boolean;\r\n\r\n\t@ApiPropertyOptional({ type: String, maxLength: 256 })\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\treference?: string;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tstatus?: string;\r\n\r\n\t@ApiPropertyOptional({ type: InvoiceItem, isArray: true })\r\n\t@OneToMany((type) => InvoiceItem, (invoiceItem) => invoiceItem.expense, {\r\n\t\tonDelete: 'SET NULL'\r\n\t})\r\n\t@JoinColumn()\r\n\tinvoiceItems?: InvoiceItem[];\r\n\r\n\t//IN SOME CASES THE EXPENSES ARE CRASHING BECAUSE ITS TRYING TO ADD EXPENSES AND THERE IS NO SUCH THING\r\n\r\n\t// IF THIS HAPPENS AGAIN ADD THIS\r\n\r\n\t// @ApiPropertyOptional({ type: String})\r\n\t// @IsOptional()\r\n\t// @Column({ nullable: true })\r\n\t// expenseId?: string;\r\n}\r\n","import {\r\n\tIExpense,\r\n\tIExpenseReportGroupByDate,\r\n\tIExpenseReportGroupByEmployee,\r\n\tIExpenseReportGroupByProject\r\n} from '@gauzy/models';\r\nimport { Injectable } from '@nestjs/common';\r\nimport * as moment from 'moment';\r\nimport { chain } from 'underscore';\r\n\r\n@Injectable()\r\nexport class ExpenseMapService {\r\n\tconstructor() {}\r\n\r\n\tmapByDate(expenses: IExpense[]): IExpenseReportGroupByDate[] {\r\n\t\tconst dailyLogs: any = this.groupByDate(expenses).map(\r\n\t\t\t(byDateExpense: IExpense[], date) => {\r\n\t\t\t\tconst sum = this.getDurationSum(byDateExpense);\r\n\t\t\t\tconst byEmployee = this.groupByEmployee(byDateExpense).map(\r\n\t\t\t\t\t(byEmployeeExpense: IExpense[]) => {\r\n\t\t\t\t\t\tconst byProject = this.groupByProject(\r\n\t\t\t\t\t\t\tbyEmployeeExpense\r\n\t\t\t\t\t\t).map((byProjectExpense: IExpense[]) => {\r\n\t\t\t\t\t\t\tconst project =\r\n\t\t\t\t\t\t\t\tbyProjectExpense.length > 0 &&\r\n\t\t\t\t\t\t\t\tbyProjectExpense[0]\r\n\t\t\t\t\t\t\t\t\t? byProjectExpense[0].project\r\n\t\t\t\t\t\t\t\t\t: null;\r\n\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tproject,\r\n\t\t\t\t\t\t\t\texpanse: byProjectExpense.map((row) =>\r\n\t\t\t\t\t\t\t\t\tthis.mapExpensePercentage(row, sum)\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tconst employee =\r\n\t\t\t\t\t\t\tbyEmployeeExpense.length > 0 && byEmployeeExpense[0]\r\n\t\t\t\t\t\t\t\t? byEmployeeExpense[0].employee\r\n\t\t\t\t\t\t\t\t: null;\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\temployee,\r\n\t\t\t\t\t\t\tprojects: byProject\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tdate,\r\n\t\t\t\t\temployees: byEmployee\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t);\r\n\t\treturn dailyLogs;\r\n\t}\r\n\r\n\tmapByEmployee(expenses: IExpense[]): IExpenseReportGroupByEmployee[] {\r\n\t\tconst byEmployee: any = this.groupByEmployee(expenses).map(\r\n\t\t\t(byEmployeeExpense: IExpense[]) => {\r\n\t\t\t\tconst sum = this.getDurationSum(byEmployeeExpense);\r\n\t\t\t\tconst dailyLogs = this.groupByDate(byEmployeeExpense).map(\r\n\t\t\t\t\t(byDateExpense: IExpense[], date) => {\r\n\t\t\t\t\t\tconst byProject = this.groupByProject(\r\n\t\t\t\t\t\t\tbyDateExpense\r\n\t\t\t\t\t\t).map((byProjectExpense: IExpense[]) => {\r\n\t\t\t\t\t\t\tconst project =\r\n\t\t\t\t\t\t\t\tbyProjectExpense.length > 0 &&\r\n\t\t\t\t\t\t\t\tbyProjectExpense[0]\r\n\t\t\t\t\t\t\t\t\t? byProjectExpense[0].project\r\n\t\t\t\t\t\t\t\t\t: null;\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tproject,\r\n\t\t\t\t\t\t\t\texpanse: byProjectExpense.map((row) =>\r\n\t\t\t\t\t\t\t\t\tthis.mapExpensePercentage(row, sum)\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tdate,\r\n\t\t\t\t\t\t\tprojects: byProject\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\r\n\t\t\t\tconst employee =\r\n\t\t\t\t\tbyEmployeeExpense.length > 0 && byEmployeeExpense[0]\r\n\t\t\t\t\t\t? byEmployeeExpense[0].employee\r\n\t\t\t\t\t\t: null;\r\n\t\t\t\treturn {\r\n\t\t\t\t\temployee,\r\n\t\t\t\t\tdates: dailyLogs\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t);\r\n\t\treturn byEmployee;\r\n\t}\r\n\r\n\tmapByProject(expenses: IExpense[]): IExpenseReportGroupByProject[] {\r\n\t\tconst byEmployee: any = this.groupByProject(expenses).map(\r\n\t\t\t(byProjectExpense: IExpense[]) => {\r\n\t\t\t\tconst sum = this.getDurationSum(byProjectExpense);\r\n\r\n\t\t\t\tconst dailyLogs = this.groupByDate(byProjectExpense).map(\r\n\t\t\t\t\t(byDateExpense: IExpense[], date) => {\r\n\t\t\t\t\t\tconst byProject = this.groupByEmployee(\r\n\t\t\t\t\t\t\tbyDateExpense\r\n\t\t\t\t\t\t).map((byEmployeeExpense: IExpense[]) => {\r\n\t\t\t\t\t\t\tconst employee =\r\n\t\t\t\t\t\t\t\tbyEmployeeExpense.length > 0 &&\r\n\t\t\t\t\t\t\t\tbyEmployeeExpense[0]\r\n\t\t\t\t\t\t\t\t\t? byEmployeeExpense[0].employee\r\n\t\t\t\t\t\t\t\t\t: null;\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\temployee,\r\n\t\t\t\t\t\t\t\texpanse: byEmployeeExpense.map((row) =>\r\n\t\t\t\t\t\t\t\t\tthis.mapExpensePercentage(row, sum)\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tdate,\r\n\t\t\t\t\t\t\temployees: byProject\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\r\n\t\t\t\tconst project =\r\n\t\t\t\t\tbyProjectExpense.length > 0 && byProjectExpense[0]\r\n\t\t\t\t\t\t? byProjectExpense[0].project\r\n\t\t\t\t\t\t: null;\r\n\t\t\t\treturn {\r\n\t\t\t\t\tproject,\r\n\t\t\t\t\tdates: dailyLogs\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t);\r\n\t\treturn byEmployee;\r\n\t}\r\n\r\n\tprivate groupByProject(expenses: IExpense[]) {\r\n\t\treturn chain(expenses).groupBy((expanse) => {\r\n\t\t\treturn expanse.projectId;\r\n\t\t});\r\n\t}\r\n\r\n\tprivate groupByDate(expenses: IExpense[]) {\r\n\t\treturn chain(expenses).groupBy((expanse) => {\r\n\t\t\treturn moment.utc(expanse.valueDate).format('YYYY-MM-DD');\r\n\t\t});\r\n\t}\r\n\r\n\tprivate groupByEmployee(expenses: IExpense[]) {\r\n\t\treturn chain(expenses).groupBy((expanse) => {\r\n\t\t\treturn expanse.employeeId;\r\n\t\t});\r\n\t}\r\n\r\n\tprivate mapExpensePercentage(expanse, sum = 0) {\r\n\t\texpanse.duration_percentage =\r\n\t\t\t(parseInt(expanse.duration, 10) * 100) / sum;\r\n\t\treturn expanse;\r\n\t}\r\n\r\n\tprivate getDurationSum(expenses) {\r\n\t\treturn expenses.reduce((iteratee: any, log: any) => {\r\n\t\t\treturn iteratee + parseInt(log.duration, 10);\r\n\t\t}, 0);\r\n\t}\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { Expense } from './expense.entity';\r\nimport { ExpenseService } from './expense.service';\r\nimport { ExpenseController } from './expense.controller';\r\nimport { CommandHandlers } from './commands/handlers';\r\nimport { CqrsModule } from '@nestjs/cqrs';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { EmployeeService } from '../employee/employee.service';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { OrganizationService } from '../organization/organization.service';\r\nimport { UserModule } from '../user/user.module';\r\nimport { UserService } from '../user/user.service';\r\nimport { User } from '../user/user.entity';\r\nimport { QueryHandlers } from './queries/handlers';\r\nimport { ExpenseCategory } from '../expense-categories/expense-category.entity';\r\nimport { EmployeeStatisticsService } from '../employee-statistics/employee-statistics.service';\r\nimport { EmployeeStatisticsModule } from '../employee-statistics';\r\nimport { IncomeService } from '../income/income.service';\r\nimport {\r\n\tEmployeeRecurringExpenseService,\r\n\tEmployeeRecurringExpense\r\n} from '../employee-recurring-expense';\r\nimport { OrganizationRecurringExpenseService } from '../organization-recurring-expense/organization-recurring-expense.service';\r\nimport { IncomeModule } from '../income/income.module';\r\nimport { Income } from '../income/income.entity';\r\nimport { OrganizationRecurringExpense } from '../organization-recurring-expense/organization-recurring-expense.entity';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\nimport { ExpenseMapService } from './expense.map.service';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tUserModule,\r\n\t\tEmployeeStatisticsModule,\r\n\t\tIncomeModule,\r\n\t\tTypeOrmModule.forFeature([\r\n\t\t\tExpense,\r\n\t\t\tEmployee,\r\n\t\t\tEmployeeRecurringExpense,\r\n\t\t\tOrganizationRecurringExpense,\r\n\t\t\tIncome,\r\n\t\t\tOrganization,\r\n\t\t\tUser,\r\n\t\t\tExpenseCategory\r\n\t\t]),\r\n\t\tCqrsModule,\r\n\t\tTenantModule\r\n\t],\r\n\tcontrollers: [ExpenseController],\r\n\tproviders: [\r\n\t\tExpenseService,\r\n\t\tEmployeeService,\r\n\t\tOrganizationService,\r\n\t\tEmployeeStatisticsService,\r\n\t\tUserService,\r\n\t\tIncomeService,\r\n\t\tEmployeeRecurringExpenseService,\r\n\t\tOrganizationRecurringExpenseService,\r\n\t\tExpenseMapService,\r\n\t\t...CommandHandlers,\r\n\t\t...QueryHandlers\r\n\t],\r\n\texports: [ExpenseService]\r\n})\r\nexport class ExpenseModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { Expense } from './expense.entity';\r\nimport * as faker from 'faker';\r\nimport {\r\n\tIOrganization,\r\n\tIEmployee,\r\n\tIExpenseCategory,\r\n\tIOrganizationVendor\r\n} from '@gauzy/models';\r\nimport * as fs from 'fs';\r\nimport * as csv from 'csv-parser';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { OrganizationVendor } from '../organization-vendors/organization-vendors.entity';\r\nimport { ExpenseCategory } from '../expense-categories/expense-category.entity';\r\nimport * as moment from 'moment';\r\nimport { environment as env } from '@env-api/environment';\r\n\r\nexport const createDefaultExpenses = async (\r\n\tconnection: Connection,\r\n\tdefaultData: {\r\n\t\torganizations: IOrganization[];\r\n\t\ttenant: Tenant;\r\n\t\temployees: IEmployee[];\r\n\t\tcategories: IExpenseCategory[] | void;\r\n\t\torganizationVendors: IOrganizationVendor[] | void;\r\n\t}\r\n): Promise<Expense[]> => {\r\n\tif (!defaultData.categories) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: Categories not found, default expenses would not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tif (!defaultData.organizationVendors) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: organizationVendors not found, default expenses would not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst expensesFromFile = [];\r\n\tlet defaultExpenses: Expense[] = [];\r\n\tlet filePath = './src/app/expense/expense-seed-data/expenses-data.csv';\r\n\r\n\ttry {\r\n\t\tfilePath = fs.existsSync(filePath)\r\n\t\t\t? filePath\r\n\t\t\t: `./apps/api/${filePath.slice(2)}`;\r\n\t} catch (error) {\r\n\t\tconsole.error('Cannot find income data csv');\r\n\t}\r\n\r\n\tfor (const organization of defaultData.organizations) {\r\n\t\tfs.createReadStream(filePath)\r\n\t\t\t.pipe(csv())\r\n\t\t\t.on('data', (data) => expensesFromFile.push(data))\r\n\t\t\t.on('end', async () => {\r\n\t\t\t\tdefaultExpenses = expensesFromFile.map((seedExpense) => {\r\n\t\t\t\t\tconst expense = new Expense();\r\n\t\t\t\t\tconst foundEmployee = defaultData.employees.find(\r\n\t\t\t\t\t\t(emp) => emp.user.email === seedExpense.email\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tconst foundCategory = (defaultData.categories || []).find(\r\n\t\t\t\t\t\t(category) => seedExpense.categoryName === category.name\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tconst foundVendor = (\r\n\t\t\t\t\t\tdefaultData.organizationVendors || []\r\n\t\t\t\t\t).find((vendor) => seedExpense.vendorName === vendor.name);\r\n\r\n\t\t\t\t\texpense.employee = foundEmployee;\r\n\t\t\t\t\texpense.organization = organization;\r\n\t\t\t\t\texpense.tenant = organization.tenant;\r\n\t\t\t\t\texpense.amount = Math.abs(seedExpense.amount);\r\n\t\t\t\t\texpense.vendor = foundVendor;\r\n\t\t\t\t\texpense.category = foundCategory;\r\n\t\t\t\t\texpense.currency =\r\n\t\t\t\t\t\tseedExpense.currency || env.defaultCurrency;\r\n\t\t\t\t\texpense.valueDate = faker.date.between(\r\n\t\t\t\t\t\tnew Date(),\r\n\t\t\t\t\t\tmoment(new Date()).add(10, 'days').toDate()\r\n\t\t\t\t\t);\r\n\t\t\t\t\texpense.notes = seedExpense.notes;\r\n\r\n\t\t\t\t\treturn expense;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tawait insertExpense(connection, defaultExpenses);\r\n\t\t\t});\r\n\t}\r\n\r\n\treturn expensesFromFile;\r\n};\r\n\r\nexport const createRandomExpenses = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantEmployeeMap: Map<Tenant, IEmployee[]>,\r\n\torganizationVendorsMap: Map<IOrganization, OrganizationVendor[]> | void,\r\n\tcategoriesMap: Map<IOrganization, ExpenseCategory[]> | void\r\n): Promise<void> => {\r\n\tif (!categoriesMap) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: categoriesMap not found, RandomExpenses will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tif (!organizationVendorsMap) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: organizationVendorsMap not found, RandomExpenses will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst notesArray = [\r\n\t\t'Windows 10',\r\n\t\t'MultiSport Card',\r\n\t\t'Angular Masterclass',\r\n\t\t'Drive',\r\n\t\t'Rent for September'\r\n\t];\r\n\r\n\tfor (const tenant of tenants) {\r\n\t\tconst employees = tenantEmployeeMap.get(tenant);\r\n\t\tfor (const employee of employees) {\r\n\t\t\tconst organizationVendors = organizationVendorsMap.get(\r\n\t\t\t\temployee.organization\r\n\t\t\t);\r\n\t\t\tconst categories = categoriesMap.get(employee.organization);\r\n\t\t\tconst randomExpenses: Expense[] = [];\r\n\r\n\t\t\tfor (let index = 0; index < 100; index++) {\r\n\t\t\t\tconst expense = new Expense();\r\n\r\n\t\t\t\tconst currentIndex = faker.random.number({\r\n\t\t\t\t\tmin: 0,\r\n\t\t\t\t\tmax: index % 5\r\n\t\t\t\t});\r\n\r\n\t\t\t\texpense.organization = employee.organization;\r\n\t\t\t\texpense.tenant = tenant;\r\n\t\t\t\texpense.employee = employee;\r\n\t\t\t\texpense.amount = faker.random.number({ min: 10, max: 999 });\r\n\t\t\t\texpense.vendor =\r\n\t\t\t\t\torganizationVendors[\r\n\t\t\t\t\t\tcurrentIndex % organizationVendors.length\r\n\t\t\t\t\t];\r\n\t\t\t\texpense.category = categories[currentIndex % categories.length];\r\n\t\t\t\texpense.currency =\r\n\t\t\t\t\temployee.organization.currency || env.defaultCurrency;\r\n\t\t\t\texpense.valueDate = faker.date.between(\r\n\t\t\t\t\tnew Date(),\r\n\t\t\t\t\tmoment(new Date()).add(10, 'days').toDate()\r\n\t\t\t\t);\r\n\t\t\t\texpense.notes = notesArray[currentIndex];\r\n\r\n\t\t\t\trandomExpenses.push(expense);\r\n\t\t\t}\r\n\t\t\tawait insertExpense(connection, randomExpenses);\r\n\t\t}\r\n\t}\r\n\treturn;\r\n};\r\n\r\nconst insertExpense = async (\r\n\tconnection: Connection,\r\n\texpenses: Expense[]\r\n): Promise<void> => {\r\n\tawait connection.manager.save(expenses);\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository, FindManyOptions, Between } from 'typeorm';\r\nimport { Expense } from './expense.entity';\r\nimport { IPagination } from '../core';\r\nimport { TenantAwareCrudService } from '../core/crud/tenant-aware-crud.service';\r\nimport { RequestContext } from '../core/context';\r\nimport { IGetExpenseInput, PermissionsEnum } from '@gauzy/models';\r\nimport * as moment from 'moment';\r\nimport { chain } from 'underscore';\r\n\r\n@Injectable()\r\nexport class ExpenseService extends TenantAwareCrudService<Expense> {\r\n\tconstructor(\r\n\t\t@InjectRepository(Expense)\r\n\t\tprivate readonly expenseRepository: Repository<Expense>\r\n\t) {\r\n\t\tsuper(expenseRepository);\r\n\t}\r\n\r\n\tpublic async findAllExpenses(\r\n\t\tfilter?: FindManyOptions<Expense>,\r\n\t\tfilterDate?: string\r\n\t): Promise<IPagination<Expense>> {\r\n\t\tif (filterDate) {\r\n\t\t\tconst startOfMonth = moment(filterDate)\r\n\t\t\t\t.startOf('month')\r\n\t\t\t\t.format('YYYY-MM-DD hh:mm:ss');\r\n\t\t\tconst endOfMonth = moment(filterDate)\r\n\t\t\t\t.endOf('month')\r\n\t\t\t\t.format('YYYY-MM-DD hh:mm:ss');\r\n\t\t\treturn filter\r\n\t\t\t\t? await this.findAll({\r\n\t\t\t\t\t\twhere: {\r\n\t\t\t\t\t\t\tvalueDate: Between(startOfMonth, endOfMonth),\r\n\t\t\t\t\t\t\t...(filter.where as Object)\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\trelations: filter.relations\r\n\t\t\t\t  })\r\n\t\t\t\t: await this.findAll({\r\n\t\t\t\t\t\twhere: {\r\n\t\t\t\t\t\t\tvalueDate: Between(startOfMonth, endOfMonth)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t  });\r\n\t\t}\r\n\t\treturn await this.findAll(filter || {});\r\n\t}\r\n\r\n\tpublic countStatistic(data: number[]) {\r\n\t\treturn data.filter(Number).reduce((a, b) => a + b, 0) !== 0\r\n\t\t\t? data.filter(Number).reduce((a, b) => a + b, 0) /\r\n\t\t\t\t\tdata.filter(Number).length\r\n\t\t\t: 0;\r\n\t}\r\n\r\n\tasync getExpanse(request: IGetExpenseInput) {\r\n\t\tconst query = this.filterQuery(request);\r\n\t\tquery.orderBy(`\"${query.alias}\".\"valueDate\"`, 'ASC');\r\n\r\n\t\tif (\r\n\t\t\tRequestContext.hasPermission(\r\n\t\t\t\tPermissionsEnum.CHANGE_SELECTED_EMPLOYEE\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\tquery.leftJoinAndSelect(\r\n\t\t\t\t`${query.alias}.employee`,\r\n\t\t\t\t'activityEmployee'\r\n\t\t\t);\r\n\t\t\tquery.leftJoinAndSelect(\r\n\t\t\t\t`activityEmployee.user`,\r\n\t\t\t\t'activityUser',\r\n\t\t\t\t'\"employee\".\"userId\" = activityUser.id'\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tquery.leftJoinAndSelect(`${query.alias}.category`, 'category');\r\n\r\n\t\treturn await query.getMany();\r\n\t}\r\n\r\n\tasync getDailyReportChartData(request: IGetExpenseInput) {\r\n\t\tconst query = this.filterQuery(request);\r\n\t\tquery.orderBy(`\"${query.alias}\".\"valueDate\"`, 'ASC');\r\n\r\n\t\tlet dayList = [];\r\n\t\tconst range = {};\r\n\t\tlet i = 0;\r\n\t\tconst start = moment(request.startDate);\r\n\t\twhile (start.isSameOrBefore(request.endDate) && i < 31) {\r\n\t\t\tconst date = start.format('YYYY-MM-DD');\r\n\t\t\trange[date] = null;\r\n\t\t\tstart.add(1, 'day');\r\n\t\t\ti++;\r\n\t\t}\r\n\t\tdayList = Object.keys(range);\r\n\t\tconst expenses = await query.getMany();\r\n\r\n\t\tconst byDate = chain(expenses)\r\n\t\t\t.groupBy((expense) =>\r\n\t\t\t\tmoment(expense.valueDate).format('YYYY-MM-DD')\r\n\t\t\t)\r\n\t\t\t.mapObject((expenses: Expense[], date) => {\r\n\t\t\t\tconst sum = expenses.reduce((iteratee: any, expense: any) => {\r\n\t\t\t\t\treturn iteratee + parseFloat(expense.amount);\r\n\t\t\t\t}, 0);\r\n\t\t\t\treturn {\r\n\t\t\t\t\tdate,\r\n\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\texpanse: sum.toFixed(1)\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t})\r\n\t\t\t.value();\r\n\r\n\t\tconst dates = dayList.map((date) => {\r\n\t\t\tif (byDate[date]) {\r\n\t\t\t\treturn byDate[date];\r\n\t\t\t} else {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tdate: date,\r\n\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\texpanse: 0\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn dates;\r\n\t}\r\n\r\n\tprivate filterQuery(request: IGetExpenseInput) {\r\n\t\tlet employeeIds: string[];\r\n\r\n\t\tconst query = this.expenseRepository.createQueryBuilder();\r\n\t\tif (request && request.limit > 0) {\r\n\t\t\tquery.take(request.limit);\r\n\t\t\tquery.skip((request.page || 0) * request.limit);\r\n\t\t}\r\n\t\tif (\r\n\t\t\tRequestContext.hasPermission(\r\n\t\t\t\tPermissionsEnum.CHANGE_SELECTED_EMPLOYEE\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\tif (request.employeeIds) {\r\n\t\t\t\temployeeIds = request.employeeIds;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst user = RequestContext.currentUser();\r\n\t\t\temployeeIds = [user.employeeId];\r\n\t\t}\r\n\r\n\t\tquery.innerJoin(`${query.alias}.employee`, 'employee');\r\n\t\tquery.where((qb) => {\r\n\t\t\tif (request.startDate && request.endDate) {\r\n\t\t\t\tconst startDate = moment.utc(request.startDate).toDate();\r\n\t\t\t\tconst endDate = moment.utc(request.endDate).toDate();\r\n\t\t\t\tqb.andWhere(\r\n\t\t\t\t\t`\"${query.alias}\".\"valueDate\" Between :startDate AND :endDate`,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tstartDate,\r\n\t\t\t\t\t\tendDate\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (employeeIds) {\r\n\t\t\t\tqb.andWhere(\r\n\t\t\t\t\t`\"${query.alias}\".\"employeeId\" IN (:...employeeId)`,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\temployeeId: employeeIds\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tif (request.projectIds) {\r\n\t\t\t\tqb.andWhere(`\"${query.alias}\".\"projectId\" IN (:...projectId)`, {\r\n\t\t\t\t\tprojectId: request.projectIds\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (request.organizationId) {\r\n\t\t\t\tqb.andWhere(\r\n\t\t\t\t\t`\"${query.alias}\".\"organizationId\" = :organizationId`,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\torganizationId: request.organizationId\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tqb.andWhere(`\"${query.alias}\".\"tenantId\" = :tenantId`, {\r\n\t\t\t\ttenantId: RequestContext.currentTenantId()\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\treturn query;\r\n\t}\r\n}\r\n","import { ISplitExpenseFindInput } from '@gauzy/models';\r\nimport { IQuery } from '@nestjs/cqrs';\r\n\r\nexport class FindSplitExpenseQuery implements IQuery {\r\n\tstatic readonly type = '[Expense] Find Split Expense';\r\n\r\n\tconstructor(public readonly findInput: ISplitExpenseFindInput) {}\r\n}\r\n","import { ISplitExpenseOutput } from '@gauzy/models';\r\nimport { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\r\nimport { IPagination } from '../../../core';\r\nimport { EmployeeService } from '../../../employee/employee.service';\r\nimport { OrganizationService } from '../../../organization/organization.service';\r\nimport { ExpenseService } from '../../expense.service';\r\nimport { FindSplitExpenseQuery } from '../expense.find-split-expense.query';\r\n\r\n/**\r\n * Finds the split expense for a given organization.\r\n *\r\n * 1. Find all expenses for organization which have splitExpense = true & all for the employee\r\n * 2. Find all employees of the organization (TODO: No. of employees CURRENTLY in the organization?)\r\n * 3. Divide the value of the expense found in 1 to the no. of employees found in 2 to 'split' the expense equally for all employees.\r\n */\r\n@QueryHandler(FindSplitExpenseQuery)\r\nexport class FindSplitExpenseHandler\r\n\timplements IQueryHandler<FindSplitExpenseQuery> {\r\n\tconstructor(\r\n\t\tprivate readonly expenseService: ExpenseService,\r\n\t\tprivate readonly employeeService: EmployeeService,\r\n\t\tprivate readonly organizationService: OrganizationService\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tquery: FindSplitExpenseQuery\r\n\t): Promise<IPagination<ISplitExpenseOutput>> {\r\n\t\tconst {\r\n\t\t\tfindInput: { relations, filterDate, employeeId }\r\n\t\t} = query;\r\n\r\n\t\tconst employee = await this.employeeService.findOne({\r\n\t\t\twhere: {\r\n\t\t\t\tid: employeeId\r\n\t\t\t},\r\n\t\t\trelations: ['organization']\r\n\t\t});\r\n\r\n\t\t//1. Find all expenses for organization which have splitExpense = true & all for the employee\r\n\t\tconst { items, total } = await this.expenseService.findAllExpenses(\r\n\t\t\t{\r\n\t\t\t\twhere: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\torganization: employee.organization,\r\n\t\t\t\t\t\tsplitExpense: true\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\temployee: {\r\n\t\t\t\t\t\t\tid: employeeId\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t\trelations\r\n\t\t\t},\r\n\t\t\tfilterDate\r\n\t\t);\r\n\r\n\t\t//2. Find all employees of the organization\r\n\t\tconst orgEmployees = await this.employeeService.findAll({\r\n\t\t\twhere: {\r\n\t\t\t\torganization: employee.organization\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t//3. Divide the value of the expense found in 1 to the no. of employees found in 2.\r\n\t\tconst splitItems = items.map((e) =>\r\n\t\t\te.splitExpense\r\n\t\t\t\t? {\r\n\t\t\t\t\t\t...e,\r\n\t\t\t\t\t\tamount: +(\r\n\t\t\t\t\t\t\te.amount /\r\n\t\t\t\t\t\t\t(orgEmployees.total !== 0 ? orgEmployees.total : 1)\r\n\t\t\t\t\t\t).toFixed(2),\r\n\t\t\t\t\t\toriginalValue: +e.amount,\r\n\t\t\t\t\t\temployeeCount: orgEmployees.total\r\n\t\t\t\t  }\r\n\t\t\t\t: e\r\n\t\t);\r\n\r\n\t\treturn { items: splitItems, total };\r\n\t}\r\n}\r\n","import { FindSplitExpenseHandler } from './expense.find-split-expense.handler';\r\n\r\nexport const QueryHandlers = [FindSplitExpenseHandler];\r\n","import {\r\n\tController,\r\n\tHttpStatus,\r\n\tGet,\r\n\tRes,\r\n\tUseGuards,\r\n\tQuery\r\n} from '@nestjs/common';\r\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport { ExportAllService } from './export-all.service';\r\nimport { OnDestroy } from '@angular/core';\r\nimport { AuthGuard } from '@nestjs/passport';\r\n\r\n@ApiTags('Download')\r\n@UseGuards(AuthGuard('jwt'))\r\n@Controller()\r\nexport class ExportAllController implements OnDestroy {\r\n\tconstructor(private readonly exportService: ExportAllService) {}\r\n\r\n\t@ApiTags('Download')\r\n\t@ApiOperation({ summary: 'Find all exports.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found tables'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get()\r\n\tasync exportAll(@Query('data') data: string, @Res() res) {\r\n\t\tconst { findInput = null } = JSON.parse(data);\r\n\t\tawait this.exportService.createFolders();\r\n\t\tawait this.exportService.exportTables(findInput);\r\n\t\tawait this.exportService.archiveAndDownload();\r\n\t\tawait this.exportService.downloadToUser(res);\r\n\t\tawait this.exportService.deleteCsvFiles();\r\n\t\tthis.exportService.deleteArchive();\r\n\t}\r\n\t@Get('template')\r\n\tasync downloadTemplate(@Res() res) {\r\n\t\tawait this.exportService.downloadTemplate(res);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find exports by name' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found specific tables'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get('filter')\r\n\tasync exportByName(@Query('data') data: string, @Res() res): Promise<any> {\r\n\t\tconst {\r\n\t\t\tentities: { names },\r\n\t\t\tfindInput = null\r\n\t\t} = JSON.parse(data);\r\n\r\n\t\tawait this.exportService.createFolders();\r\n\t\tawait this.exportService.exportSpecificTables(names, findInput);\r\n\t\tawait this.exportService.archiveAndDownload();\r\n\t\tawait this.exportService.downloadToUser(res);\r\n\t\tawait this.exportService.deleteCsvFiles();\r\n\t\tthis.exportService.deleteArchive();\r\n\t}\r\n\r\n\tngOnDestroy() {}\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { CqrsModule } from '@nestjs/cqrs';\r\nimport { ExportAllController } from './export-all.controller';\r\nimport { ExportAllService } from './export-all.service';\r\nimport { CountryService, Country } from '../country';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { User } from '../user/user.entity';\r\nimport { UserService } from '../user/user.service';\r\nimport { UserOrganizationService } from '../user-organization/user-organization.services';\r\nimport { UserOrganization } from '../user-organization/user-organization.entity';\r\nimport { Email } from '../email/email.entity';\r\nimport { EmailService } from '../email/email.service';\r\nimport { EmailTemplate } from '../email-template/email-template.entity';\r\nimport { EmailTemplateService } from '../email-template/email-template.service';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { EmployeeService } from '../employee/employee.service';\r\nimport {\r\n\tEmployeeRecurringExpenseService,\r\n\tEmployeeRecurringExpense\r\n} from '../employee-recurring-expense';\r\nimport { EmployeeSettingService, EmployeeSetting } from '../employee-setting';\r\nimport {\r\n\tEquipmentSharingService,\r\n\tEquipmentSharing\r\n} from '../equipment-sharing';\r\nimport { Expense } from '../expense/expense.entity';\r\nimport { ExpenseService } from '../expense/expense.service';\r\nimport { ExpenseCategory } from '../expense-categories/expense-category.entity';\r\nimport { ExpenseCategoriesService } from '../expense-categories/expense-categories.service';\r\nimport { IncomeService } from '../income/income.service';\r\nimport { Income } from '../income/income.entity';\r\nimport { InviteService } from '../invite/invite.service';\r\nimport { Invite } from '../invite/invite.entity';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { OrganizationService } from '../organization/organization.service';\r\nimport { OrganizationProject } from '../organization-projects/organization-projects.entity';\r\nimport { OrganizationProjectsService } from '../organization-projects/organization-projects.service';\r\nimport { OrganizationDepartment } from '../organization-department/organization-department.entity';\r\nimport { OrganizationDepartmentService } from '../organization-department/organization-department.service';\r\nimport { Role } from '../role/role.entity';\r\nimport { RoleService } from '../role/role.service';\r\nimport { OrganizationContact } from '../organization-contact/organization-contact.entity';\r\nimport { InvoiceService } from '../invoice/invoice.service';\r\nimport { Invoice } from '../invoice/invoice.entity';\r\nimport { InvoiceItemService } from '../invoice-item/invoice-item.service';\r\nimport { InvoiceItem } from '../invoice-item/invoice-item.entity';\r\nimport { EmployeeLevelService } from '../organization_employee-level/organization-employee-level.service';\r\nimport { EmployeeLevel } from '../organization_employee-level/organization-employee-level.entity';\r\nimport { OrganizationContactService } from '../organization-contact/organization-contact.service';\r\nimport { OrganizationEmploymentType } from '../organization-employment-type/organization-employment-type.entity';\r\nimport { OrganizationEmploymentTypeService } from '../organization-employment-type/organization-employment-type.service';\r\nimport { OrganizationPositions } from '../organization-positions/organization-positions.entity';\r\nimport { OrganizationPositionsService } from '../organization-positions/organization-positions.service';\r\nimport { OrganizationRecurringExpense } from '../organization-recurring-expense/organization-recurring-expense.entity';\r\nimport { OrganizationRecurringExpenseService } from '../organization-recurring-expense/organization-recurring-expense.service';\r\nimport { OrganizationTeam } from '../organization-team/organization-team.entity';\r\nimport { OrganizationTeamService } from '../organization-team/organization-team.service';\r\nimport { OrganizationVendor } from '../organization-vendors/organization-vendors.entity';\r\nimport { OrganizationVendorsService } from '../organization-vendors/organization-vendors.service';\r\nimport { Proposal } from '../proposal/proposal.entity';\r\nimport { ProposalService } from '../proposal/proposal.service';\r\nimport { RolePermissions } from '../role-permissions/role-permissions.entity';\r\nimport { RolePermissionsService } from '../role-permissions/role-permissions.service';\r\nimport { Tag } from '../tags/tag.entity';\r\nimport { TagService } from '../tags/tag.service';\r\nimport { Task } from '../tasks/task.entity';\r\nimport { TaskService } from '../tasks/task.service';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { TenantService } from '../tenant/tenant.service';\r\nimport { TimeOffPolicy } from '../time-off-policy/time-off-policy.entity';\r\nimport { TimeOffPolicyService } from '../time-off-policy/time-off-policy.service';\r\nimport { Timesheet } from '../timesheet/timesheet.entity';\r\nimport { TimeSlot } from '../timesheet/time-slot.entity';\r\nimport { Activity } from '../timesheet/activity.entity';\r\nimport { Screenshot } from '../timesheet/screenshot.entity';\r\nimport { TimeLog } from '../timesheet/time-log.entity';\r\nimport { TimeSlotMinute } from '../timesheet/time-slot-minute.entity';\r\nimport { TimeSheetService } from '../timesheet/timesheet/timesheet.service';\r\nimport { ActivityService } from '../timesheet/activity/activity.service';\r\nimport { ScreenshotService } from '../timesheet/screenshot/screenshot.service';\r\nimport { TimeSlotService } from '../timesheet/time-slot/time-slot.service';\r\nimport { TimeLogService } from '../timesheet/time-log/time-log.service';\r\nimport { AppointmentEmployeesService } from '../appointment-employees/appointment-employees.service';\r\nimport { AppointmentEmployee } from '../appointment-employees/appointment-employees.entity';\r\nimport { ApprovalPolicyService } from '../approval-policy/approval-policy.service';\r\nimport { ApprovalPolicy } from '../approval-policy/approval-policy.entity';\r\nimport { CandidateService } from '../candidate/candidate.service';\r\nimport { Candidate } from '../candidate/candidate.entity';\r\nimport { OrganizationTeamEmployeeService } from '../organization-team-employee/organization-team-employee.service';\r\nimport { OrganizationTeamEmployee } from '../organization-team-employee/organization-team-employee.entity';\r\nimport { Equipment } from '../equipment/equipment.entity';\r\nimport { EquipmentService } from '../equipment/equipment.service';\r\nimport { EstimateEmailService } from '../estimate-email/estimate-email.service';\r\nimport { EstimateEmail } from '../estimate-email/estimate-email.entity';\r\nimport { Contact } from '../contact/contact.entity';\r\nimport { ContactService } from '../contact/contact.service';\r\nimport { RequestApprovalTeam } from '../request-approval-team/request-approval-team.entity';\r\nimport { RequestApproval } from '../request-approval/request-approval.entity';\r\nimport { RequestApprovalEmployee } from '../request-approval-employee/request-approval-employee.entity';\r\nimport { OrganizationSprint } from '../organization-sprint/organization-sprint.entity';\r\nimport { OrganizationSprintService } from '../organization-sprint/organization-sprint.service';\r\nimport { AvailabilitySlot } from '../availability-slots/availability-slots.entity';\r\nimport { CandidateDocument } from '../candidate-documents/candidate-documents.entity';\r\nimport { CandidateExperience } from '../candidate-experience/candidate-experience.entity';\r\nimport { CandidateInterview } from '../candidate-interview/candidate-interview.entity';\r\nimport { CandidateInterviewers } from '../candidate-interviewers/candidate-interviewers.entity';\r\nimport { CandidateTechnologies } from '../candidate-technologies/candidate-technologies.entity';\r\nimport { CandidateCriterionsRating } from '../candidate-criterions-rating/candidate-criterion-rating.entity';\r\nimport { CandidateEducation } from '../candidate-education/candidate-education.entity';\r\nimport { CandidateFeedback } from '../candidate-feedbacks/candidate-feedbacks.entity';\r\nimport { CandidatePersonalQualities } from '../candidate-personal-qualities/candidate-personal-qualities.entity';\r\nimport { CandidateSkill } from '../candidate-skill/candidate-skill.entity';\r\nimport { CandidateSource } from '../candidate-source/candidate-source.entity';\r\nimport { Deal } from '../deal/deal.entity';\r\nimport {\r\n\tEmployeeAppointment,\r\n\tEmployeeAppointmentService\r\n} from '../employee-appointment';\r\nimport { EventType } from '../event-types/event-type.entity';\r\nimport { GoalKPI } from '../goal-kpi/goal-kpi.entity';\r\nimport { GoalTimeFrame } from '../goal-time-frame/goal-time-frame.entity';\r\nimport { Goal } from '../goal/goal.entity';\r\nimport { HelpCenterArticle } from '../help-center-article/help-center-article.entity';\r\nimport { HelpCenterAuthor } from '../help-center-author/help-center-author.entity';\r\nimport { HelpCenter } from '../help-center/help-center.entity';\r\nimport { IntegrationEntitySettingTiedEntity } from '../integration-entity-setting-tied-entity/integration-entity-setting-tied-entity.entity';\r\nimport { Integration } from '../integration/integration.entity';\r\nimport { IntegrationEntitySetting } from '../integration-entity-setting/integration-entity-setting.entity';\r\nimport { IntegrationMap } from '../integration-map/integration-map.entity';\r\nimport { IntegrationTenant } from '../integration-tenant/integration-tenant.entity';\r\nimport { IntegrationSetting } from '../integration-setting/integration-setting.entity';\r\nimport { KeyResultUpdate } from '../keyresult-update/keyresult-update.entity';\r\nimport { KeyResult } from '../keyresult/keyresult.entity';\r\nimport { Language } from '../language/language.entity';\r\nimport { OrganizationAwards } from '../organization-awards/organization-awards.entity';\r\nimport { OrganizationLanguages } from '../organization-languages/organization-languages.entity';\r\nimport { Payment } from '../payment/payment.entity';\r\nimport { Pipeline } from '../pipeline/pipeline.entity';\r\nimport { Product } from '../product/product.entity';\r\nimport { Skill } from '../skills/skill.entity';\r\nimport { PipelineStage } from '../pipeline-stage/pipeline-stage.entity';\r\nimport { TimeOffRequest } from '../time-off-request/time-off-request.entity';\r\nimport { UpworkService } from '../upwork/upwork.service';\r\nimport { RequestApprovalService } from '../request-approval/request-approval.service';\r\nimport { AvailabilitySlotsService } from '../availability-slots/availability-slots.service';\r\nimport { CandidateCriterionsRatingService } from '../candidate-criterions-rating/candidate-criterion-rating.service';\r\nimport { CandidateDocumentsService } from '../candidate-documents/candidate-documents.service';\r\nimport { CandidateExperienceService } from '../candidate-experience/candidate-experience.service';\r\nimport { CandidateFeedbacksService } from '../candidate-feedbacks/candidate-feedbacks.service';\r\nimport { CandidateInterviewService } from '../candidate-interview/candidate-interview.service';\r\nimport { CandidateEducationService } from '../candidate-education/candidate-education.service';\r\nimport { CandidateInterviewersService } from '../candidate-interviewers/candidate-interviewers.service';\r\nimport { CandidatePersonalQualitiesService } from '../candidate-personal-qualities/candidate-personal-qualities.service';\r\nimport { CandidateSkillService } from '../candidate-skill/candidate-skill.service';\r\nimport { CandidateSourceService } from '../candidate-source/candidate-source.service';\r\nimport { CandidateTechnologiesService } from '../candidate-technologies/candidate-technologies.service';\r\nimport { DealService } from '../deal/deal.service';\r\nimport { EmployeeStatisticsService } from '../employee-statistics';\r\nimport { GoalService } from '../goal/goal.service';\r\nimport { GoalKpiService } from '../goal-kpi/goal-kpi.service';\r\nimport { GoalTimeFrameService } from '../goal-time-frame/goal-time-frame.service';\r\nimport { EventTypeService } from '../event-types/event-type.service';\r\nimport { HelpCenterService } from '../help-center/help-center.service';\r\nimport { HelpCenterArticleService } from '../help-center-article/help-center-article.service';\r\nimport { HelpCenterAuthorService } from '../help-center-author/help-center-author.service';\r\nimport { TimerService } from '../timesheet/timer/timer.service';\r\nimport { StageService } from '../pipeline-stage/pipeline-stage.service';\r\nimport { SkillService } from '../skills/skill.service';\r\nimport { TimeOffRequestService } from '../time-off-request/time-off-request.service';\r\nimport { PipelineService } from '../pipeline/pipeline.service';\r\nimport { PaymentService } from '../payment/payment.service';\r\nimport { ProductService } from '../product/product.service';\r\nimport { ProductOption } from '../product-option/product-option.entity';\r\nimport { ProductVariantSettings } from '../product-settings/product-settings.entity';\r\nimport { ProductType } from '../product-type/product-type.entity';\r\nimport { ProductVariant } from '../product-variant/product-variant.entity';\r\nimport { ProductVariantPrice } from '../product-variant-price/product-variant-price.entity';\r\nimport { ProductTypeService } from '../product-type/product-type.service';\r\nimport { ProductVariantSettingService } from '../product-settings/product-settings.service';\r\nimport { ProductOptionService } from '../product-option/product-option.service';\r\nimport { ProductVariantService } from '../product-variant/product-variant.service';\r\nimport { ProductVariantPriceService } from '../product-variant-price/product-variant-price.service';\r\nimport { OrganizationAwardsService } from '../organization-awards/organization-awards.service';\r\nimport { OrganizationLanguagesService } from '../organization-languages/organization-languages.service';\r\nimport { LanguageService } from '../language/language.service';\r\nimport { IntegrationService } from '../integration/integration.service';\r\nimport { IntegrationMapService } from '../integration-map/integration-map.service';\r\nimport { IntegrationSettingService } from '../integration-setting/integration-setting.service';\r\nimport { IntegrationEntitySettingService } from '../integration-entity-setting/integration-entity-setting.service';\r\nimport { IntegrationEntitySettingTiedEntityService } from '../integration-entity-setting-tied-entity/integration-entity-setting-tied-entity.service';\r\nimport { IntegrationTenantService } from '../integration-tenant/integration-tenant.service';\r\nimport { KeyResultService } from '../keyresult/keyresult.service';\r\nimport { KeyResultUpdateService } from '../keyresult-update/keyresult-update.service';\r\nimport { ProductCategory } from '../product-category/product-category.entity';\r\nimport { ProductCategoryService } from '../product-category/product-category.service';\r\nimport { OrganizationDocuments } from '../organization-documents/organization-documents.entity';\r\nimport { OrganizationDocumentsService } from '../organization-documents/organization-documents.service';\r\nimport {\r\n\tUpworkReportService,\r\n\tUpworkJobService,\r\n\tUpworkOffersService\r\n} from '@gauzy/integration-upwork';\r\nimport { CustomSmtp } from '../custom-smtp/custom-smtp.entity';\r\nimport { CustomSmtpService } from '../custom-smtp/custom-smtp.service';\r\nimport { Currency, CurrencyService } from '../currency';\r\nimport { EmployeeAward } from '../employee-award/employee-award.entity';\r\nimport { EmployeeProposalTemplate } from '../employee-proposal-template/employee-proposal-template.entity';\r\nimport { EmployeeUpworkJobsSearchCriterion } from '../employee-job-preset/employee-upwork-jobs-search-criterion.entity';\r\nimport { EquipmentSharingPolicy } from '../equipment-sharing-policy/equipment-sharing-policy.entity';\r\nimport { GoalGeneralSetting } from '../goal-general-setting/goal-general-setting.entity';\r\nimport { GoalTemplate } from '../goal-template/goal-template.entity';\r\nimport { GoalKPITemplate } from '../goal-kpi-template/goal-kpi-template.entity';\r\nimport { InvoiceEstimateHistory } from '../invoice-estimate-history/invoice-estimate-history.entity';\r\nimport { JobPreset } from '../employee-job-preset/job-preset.entity';\r\nimport { JobSearchOccupation } from '../employee-job-preset/job-search-occupation/job-search-occupation.entity';\r\nimport { JobSearchCategory } from '../employee-job-preset/job-search-category/job-search-category.entity';\r\nimport { JobPresetUpworkJobSearchCriterion } from '../employee-job-preset/job-preset-upwork-job-search-criterion.entity';\r\nimport { KeyResultTemplate } from '../keyresult-template/keyresult-template.entity';\r\nimport { Report } from '../reports/report.entity';\r\nimport { ReportCategory } from '../reports/report-category.entity';\r\nimport { ReportOrganization } from '../reports/report-organization.entity';\r\nimport { EmployeeAwardService } from '../employee-award/employee-award.service';\r\nimport { EmployeeProposalTemplateService } from '../employee-proposal-template/employee-proposal-template.service';\r\nimport { GoalTemplateService } from '../goal-template/goal-template.service';\r\nimport { GoalKpiTemplateService } from '../goal-kpi-template/goal-kpi-template.service';\r\nimport { InvoiceEstimateHistoryService } from '../invoice-estimate-history/invoice-estimate-history.service';\r\nimport { JobPresetService } from '../employee-job-preset/job-preset.service';\r\nimport { JobSearchOccupationService } from '../employee-job-preset/job-search-occupation/job-search-occupation.service';\r\nimport { JobSearchCategoryService } from '../employee-job-preset/job-search-category/job-search-category.service';\r\nimport { KeyresultTemplateService } from '../keyresult-template/keyresult-template.service';\r\nimport { ReportService } from '../reports/report.service';\r\nimport { ReportCategoryService } from '../reports/report-category.service';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tCqrsModule,\r\n\t\tTypeOrmModule.forFeature([\r\n\t\t\tActivity,\r\n\t\t\tAppointmentEmployee,\r\n\t\t\tApprovalPolicy,\r\n\t\t\tAvailabilitySlot,\r\n\r\n\t\t\tCandidate,\r\n\t\t\tCandidateCriterionsRating,\r\n\t\t\tCandidateDocument,\r\n\t\t\tCandidateEducation,\r\n\t\t\tCandidateExperience,\r\n\t\t\tCandidateFeedback,\r\n\t\t\tCandidateInterview,\r\n\t\t\tCandidateInterviewers,\r\n\t\t\tCandidatePersonalQualities,\r\n\t\t\tCandidateSkill,\r\n\t\t\tCandidateSource,\r\n\t\t\tCandidateTechnologies,\r\n\t\t\tContact,\r\n\t\t\tCountry,\r\n\t\t\tCurrency,\r\n\t\t\tCustomSmtp,\r\n\r\n\t\t\tDeal,\r\n\r\n\t\t\tEmail,\r\n\t\t\tEmailTemplate,\r\n\t\t\tEmployee,\r\n\t\t\tEmployeeAppointment,\r\n\t\t\tEmployeeAward,\r\n\t\t\tEmployeeLevel,\r\n\t\t\tEmployeeProposalTemplate,\r\n\t\t\tEmployeeRecurringExpense,\r\n\t\t\tEmployeeSetting,\r\n\t\t\tEmployeeUpworkJobsSearchCriterion,\r\n\t\t\tEquipment,\r\n\t\t\tEquipmentSharing,\r\n\t\t\tEquipmentSharingPolicy,\r\n\t\t\tEstimateEmail,\r\n\t\t\tEventType,\r\n\t\t\tExpense,\r\n\t\t\tExpenseCategory,\r\n\r\n\t\t\tGoal,\r\n\t\t\tGoalGeneralSetting,\r\n\t\t\tGoalKPI,\r\n\t\t\tGoalKPITemplate,\r\n\t\t\tGoalTemplate,\r\n\t\t\tGoalTimeFrame,\r\n\r\n\t\t\tHelpCenter,\r\n\t\t\tHelpCenterArticle,\r\n\t\t\tHelpCenterAuthor,\r\n\r\n\t\t\tIncome,\r\n\t\t\tIntegration,\r\n\t\t\tIntegrationEntitySetting,\r\n\t\t\tIntegrationEntitySettingTiedEntity,\r\n\t\t\tIntegrationMap,\r\n\t\t\tIntegrationSetting,\r\n\t\t\tIntegrationTenant,\r\n\t\t\tInvite,\r\n\t\t\tInvoice,\r\n\t\t\tInvoiceEstimateHistory,\r\n\t\t\tInvoiceItem,\r\n\r\n\t\t\tJobPreset,\r\n\t\t\tJobSearchOccupation,\r\n\t\t\tJobSearchCategory,\r\n\t\t\tJobPresetUpworkJobSearchCriterion,\r\n\r\n\t\t\tKeyResult,\r\n\t\t\tKeyResultTemplate,\r\n\t\t\tKeyResultUpdate,\r\n\r\n\t\t\tLanguage,\r\n\r\n\t\t\tOrganization,\r\n\t\t\tOrganizationAwards,\r\n\t\t\tOrganizationContact,\r\n\t\t\tOrganizationDepartment,\r\n\t\t\tOrganizationDocuments,\r\n\t\t\tOrganizationEmploymentType,\r\n\t\t\tOrganizationLanguages,\r\n\t\t\tOrganizationPositions,\r\n\t\t\tOrganizationProject,\r\n\t\t\tOrganizationRecurringExpense,\r\n\t\t\tOrganizationSprint,\r\n\t\t\tOrganizationTeam,\r\n\t\t\tOrganizationTeamEmployee,\r\n\t\t\tOrganizationVendor,\r\n\r\n\t\t\tPayment,\r\n\t\t\tPipeline,\r\n\t\t\tPipelineStage,\r\n\t\t\tProduct,\r\n\t\t\tProductCategory,\r\n\t\t\tProductOption,\r\n\t\t\tProductVariantSettings,\r\n\t\t\tProductType,\r\n\t\t\tProductVariant,\r\n\t\t\tProductVariantPrice,\r\n\t\t\tProposal,\r\n\r\n\t\t\tReport,\r\n\t\t\tReportCategory,\r\n\t\t\tReportOrganization,\r\n\t\t\tRequestApproval,\r\n\t\t\tRequestApprovalEmployee,\r\n\t\t\tRequestApprovalTeam,\r\n\t\t\tRole,\r\n\t\t\tRolePermissions,\r\n\r\n\t\t\tScreenshot,\r\n\t\t\tSkill,\r\n\r\n\t\t\tTag,\r\n\t\t\tTask,\r\n\t\t\tTenant,\r\n\t\t\tTimeOffPolicy,\r\n\t\t\tTimeOffRequest,\r\n\t\t\tTimesheet,\r\n\t\t\tTimeSlot,\r\n\t\t\tTimeLog,\r\n\t\t\tTimeSlotMinute,\r\n\r\n\t\t\tUser,\r\n\t\t\tUserOrganization\r\n\t\t])\r\n\t],\r\n\tcontrollers: [ExportAllController],\r\n\tproviders: [\r\n\t\tActivityService,\r\n\t\tAppointmentEmployeesService,\r\n\t\tApprovalPolicyService,\r\n\t\tAvailabilitySlotsService,\r\n\r\n\t\tCandidateService,\r\n\t\tCandidateCriterionsRatingService,\r\n\t\tCandidateDocumentsService,\r\n\t\tCandidateEducationService,\r\n\t\tCandidateExperienceService,\r\n\t\tCandidateFeedbacksService,\r\n\t\tCandidateInterviewService,\r\n\t\tCandidateInterviewersService,\r\n\t\tCandidatePersonalQualitiesService,\r\n\t\tCandidateSkillService,\r\n\t\tCandidateSourceService,\r\n\t\tCandidateTechnologiesService,\r\n\t\tContactService,\r\n\t\tCountryService,\r\n\t\tCurrencyService,\r\n\t\tCustomSmtpService,\r\n\r\n\t\tDealService,\r\n\r\n\t\tEmailService,\r\n\t\tEmailTemplateService,\r\n\t\tEmployeeService,\r\n\t\tEmployeeAwardService,\r\n\t\tEmployeeAppointmentService,\r\n\t\tEmployeeLevelService,\r\n\t\tEmployeeProposalTemplateService,\r\n\t\tEmployeeRecurringExpenseService,\r\n\t\tEmployeeSettingService,\r\n\t\tEmployeeStatisticsService,\r\n\t\tEquipmentService,\r\n\t\tEquipmentSharingService,\r\n\t\tEstimateEmailService,\r\n\t\tEventTypeService,\r\n\t\tExpenseService,\r\n\t\tExpenseCategoriesService,\r\n\t\tExportAllService,\r\n\r\n\t\tGoalService,\r\n\t\tGoalTemplateService,\r\n\t\tGoalKpiService,\r\n\t\tGoalKpiTemplateService,\r\n\t\tGoalTimeFrameService,\r\n\r\n\t\tHelpCenterService,\r\n\t\tHelpCenterArticleService,\r\n\t\tHelpCenterAuthorService,\r\n\r\n\t\tIncomeService,\r\n\t\tIntegrationService,\r\n\t\tIntegrationEntitySettingService,\r\n\t\tIntegrationEntitySettingTiedEntityService,\r\n\t\tIntegrationMapService,\r\n\t\tIntegrationSettingService,\r\n\t\tIntegrationTenantService,\r\n\t\tInviteService,\r\n\t\tInvoiceService,\r\n\t\tInvoiceItemService,\r\n\t\tInvoiceEstimateHistoryService,\r\n\r\n\t\tJobPresetService,\r\n\t\tJobSearchOccupationService,\r\n\t\tJobSearchCategoryService,\r\n\r\n\t\tKeyResultService,\r\n\t\tKeyresultTemplateService,\r\n\t\tKeyResultUpdateService,\r\n\r\n\t\tLanguageService,\r\n\r\n\t\tOrganizationAwardsService,\r\n\t\tOrganizationLanguagesService,\r\n\t\tOrganizationService,\r\n\t\tOrganizationContactService,\r\n\t\tOrganizationDepartmentService,\r\n\t\tOrganizationDocumentsService,\r\n\t\tOrganizationEmploymentTypeService,\r\n\t\tOrganizationPositionsService,\r\n\t\tOrganizationProjectsService,\r\n\t\tOrganizationRecurringExpenseService,\r\n\t\tOrganizationTeamService,\r\n\t\tOrganizationTeamEmployeeService,\r\n\t\tOrganizationSprintService,\r\n\t\tOrganizationVendorsService,\r\n\r\n\t\tPaymentService,\r\n\t\tPipelineService,\r\n\t\tProductService,\r\n\t\tProductCategoryService,\r\n\t\tProductTypeService,\r\n\t\tProductOptionService,\r\n\t\tProductVariantService,\r\n\t\tProductVariantSettingService,\r\n\t\tProductVariantPriceService,\r\n\t\tProposalService,\r\n\r\n\t\tReportService,\r\n\t\tReportCategoryService,\r\n\t\tRequestApprovalService,\r\n\t\tRoleService,\r\n\t\tRolePermissionsService,\r\n\r\n\t\tScreenshotService,\r\n\t\tStageService,\r\n\t\tSkillService,\r\n\r\n\t\tTagService,\r\n\t\tTaskService,\r\n\t\tTenantService,\r\n\t\tTimerService,\r\n\t\tTimeOffPolicyService,\r\n\t\tTimeOffRequestService,\r\n\t\tTimeSheetService,\r\n\t\tTimeLogService,\r\n\t\tTimeSlotService,\r\n\r\n\t\tUpworkJobService,\r\n\t\tUpworkOffersService,\r\n\t\tUpworkService,\r\n\t\tUpworkReportService,\r\n\t\tUserService,\r\n\t\tUserOrganizationService\r\n\t],\r\n\texports: [\r\n\t\tActivityService,\r\n\t\tAppointmentEmployeesService,\r\n\t\tApprovalPolicyService,\r\n\t\tAvailabilitySlotsService,\r\n\r\n\t\tCandidateService,\r\n\t\tCandidateCriterionsRatingService,\r\n\t\tCandidateDocumentsService,\r\n\t\tCandidateEducationService,\r\n\t\tCandidateExperienceService,\r\n\t\tCandidateFeedbacksService,\r\n\t\tCandidateInterviewService,\r\n\t\tCandidateInterviewersService,\r\n\t\tCandidatePersonalQualitiesService,\r\n\t\tCandidateSkillService,\r\n\t\tCandidateSourceService,\r\n\t\tCandidateTechnologiesService,\r\n\t\tContactService,\r\n\t\tCountryService,\r\n\t\tCurrencyService,\r\n\t\tCustomSmtpService,\r\n\r\n\t\tDealService,\r\n\r\n\t\tEmailService,\r\n\t\tEmailTemplateService,\r\n\t\tEmployeeService,\r\n\t\tEmployeeAppointmentService,\r\n\t\tEmployeeAwardService,\r\n\t\tEmployeeProposalTemplateService,\r\n\t\tEmployeeLevelService,\r\n\t\tEmployeeRecurringExpenseService,\r\n\t\tEmployeeSettingService,\r\n\t\tEmployeeStatisticsService,\r\n\t\tEquipmentService,\r\n\t\tEquipmentSharingService,\r\n\t\tEstimateEmailService,\r\n\t\tEventTypeService,\r\n\t\tExpenseService,\r\n\t\tExpenseCategoriesService,\r\n\t\tExportAllService,\r\n\r\n\t\tGoalService,\r\n\t\tGoalTemplateService,\r\n\t\tGoalKpiService,\r\n\t\tGoalKpiTemplateService,\r\n\t\tGoalTimeFrameService,\r\n\r\n\t\tHelpCenterService,\r\n\t\tHelpCenterArticleService,\r\n\t\tHelpCenterAuthorService,\r\n\r\n\t\tIncomeService,\r\n\t\tIntegrationService,\r\n\t\tIntegrationEntitySettingService,\r\n\t\tIntegrationEntitySettingTiedEntityService,\r\n\t\tIntegrationMapService,\r\n\t\tIntegrationSettingService,\r\n\t\tIntegrationTenantService,\r\n\t\tInviteService,\r\n\t\tInvoiceService,\r\n\t\tInvoiceItemService,\r\n\t\tInvoiceEstimateHistoryService,\r\n\r\n\t\tJobPresetService,\r\n\t\tJobSearchOccupationService,\r\n\t\tJobSearchCategoryService,\r\n\r\n\t\tKeyResultService,\r\n\t\tKeyresultTemplateService,\r\n\t\tKeyResultUpdateService,\r\n\r\n\t\tLanguageService,\r\n\r\n\t\tOrganizationService,\r\n\t\tOrganizationAwardsService,\r\n\t\tOrganizationLanguagesService,\r\n\t\tOrganizationContactService,\r\n\t\tOrganizationDepartmentService,\r\n\t\tOrganizationDocumentsService,\r\n\t\tOrganizationEmploymentTypeService,\r\n\t\tOrganizationPositionsService,\r\n\t\tOrganizationProjectsService,\r\n\t\tOrganizationRecurringExpenseService,\r\n\t\tOrganizationTeamService,\r\n\t\tOrganizationTeamEmployeeService,\r\n\t\tOrganizationSprintService,\r\n\t\tOrganizationVendorsService,\r\n\r\n\t\tPaymentService,\r\n\t\tPipelineService,\r\n\t\tProductService,\r\n\t\tProductCategoryService,\r\n\t\tProductTypeService,\r\n\t\tProductOptionService,\r\n\t\tProductVariantService,\r\n\t\tProductVariantSettingService,\r\n\t\tProductVariantPriceService,\r\n\t\tProposalService,\r\n\r\n\t\tReportService,\r\n\t\tReportCategoryService,\r\n\t\tRoleService,\r\n\t\tRolePermissionsService,\r\n\t\tRequestApprovalService,\r\n\r\n\t\tStageService,\r\n\t\tSkillService,\r\n\t\tScreenshotService,\r\n\r\n\t\tTagService,\r\n\t\tTaskService,\r\n\t\tTenantService,\r\n\t\tTimerService,\r\n\t\tTimeOffPolicyService,\r\n\t\tTimeOffRequestService,\r\n\t\tTimeSheetService,\r\n\t\tTimeLogService,\r\n\t\tTimeSlotService,\r\n\r\n\t\tUpworkJobService,\r\n\t\tUpworkOffersService,\r\n\t\tUpworkService,\r\n\t\tUpworkReportService,\r\n\t\tUserService,\r\n\t\tUserOrganizationService\r\n\t]\r\n})\r\nexport class ExportAllModule {}\r\n","import { Injectable } from '@nestjs/common';\r\nimport * as fs from 'fs';\r\nimport * as fse from 'fs-extra';\r\nimport * as archiver from 'archiver';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { BehaviorSubject, Subject } from 'rxjs';\r\nimport { CountryService } from '../country';\r\nimport * as csv from 'csv-writer';\r\nimport { UserService } from '../user/user.service';\r\nimport { UserOrganizationService } from '../user-organization/user-organization.services';\r\nimport { EmailService } from '../email';\r\nimport { EmailTemplateService } from '../email-template';\r\nimport { EmployeeService } from '../employee/employee.service';\r\nimport { OnDestroy } from '@angular/core';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { EmployeeRecurringExpenseService } from '../employee-recurring-expense';\r\nimport { EmployeeSettingService } from '../employee-setting';\r\nimport { EquipmentSharingService } from '../equipment-sharing';\r\nimport { ExpenseService } from '../expense/expense.service';\r\nimport { ExpenseCategoriesService } from '../expense-categories/expense-categories.service';\r\nimport { IncomeService } from '../income/income.service';\r\nimport { InviteService } from '../invite/invite.service';\r\nimport { InvoiceService } from '../invoice/invoice.service';\r\nimport { InvoiceItemService } from '../invoice-item/invoice-item.service';\r\nimport { OrganizationService } from '../organization/organization.service';\r\nimport { EmployeeLevelService } from '../organization_employee-level/organization-employee-level.service';\r\nimport { OrganizationContactService } from '../organization-contact/organization-contact.service';\r\nimport { OrganizationDepartmentService } from '../organization-department/organization-department.service';\r\nimport { OrganizationEmploymentTypeService } from '../organization-employment-type/organization-employment-type.service';\r\nimport { OrganizationPositionsService } from '../organization-positions/organization-positions.service';\r\nimport { OrganizationProjectsService } from '../organization-projects/organization-projects.service';\r\nimport { OrganizationRecurringExpenseService } from '../organization-recurring-expense/organization-recurring-expense.service';\r\nimport { OrganizationTeamService } from '../organization-team/organization-team.service';\r\nimport { OrganizationVendorsService } from '../organization-vendors/organization-vendors.service';\r\nimport { ProposalService } from '../proposal/proposal.service';\r\nimport { RoleService } from '../role/role.service';\r\nimport { RolePermissionsService } from '../role-permissions/role-permissions.service';\r\nimport { TagService } from '../tags/tag.service';\r\nimport { TaskService } from '../tasks/task.service';\r\nimport { TenantService } from '../tenant/tenant.service';\r\nimport { TimeOffPolicyService } from '../time-off-policy/time-off-policy.service';\r\nimport { TimeSheetService } from '../timesheet/timesheet/timesheet.service';\r\nimport { ActivityService } from '../timesheet/activity/activity.service';\r\nimport { ScreenshotService } from '../timesheet/screenshot/screenshot.service';\r\nimport { TimeSlotService } from '../timesheet/time-slot/time-slot.service';\r\nimport { TimeLogService } from '../timesheet/time-log/time-log.service';\r\nimport { AppointmentEmployeesService } from '../appointment-employees/appointment-employees.service';\r\nimport { ApprovalPolicyService } from '../approval-policy/approval-policy.service';\r\nimport { CandidateService } from '../candidate/candidate.service';\r\nimport { OrganizationTeamEmployeeService } from '../organization-team-employee/organization-team-employee.service';\r\nimport { EquipmentService } from '../equipment/equipment.service';\r\nimport { ContactService } from '../contact/contact.service';\r\nimport { TimeOffRequestService } from '../time-off-request/time-off-request.service';\r\nimport { StageService } from '../pipeline-stage/pipeline-stage.service';\r\nimport { SkillService } from '../skills/skill.service';\r\nimport { RequestApprovalService } from '../request-approval/request-approval.service';\r\nimport { ProductVariantService } from '../product-variant/product-variant.service';\r\nimport { ProductVariantPriceService } from '../product-variant-price/product-variant-price.service';\r\nimport { PaymentService } from '../payment/payment.service';\r\nimport { PipelineService } from '../pipeline/pipeline.service';\r\nimport { ProductService } from '../product/product.service';\r\nimport { ProductCategoryService } from '../product-category/product-category.service';\r\nimport { ProductOptionService } from '../product-option/product-option.service';\r\nimport { ProductVariantSettingService } from '../product-settings/product-settings.service';\r\nimport { ProductTypeService } from '../product-type/product-type.service';\r\nimport { OrganizationSprintService } from '../organization-sprint/organization-sprint.service';\r\nimport { OrganizationLanguagesService } from '../organization-languages/organization-languages.service';\r\nimport { OrganizationAwardsService } from '../organization-awards/organization-awards.service';\r\nimport { KeyResultService } from '../keyresult/keyresult.service';\r\nimport { KeyResultUpdateService } from '../keyresult-update/keyresult-update.service';\r\nimport { IntegrationService } from '../integration/integration.service';\r\nimport { IntegrationEntitySettingService } from '../integration-entity-setting/integration-entity-setting.service';\r\nimport { IntegrationEntitySettingTiedEntityService } from '../integration-entity-setting-tied-entity/integration-entity-setting-tied-entity.service';\r\nimport { IntegrationMapService } from '../integration-map/integration-map.service';\r\nimport { IntegrationSettingService } from '../integration-setting/integration-setting.service';\r\nimport { IntegrationTenantService } from '../integration-tenant/integration-tenant.service';\r\nimport { HelpCenterService } from '../help-center/help-center.service';\r\nimport { HelpCenterArticleService } from '../help-center-article/help-center-article.service';\r\nimport { HelpCenterAuthorService } from '../help-center-author/help-center-author.service';\r\nimport { GoalService } from '../goal/goal.service';\r\nimport { GoalTimeFrameService } from '../goal-time-frame/goal-time-frame.service';\r\nimport { GoalKpiService } from '../goal-kpi/goal-kpi.service';\r\nimport { EventTypeService } from '../event-types/event-type.service';\r\nimport { EstimateEmailService } from '../estimate-email/estimate-email.service';\r\nimport { EmployeeAppointmentService } from '../employee-appointment';\r\nimport { DealService } from '../deal/deal.service';\r\nimport { AvailabilitySlotsService } from '../availability-slots/availability-slots.service';\r\nimport { CandidateCriterionsRatingService } from '../candidate-criterions-rating/candidate-criterion-rating.service';\r\nimport { CandidateDocumentsService } from '../candidate-documents/candidate-documents.service';\r\nimport { CandidateEducationService } from '../candidate-education/candidate-education.service';\r\nimport { CandidateExperienceService } from '../candidate-experience/candidate-experience.service';\r\nimport { CandidateFeedbacksService } from '../candidate-feedbacks/candidate-feedbacks.service';\r\nimport { CandidateInterviewService } from '../candidate-interview/candidate-interview.service';\r\nimport { CandidateInterviewersService } from '../candidate-interviewers/candidate-interviewers.service';\r\nimport { CandidatePersonalQualitiesService } from '../candidate-personal-qualities/candidate-personal-qualities.service';\r\nimport { CandidateSkillService } from '../candidate-skill/candidate-skill.service';\r\nimport { CandidateTechnologiesService } from '../candidate-technologies/candidate-technologies.service';\r\nimport { CandidateSourceService } from '../candidate-source/candidate-source.service';\r\nimport { LanguageService } from '../language/language.service';\r\nimport { OrganizationDocumentsService } from '../organization-documents/organization-documents.service';\r\nimport { CurrencyService } from '../currency';\r\nimport { EmployeeAwardService } from '../employee-award/employee-award.service';\r\nimport { EmployeeProposalTemplateService } from '../employee-proposal-template/employee-proposal-template.service';\r\nimport { GoalTemplateService } from '../goal-template/goal-template.service';\r\nimport { GoalKpiTemplateService } from '../goal-kpi-template/goal-kpi-template.service';\r\nimport { InvoiceEstimateHistoryService } from '../invoice-estimate-history/invoice-estimate-history.service';\r\nimport { JobSearchOccupationService } from '../employee-job-preset/job-search-occupation/job-search-occupation.service';\r\nimport { JobPresetService } from '../employee-job-preset/job-preset.service';\r\nimport { JobSearchCategoryService } from '../employee-job-preset/job-search-category/job-search-category.service';\r\nimport { KeyresultTemplateService } from '../keyresult-template/keyresult-template.service';\r\nimport { ReportService } from '../reports/report.service';\r\nimport { ReportCategoryService } from '../reports/report-category.service';\r\n\r\n@Injectable()\r\nexport class ExportAllService implements OnDestroy {\r\n\tpublic idZip = new BehaviorSubject<string>('');\r\n\tpublic idCsv = new BehaviorSubject<string>('');\r\n\tprivate _ngDestroy$ = new Subject<void>();\r\n\tprivate services = [];\r\n\r\n\tconstructor(\r\n\t\tprivate activityService: ActivityService,\r\n\t\tprivate appointmentEmployeeService: AppointmentEmployeesService,\r\n\t\tprivate approvalPolicyService: ApprovalPolicyService,\r\n\t\tprivate availabilitySlotsService: AvailabilitySlotsService,\r\n\r\n\t\tprivate candidateService: CandidateService,\r\n\t\tprivate candidateCriterionsRatingService: CandidateCriterionsRatingService,\r\n\t\tprivate candidateDocumentsService: CandidateDocumentsService,\r\n\t\tprivate candidateEducationService: CandidateEducationService,\r\n\t\tprivate candidateExperienceService: CandidateExperienceService,\r\n\t\tprivate candidateFeedbacksService: CandidateFeedbacksService,\r\n\t\tprivate candidateInterviewService: CandidateInterviewService,\r\n\t\tprivate candidateInterviewsService: CandidateInterviewersService,\r\n\t\tprivate candidatePersonalQualitiesService: CandidatePersonalQualitiesService,\r\n\t\tprivate candidateSkillService: CandidateSkillService,\r\n\t\tprivate candidateSourceService: CandidateSourceService,\r\n\t\tprivate candidateTechnologiesService: CandidateTechnologiesService,\r\n\t\tprivate contactService: ContactService,\r\n\t\tprivate countryService: CountryService,\r\n\t\tprivate currencyService: CurrencyService,\r\n\r\n\t\tprivate dealService: DealService,\r\n\r\n\t\tprivate emailService: EmailService,\r\n\t\tprivate emailTemplate: EmailTemplateService,\r\n\t\tprivate employeeService: EmployeeService,\r\n\t\tprivate employeeAppointmentService: EmployeeAppointmentService,\r\n\t\tprivate employeeAwardService: EmployeeAwardService,\r\n\t\tprivate employeeProposalTemplateService: EmployeeProposalTemplateService,\r\n\t\tprivate employeeRecurringExpensesService: EmployeeRecurringExpenseService,\r\n\t\tprivate employeeSettingService: EmployeeSettingService,\r\n\t\tprivate equipmentService: EquipmentService,\r\n\t\tprivate equipmentSharingService: EquipmentSharingService,\r\n\t\tprivate estimateEmailService: EstimateEmailService,\r\n\t\tprivate eventTypesService: EventTypeService,\r\n\t\tprivate expenseService: ExpenseService,\r\n\t\tprivate expenseCategoriesService: ExpenseCategoriesService,\r\n\t\tprivate employeeLevelService: EmployeeLevelService,\r\n\r\n\t\tprivate goalService: GoalService,\r\n\t\tprivate goalTemplateService: GoalTemplateService,\r\n\t\tprivate goalKpiService: GoalKpiService,\r\n\t\tprivate goalKpiTemplateService: GoalKpiTemplateService,\r\n\t\tprivate goalTimeFrameService: GoalTimeFrameService,\r\n\r\n\t\tprivate helpCenterService: HelpCenterService,\r\n\t\tprivate helpCenterArticleService: HelpCenterArticleService,\r\n\t\tprivate helpCenterAuthorService: HelpCenterAuthorService,\r\n\r\n\t\tprivate incomeService: IncomeService,\r\n\t\tprivate integrationService: IntegrationService,\r\n\t\tprivate integrationEntitySettingService: IntegrationEntitySettingService,\r\n\t\tprivate integrationEntitySettingTiedEntityService: IntegrationEntitySettingTiedEntityService,\r\n\t\tprivate integrationMapService: IntegrationMapService,\r\n\t\tprivate integrationSettingService: IntegrationSettingService,\r\n\t\tprivate integrationTenantService: IntegrationTenantService,\r\n\t\tprivate inviteService: InviteService,\r\n\t\tprivate invoiceService: InvoiceService,\r\n\t\tprivate invoiceItemService: InvoiceItemService,\r\n\t\tprivate invoiceEstimateHistoryService: InvoiceEstimateHistoryService,\r\n\r\n\t\tprivate jobPresetService: JobPresetService,\r\n\t\tprivate jobSearchOccupationService: JobSearchOccupationService,\r\n\t\tprivate jobSearchCategoryService: JobSearchCategoryService,\r\n\r\n\t\tprivate keyResultService: KeyResultService,\r\n\t\tprivate keyResultTemplateService: KeyresultTemplateService,\r\n\t\tprivate keyResultUpdateService: KeyResultUpdateService,\r\n\r\n\t\tprivate languageService: LanguageService,\r\n\r\n\t\tprivate organizationService: OrganizationService,\r\n\t\tprivate organizationAwardsService: OrganizationAwardsService,\r\n\t\tprivate organizationContactService: OrganizationContactService,\r\n\t\tprivate organizationDepartmentService: OrganizationDepartmentService,\r\n\t\tprivate organizationDocumentService: OrganizationDocumentsService,\r\n\t\tprivate organizationEmploymentTypeService: OrganizationEmploymentTypeService,\r\n\t\tprivate organizationLanguagesService: OrganizationLanguagesService,\r\n\t\tprivate organizationPositionsService: OrganizationPositionsService,\r\n\t\tprivate organizationProjectsService: OrganizationProjectsService,\r\n\t\tprivate organizationRecurringExpenseService: OrganizationRecurringExpenseService,\r\n\t\tprivate organizationSprintService: OrganizationSprintService,\r\n\t\tprivate organizationTeamService: OrganizationTeamService,\r\n\t\tprivate organizationTeamEmployeeService: OrganizationTeamEmployeeService,\r\n\t\tprivate organizationVendorsService: OrganizationVendorsService,\r\n\r\n\t\tprivate paymentService: PaymentService,\r\n\t\tprivate pipelineService: PipelineService,\r\n\t\tprivate productService: ProductService,\r\n\t\tprivate productCategoryService: ProductCategoryService,\r\n\t\tprivate productOptionService: ProductOptionService,\r\n\t\tprivate productSettingsService: ProductVariantSettingService,\r\n\t\tprivate productTypeService: ProductTypeService,\r\n\t\tprivate productVariantService: ProductVariantService,\r\n\t\tprivate productVariantPriceService: ProductVariantPriceService,\r\n\t\tprivate proposalService: ProposalService,\r\n\r\n\t\tprivate reportService: ReportService,\r\n\t\tprivate reportCategoryService: ReportCategoryService,\r\n\t\tprivate requestApprovalService: RequestApprovalService,\r\n\t\tprivate roleService: RoleService,\r\n\t\tprivate rolePermissionsService: RolePermissionsService,\r\n\r\n\t\tprivate screenShotService: ScreenshotService,\r\n\t\tprivate skillService: SkillService,\r\n\t\tprivate stageService: StageService,\r\n\r\n\t\tprivate tagService: TagService,\r\n\t\tprivate taskService: TaskService,\r\n\t\tprivate tenantService: TenantService,\r\n\t\tprivate timeOffPolicyService: TimeOffPolicyService,\r\n\t\tprivate timeOffRequestService: TimeOffRequestService,\r\n\t\tprivate timeSheetService: TimeSheetService,\r\n\t\tprivate timeLogService: TimeLogService,\r\n\t\tprivate timeSlotService: TimeSlotService,\r\n\r\n\t\tprivate userService: UserService,\r\n\t\tprivate userOrganizationService: UserOrganizationService\r\n\t) {\r\n\t\tthis.services = this.loadServices();\r\n\t}\r\n\r\n\tasync createFolders(): Promise<any> {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst id = uuidv4();\r\n\t\t\tthis.idCsv.next(id);\r\n\t\t\tfs.access(`./export/${id}/csv`, (error) => {\r\n\t\t\t\tif (!error) {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfs.mkdir(\r\n\t\t\t\t\t\t`./export/${id}/csv`,\r\n\t\t\t\t\t\t{ recursive: true },\r\n\t\t\t\t\t\t(err) => {\r\n\t\t\t\t\t\t\tif (err) reject(err);\r\n\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tasync archiveAndDownload(): Promise<any> {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t{\r\n\t\t\t\tconst id = uuidv4();\r\n\t\t\t\tconst fileNameS = id + '_export.zip';\r\n\t\t\t\tthis.idZip.next(fileNameS);\r\n\r\n\t\t\t\tconst output = fs.createWriteStream(`./export/${fileNameS}`);\r\n\r\n\t\t\t\tconst archive = archiver('zip', {\r\n\t\t\t\t\tzlib: { level: 9 }\r\n\t\t\t\t});\r\n\r\n\t\t\t\toutput.on('close', function () {\r\n\t\t\t\t\tresolve();\r\n\t\t\t\t});\r\n\r\n\t\t\t\toutput.on('end', function () {\r\n\t\t\t\t\tconsole.log('Data has been drained');\r\n\t\t\t\t});\r\n\r\n\t\t\t\tarchive.on('warning', function (err) {\r\n\t\t\t\t\tif (err.code === 'ENOENT') {\r\n\t\t\t\t\t\treject(err);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.log('Unexpected error!');\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tarchive.on('error', function (err) {\r\n\t\t\t\t\treject(err);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tlet id$ = '';\r\n\t\t\t\tthis.idCsv\r\n\t\t\t\t\t.pipe(takeUntil(this._ngDestroy$))\r\n\t\t\t\t\t.subscribe((idCsv) => {\r\n\t\t\t\t\t\tid$ = idCsv;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\tarchive.pipe(output);\r\n\t\t\t\tarchive.directory(`./export/${id$}/csv`, false);\r\n\t\t\t\tarchive.finalize();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tasync getAsCsv(\r\n\t\tservice_count: number,\r\n\t\tfindInput: {\r\n\t\t\torganizationId: string;\r\n\t\t\ttenantId: string;\r\n\t\t}\r\n\t): Promise<any> {\r\n\t\tconst whereClause = {};\r\n\t\tif (this.services[service_count]['tenantOrganizationBase'] !== false) {\r\n\t\t\twhereClause['where'] = findInput;\r\n\t\t}\r\n\t\tif (this.services[service_count]['tenantBase'] === true) {\r\n\t\t\twhereClause['where'] = {\r\n\t\t\t\ttenantId: findInput['tenantId']\r\n\t\t\t};\r\n\t\t}\r\n\t\tconst incomingData: Array<any> = (\r\n\t\t\tawait this.services[service_count].service.findAll(whereClause)\r\n\t\t).items;\r\n\r\n\t\tif (incomingData.length > 0) {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tconst createCsvWriter = csv.createObjectCsvWriter;\r\n\t\t\t\tconst dataIn = [];\r\n\t\t\t\tconst dataKeys = Object.keys(incomingData[0]);\r\n\r\n\t\t\t\tfor (const count of dataKeys) {\r\n\t\t\t\t\tdataIn.push({ id: count, title: count });\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet id$ = '';\r\n\t\t\t\tthis.idCsv.pipe(takeUntil(this._ngDestroy$)).subscribe((id) => {\r\n\t\t\t\t\tid$ = id;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tconst csvWriter = createCsvWriter({\r\n\t\t\t\t\tpath: `./export/${id$}/csv/${this.services[service_count].nameFile}.csv`,\r\n\t\t\t\t\theader: dataIn\r\n\t\t\t\t});\r\n\r\n\t\t\t\tconst data = incomingData;\r\n\r\n\t\t\t\tcsvWriter.writeRecords(data).then(() => {\r\n\t\t\t\t\tresolve();\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tasync downloadToUser(res): Promise<any> {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tlet fileName = '';\r\n\r\n\t\t\tthis.idZip\r\n\t\t\t\t.pipe(takeUntil(this._ngDestroy$))\r\n\t\t\t\t.subscribe((filename) => {\r\n\t\t\t\t\tfileName = filename;\r\n\t\t\t\t});\r\n\t\t\tres.download(`./export/${fileName}`);\r\n\r\n\t\t\tresolve();\r\n\t\t});\r\n\t}\r\n\r\n\tasync downloadTemplate(res) {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tres.download('./export/template.zip');\r\n\t\t\tresolve();\r\n\t\t});\r\n\t}\r\n\r\n\tasync deleteCsvFiles(): Promise<any> {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tlet id$ = '';\r\n\r\n\t\t\tthis.idCsv.pipe(takeUntil(this._ngDestroy$)).subscribe((id) => {\r\n\t\t\t\tid$ = id;\r\n\t\t\t});\r\n\r\n\t\t\tfs.access(`./export/${id$}`, (error) => {\r\n\t\t\t\tif (!error) {\r\n\t\t\t\t\tfse.removeSync(`./export/${id$}`);\r\n\t\t\t\t\tresolve();\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\tasync deleteArchive(): Promise<any> {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tlet fileName = '';\r\n\t\t\tthis.idZip\r\n\t\t\t\t.pipe(takeUntil(this._ngDestroy$))\r\n\t\t\t\t.subscribe((fileName$) => {\r\n\t\t\t\t\tfileName = fileName$;\r\n\t\t\t\t});\r\n\r\n\t\t\tfs.access(`./export/${fileName}`, (error) => {\r\n\t\t\t\tif (!error) {\r\n\t\t\t\t\tfse.removeSync(`./export/${fileName}`);\r\n\t\t\t\t\tresolve();\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tasync exportTables(findInput: {\r\n\t\torganizationId: string;\r\n\t\ttenantId: string;\r\n\t}) {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\tfor (const [i] of this.services.entries()) {\r\n\t\t\t\tawait this.getAsCsv(i, findInput);\r\n\t\t\t}\r\n\t\t\tresolve();\r\n\t\t});\r\n\t}\r\n\r\n\tasync exportSpecificTables(\r\n\t\tnames: string[],\r\n\t\tfindInput: {\r\n\t\t\torganizationId: string;\r\n\t\t\ttenantId: string;\r\n\t\t}\r\n\t) {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\tfor (let i = 0; i < this.services.length; i++) {\r\n\t\t\t\tconst name = names.find((n) => this.services[i].nameFile === n);\r\n\t\t\t\tif (name) {\r\n\t\t\t\t\tawait this.getAsCsv(i, findInput);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tresolve();\r\n\t\t});\r\n\t}\r\n\r\n\t/*\r\n\t * Load all services after create instance\r\n\t */\r\n\tloadServices() {\r\n\t\treturn [\r\n\t\t\t{ service: this.activityService, nameFile: 'activity' },\r\n\t\t\t{\r\n\t\t\t\tservice: this.appointmentEmployeeService,\r\n\t\t\t\tnameFile: 'appointment_employee'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tservice: this.approvalPolicyService,\r\n\t\t\t\tnameFile: 'approval_policy'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tservice: this.availabilitySlotsService,\r\n\t\t\t\tnameFile: 'availability_slot'\r\n\t\t\t},\r\n\t\t\t{ service: this.candidateService, nameFile: 'candidate' },\r\n\t\t\t{\r\n\t\t\t\tservice: this.candidateCriterionsRatingService,\r\n\t\t\t\tnameFile: 'candidate_creation_rating'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tservice: this.candidateDocumentsService,\r\n\t\t\t\tnameFile: 'candidate_document'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tservice: this.candidateEducationService,\r\n\t\t\t\tnameFile: 'candidate_education'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tservice: this.candidateExperienceService,\r\n\t\t\t\tnameFile: 'candidate_experience'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tservice: this.candidateFeedbacksService,\r\n\t\t\t\tnameFile: 'candidate_feedback'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tservice: this.candidateInterviewService,\r\n\t\t\t\tnameFile: 'candidate_interview'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tservice: this.candidateInterviewsService,\r\n\t\t\t\tnameFile: 'candidate_interviewer'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tservice: this.candidatePersonalQualitiesService,\r\n\t\t\t\tnameFile: 'candidate_personal_quality'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tservice: this.candidateSkillService,\r\n\t\t\t\tnameFile: 'candidate_skill'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tservice: this.candidateSourceService,\r\n\t\t\t\tnameFile: 'candidate_source'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tservice: this.candidateTechnologiesService,\r\n\t\t\t\tnameFile: 'candidate_technology'\r\n\t\t\t},\r\n\t\t\t{ service: this.contactService, nameFile: 'contact' },\r\n\t\t\t{\r\n\t\t\t\tservice: this.countryService,\r\n\t\t\t\tnameFile: 'country',\r\n\t\t\t\ttenantOrganizationBase: false\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tservice: this.currencyService,\r\n\t\t\t\tnameFile: 'currency',\r\n\t\t\t\ttenantOrganizationBase: false\r\n\t\t\t},\r\n\t\t\t{ service: this.dealService, nameFile: 'deal' },\r\n\t\t\t{ service: this.emailService, nameFile: 'email' },\r\n\t\t\t{ service: this.emailTemplate, nameFile: 'email_template' },\r\n\t\t\t{ service: this.estimateEmailService, nameFile: 'estimate_email' },\r\n\t\t\t{ service: this.employeeService, nameFile: 'employee' },\r\n\t\t\t{\r\n\t\t\t\tservice: this.employeeAppointmentService,\r\n\t\t\t\tnameFile: 'employee_appointment'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tservice: this.employeeAwardService,\r\n\t\t\t\tnameFile: 'employee_award'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tservice: this.employeeProposalTemplateService,\r\n\t\t\t\tnameFile: 'employee_proposal_template'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tservice: this.employeeRecurringExpensesService,\r\n\t\t\t\tnameFile: 'employee_recurring_expense'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tservice: this.employeeSettingService,\r\n\t\t\t\tnameFile: 'employee_setting'\r\n\t\t\t},\r\n\t\t\t{ service: this.equipmentService, nameFile: 'equipment' },\r\n\t\t\t{\r\n\t\t\t\tservice: this.equipmentSharingService,\r\n\t\t\t\tnameFile: 'equipment_sharing'\r\n\t\t\t},\r\n\t\t\t{ service: this.eventTypesService, nameFile: 'event_types' },\r\n\t\t\t{ service: this.expenseService, nameFile: 'expense' },\r\n\t\t\t{\r\n\t\t\t\tservice: this.expenseCategoriesService,\r\n\t\t\t\tnameFile: 'expense_category'\r\n\t\t\t},\r\n\t\t\t{ service: this.goalService, nameFile: 'goal' },\r\n\t\t\t{\r\n\t\t\t\tservice: this.goalTemplateService,\r\n\t\t\t\tnameFile: 'goal_template'\r\n\t\t\t},\r\n\t\t\t{ service: this.goalKpiService, nameFile: 'goal_kpi' },\r\n\t\t\t{\r\n\t\t\t\tservice: this.goalKpiTemplateService,\r\n\t\t\t\tnameFile: 'goal_kpi_template'\r\n\t\t\t},\r\n\t\t\t{ service: this.goalTimeFrameService, nameFile: 'goal_time_frame' },\r\n\t\t\t{ service: this.helpCenterService, nameFile: 'knowledge_base' },\r\n\t\t\t{\r\n\t\t\t\tservice: this.helpCenterArticleService,\r\n\t\t\t\tnameFile: 'knowledge_base_article'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tservice: this.helpCenterAuthorService,\r\n\t\t\t\tnameFile: 'knowledge_base_author'\r\n\t\t\t},\r\n\t\t\t{ service: this.incomeService, nameFile: 'income' },\r\n\t\t\t{\r\n\t\t\t\tservice: this.integrationService,\r\n\t\t\t\tnameFile: 'integration',\r\n\t\t\t\ttenantOrganizationBase: false\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tservice: this.integrationEntitySettingService,\r\n\t\t\t\tnameFile: 'integration_entity_setting'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tservice: this.integrationEntitySettingTiedEntityService,\r\n\t\t\t\tnameFile: 'integration_entity_setting_tied_entity'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tservice: this.integrationMapService,\r\n\t\t\t\tnameFile: 'integration_map'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tservice: this.integrationSettingService,\r\n\t\t\t\tnameFile: 'integration_setting'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tservice: this.integrationTenantService,\r\n\t\t\t\tnameFile: 'integration_tenant'\r\n\t\t\t},\r\n\t\t\t{ service: this.inviteService, nameFile: 'invite' },\r\n\t\t\t{ service: this.invoiceService, nameFile: 'invoice' },\r\n\t\t\t{ service: this.invoiceItemService, nameFile: 'invoice_item' },\r\n\t\t\t{\r\n\t\t\t\tservice: this.invoiceEstimateHistoryService,\r\n\t\t\t\tnameFile: 'invoice_estimate_history'\r\n\t\t\t},\r\n\r\n\t\t\t{\r\n\t\t\t\tservice: this.jobPresetService,\r\n\t\t\t\tnameFile: 'job_preset'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tservice: this.jobSearchOccupationService,\r\n\t\t\t\tnameFile: 'job_search_occupation'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tservice: this.jobSearchCategoryService,\r\n\t\t\t\tnameFile: 'job_search_category'\r\n\t\t\t},\r\n\r\n\t\t\t{ service: this.keyResultService, nameFile: 'key_result' },\r\n\t\t\t{\r\n\t\t\t\tservice: this.keyResultTemplateService,\r\n\t\t\t\tnameFile: 'key_result_template'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tservice: this.keyResultUpdateService,\r\n\t\t\t\tnameFile: 'key_result_update'\r\n\t\t\t},\r\n\r\n\t\t\t{\r\n\t\t\t\tservice: this.languageService,\r\n\t\t\t\tnameFile: 'language',\r\n\t\t\t\ttenantOrganizationBase: false\r\n\t\t\t},\r\n\r\n\t\t\t{\r\n\t\t\t\tservice: this.organizationService,\r\n\t\t\t\tnameFile: 'organization',\r\n\t\t\t\ttenantOrganizationBase: false,\r\n\t\t\t\ttenantBase: true\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tservice: this.organizationAwardsService,\r\n\t\t\t\tnameFile: 'organization_award'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tservice: this.organizationContactService,\r\n\t\t\t\tnameFile: 'organization_contact'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tservice: this.organizationDepartmentService,\r\n\t\t\t\tnameFile: 'organization_department'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tservice: this.organizationDocumentService,\r\n\t\t\t\tnameFile: 'organization_document'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tservice: this.employeeLevelService,\r\n\t\t\t\tnameFile: 'organization_employee_level'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tservice: this.organizationEmploymentTypeService,\r\n\t\t\t\tnameFile: 'organization_employment_type'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tservice: this.organizationLanguagesService,\r\n\t\t\t\tnameFile: 'organization_languages'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tservice: this.organizationPositionsService,\r\n\t\t\t\tnameFile: 'organization_position'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tservice: this.organizationProjectsService,\r\n\t\t\t\tnameFile: 'organization_project'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tservice: this.organizationRecurringExpenseService,\r\n\t\t\t\tnameFile: 'organization_recurring_expense'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tservice: this.organizationSprintService,\r\n\t\t\t\tnameFile: 'organization_sprint'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tservice: this.organizationTeamService,\r\n\t\t\t\tnameFile: 'organization_team'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tservice: this.organizationTeamEmployeeService,\r\n\t\t\t\tnameFile: 'organization_team_employee'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tservice: this.organizationVendorsService,\r\n\t\t\t\tnameFile: 'organization_vendor'\r\n\t\t\t},\r\n\r\n\t\t\t{ service: this.paymentService, nameFile: 'payment' },\r\n\t\t\t{ service: this.pipelineService, nameFile: 'pipeline' },\r\n\t\t\t{ service: this.productService, nameFile: 'product' },\r\n\t\t\t{\r\n\t\t\t\tservice: this.productCategoryService,\r\n\t\t\t\tnameFile: 'product_category'\r\n\t\t\t},\r\n\t\t\t{ service: this.productOptionService, nameFile: 'product_option' },\r\n\t\t\t{ service: this.productTypeService, nameFile: 'product_type' },\r\n\t\t\t{\r\n\t\t\t\tservice: this.productVariantService,\r\n\t\t\t\tnameFile: 'product_variant'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tservice: this.productVariantPriceService,\r\n\t\t\t\tnameFile: 'product_variant_price'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tservice: this.productSettingsService,\r\n\t\t\t\tnameFile: 'product_variant_setting'\r\n\t\t\t},\r\n\t\t\t{ service: this.proposalService, nameFile: 'proposal' },\r\n\r\n\t\t\t{\r\n\t\t\t\tservice: this.reportService,\r\n\t\t\t\tnameFile: 'report'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tservice: this.reportCategoryService,\r\n\t\t\t\tnameFile: 'report_category'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tservice: this.requestApprovalService,\r\n\t\t\t\tnameFile: 'request_approval'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tservice: this.roleService,\r\n\t\t\t\tnameFile: 'role',\r\n\t\t\t\ttenantOrganizationBase: false\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tservice: this.rolePermissionsService,\r\n\t\t\t\tnameFile: 'role_permission',\r\n\t\t\t\ttenantOrganizationBase: false\r\n\t\t\t},\r\n\r\n\t\t\t{ service: this.screenShotService, nameFile: 'screenshot' },\r\n\t\t\t{\r\n\t\t\t\tservice: this.skillService,\r\n\t\t\t\tnameFile: 'skill',\r\n\t\t\t\ttenantOrganizationBase: false\r\n\t\t\t},\r\n\t\t\t{ service: this.stageService, nameFile: 'pipeline_stage' },\r\n\r\n\t\t\t{ service: this.tagService, nameFile: 'tag' },\r\n\t\t\t{ service: this.taskService, nameFile: 'task' },\r\n\t\t\t{\r\n\t\t\t\tservice: this.tenantService,\r\n\t\t\t\tnameFile: 'tenant',\r\n\t\t\t\ttenantOrganizationBase: false\r\n\t\t\t},\r\n\t\t\t{ service: this.timeOffPolicyService, nameFile: 'time_off_policy' },\r\n\t\t\t{\r\n\t\t\t\tservice: this.timeOffRequestService,\r\n\t\t\t\tnameFile: 'time_off_request'\r\n\t\t\t},\r\n\t\t\t{ service: this.timeSheetService, nameFile: 'timesheet' },\r\n\t\t\t{ service: this.timeLogService, nameFile: 'time_log' },\r\n\t\t\t{ service: this.timeSlotService, nameFile: 'time_slot' },\r\n\t\t\t{\r\n\t\t\t\tservice: this.userService,\r\n\t\t\t\tnameFile: 'user',\r\n\t\t\t\ttenantOrganizationBase: false,\r\n\t\t\t\ttenantBase: true\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tservice: this.userOrganizationService,\r\n\t\t\t\tnameFile: 'user_organization'\r\n\t\t\t}\r\n\t\t];\r\n\t}\r\n\r\n\tngOnDestroy() {\r\n\t\tthis._ngDestroy$.next();\r\n\t\tthis._ngDestroy$.complete();\r\n\t}\r\n}\r\n","import {\r\n\tController,\r\n\tHttpStatus,\r\n\tGet,\r\n\tPost,\r\n\tUseInterceptors,\r\n\tInjectable,\r\n\tBody,\r\n\tUploadedFile\r\n} from '@nestjs/common';\r\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport { OnDestroy } from '@angular/core';\r\nimport { FileInterceptor } from '@nestjs/platform-express';\r\nimport { ImportAllService } from '.';\r\nimport * as path from 'path';\r\nimport { FileStorage } from '../../core/file-storage';\r\n\r\n@Injectable()\r\n@ApiTags('Import')\r\n@Controller()\r\nexport class ImportAllController implements OnDestroy {\r\n\tconstructor(private importAllService: ImportAllService) {}\r\n\r\n\t@ApiOperation({ summary: 'Find all exports.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found tables'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get()\r\n\tasync importAll() {}\r\n\r\n\t@UseInterceptors(\r\n\t\tFileInterceptor('file', {\r\n\t\t\tstorage: new FileStorage().storage({\r\n\t\t\t\tdest: path.join('import'),\r\n\t\t\t\tprefix: 'import'\r\n\t\t\t})\r\n\t\t})\r\n\t)\r\n\t@Post()\r\n\tasync parse(@Body() { importType }, @UploadedFile() file) {\r\n\t\tthis.importAllService.removeExtractedFiles();\r\n\t\tawait this.importAllService.unzipAndParse(\r\n\t\t\tfile.key,\r\n\t\t\timportType === 'clean'\r\n\t\t);\r\n\r\n\t\treturn;\r\n\t}\r\n\r\n\tngOnDestroy() {}\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { CqrsModule } from '@nestjs/cqrs';\r\nimport { ImportAllController } from './import-all.controller';\r\nimport { ImportAllService } from './import-all.service';\r\nimport { MulterModule } from '@nestjs/platform-express';\r\nimport { Country } from '../../country/country.entity';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { Tag } from '../../tags/tag.entity';\r\nimport { User } from '../../user/user.entity';\r\nimport { UserOrganization } from '../../user-organization/user-organization.entity';\r\nimport { Activity } from '../../timesheet/activity.entity';\r\nimport { ApprovalPolicy } from '../../approval-policy/approval-policy.entity';\r\nimport { AvailabilitySlot } from '../../availability-slots/availability-slots.entity';\r\nimport { Candidate } from '../../candidate/candidate.entity';\r\nimport { CandidateDocument } from '../../candidate-documents/candidate-documents.entity';\r\nimport { CandidateEducation } from '../../candidate-education/candidate-education.entity';\r\nimport { CandidateExperience } from '../../candidate-experience/candidate-experience.entity';\r\nimport { CandidateFeedback } from '../../candidate-feedbacks/candidate-feedbacks.entity';\r\nimport { CandidateInterview } from '../../candidate-interview/candidate-interview.entity';\r\nimport { CandidateInterviewers } from '../../candidate-interviewers/candidate-interviewers.entity';\r\nimport { CandidatePersonalQualities } from '../../candidate-personal-qualities/candidate-personal-qualities.entity';\r\nimport { CandidateSkill } from '../../candidate-skill/candidate-skill.entity';\r\nimport { CandidateSource } from '../../candidate-source/candidate-source.entity';\r\nimport { CandidateTechnologies } from '../../candidate-technologies/candidate-technologies.entity';\r\nimport { Deal } from '../../deal/deal.entity';\r\nimport { EmailTemplate } from '../../email-template';\r\nimport { Email } from '../../email';\r\nimport { Employee } from '../../employee/employee.entity';\r\nimport { Equipment } from '../../equipment/equipment.entity';\r\nimport { ExpenseCategory } from '../../expense-categories/expense-category.entity';\r\nimport { GoalKPI } from '../../goal-kpi/goal-kpi.entity';\r\nimport { Expense } from '../../expense/expense.entity';\r\nimport { GoalTimeFrame } from '../../goal-time-frame/goal-time-frame.entity';\r\nimport { Goal } from '../../goal/goal.entity';\r\nimport { IntegrationTenant } from '../../integration-tenant/integration-tenant.entity';\r\nimport { InvoiceItem } from '../../invoice-item/invoice-item.entity';\r\nimport { Invoice } from '../../invoice/invoice.entity';\r\nimport { KeyResult } from '../../keyresult/keyresult.entity';\r\nimport { Language } from '../../language/language.entity';\r\nimport { OrganizationContact } from '../../organization-contact/organization-contact.entity';\r\nimport { OrganizationDepartment } from '../../organization-department/organization-department.entity';\r\nimport { OrganizationDocuments } from '../../organization-documents/organization-documents.entity';\r\nimport { OrganizationEmploymentType } from '../../organization-employment-type/organization-employment-type.entity';\r\nimport { OrganizationPositions } from '../../organization-positions/organization-positions.entity';\r\nimport { OrganizationProject } from '../../organization-projects/organization-projects.entity';\r\nimport { OrganizationTeam } from '../../organization-team/organization-team.entity';\r\nimport { OrganizationTeamEmployee } from '../../organization-team-employee/organization-team-employee.entity';\r\nimport { OrganizationVendor } from '../../organization-vendors/organization-vendors.entity';\r\nimport { Organization } from '../../organization/organization.entity';\r\nimport { Pipeline } from '../../pipeline/pipeline.entity';\r\nimport { ProductCategory } from '../../product-category/product-category.entity';\r\nimport { ProductOption } from '../../product-option/product-option.entity';\r\nimport { ProductVariantSettings } from '../../product-settings/product-settings.entity';\r\nimport { ProductType } from '../../product-type/product-type.entity';\r\nimport { ProductVariantPrice } from '../../product-variant-price/product-variant-price.entity';\r\nimport { ProductVariant } from '../../product-variant/product-variant.entity';\r\nimport { Product } from '../../product/product.entity';\r\nimport { RequestApproval } from '../../request-approval/request-approval.entity';\r\nimport { RolePermissions } from '../../role-permissions/role-permissions.entity';\r\nimport { Role } from '../../role/role.entity';\r\nimport { Skill } from '../../skills/skill.entity';\r\nimport { Tenant } from '../../tenant/tenant.entity';\r\nimport { TimeLog } from '../../timesheet/time-log.entity';\r\nimport { TimeSlot } from '../../timesheet/time-slot.entity';\r\nimport { TimeOffPolicy } from '../../time-off-policy/time-off-policy.entity';\r\nimport { Timesheet } from '../../timesheet/timesheet.entity';\r\nimport { TimeOffRequest } from '../../time-off-request/time-off-request.entity';\r\nimport { Income } from '../../income/income.entity';\r\nimport { Integration } from '../../integration/integration.entity';\r\nimport { Invite } from '../../invite/invite.entity';\r\nimport { AppointmentEmployee } from '../../appointment-employees/appointment-employees.entity';\r\nimport { CandidateCriterionsRating } from '../../candidate-criterions-rating/candidate-criterion-rating.entity';\r\nimport { Contact } from '../../contact/contact.entity';\r\nimport { EmployeeAppointment } from '../../employee-appointment';\r\nimport { EmployeeLevel } from '../../organization_employee-level/organization-employee-level.entity';\r\nimport { EmployeeRecurringExpense } from '../../employee-recurring-expense/employee-recurring-expense.entity';\r\nimport { EmployeeSetting } from '../../employee-setting/employee-setting.entity';\r\nimport { EquipmentSharing } from '../../equipment-sharing';\r\nimport { HelpCenter } from '../../help-center/help-center.entity';\r\nimport { HelpCenterAuthor } from '../../help-center-author/help-center-author.entity';\r\nimport { HelpCenterArticle } from '../../help-center-article/help-center-article.entity';\r\nimport { IntegrationSetting } from '../../integration-setting/integration-setting.entity';\r\nimport { IntegrationMap } from '../../integration-map/integration-map.entity';\r\nimport { IntegrationEntitySettingTiedEntity } from '../../integration-entity-setting-tied-entity/integration-entity-setting-tied-entity.entity';\r\nimport { IntegrationEntitySetting } from '../../integration-entity-setting/integration-entity-setting.entity';\r\nimport { KeyResultUpdate } from '../../keyresult-update/keyresult-update.entity';\r\nimport { OrganizationAwards } from '../../organization-awards/organization-awards.entity';\r\nimport { OrganizationLanguages } from '../../organization-languages/organization-languages.entity';\r\nimport { OrganizationRecurringExpense } from '../../organization-recurring-expense/organization-recurring-expense.entity';\r\nimport { OrganizationSprint } from '../../organization-sprint/organization-sprint.entity';\r\nimport { Payment } from '../../payment/payment.entity';\r\nimport { Proposal } from '../../proposal/proposal.entity';\r\nimport { RequestApprovalEmployee } from '../../request-approval-employee/request-approval-employee.entity';\r\nimport { RequestApprovalTeam } from '../../request-approval-team/request-approval-team.entity';\r\nimport { Screenshot } from '../../timesheet/screenshot.entity';\r\nimport { Task } from '../../tasks/task.entity';\r\nimport { TimeSlotMinute } from '../../timesheet/time-slot-minute.entity';\r\nimport { EquipmentSharingPolicy } from '../../equipment-sharing-policy/equipment-sharing-policy.entity';\r\nimport { EstimateEmail } from '../../estimate-email/estimate-email.entity';\r\nimport { EventType } from '../../event-types/event-type.entity';\r\nimport { GoalGeneralSetting } from '../../goal-general-setting/goal-general-setting.entity';\r\nimport { PipelineStage } from '../../pipeline-stage/pipeline-stage.entity';\r\nimport { CustomSmtp } from '../../custom-smtp/custom-smtp.entity';\r\nimport { Currency } from '../../currency';\r\nimport { EmployeeAward } from '../../employee-award/employee-award.entity';\r\nimport { JobSearchOccupation } from '../../employee-job-preset/job-search-occupation/job-search-occupation.entity';\r\nimport { JobSearchCategory } from '../../employee-job-preset/job-search-category/job-search-category.entity';\r\nimport { JobPresetUpworkJobSearchCriterion } from '../../employee-job-preset/job-preset-upwork-job-search-criterion.entity';\r\nimport { EmployeeUpworkJobsSearchCriterion } from '../../employee-job-preset/employee-upwork-jobs-search-criterion.entity';\r\nimport { EmployeeProposalTemplate } from '../../employee-proposal-template/employee-proposal-template.entity';\r\nimport { GoalKPITemplate } from '../../goal-kpi-template/goal-kpi-template.entity';\r\nimport { GoalTemplate } from '../../goal-template/goal-template.entity';\r\nimport { InvoiceEstimateHistory } from '../../invoice-estimate-history/invoice-estimate-history.entity';\r\nimport { KeyResultTemplate } from '../../keyresult-template/keyresult-template.entity';\r\nimport { Report } from '../../reports/report.entity';\r\nimport { ReportCategory } from '../../reports/report-category.entity';\r\nimport { ReportOrganization } from '../../reports/report-organization.entity';\r\nimport { JobPreset } from '../../employee-job-preset/job-preset.entity';\r\n@Module({\r\n\timports: [\r\n\t\tCqrsModule,\r\n\t\tMulterModule.register({\r\n\t\t\tdest: './import'\r\n\t\t}),\r\n\r\n\t\tTypeOrmModule.forFeature([\r\n\t\t\tActivity,\r\n\t\t\tAppointmentEmployee,\r\n\t\t\tApprovalPolicy,\r\n\t\t\tAvailabilitySlot,\r\n\r\n\t\t\tCandidate,\r\n\t\t\tCandidateCriterionsRating,\r\n\t\t\tCandidateDocument,\r\n\t\t\tCandidateEducation,\r\n\t\t\tCandidateExperience,\r\n\t\t\tCandidateFeedback,\r\n\t\t\tCandidateInterview,\r\n\t\t\tCandidateInterviewers,\r\n\t\t\tCandidatePersonalQualities,\r\n\t\t\tCandidateSkill,\r\n\t\t\tCandidateSource,\r\n\t\t\tCandidateTechnologies,\r\n\t\t\tContact,\r\n\t\t\tCountry,\r\n\t\t\tCurrency,\r\n\t\t\tCustomSmtp,\r\n\r\n\t\t\tDeal,\r\n\r\n\t\t\tEmail,\r\n\t\t\tEmailTemplate,\r\n\t\t\tEmployee,\r\n\t\t\tEmployeeAppointment,\r\n\t\t\tEmployeeAward,\r\n\t\t\tEmployeeLevel,\r\n\t\t\tEmployeeProposalTemplate,\r\n\t\t\tEmployeeRecurringExpense,\r\n\t\t\tEmployeeSetting,\r\n\t\t\tEmployeeUpworkJobsSearchCriterion,\r\n\t\t\tEquipment,\r\n\t\t\tEquipmentSharing,\r\n\t\t\tEquipmentSharingPolicy,\r\n\t\t\tEstimateEmail,\r\n\t\t\tEventType,\r\n\t\t\tExpense,\r\n\t\t\tExpenseCategory,\r\n\r\n\t\t\tGoal,\r\n\t\t\tGoalGeneralSetting,\r\n\t\t\tGoalKPI,\r\n\t\t\tGoalKPITemplate,\r\n\t\t\tGoalTemplate,\r\n\t\t\tGoalTimeFrame,\r\n\r\n\t\t\tHelpCenter,\r\n\t\t\tHelpCenterArticle,\r\n\t\t\tHelpCenterAuthor,\r\n\r\n\t\t\tIncome,\r\n\t\t\tIntegration,\r\n\t\t\tIntegrationEntitySetting,\r\n\t\t\tIntegrationEntitySettingTiedEntity,\r\n\t\t\tIntegrationMap,\r\n\t\t\tIntegrationSetting,\r\n\t\t\tIntegrationTenant,\r\n\t\t\tInvite,\r\n\t\t\tInvoice,\r\n\t\t\tInvoiceEstimateHistory,\r\n\t\t\tInvoiceItem,\r\n\r\n\t\t\tJobPreset,\r\n\t\t\tJobSearchOccupation,\r\n\t\t\tJobSearchCategory,\r\n\t\t\tJobPresetUpworkJobSearchCriterion,\r\n\r\n\t\t\tKeyResult,\r\n\t\t\tKeyResultTemplate,\r\n\t\t\tKeyResultUpdate,\r\n\r\n\t\t\tLanguage,\r\n\r\n\t\t\tOrganization,\r\n\t\t\tOrganizationAwards,\r\n\t\t\tOrganizationContact,\r\n\t\t\tOrganizationDepartment,\r\n\t\t\tOrganizationDocuments,\r\n\t\t\tOrganizationEmploymentType,\r\n\t\t\tOrganizationLanguages,\r\n\t\t\tOrganizationPositions,\r\n\t\t\tOrganizationProject,\r\n\t\t\tOrganizationRecurringExpense,\r\n\t\t\tOrganizationSprint,\r\n\t\t\tOrganizationTeam,\r\n\t\t\tOrganizationTeamEmployee,\r\n\t\t\tOrganizationVendor,\r\n\r\n\t\t\tPayment,\r\n\t\t\tPipeline,\r\n\t\t\tPipelineStage,\r\n\t\t\tProduct,\r\n\t\t\tProductCategory,\r\n\t\t\tProductOption,\r\n\t\t\tProductVariantSettings,\r\n\t\t\tProductType,\r\n\t\t\tProductVariant,\r\n\t\t\tProductVariantPrice,\r\n\t\t\tProposal,\r\n\r\n\t\t\tReport,\r\n\t\t\tReportCategory,\r\n\t\t\tReportOrganization,\r\n\t\t\tRequestApproval,\r\n\t\t\tRequestApprovalEmployee,\r\n\t\t\tRequestApprovalTeam,\r\n\t\t\tRole,\r\n\t\t\tRolePermissions,\r\n\r\n\t\t\tScreenshot,\r\n\t\t\tSkill,\r\n\r\n\t\t\tTag,\r\n\t\t\tTask,\r\n\t\t\tTenant,\r\n\t\t\tTimeOffPolicy,\r\n\t\t\tTimeOffRequest,\r\n\t\t\tTimesheet,\r\n\t\t\tTimeLog,\r\n\t\t\tTimeSlot,\r\n\t\t\tTimeSlotMinute,\r\n\r\n\t\t\tUser,\r\n\t\t\tUserOrganization\r\n\t\t])\r\n\t],\r\n\tcontrollers: [ImportAllController],\r\n\tproviders: [ImportAllService],\r\n\texports: [ImportAllService]\r\n})\r\nexport class ImportAllModule {}\r\n","import { Injectable } from '@nestjs/common';\r\nimport { OnDestroy } from '@angular/core';\r\nimport * as fs from 'fs';\r\nimport * as unzipper from 'unzipper';\r\nimport * as csv from 'csv-parser';\r\nimport * as rimraf from 'rimraf';\r\nimport { Connection, Repository } from 'typeorm';\r\nimport { Country } from '../../country/country.entity';\r\nimport { User } from '../../user/user.entity';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Tag } from '../../tags/tag.entity';\r\nimport { Activity } from '../../timesheet/activity.entity';\r\nimport { AvailabilitySlot } from '../../availability-slots/availability-slots.entity';\r\nimport { ApprovalPolicy } from '../../approval-policy/approval-policy.entity';\r\nimport { AppointmentEmployee } from '../../appointment-employees/appointment-employees.entity';\r\nimport { CandidateTechnologies } from '../../candidate-technologies/candidate-technologies.entity';\r\nimport { CandidateSource } from '../../candidate-source/candidate-source.entity';\r\nimport { CandidateSkill } from '../../candidate-skill/candidate-skill.entity';\r\nimport { CandidatePersonalQualities } from '../../candidate-personal-qualities/candidate-personal-qualities.entity';\r\nimport { CandidateInterviewers } from '../../candidate-interviewers/candidate-interviewers.entity';\r\nimport { CandidateInterview } from '../../candidate-interview/candidate-interview.entity';\r\nimport { CandidateFeedback } from '../../candidate-feedbacks/candidate-feedbacks.entity';\r\nimport { CandidateExperience } from '../../candidate-experience/candidate-experience.entity';\r\nimport { CandidateEducation } from '../../candidate-education/candidate-education.entity';\r\nimport { CandidateDocument } from '../../candidate-documents/candidate-documents.entity';\r\nimport { CandidateCriterionsRating } from '../../candidate-criterions-rating/candidate-criterion-rating.entity';\r\nimport { Candidate } from '../../candidate/candidate.entity';\r\nimport { Contact } from '../../contact/contact.entity';\r\nimport { Deal } from '../../deal/deal.entity';\r\nimport { EmailTemplate } from '../../email-template/email-template.entity';\r\nimport { Email } from '../../email/email.entity';\r\nimport { Employee } from '../../employee/employee.entity';\r\nimport { EmployeeAppointment } from '../../employee-appointment/employee-appointment.entity';\r\nimport { EmployeeRecurringExpense } from '../../employee-recurring-expense/employee-recurring-expense.entity';\r\nimport { EmployeeSetting } from '../../employee-setting/employee-setting.entity';\r\nimport { Equipment } from '../../equipment/equipment.entity';\r\nimport { EquipmentSharing } from '../../equipment-sharing/equipment-sharing.entity';\r\nimport { EquipmentSharingPolicy } from '../../equipment-sharing-policy/equipment-sharing-policy.entity';\r\nimport { EstimateEmail } from '../../estimate-email/estimate-email.entity';\r\nimport { EventType } from '../../event-types/event-type.entity';\r\nimport { Expense } from '../../expense/expense.entity';\r\nimport { ExpenseCategory } from '../../expense-categories/expense-category.entity';\r\nimport { UserOrganization } from '../../user-organization/user-organization.entity';\r\nimport { TimeOffPolicy } from '../../time-off-policy/time-off-policy.entity';\r\nimport { TimeOffRequest } from '../../time-off-request/time-off-request.entity';\r\nimport { TimeSlot } from '../../timesheet/time-slot.entity';\r\nimport { TimeLog } from '../../timesheet/time-log.entity';\r\nimport { Timesheet } from '../../timesheet/timesheet.entity';\r\nimport { Tenant } from '../../tenant/tenant.entity';\r\nimport { Task } from '../../tasks/task.entity';\r\nimport { Screenshot } from '../../timesheet/screenshot.entity';\r\nimport { HelpCenterAuthor } from '../../help-center-author/help-center-author.entity';\r\nimport { HelpCenterArticle } from '../../help-center-article/help-center-article.entity';\r\nimport { HelpCenter } from '../../help-center/help-center.entity';\r\nimport { GoalTimeFrame } from '../../goal-time-frame/goal-time-frame.entity';\r\nimport { GoalKPI } from '../../goal-kpi/goal-kpi.entity';\r\nimport { GoalGeneralSetting } from '../../goal-general-setting/goal-general-setting.entity';\r\nimport { Goal } from '../../goal/goal.entity';\r\nimport { Skill } from '../../skills/skill.entity';\r\nimport { Language } from '../../language/language.entity';\r\nimport { KeyResultUpdate } from '../../keyresult-update/keyresult-update.entity';\r\nimport { KeyResult } from '../../keyresult/keyresult.entity';\r\nimport { InvoiceItem } from '../../invoice-item/invoice-item.entity';\r\nimport { Invoice } from '../../invoice/invoice.entity';\r\nimport { Invite } from '../../invite/invite.entity';\r\nimport { IntegrationTenant } from '../../integration-tenant/integration-tenant.entity';\r\nimport { IntegrationSetting } from '../../integration-setting/integration-setting.entity';\r\nimport { IntegrationMap } from '../../integration-map/integration-map.entity';\r\nimport { Income } from '../../income/income.entity';\r\nimport { Integration } from '../../integration/integration.entity';\r\nimport { IntegrationEntitySetting } from '../../integration-entity-setting/integration-entity-setting.entity';\r\nimport { IntegrationEntitySettingTiedEntity } from '../../integration-entity-setting-tied-entity/integration-entity-setting-tied-entity.entity';\r\nimport { Organization } from '../../organization/organization.entity';\r\nimport { EmployeeLevel } from '../../organization_employee-level/organization-employee-level.entity';\r\nimport { OrganizationAwards } from '../../organization-awards/organization-awards.entity';\r\nimport { OrganizationContact } from '../../organization-contact/organization-contact.entity';\r\nimport { OrganizationDepartment } from '../../organization-department/organization-department.entity';\r\nimport { OrganizationDocuments } from '../../organization-documents/organization-documents.entity';\r\nimport { OrganizationEmploymentType } from '../../organization-employment-type/organization-employment-type.entity';\r\nimport { OrganizationLanguages } from '../../organization-languages/organization-languages.entity';\r\nimport { OrganizationPositions } from '../../organization-positions/organization-positions.entity';\r\nimport { OrganizationProject } from '../../organization-projects/organization-projects.entity';\r\nimport { OrganizationRecurringExpense } from '../../organization-recurring-expense/organization-recurring-expense.entity';\r\nimport { OrganizationSprint } from '../../organization-sprint/organization-sprint.entity';\r\nimport { OrganizationTeam } from '../../organization-team/organization-team.entity';\r\nimport { OrganizationTeamEmployee } from '../../organization-team-employee/organization-team-employee.entity';\r\nimport { OrganizationVendor } from '../../organization-vendors/organization-vendors.entity';\r\nimport { RolePermissions } from '../../role-permissions/role-permissions.entity';\r\nimport { Role } from '../../role/role.entity';\r\nimport { RequestApproval } from '../../request-approval/request-approval.entity';\r\nimport { Payment } from '../../payment/payment.entity';\r\nimport { Pipeline } from '../../pipeline/pipeline.entity';\r\nimport { PipelineStage } from '../../pipeline-stage/pipeline-stage.entity';\r\nimport { Proposal } from '../../proposal/proposal.entity';\r\nimport { ProductVariantPrice } from '../../product-variant-price/product-variant-price.entity';\r\nimport { ProductVariant } from '../../product-variant/product-variant.entity';\r\nimport { ProductType } from '../../product-type/product-type.entity';\r\nimport { ProductVariantSettings } from '../../product-settings/product-settings.entity';\r\nimport { ProductOption } from '../../product-option/product-option.entity';\r\nimport { ProductCategory } from '../../product-category/product-category.entity';\r\nimport { Product } from '../../product/product.entity';\r\nimport { convertToDatetime } from '../../core/utils';\r\nimport { FileStorage } from '../../core/file-storage';\r\nimport { Currency } from '../../currency/currency.entity';\r\nimport { EmployeeAward } from '../../employee-award/employee-award.entity';\r\nimport { EmployeeProposalTemplate } from '../../employee-proposal-template/employee-proposal-template.entity';\r\nimport { EmployeeUpworkJobsSearchCriterion } from '../../employee-job-preset/employee-upwork-jobs-search-criterion.entity';\r\nimport { GoalTemplate } from '../../goal-template/goal-template.entity';\r\nimport { GoalKPITemplate } from '../../goal-kpi-template/goal-kpi-template.entity';\r\nimport { InvoiceEstimateHistory } from '../../invoice-estimate-history/invoice-estimate-history.entity';\r\nimport { JobSearchOccupation } from '../../employee-job-preset/job-search-occupation/job-search-occupation.entity';\r\nimport { JobPresetUpworkJobSearchCriterion } from '../../employee-job-preset/job-preset-upwork-job-search-criterion.entity';\r\nimport { JobSearchCategory } from '../../employee-job-preset/job-search-category/job-search-category.entity';\r\nimport { JobPreset } from '../../employee-job-preset/job-preset.entity';\r\nimport { KeyResultTemplate } from '../../keyresult-template/keyresult-template.entity';\r\nimport { Report } from '../../reports/report.entity';\r\nimport { ReportCategory } from '../../reports/report-category.entity';\r\nimport { ReportOrganization } from '../../reports/report-organization.entity';\r\n\r\n@Injectable()\r\nexport class ImportAllService implements OnDestroy {\r\n\tconstructor(\r\n\t\t@InjectRepository(Activity)\r\n\t\tprivate readonly activityRepository: Repository<Activity>,\r\n\r\n\t\t@InjectRepository(AppointmentEmployee)\r\n\t\tprivate readonly appointmentEmployeesRepository: Repository<\r\n\t\t\tAppointmentEmployee\r\n\t\t>,\r\n\r\n\t\t@InjectRepository(ApprovalPolicy)\r\n\t\tprivate readonly approvalPolicyRepository: Repository<ApprovalPolicy>,\r\n\r\n\t\t@InjectRepository(AvailabilitySlot)\r\n\t\tprivate readonly availabilitySlotsRepository: Repository<\r\n\t\t\tAvailabilitySlot\r\n\t\t>,\r\n\r\n\t\t@InjectRepository(Candidate)\r\n\t\tprivate readonly candidateRepository: Repository<Candidate>,\r\n\r\n\t\t@InjectRepository(CandidateCriterionsRating)\r\n\t\tprivate readonly candidateCriterionsRatingRepository: Repository<\r\n\t\t\tCandidateCriterionsRating\r\n\t\t>,\r\n\r\n\t\t@InjectRepository(CandidateDocument)\r\n\t\tprivate readonly candidateDocumentRepository: Repository<\r\n\t\t\tCandidateDocument\r\n\t\t>,\r\n\r\n\t\t@InjectRepository(CandidateEducation)\r\n\t\tprivate readonly candidateEducationRepository: Repository<\r\n\t\t\tCandidateEducation\r\n\t\t>,\r\n\r\n\t\t@InjectRepository(CandidateExperience)\r\n\t\tprivate readonly candidateExperienceRepository: Repository<\r\n\t\t\tCandidateExperience\r\n\t\t>,\r\n\r\n\t\t@InjectRepository(CandidateFeedback)\r\n\t\tprivate readonly candidateFeedbackRepository: Repository<\r\n\t\t\tCandidateFeedback\r\n\t\t>,\r\n\r\n\t\t@InjectRepository(CandidateInterview)\r\n\t\tprivate readonly candidateInterviewRepository: Repository<\r\n\t\t\tCandidateInterview\r\n\t\t>,\r\n\t\t@InjectRepository(CandidateInterviewers)\r\n\t\tprivate readonly candidateInterviewersRepository: Repository<\r\n\t\t\tCandidateInterviewers\r\n\t\t>,\r\n\r\n\t\t@InjectRepository(CandidatePersonalQualities)\r\n\t\tprivate readonly candidatePersonalQualitiesRepository: Repository<\r\n\t\t\tCandidatePersonalQualities\r\n\t\t>,\r\n\r\n\t\t@InjectRepository(CandidateSkill)\r\n\t\tprivate readonly candidateSkillRepository: Repository<CandidateSkill>,\r\n\r\n\t\t@InjectRepository(CandidateSource)\r\n\t\tprivate readonly candidateSourceRepository: Repository<CandidateSource>,\r\n\r\n\t\t@InjectRepository(CandidateTechnologies)\r\n\t\tprivate readonly candidateTechnologiesRepository: Repository<\r\n\t\t\tCandidateTechnologies\r\n\t\t>,\r\n\r\n\t\t@InjectRepository(Contact)\r\n\t\tprivate readonly contactRepository: Repository<Contact>,\r\n\r\n\t\t@InjectRepository(Country)\r\n\t\tprivate readonly countryRepository: Repository<Country>,\r\n\r\n\t\t@InjectRepository(Currency)\r\n\t\tprivate readonly currencyRepository: Repository<Currency>,\r\n\r\n\t\t@InjectRepository(Deal)\r\n\t\tprivate readonly dealRepository: Repository<Deal>,\r\n\r\n\t\t@InjectRepository(Email)\r\n\t\tprivate readonly emailRepository: Repository<Email>,\r\n\r\n\t\t@InjectRepository(EmailTemplate)\r\n\t\tprivate readonly emailTemplateRepository: Repository<EmailTemplate>,\r\n\r\n\t\t@InjectRepository(Employee)\r\n\t\tprivate readonly employeeRepository: Repository<Employee>,\r\n\r\n\t\t@InjectRepository(EmployeeAppointment)\r\n\t\tprivate readonly employeeAppointmentRepository: Repository<\r\n\t\t\tEmployeeAppointment\r\n\t\t>,\r\n\r\n\t\t@InjectRepository(EmployeeAward)\r\n\t\tprivate readonly employeeAwardRepository: Repository<EmployeeAward>,\r\n\r\n\t\t@InjectRepository(EmployeeProposalTemplate)\r\n\t\tprivate readonly employeeProposalTemplateRepository: Repository<\r\n\t\t\tEmployeeProposalTemplate\r\n\t\t>,\r\n\r\n\t\t@InjectRepository(EmployeeUpworkJobsSearchCriterion)\r\n\t\tprivate readonly employeeUpworkJobsSearchCriterionRepository: Repository<\r\n\t\t\tEmployeeUpworkJobsSearchCriterion\r\n\t\t>,\r\n\r\n\t\t@InjectRepository(EmployeeRecurringExpense)\r\n\t\tprivate readonly employeeRecurringExpenseRepository: Repository<\r\n\t\t\tEmployeeRecurringExpense\r\n\t\t>,\r\n\r\n\t\t@InjectRepository(EmployeeSetting)\r\n\t\tprivate readonly employeeSettingRepository: Repository<EmployeeSetting>,\r\n\r\n\t\t@InjectRepository(Equipment)\r\n\t\tprivate readonly equipmentRepository: Repository<Equipment>,\r\n\r\n\t\t@InjectRepository(EquipmentSharing)\r\n\t\tprivate readonly equipmentSharingRepository: Repository<\r\n\t\t\tEquipmentSharing\r\n\t\t>,\r\n\r\n\t\t@InjectRepository(EquipmentSharingPolicy)\r\n\t\tprivate readonly equipmentSharingPolicyRepository: Repository<\r\n\t\t\tEquipmentSharingPolicy\r\n\t\t>,\r\n\r\n\t\t@InjectRepository(EstimateEmail)\r\n\t\tprivate readonly estimateEmailRepository: Repository<EstimateEmail>,\r\n\r\n\t\t@InjectRepository(EventType)\r\n\t\tprivate readonly eventTypeRepository: Repository<EventType>,\r\n\r\n\t\t@InjectRepository(Expense)\r\n\t\tprivate readonly expenseRepository: Repository<Expense>,\r\n\r\n\t\t@InjectRepository(ExpenseCategory)\r\n\t\tprivate readonly expenseCategoryRepository: Repository<ExpenseCategory>,\r\n\r\n\t\t@InjectRepository(Goal)\r\n\t\tprivate readonly goalRepository: Repository<Goal>,\r\n\r\n\t\t@InjectRepository(GoalTemplate)\r\n\t\tprivate readonly goalTemplateRepository: Repository<GoalTemplate>,\r\n\r\n\t\t@InjectRepository(GoalGeneralSetting)\r\n\t\tprivate readonly goalGeneralSettingRepository: Repository<\r\n\t\t\tGoalGeneralSetting\r\n\t\t>,\r\n\r\n\t\t@InjectRepository(GoalKPI)\r\n\t\tprivate readonly goalKpiRepository: Repository<GoalKPI>,\r\n\r\n\t\t@InjectRepository(GoalKPITemplate)\r\n\t\tprivate readonly goalKpiTemplateRepository: Repository<GoalKPITemplate>,\r\n\r\n\t\t@InjectRepository(GoalTimeFrame)\r\n\t\tprivate readonly goalTimeFrameRepository: Repository<GoalTimeFrame>,\r\n\r\n\t\t@InjectRepository(HelpCenter)\r\n\t\tprivate readonly HelpCenterRepository: Repository<HelpCenter>,\r\n\r\n\t\t@InjectRepository(HelpCenterArticle)\r\n\t\tprivate readonly HelpCenterArticleRepository: Repository<\r\n\t\t\tHelpCenterArticle\r\n\t\t>,\r\n\r\n\t\t@InjectRepository(HelpCenterAuthor)\r\n\t\tprivate readonly HelpCenterAuthorRepository: Repository<\r\n\t\t\tHelpCenterAuthor\r\n\t\t>,\r\n\r\n\t\t@InjectRepository(Income)\r\n\t\tprivate readonly incomeRepository: Repository<Income>,\r\n\r\n\t\t@InjectRepository(Integration)\r\n\t\tprivate readonly integrationRepository: Repository<Integration>,\r\n\r\n\t\t@InjectRepository(IntegrationEntitySetting)\r\n\t\tprivate readonly integrationEntitySettingRepository: Repository<\r\n\t\t\tIntegrationEntitySetting\r\n\t\t>,\r\n\r\n\t\t@InjectRepository(IntegrationEntitySettingTiedEntity)\r\n\t\tprivate readonly integrationEntitySettingTiedEntityRepository: Repository<\r\n\t\t\tIntegrationEntitySettingTiedEntity\r\n\t\t>,\r\n\r\n\t\t@InjectRepository(IntegrationMap)\r\n\t\tprivate readonly IntegrationMapRepository: Repository<IntegrationMap>,\r\n\r\n\t\t@InjectRepository(IntegrationSetting)\r\n\t\tprivate readonly IntegrationSettingRepository: Repository<\r\n\t\t\tIntegrationSetting\r\n\t\t>,\r\n\r\n\t\t@InjectRepository(IntegrationTenant)\r\n\t\tprivate readonly integrationTenantRepository: Repository<\r\n\t\t\tIntegrationTenant\r\n\t\t>,\r\n\r\n\t\t@InjectRepository(Invite)\r\n\t\tprivate readonly inviteRepository: Repository<Invite>,\r\n\r\n\t\t@InjectRepository(Invoice)\r\n\t\tprivate readonly invoiceRepository: Repository<Invoice>,\r\n\r\n\t\t@InjectRepository(InvoiceEstimateHistory)\r\n\t\tprivate readonly invoiceEstimateHistoryRepository: Repository<\r\n\t\t\tInvoiceEstimateHistory\r\n\t\t>,\r\n\r\n\t\t@InjectRepository(InvoiceItem)\r\n\t\tprivate readonly invoiceItemRepository: Repository<InvoiceItem>,\r\n\r\n\t\t@InjectRepository(JobPreset)\r\n\t\tprivate readonly jobPresetRepository: Repository<JobPreset>,\r\n\r\n\t\t@InjectRepository(JobSearchCategory)\r\n\t\tprivate readonly jobSearchCategoryRepository: Repository<\r\n\t\t\tJobSearchCategory\r\n\t\t>,\r\n\r\n\t\t@InjectRepository(JobSearchOccupation)\r\n\t\tprivate readonly jobSearchOccupationRepository: Repository<\r\n\t\t\tJobSearchOccupation\r\n\t\t>,\r\n\r\n\t\t@InjectRepository(JobPresetUpworkJobSearchCriterion)\r\n\t\tprivate readonly jobPresetUpworkJobSearchCriterionRepository: Repository<\r\n\t\t\tJobPresetUpworkJobSearchCriterion\r\n\t\t>,\r\n\r\n\t\t@InjectRepository(KeyResult)\r\n\t\tprivate readonly keyResultRepository: Repository<KeyResult>,\r\n\r\n\t\t@InjectRepository(KeyResultTemplate)\r\n\t\tprivate readonly keyResultTemplateRepository: Repository<\r\n\t\t\tKeyResultTemplate\r\n\t\t>,\r\n\r\n\t\t@InjectRepository(KeyResultUpdate)\r\n\t\tprivate readonly keyResultUpdateRepository: Repository<KeyResultUpdate>,\r\n\r\n\t\t@InjectRepository(Language)\r\n\t\tprivate readonly languageRepository: Repository<Language>,\r\n\r\n\t\t@InjectRepository(Organization)\r\n\t\tprivate readonly organizationRepository: Repository<Organization>,\r\n\r\n\t\t@InjectRepository(EmployeeLevel)\r\n\t\tprivate readonly employeeLevelRepository: Repository<EmployeeLevel>,\r\n\r\n\t\t@InjectRepository(OrganizationAwards)\r\n\t\tprivate readonly organizationAwardsRepository: Repository<\r\n\t\t\tOrganizationAwards\r\n\t\t>,\r\n\r\n\t\t@InjectRepository(OrganizationContact)\r\n\t\tprivate readonly organizationContactRepository: Repository<\r\n\t\t\tOrganizationContact\r\n\t\t>,\r\n\r\n\t\t@InjectRepository(OrganizationDepartment)\r\n\t\tprivate readonly organizationDepartmentRepository: Repository<\r\n\t\t\tOrganizationDepartment\r\n\t\t>,\r\n\r\n\t\t@InjectRepository(OrganizationDocuments)\r\n\t\tprivate readonly organizationDocumentRepository: Repository<\r\n\t\t\tOrganizationDocuments\r\n\t\t>,\r\n\r\n\t\t@InjectRepository(OrganizationEmploymentType)\r\n\t\tprivate readonly organizationEmploymentTypeRepository: Repository<\r\n\t\t\tOrganizationEmploymentType\r\n\t\t>,\r\n\r\n\t\t@InjectRepository(OrganizationLanguages)\r\n\t\tprivate readonly organizationLanguagesRepository: Repository<\r\n\t\t\tOrganizationLanguages\r\n\t\t>,\r\n\r\n\t\t@InjectRepository(OrganizationPositions)\r\n\t\tprivate readonly organizationPositionsRepository: Repository<\r\n\t\t\tOrganizationPositions\r\n\t\t>,\r\n\r\n\t\t@InjectRepository(OrganizationProject)\r\n\t\tprivate readonly organizationProjectsRepository: Repository<\r\n\t\t\tOrganizationProject\r\n\t\t>,\r\n\r\n\t\t@InjectRepository(OrganizationRecurringExpense)\r\n\t\tprivate readonly organizationRecurringExpenseRepository: Repository<\r\n\t\t\tOrganizationRecurringExpense\r\n\t\t>,\r\n\r\n\t\t@InjectRepository(OrganizationSprint)\r\n\t\tprivate readonly sprintRepository: Repository<OrganizationSprint>,\r\n\r\n\t\t@InjectRepository(OrganizationTeam)\r\n\t\tprivate readonly organizationTeamRepository: Repository<\r\n\t\t\tOrganizationTeam\r\n\t\t>,\r\n\r\n\t\t@InjectRepository(OrganizationTeamEmployee)\r\n\t\tprivate readonly OrganizationTeamEmployeeRepository: Repository<\r\n\t\t\tOrganizationTeamEmployee\r\n\t\t>,\r\n\r\n\t\t@InjectRepository(OrganizationVendor)\r\n\t\tprivate readonly organizationVendorsRepository: Repository<\r\n\t\t\tOrganizationVendor\r\n\t\t>,\r\n\r\n\t\t@InjectRepository(Payment)\r\n\t\tprivate readonly paymentRepository: Repository<Payment>,\r\n\r\n\t\t@InjectRepository(Pipeline)\r\n\t\tprivate readonly pipelineRepository: Repository<Pipeline>,\r\n\r\n\t\t@InjectRepository(PipelineStage)\r\n\t\tprivate readonly stageRepository: Repository<PipelineStage>,\r\n\r\n\t\t@InjectRepository(Product)\r\n\t\tprivate readonly productRepository: Repository<Product>,\r\n\r\n\t\t@InjectRepository(ProductCategory)\r\n\t\tprivate readonly productCategoryRepository: Repository<ProductCategory>,\r\n\r\n\t\t@InjectRepository(ProductOption)\r\n\t\tprivate readonly productOptionRepository: Repository<ProductOption>,\r\n\r\n\t\t@InjectRepository(ProductVariantSettings)\r\n\t\tprivate readonly productVariantSettingsRepository: Repository<\r\n\t\t\tProductVariantSettings\r\n\t\t>,\r\n\r\n\t\t@InjectRepository(ProductType)\r\n\t\tprivate readonly productTypeRepository: Repository<ProductType>,\r\n\r\n\t\t@InjectRepository(ProductVariant)\r\n\t\tprivate readonly productVariantRepository: Repository<ProductVariant>,\r\n\r\n\t\t@InjectRepository(ProductVariantPrice)\r\n\t\tprivate readonly productVariantPriceRepository: Repository<\r\n\t\t\tProductVariantPrice\r\n\t\t>,\r\n\r\n\t\t@InjectRepository(Proposal)\r\n\t\tprivate readonly proposalRepository: Repository<Proposal>,\r\n\r\n\t\t@InjectRepository(Skill)\r\n\t\tprivate readonly skillRepository: Repository<Skill>,\r\n\r\n\t\t@InjectRepository(Screenshot)\r\n\t\tprivate readonly screenShotRepository: Repository<Screenshot>,\r\n\r\n\t\t@InjectRepository(RequestApproval)\r\n\t\tprivate readonly requestApprovalRepository: Repository<RequestApproval>,\r\n\r\n\t\t@InjectRepository(Role)\r\n\t\tprivate readonly roleRepository: Repository<Role>,\r\n\r\n\t\t@InjectRepository(RolePermissions)\r\n\t\tprivate readonly RolePermissionsRepository: Repository<RolePermissions>,\r\n\r\n\t\t@InjectRepository(Report)\r\n\t\tprivate readonly reportRepository: Repository<Report>,\r\n\r\n\t\t@InjectRepository(ReportCategory)\r\n\t\tprivate readonly reportCategoryRepository: Repository<ReportCategory>,\r\n\r\n\t\t@InjectRepository(ReportOrganization)\r\n\t\tprivate readonly reportOrganizationRepository: Repository<\r\n\t\t\tReportOrganization\r\n\t\t>,\r\n\r\n\t\t@InjectRepository(Tag)\r\n\t\tprivate readonly tagRepository: Repository<Tag>,\r\n\r\n\t\t@InjectRepository(Task)\r\n\t\tprivate readonly taskRepository: Repository<Task>,\r\n\r\n\t\t@InjectRepository(Tenant)\r\n\t\tprivate readonly tenantRepository: Repository<Tenant>,\r\n\r\n\t\t@InjectRepository(Timesheet)\r\n\t\tprivate readonly timeSheetRepository: Repository<Timesheet>,\r\n\r\n\t\t@InjectRepository(TimeLog)\r\n\t\tprivate readonly timeLogRepository: Repository<TimeLog>,\r\n\r\n\t\t@InjectRepository(TimeSlot)\r\n\t\tprivate readonly timeSlotRepository: Repository<TimeSlot>,\r\n\r\n\t\t@InjectRepository(TimeOffRequest)\r\n\t\tprivate readonly timeOffRequestRepository: Repository<TimeOffRequest>,\r\n\r\n\t\t@InjectRepository(TimeOffPolicy)\r\n\t\tprivate readonly timeOffPolicyRepository: Repository<TimeOffPolicy>,\r\n\r\n\t\t@InjectRepository(User)\r\n\t\tprivate readonly userRepository: Repository<User>,\r\n\r\n\t\t@InjectRepository(UserOrganization)\r\n\t\tprivate readonly userOrganizationRepository: Repository<\r\n\t\t\tUserOrganization\r\n\t\t>\r\n\t) {}\r\n\r\n\t__dirname = './import/csv/';\r\n\r\n\tconnection: Connection;\r\n\r\n\t/**\r\n\t * Warning: Changing position here can be FATAL\r\n\t */\r\n\torderedRepositories = {\r\n\t\t/**\r\n\t\t * These entities do not have any other dependency so need to be imported first\r\n\t\t */\r\n\t\tcountries: this.countryRepository,\r\n\t\tcurrencies: this.currencyRepository,\r\n\t\tskill: this.skillRepository, //TODO: This should be organization level but currently does not have any org detail\r\n\t\tlanguage: this.languageRepository,\r\n\t\ttenant: this.tenantRepository,\r\n\t\treport_category: this.reportCategoryRepository,\r\n\t\treport: this.reportRepository,\r\n\r\n\t\t/**\r\n\t\t * These entities need TENANT\r\n\t\t */\r\n\t\trole: this.roleRepository,\r\n\t\trole_permission: this.RolePermissionsRepository,\r\n\t\torganization: this.organizationRepository,\r\n\r\n\t\t/**\r\n\t\t * These entities need TENANT and ORGANIZATION\r\n\t\t */\r\n\t\tusers: this.userRepository,\r\n\t\tcandidate: this.candidateRepository,\r\n\t\tuser_organization: this.userOrganizationRepository,\r\n\t\tcontact: this.contactRepository,\r\n\t\treport_organization: this.reportOrganizationRepository,\r\n\t\tjob_preset: this.jobPresetRepository,\r\n\t\tjob_search_category: this.jobSearchCategoryRepository,\r\n\t\tjob_search_occupation: this.jobSearchOccupationRepository,\r\n\t\tjob_preset_upwork_job_search_criterion: this\r\n\t\t\t.jobPresetUpworkJobSearchCriterionRepository,\r\n\r\n\t\t/**\r\n\t\t * These entities need TENANT, ORGANIZATION & USER\r\n\t\t */\r\n\t\temployee: this.employeeRepository,\r\n\r\n\t\t/**\r\n\t\t * These entities need TENANT, ORGANIZATION & CANDIDATE\r\n\t\t */\r\n\t\tcandidate_documents: this.candidateDocumentRepository,\r\n\t\tcandidate_education: this.candidateEducationRepository,\r\n\t\tcandidate_experience: this.candidateExperienceRepository,\r\n\t\tcandidate_feedbacks: this.candidateFeedbackRepository,\r\n\t\tcandidate_interview: this.candidateInterviewRepository,\r\n\t\tcandidate_interviews: this.candidateInterviewersRepository,\r\n\t\tcandidate_personal_qualities: this.candidatePersonalQualitiesRepository,\r\n\t\tcandidate_creation_rating: this.candidateCriterionsRatingRepository,\r\n\t\tcandidate_skill: this.candidateSkillRepository,\r\n\t\tcandidate_source: this.candidateSourceRepository,\r\n\t\tcandidate_technologies: this.candidateTechnologiesRepository,\r\n\r\n\t\tactivity: this.activityRepository,\r\n\t\tapproval_policy: this.approvalPolicyRepository,\r\n\t\tavailability_slot: this.availabilitySlotsRepository,\r\n\t\tappointment_employee: this.appointmentEmployeesRepository,\r\n\r\n\t\tdeal: this.dealRepository,\r\n\t\temail_template: this.emailTemplateRepository,\r\n\t\testimate_email: this.estimateEmailRepository,\r\n\t\temail: this.emailRepository,\r\n\r\n\t\temployee_appointment: this.employeeAppointmentRepository,\r\n\t\temployee_award: this.employeeAwardRepository,\r\n\t\temployee_proposal_template: this.employeeProposalTemplateRepository,\r\n\t\temployee_recurring_expense: this.employeeRecurringExpenseRepository,\r\n\t\temployee_setting: this.employeeSettingRepository,\r\n\t\temployee_upwork_job_search_criterion: this\r\n\t\t\t.employeeUpworkJobsSearchCriterionRepository,\r\n\t\tequipment: this.equipmentRepository,\r\n\t\tequipment_sharing: this.equipmentSharingRepository,\r\n\t\tequipment_sharing_policy: this.equipmentSharingPolicyRepository,\r\n\t\tevent_types: this.eventTypeRepository,\r\n\t\texpense_category: this.expenseCategoryRepository,\r\n\t\texpense: this.expenseRepository,\r\n\t\tgoal_kpi: this.goalKpiRepository,\r\n\t\tgosl_kpi_template: this.goalKpiTemplateRepository,\r\n\t\tgoal_time_frame: this.goalTimeFrameRepository,\r\n\t\tgoal: this.goalRepository,\r\n\t\tgoal_template: this.goalTemplateRepository,\r\n\t\tgoal_general_setting: this.goalGeneralSettingRepository,\r\n\t\tincome: this.incomeRepository,\r\n\t\tintegration_tenant: this.integrationTenantRepository,\r\n\t\tintegration_entity_setting: this.integrationEntitySettingRepository,\r\n\t\tintegration_entity_setting_tied_entity: this\r\n\t\t\t.integrationEntitySettingTiedEntityRepository,\r\n\t\tintegration_map: this.IntegrationMapRepository,\r\n\t\tintegration_setting: this.IntegrationSettingRepository,\r\n\t\tintegration: this.integrationRepository,\r\n\t\tinvite: this.inviteRepository,\r\n\t\tinvoice_item: this.invoiceItemRepository,\r\n\t\tinvoice: this.invoiceRepository,\r\n\t\tinvoise_estimate_history: this.invoiceEstimateHistoryRepository,\r\n\t\tkey_result: this.keyResultRepository,\r\n\t\tkey_result_template: this.keyResultTemplateRepository,\r\n\t\tkey_result_update: this.keyResultUpdateRepository,\r\n\t\tknowledge_base: this.HelpCenterRepository,\r\n\t\tknowledge_base_article: this.HelpCenterArticleRepository,\r\n\t\tknowledge_base_author: this.HelpCenterAuthorRepository,\r\n\r\n\t\torganization_award: this.organizationAwardsRepository,\r\n\t\torganization_contact: this.organizationContactRepository,\r\n\t\torganization_department: this.organizationDepartmentRepository,\r\n\t\torganization_document: this.organizationDocumentRepository,\r\n\t\torganization_employee_level: this.employeeLevelRepository,\r\n\t\torganization_employment_type: this.organizationEmploymentTypeRepository,\r\n\t\torganization_language: this.organizationLanguagesRepository,\r\n\t\torganization_position: this.organizationPositionsRepository,\r\n\t\torganization_project: this.organizationProjectsRepository,\r\n\t\torganization_recurring_expense: this\r\n\t\t\t.organizationRecurringExpenseRepository,\r\n\t\torganization_sprint: this.sprintRepository,\r\n\t\torganization_team_employee: this.OrganizationTeamEmployeeRepository,\r\n\t\torganization_team: this.organizationTeamRepository,\r\n\t\torganization_vendor: this.organizationVendorsRepository,\r\n\r\n\t\tpipeline: this.pipelineRepository,\r\n\t\tproduct_category: this.productCategoryRepository,\r\n\t\tproduct_option: this.productOptionRepository,\r\n\t\tproduct_settings: this.productVariantSettingsRepository,\r\n\t\tproduct_type: this.productTypeRepository,\r\n\t\tproduct_variant_price: this.productVariantPriceRepository,\r\n\t\tproduct_variant: this.productVariantRepository,\r\n\t\tproduct: this.productRepository,\r\n\t\tproposal: this.proposalRepository,\r\n\t\tpayment: this.paymentRepository,\r\n\t\trequest_approval: this.requestApprovalRepository,\r\n\r\n\t\tscreenshot: this.screenShotRepository,\r\n\r\n\t\tstage: this.stageRepository,\r\n\t\ttag: this.tagRepository,\r\n\t\ttask: this.taskRepository,\r\n\r\n\t\ttime_log: this.timeLogRepository,\r\n\t\ttime_slot: this.timeSlotRepository,\r\n\t\ttime_off_policy: this.timeOffPolicyRepository,\r\n\t\ttime_off_request: this.timeOffRequestRepository,\r\n\t\ttimesheet: this.timeSheetRepository\r\n\t};\r\n\r\n\tasync createFolder(): Promise<any> {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tfs.access(`./import`, (error) => {\r\n\t\t\t\tif (!error) {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfs.mkdir(`./import`, { recursive: true }, (err) => {\r\n\t\t\t\t\t\tif (err) reject(err);\r\n\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tpublic removeExtractedFiles() {\r\n\t\ttry {\r\n\t\t\trimraf.sync(this.__dirname);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic async unzipAndParse(filePath, cleanup: boolean = false) {\r\n\t\tconst file = await new FileStorage().getProvider().getFile(filePath);\r\n\r\n\t\tawait unzipper.Open.buffer(file).then((d) =>\r\n\t\t\td.extract({ path: this.__dirname })\r\n\t\t);\r\n\r\n\t\tthis.parse(cleanup);\r\n\r\n\t\t// fs.createReadStream(file)\r\n\t\t// \t.pipe(unzipper.Extract({ path: this.__dirname }))\r\n\t\t// \t.on('close', () => {\r\n\t\t// \t\tconsole.log('Starting Import');\r\n\t\t// \t\tthis.parse(cleanup);\r\n\t\t// \t});\r\n\t}\r\n\r\n\tparse(cleanup: boolean = false) {\r\n\t\t/**\r\n\t\t * Can only run in a particular order\r\n\t\t */\r\n\t\tfor (const i of Object.keys(this.orderedRepositories)) {\r\n\t\t\tif (!fs.existsSync(this.__dirname + i + '.csv')) {\r\n\t\t\t\t// console.log('File Does Not Exist, Skipping: ', i);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tconsole.log('File Exists:', this.__dirname + i + '.csv');\r\n\r\n\t\t\tconst results = [];\r\n\r\n\t\t\t/**\r\n\t\t\t * This will first collect all the data and then insert\r\n\t\t\t * If cleanup flag is set then it will also truncate the database table with CASCADE\r\n\t\t\t */\r\n\t\t\tfs.createReadStream(this.__dirname + i + '.csv')\r\n\t\t\t\t.pipe(csv())\r\n\t\t\t\t.on('data', (data) => {\r\n\t\t\t\t\tdata = this.mappedTimestampsFields(data);\r\n\t\t\t\t\tresults.push(data);\r\n\t\t\t\t})\r\n\t\t\t\t.on('end', async () => {\r\n\t\t\t\t\tif (cleanup) {\r\n\t\t\t\t\t\tawait this.orderedRepositories[i].query(\r\n\t\t\t\t\t\t\t`TRUNCATE  \"${this.orderedRepositories[i].metadata.tableName}\" RESTART IDENTITY CASCADE;`\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.orderedRepositories[i].insert(results);\r\n\t\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/*\r\n\t * Add missing timestamps fields here\r\n\t */\r\n\tmappedTimestampsFields(data) {\r\n\t\tif (data.hasOwnProperty('createdAt')) {\r\n\t\t\tdata['createdAt'] = convertToDatetime(data['createdAt']);\r\n\t\t}\r\n\t\tif (data.hasOwnProperty('updatedAt')) {\r\n\t\t\tdata['updatedAt'] = convertToDatetime(data['updatedAt']);\r\n\t\t}\r\n\t\tif (data.hasOwnProperty('recordedAt')) {\r\n\t\t\tdata['recordedAt'] = convertToDatetime(data['recordedAt']);\r\n\t\t}\r\n\t\tif (data.hasOwnProperty('deletedAt')) {\r\n\t\t\tdata['deletedAt'] = convertToDatetime(data['deletedAt']);\r\n\t\t}\r\n\t\treturn data;\r\n\t}\r\n\r\n\tngOnDestroy() {}\r\n}\r\n","export { ImportAllModule } from './import-all.module';\r\nexport { ImportAllService } from './import-all.service';\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { IFeatureOrganizationUpdateInput } from '@gauzy/models';\r\n\r\nexport class FeatureToggleUpdateCommand implements ICommand {\r\n\tstatic readonly type = '[Feature] Toggle Update';\r\n\r\n\tconstructor(public readonly input: IFeatureOrganizationUpdateInput) {}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { FeatureService } from '../../feature.service';\r\nimport { FeatureToggleUpdateCommand } from '../feature-toggle.update.command';\r\n\r\n@CommandHandler(FeatureToggleUpdateCommand)\r\nexport class FeatureToggleUpdateHandler\r\n\timplements ICommandHandler<FeatureToggleUpdateCommand> {\r\n\tconstructor(private readonly featureService: FeatureService) {}\r\n\r\n\tpublic async execute(command: FeatureToggleUpdateCommand): Promise<any> {\r\n\t\tconst { input } = command;\r\n\t\treturn this.featureService.updateFeatureOrganization(input);\r\n\t}\r\n}\r\n","import { FeatureToggleUpdateHandler } from './feature-toggle.update.handler';\r\n\r\nexport const CommandHandlers = [FeatureToggleUpdateHandler];\r\n","import { gauzyToggleFeatures } from '@env-api/environment';\r\nimport { IFeatureCreateInput } from '@gauzy/models';\r\n\r\nconst features = gauzyToggleFeatures;\r\n\r\nexport const DEFAULT_FEATURES: IFeatureCreateInput[] = [\r\n\t{\r\n\t\tname: 'Dashboard',\r\n\t\tcode: 'FEATURE_DASHBOARD',\r\n\t\tdescription:\r\n\t\t\t'Go to dashboard, Manage Employee Statistics, Time Tracking Dashboard',\r\n\t\timage: 'dashboard.png',\r\n\t\tlink: 'dashboard/accounting',\r\n\t\tisEnabled: features.FEATURE_DASHBOARD,\r\n\t\ticon: 'home-outline',\r\n\t\tstatus: 'info'\r\n\t},\r\n\t{\r\n\t\tname: 'Time Tracking',\r\n\t\tcode: 'FEATURE_TIME_TRACKING',\r\n\t\tdescription: 'Download Desktop App, Create First Timesheet',\r\n\t\timage: 'time-tracking-timesheet.png',\r\n\t\tlink: 'employees/timesheets',\r\n\t\tisEnabled: features.FEATURE_TIME_TRACKING,\r\n\t\ticon: 'file-text-outline',\r\n\t\tstatus: 'primary'\r\n\t},\r\n\t{\r\n\t\tname: 'Estimate',\r\n\t\tcode: 'FEATURE_ESTIMATE',\r\n\t\tdescription: 'Manage Estimate, Create First Estimate',\r\n\t\timage: 'estimate.png',\r\n\t\tlink: 'accounting/invoices/estimates',\r\n\t\tisEnabled: features.FEATURE_ESTIMATE,\r\n\t\ticon: 'file-text-outline',\r\n\t\tstatus: 'success',\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\tname: 'Estimate Received',\r\n\t\t\t\tcode: 'FEATURE_ESTIMATE_RECEIVED',\r\n\t\t\t\tdescription:\r\n\t\t\t\t\t'Manage Received Estimate, Accept and Reject Estimate',\r\n\t\t\t\timage: 'estimate-received.png',\r\n\t\t\t\tlink: 'accounting/invoices/estimates',\r\n\t\t\t\tisEnabled: features.FEATURE_ESTIMATE_RECEIVED,\r\n\t\t\t\ticon: 'file-text-outline',\r\n\t\t\t\tstatus: 'warning'\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tname: 'Invoice',\r\n\t\tcode: 'FEATURE_INVOICE',\r\n\t\tdescription: 'Manage Invoice, Create First Invoice',\r\n\t\timage: 'invoice.png',\r\n\t\tlink: 'accounting/invoices',\r\n\t\tisEnabled: features.FEATURE_INVOICE,\r\n\t\ticon: 'file-text-outline',\r\n\t\tstatus: 'warning',\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\tname: 'Invoice Received',\r\n\t\t\t\tcode: 'FEATURE_INVOICE_RECEIVED',\r\n\t\t\t\tdescription: 'View Received Invoice',\r\n\t\t\t\timage: 'invoice-received.png',\r\n\t\t\t\tlink: 'accounting/invoices/received-invoices',\r\n\t\t\t\tisEnabled: features.FEATURE_INVOICE_RECEIVED,\r\n\t\t\t\ticon: 'file-text-outline',\r\n\t\t\t\tstatus: 'info'\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tname: 'Income',\r\n\t\tcode: 'FEATURE_INCOME',\r\n\t\tdescription: 'Create First Income',\r\n\t\timage: 'income.png',\r\n\t\tlink: 'accounting/income',\r\n\t\tisEnabled: features.FEATURE_INCOME,\r\n\t\ticon: 'file-text-outline',\r\n\t\tstatus: 'primary'\r\n\t},\r\n\t{\r\n\t\tname: 'Expense',\r\n\t\tcode: 'FEATURE_EXPENSE',\r\n\t\tdescription: 'Create First Expense',\r\n\t\timage: 'expense.png',\r\n\t\tlink: 'accounting/expenses',\r\n\t\tisEnabled: features.FEATURE_EXPENSE,\r\n\t\ticon: 'file-text-outline',\r\n\t\tstatus: 'info',\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\tname: 'Employee Recurring Expense',\r\n\t\t\t\tcode: 'FEATURE_EMPLOYEE_RECURRING_EXPENSE',\r\n\t\t\t\tdescription: 'Manage Employee Recurring Expense',\r\n\t\t\t\timage: 'recurring-expense.png',\r\n\t\t\t\tlink: 'employees/recurring-expenses',\r\n\t\t\t\tisEnabled: features.FEATURE_EMPLOYEE_RECURRING_EXPENSE,\r\n\t\t\t\ticon: 'file-text-outline',\r\n\t\t\t\tstatus: 'primary'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Organization Recurring Expenses',\r\n\t\t\t\tcode: 'FEATURE_ORGANIZATION_RECURRING_EXPENSE',\r\n\t\t\t\tdescription:\r\n\t\t\t\t\t'Manage Organization Recurring Expenses, Create First Recurring Expenses',\r\n\t\t\t\timage: 'organization-recurring-expense.png',\r\n\t\t\t\tlink: 'organization/expense-recurring',\r\n\t\t\t\tisEnabled: features.FEATURE_ORGANIZATION_RECURRING_EXPENSE,\r\n\t\t\t\ticon: 'file-text-outline',\r\n\t\t\t\tstatus: 'warning'\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tname: 'Payment',\r\n\t\tcode: 'FEATURE_PAYMENT',\r\n\t\tdescription: 'Manage Payment, Create First Payment',\r\n\t\timage: 'payment.png',\r\n\t\tlink: 'accounting/payments',\r\n\t\tisEnabled: features.FEATURE_PAYMENT,\r\n\t\ticon: 'file-text-outline',\r\n\t\tstatus: 'success'\r\n\t},\r\n\t{\r\n\t\tname: 'Proposal',\r\n\t\tcode: 'FEATURE_PROPOSAL',\r\n\t\tdescription: 'Manage Proposal, Register First Proposal',\r\n\t\timage: 'proposal.png',\r\n\t\tlink: 'sales/proposals',\r\n\t\tisEnabled: features.FEATURE_PROPOSAL,\r\n\t\ticon: 'file-text-outline',\r\n\t\tstatus: 'warning',\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\tname: 'Proposal Template',\r\n\t\t\t\tcode: 'FEATURE_PROPOSAL_TEMPLATE',\r\n\t\t\t\tdescription: 'Create First Proposal Template',\r\n\t\t\t\timage: 'proposal-template.png',\r\n\t\t\t\tlink: 'jobs/proposal-template',\r\n\t\t\t\tisEnabled: features.FEATURE_PROPOSAL_TEMPLATE,\r\n\t\t\t\ticon: 'file-text-outline',\r\n\t\t\t\tstatus: 'primary'\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tname: 'Sales Pipeline',\r\n\t\tcode: 'FEATURE_PIPELINE',\r\n\t\tdescription: 'Create Sales Pipeline',\r\n\t\timage: 'pipeline.png',\r\n\t\tlink: 'sales/pipelines',\r\n\t\tisEnabled: features.FEATURE_PIPELINE,\r\n\t\ticon: 'file-text-outline',\r\n\t\tstatus: 'info',\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\tname: 'Sales Pipeline Deal',\r\n\t\t\t\tcode: 'FEATURE_PIPELINE_DEAL',\r\n\t\t\t\tdescription: 'Create Sales Pipeline Deal',\r\n\t\t\t\timage: 'pipeline-deal.png',\r\n\t\t\t\tlink: 'sales/pipelines',\r\n\t\t\t\tisEnabled: features.FEATURE_PIPELINE_DEAL,\r\n\t\t\t\ticon: 'file-text-outline',\r\n\t\t\t\tstatus: 'success'\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tname: 'Task Dashboard',\r\n\t\tcode: 'FEATURE_DASHBOARD_TASK',\r\n\t\tdescription: 'Task Dashboard',\r\n\t\timage: 'task-dashboard.png',\r\n\t\tlink: 'tasks/dashboard',\r\n\t\tisEnabled: features.FEATURE_DASHBOARD_TASK,\r\n\t\ticon: 'file-text-outline',\r\n\t\tstatus: 'primary',\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\tname: 'Team Task Dashboard',\r\n\t\t\t\tcode: 'FEATURE_TEAM_TASK',\r\n\t\t\t\tdescription: 'Team Task Dashboard',\r\n\t\t\t\timage: 'team-task.png',\r\n\t\t\t\tlink: 'tasks/team',\r\n\t\t\t\tisEnabled: features.FEATURE_TEAM_TASK,\r\n\t\t\t\ticon: 'file-text-outline',\r\n\t\t\t\tstatus: 'info'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'My Task Dashboard',\r\n\t\t\t\tcode: 'FEATURE_MY_TASK',\r\n\t\t\t\tdescription: 'My Task Dashboard',\r\n\t\t\t\timage: 'team-task.png',\r\n\t\t\t\tlink: 'tasks/me',\r\n\t\t\t\tisEnabled: features.FEATURE_MY_TASK,\r\n\t\t\t\ticon: 'file-text-outline',\r\n\t\t\t\tstatus: 'success'\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tname: 'Jobs',\r\n\t\tcode: 'FEATURE_JOB',\r\n\t\tdescription: 'Job Search & Jobs Matching',\r\n\t\timage: 'job.png',\r\n\t\tlink: 'jobs/search',\r\n\t\tisEnabled: features.FEATURE_JOB,\r\n\t\ticon: 'file-text-outline',\r\n\t\tstatus: 'warning'\r\n\t},\r\n\t{\r\n\t\tname: 'Employees',\r\n\t\tcode: 'FEATURE_EMPLOYEES',\r\n\t\tdescription: 'Manage Employees, Add or Invite Employees',\r\n\t\timage: 'employee.png',\r\n\t\tlink: 'employees',\r\n\t\tisEnabled: features.FEATURE_EMPLOYEES,\r\n\t\ticon: 'file-text-outline',\r\n\t\tstatus: 'success',\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\tname: 'Employee Level',\r\n\t\t\t\tcode: 'FEATURE_EMPLOYEE_LEVEL',\r\n\t\t\t\tdescription: 'Manage Employee Level',\r\n\t\t\t\timage: 'employee-level.png',\r\n\t\t\t\tlink: 'employees/employee-level',\r\n\t\t\t\tisEnabled: features.FEATURE_EMPLOYEE_LEVEL,\r\n\t\t\t\ticon: 'file-text-outline',\r\n\t\t\t\tstatus: 'warning'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Employee Position',\r\n\t\t\t\tcode: 'FEATURE_EMPLOYEE_POSITION',\r\n\t\t\t\tdescription: 'Manage Employee Position',\r\n\t\t\t\timage: 'position.png',\r\n\t\t\t\tlink: 'employees/positions',\r\n\t\t\t\tisEnabled: features.FEATURE_EMPLOYEE_POSITION,\r\n\t\t\t\ticon: 'file-text-outline',\r\n\t\t\t\tstatus: 'success'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Employee Time Off',\r\n\t\t\t\tcode: 'FEATURE_EMPLOYEE_TIMEOFF',\r\n\t\t\t\tdescription: 'Manage Employee Time Off',\r\n\t\t\t\timage: 'timeoff.png',\r\n\t\t\t\tlink: 'employees/time-off',\r\n\t\t\t\tisEnabled: features.FEATURE_EMPLOYEE_TIMEOFF,\r\n\t\t\t\ticon: 'file-text-outline',\r\n\t\t\t\tstatus: 'info'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Employee Approval',\r\n\t\t\t\tcode: 'FEATURE_EMPLOYEE_APPROVAL',\r\n\t\t\t\tdescription: 'Employee Approval Request',\r\n\t\t\t\timage: 'approval.png',\r\n\t\t\t\tlink: 'employees/approvals',\r\n\t\t\t\tisEnabled: features.FEATURE_EMPLOYEE_APPROVAL,\r\n\t\t\t\ticon: 'file-text-outline',\r\n\t\t\t\tstatus: 'success'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Employee Approval Policy',\r\n\t\t\t\tcode: 'FEATURE_EMPLOYEE_APPROVAL_POLICY',\r\n\t\t\t\tdescription: 'Manage Employee Approval Request Policy',\r\n\t\t\t\timage: 'approval-policy.png',\r\n\t\t\t\tlink: 'organization/approval-policy',\r\n\t\t\t\tisEnabled: features.FEATURE_EMPLOYEE_APPROVAL_POLICY,\r\n\t\t\t\ticon: 'file-text-outline',\r\n\t\t\t\tstatus: 'info'\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tname: 'Time Activity',\r\n\t\tcode: 'FEATURE_EMPLOYEE_TIME_ACTIVITY',\r\n\t\tdescription:\r\n\t\t\t'Manage Time Activity, Screenshots, App, Visited Sites, Activities',\r\n\t\timage: 'screenshot.png',\r\n\t\tlink: 'employees/activity',\r\n\t\tisEnabled: features.FEATURE_EMPLOYEE_TIME_ACTIVITY,\r\n\t\ticon: 'file-text-outline',\r\n\t\tstatus: 'primary'\r\n\t},\r\n\t{\r\n\t\tname: 'Timesheet',\r\n\t\tcode: 'FEATURE_EMPLOYEE_TIMESHEETS',\r\n\t\tdescription:\r\n\t\t\t'Manage Employee Timesheet Daily, Weekly, Calendar, Create First Timesheet',\r\n\t\timage: 'timesheet.png',\r\n\t\tlink: 'employees/timesheets/daily',\r\n\t\tisEnabled: features.FEATURE_EMPLOYEE_TIMESHEETS,\r\n\t\ticon: 'file-text-outline',\r\n\t\tstatus: 'info'\r\n\t},\r\n\t{\r\n\t\tname: 'Appointment & Schedule',\r\n\t\tcode: 'FEATURE_EMPLOYEE_APPOINTMENT',\r\n\t\tdescription:\r\n\t\t\t'Employee Appointment, Schedules & Book Public Appointment',\r\n\t\timage: 'appointment.png',\r\n\t\tlink: 'employees/appointments',\r\n\t\tisEnabled: features.FEATURE_EMPLOYEE_APPOINTMENT,\r\n\t\ticon: 'file-text-outline',\r\n\t\tstatus: 'warning'\r\n\t},\r\n\t{\r\n\t\tname: 'Candidate',\r\n\t\tcode: 'FEATURE_EMPLOYEE_CANDIDATE',\r\n\t\tdescription: 'Manage Candidates, Interviews & Invites',\r\n\t\timage: 'candidate.png',\r\n\t\tlink: 'employees/candidates',\r\n\t\tisEnabled: features.FEATURE_EMPLOYEE_CANDIDATE,\r\n\t\ticon: 'file-text-outline',\r\n\t\tstatus: 'success',\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\tname: 'Manage Interview',\r\n\t\t\t\tcode: 'FEATURE_MANAGE_INTERVIEW',\r\n\t\t\t\tdescription: 'Manage Candidate Interviews',\r\n\t\t\t\timage: 'interview.png',\r\n\t\t\t\tlink: 'employees/candidates/interviews/calendar',\r\n\t\t\t\tisEnabled: features.FEATURE_MANAGE_INTERVIEW,\r\n\t\t\t\ticon: 'file-text-outline',\r\n\t\t\t\tstatus: 'warning'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Manage Invite',\r\n\t\t\t\tcode: 'FEATURE_MANAGE_INVITE',\r\n\t\t\t\tdescription: 'Manage Invites, Create First Candidate Invites',\r\n\t\t\t\timage: 'invite.png',\r\n\t\t\t\tlink: 'employees/candidates/invites',\r\n\t\t\t\tisEnabled: features.FEATURE_MANAGE_INVITE,\r\n\t\t\t\ticon: 'file-text-outline',\r\n\t\t\t\tstatus: 'primary'\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tname: 'Manage Organization',\r\n\t\tcode: 'FEATURE_ORGANIZATION',\r\n\t\tdescription: 'Manage Organization Details, Location and Settings',\r\n\t\timage: 'organization-detail.png',\r\n\t\tlink: 'organizations',\r\n\t\tisEnabled: features.FEATURE_ORGANIZATION,\r\n\t\ticon: 'file-text-outline',\r\n\t\tstatus: 'info',\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\tname: 'Help Center',\r\n\t\t\t\tcode: 'FEATURE_ORGANIZATION_HELP_CENTER',\r\n\t\t\t\tdescription: 'Find out more about how to use Gauzy',\r\n\t\t\t\timage: 'help.png',\r\n\t\t\t\tlink: 'help',\r\n\t\t\t\tisEnabled: features.FEATURE_ORGANIZATION_HELP_CENTER,\r\n\t\t\t\ticon: 'file-text-outline',\r\n\t\t\t\tstatus: 'primary'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Organization Tag',\r\n\t\t\t\tcode: 'FEATURE_ORGANIZATION_TAG',\r\n\t\t\t\tdescription: 'Manage Organization Tag, Create First Tag',\r\n\t\t\t\timage: 'tag.png',\r\n\t\t\t\tlink: 'organization/tags',\r\n\t\t\t\tisEnabled: features.FEATURE_ORGANIZATION_TAG,\r\n\t\t\t\ticon: 'file-text-outline',\r\n\t\t\t\tstatus: 'primary'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Organization Equipment',\r\n\t\t\t\tcode: 'FEATURE_ORGANIZATION_EQUIPMENT',\r\n\t\t\t\tdescription:\r\n\t\t\t\t\t'Manage Organization Equipment, Create First Equipment',\r\n\t\t\t\timage: 'equipment.png',\r\n\t\t\t\tlink: 'organization/equipment',\r\n\t\t\t\tisEnabled: features.FEATURE_ORGANIZATION_EQUIPMENT,\r\n\t\t\t\ticon: 'file-text-outline',\r\n\t\t\t\tstatus: 'warning'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Organization Vendor',\r\n\t\t\t\tcode: 'FEATURE_ORGANIZATION_VENDOR',\r\n\t\t\t\tdescription: 'Manage Organization Vendor, Create First Vendor',\r\n\t\t\t\timage: 'vendor.png',\r\n\t\t\t\tlink: 'organization/vendors',\r\n\t\t\t\tisEnabled: features.FEATURE_ORGANIZATION_VENDOR,\r\n\t\t\t\ticon: 'file-text-outline',\r\n\t\t\t\tstatus: 'primary'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Organization Department',\r\n\t\t\t\tcode: 'FEATURE_ORGANIZATION_DEPARTMENT',\r\n\t\t\t\tdescription:\r\n\t\t\t\t\t'Manage Organization Department, Create First Department',\r\n\t\t\t\timage: 'department.png',\r\n\t\t\t\tlink: 'organization/departments',\r\n\t\t\t\tisEnabled: features.FEATURE_ORGANIZATION_DEPARTMENT,\r\n\t\t\t\ticon: 'file-text-outline',\r\n\t\t\t\tstatus: 'success'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Organization Employment Type',\r\n\t\t\t\tcode: 'FEATURE_ORGANIZATION_EMPLOYMENT_TYPE',\r\n\t\t\t\tdescription: 'Manage Organization Employment Type',\r\n\t\t\t\timage: 'employment-type.png',\r\n\t\t\t\tlink: 'organization/employment-types',\r\n\t\t\t\tisEnabled: features.FEATURE_ORGANIZATION_EMPLOYMENT_TYPE,\r\n\t\t\t\ticon: 'file-text-outline',\r\n\t\t\t\tstatus: 'success'\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tname: 'Product Inventory',\r\n\t\tcode: 'FEATURE_ORGANIZATION_INVENTORY',\r\n\t\tdescription: 'Manage Product Inventory, Create First Product',\r\n\t\timage: 'inventory.png',\r\n\t\tlink: 'organization/inventory/all',\r\n\t\tisEnabled: features.FEATURE_ORGANIZATION_INVENTORY,\r\n\t\ticon: 'file-text-outline',\r\n\t\tstatus: 'primary'\r\n\t},\r\n\t{\r\n\t\tname: 'Project',\r\n\t\tcode: 'FEATURE_ORGANIZATION_PROJECT',\r\n\t\tdescription: 'Manage Project, Create First Project',\r\n\t\timage: 'project.png',\r\n\t\tlink: 'organization/projects',\r\n\t\tisEnabled: features.FEATURE_ORGANIZATION_PROJECT,\r\n\t\ticon: 'file-text-outline',\r\n\t\tstatus: 'success'\r\n\t},\r\n\t{\r\n\t\tname: 'Organization Team',\r\n\t\tcode: 'FEATURE_ORGANIZATION_TEAM',\r\n\t\tdescription: 'Manage Organization Team, Create First Team',\r\n\t\timage: 'team.png',\r\n\t\tlink: 'organization/teams',\r\n\t\tisEnabled: features.FEATURE_ORGANIZATION_TEAM,\r\n\t\ticon: 'file-text-outline',\r\n\t\tstatus: 'warning'\r\n\t},\r\n\t{\r\n\t\tname: 'Organization Document',\r\n\t\tcode: 'FEATURE_ORGANIZATION_DOCUMENT',\r\n\t\tdescription: 'Manage Organization Document, Create First Document',\r\n\t\timage: 'document.png',\r\n\t\tlink: 'organization/documents',\r\n\t\tisEnabled: features.FEATURE_ORGANIZATION_DOCUMENT,\r\n\t\ticon: 'file-text-outline',\r\n\t\tstatus: 'primary'\r\n\t},\r\n\t{\r\n\t\tname: 'Lead, Customer & Client',\r\n\t\tcode: 'FEATURE_CONTACT',\r\n\t\tdescription:\r\n\t\t\t'Manage Leads, Customers and Clients, Create First Customer/Clients',\r\n\t\timage: 'contact.png',\r\n\t\tlink: 'contacts/customers',\r\n\t\tisEnabled: features.FEATURE_CONTACT,\r\n\t\ticon: 'file-text-outline',\r\n\t\tstatus: 'info'\r\n\t},\r\n\t{\r\n\t\tname: 'Goal and Objective',\r\n\t\tcode: 'FEATURE_GOAL',\r\n\t\tdescription: 'Manage Goals and Objectives',\r\n\t\timage: 'goal.png',\r\n\t\tlink: 'goals',\r\n\t\tisEnabled: features.FEATURE_GOAL,\r\n\t\ticon: 'file-text-outline',\r\n\t\tstatus: 'warning',\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\tname: 'Goal Time Frame & KPI',\r\n\t\t\t\tcode: 'FEATURE_GOAL_SETTING',\r\n\t\t\t\tdescription: 'Manage Goal Time Framework & KPIs',\r\n\t\t\t\timage: 'goal-setting.png',\r\n\t\t\t\tlink: 'goals/settings',\r\n\t\t\t\tisEnabled: features.FEATURE_GOAL_SETTING,\r\n\t\t\t\ticon: 'file-text-outline',\r\n\t\t\t\tstatus: 'success'\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tname: 'All Report',\r\n\t\tcode: 'FEATURE_REPORT',\r\n\t\tdescription: 'Manage Expense, Weekly, Time & Activity and etc reports',\r\n\t\timage: 'all-report.png',\r\n\t\tlink: 'reports/all',\r\n\t\tisEnabled: features.FEATURE_REPORT,\r\n\t\ticon: 'file-text-outline',\r\n\t\tstatus: 'success'\r\n\t},\r\n\t{\r\n\t\tname: 'Users',\r\n\t\tcode: 'FEATURE_USER',\r\n\t\tdescription: 'Manage Tenant Users',\r\n\t\timage: 'user.png',\r\n\t\tlink: 'users',\r\n\t\tisEnabled: features.FEATURE_USER,\r\n\t\ticon: 'file-text-outline',\r\n\t\tstatus: 'primary'\r\n\t},\r\n\t{\r\n\t\tname: 'Organizations',\r\n\t\tcode: 'FEATURE_ORGANIZATIONS',\r\n\t\tdescription: 'Manage Tenant Organizations',\r\n\t\timage: 'organization.png',\r\n\t\tlink: 'organizations',\r\n\t\tisEnabled: features.FEATURE_ORGANIZATIONS,\r\n\t\ticon: 'file-text-outline',\r\n\t\tstatus: 'success'\r\n\t},\r\n\t{\r\n\t\tname: 'Apps & Integrations',\r\n\t\tcode: 'FEATURE_APP_INTEGRATION',\r\n\t\tdescription:\r\n\t\t\t'Manage Available Apps & Integrations Like Upwork & Hubstaff',\r\n\t\timage: 'app-integration.png',\r\n\t\tlink: 'integrations/list',\r\n\t\tisEnabled: features.FEATURE_APP_INTEGRATION,\r\n\t\ticon: 'file-text-outline',\r\n\t\tstatus: 'warning'\r\n\t},\r\n\t{\r\n\t\tname: 'Email History',\r\n\t\tcode: 'FEATURE_EMAIL_HISTORY',\r\n\t\tdescription: 'Manage Email History',\r\n\t\timage: 'email-history.png',\r\n\t\tlink: 'settings/email-history',\r\n\t\tisEnabled: features.FEATURE_EMAIL_HISTORY,\r\n\t\ticon: 'file-text-outline',\r\n\t\tstatus: 'info',\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\tname: 'Custom Email Template',\r\n\t\t\t\tcode: 'FEATURE_EMAIL_TEMPLATE',\r\n\t\t\t\tdescription: 'Customize Email Template',\r\n\t\t\t\timage: 'email-template.png',\r\n\t\t\t\tlink: 'settings/email-templates',\r\n\t\t\t\tisEnabled: features.FEATURE_EMAIL_TEMPLATE,\r\n\t\t\t\ticon: 'file-text-outline',\r\n\t\t\t\tstatus: 'info'\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tname: 'Setting',\r\n\t\tcode: 'FEATURE_SETTING',\r\n\t\tdescription: 'Manage Setting',\r\n\t\timage: 'email-history.png',\r\n\t\tlink: 'settings',\r\n\t\tisEnabled: features.FEATURE_SETTING,\r\n\t\ticon: 'file-text-outline',\r\n\t\tstatus: 'primary',\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\tname: 'File Storage',\r\n\t\t\t\tcode: 'FEATURE_FILE_STORAGE',\r\n\t\t\t\tdescription: 'Manage File Storage Provider',\r\n\t\t\t\timage: 'file-storage.png',\r\n\t\t\t\tlink: 'settings/file-storage',\r\n\t\t\t\tisEnabled: features.FEATURE_FILE_STORAGE,\r\n\t\t\t\ticon: 'file-text-outline',\r\n\t\t\t\tstatus: 'info'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'SMS Gateway',\r\n\t\t\t\tcode: 'FEATURE_SMS_GATEWAY',\r\n\t\t\t\tdescription: 'Manage SMS Gateway',\r\n\t\t\t\timage: 'sms-gateway.png',\r\n\t\t\t\tlink: 'tasks/me',\r\n\t\t\t\tisEnabled: features.FEATURE_SMS_GATEWAY,\r\n\t\t\t\ticon: 'file-text-outline',\r\n\t\t\t\tstatus: 'primary'\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tname: 'Entity Import & Export',\r\n\t\tcode: 'FEATURE_IMPORT_EXPORT',\r\n\t\tdescription: 'Manage Entity Import and Export',\r\n\t\timage: 'import.png',\r\n\t\tlink: 'settings/import-export',\r\n\t\tisEnabled: features.FEATURE_IMPORT_EXPORT,\r\n\t\ticon: 'file-text-outline',\r\n\t\tstatus: 'warning'\r\n\t},\r\n\t{\r\n\t\tname: 'Custom SMTP',\r\n\t\tcode: 'FEATURE_SMTP',\r\n\t\tdescription: 'Manage Tenant & Organization Custom SMTP',\r\n\t\timage: 'smtp.png',\r\n\t\tlink: 'settings/custom-smtp',\r\n\t\tisEnabled: features.FEATURE_SMTP,\r\n\t\ticon: 'file-text-outline',\r\n\t\tstatus: 'success'\r\n\t},\r\n\t{\r\n\t\tname: 'Roles & Permissions',\r\n\t\tcode: 'FEATURE_ROLES_PERMISSION',\r\n\t\tdescription: 'Manage Roles & Permissions',\r\n\t\timage: 'role-permission.png',\r\n\t\tlink: 'settings/roles',\r\n\t\tisEnabled: features.FEATURE_ROLES_PERMISSION,\r\n\t\ticon: 'home-outline',\r\n\t\tstatus: 'primary'\r\n\t}\r\n];\r\n","import {\r\n\tBody,\r\n\tController,\r\n\tGet,\r\n\tHttpStatus,\r\n\tPost,\r\n\tQuery,\r\n\tUseGuards\r\n} from '@nestjs/common';\r\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\r\nimport { Feature } from './feature.entity';\r\nimport { FeatureService } from './feature.service';\r\nimport * as unleash from 'unleash-client';\r\nimport { FeatureInterface } from 'unleash-client/lib/feature';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { FeatureEnum, IFeatureOrganizationUpdateInput } from '@gauzy/models';\r\nimport { CommandBus } from '@nestjs/cqrs';\r\nimport { FeatureToggleUpdateCommand } from './commands/feature-toggle.update.command';\r\n\r\n@ApiTags('Feature')\r\n@Controller()\r\nexport class FeaturesToggleController {\r\n\tconstructor(\r\n\t\tprivate readonly featureService: FeatureService,\r\n\t\tprivate readonly commandBus: CommandBus\r\n\t) {}\r\n\r\n\t@Get()\r\n\tasync get() {\r\n\t\tlet featureToggles: FeatureInterface[] = unleash.getFeatureToggleDefinitions();\r\n\r\n\t\t//only support gauzy feature and removed other\r\n\t\tconst featureEnums: string[] = Object.values(FeatureEnum);\r\n\t\tif (featureToggles) {\r\n\t\t\tfeatureToggles = featureToggles.filter((toggle: FeatureInterface) =>\r\n\t\t\t\tfeatureEnums.includes(toggle.name)\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn featureToggles;\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find all parent features.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found feature',\r\n\t\ttype: Feature\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@UseGuards(AuthGuard('jwt'))\r\n\t@Get('parent')\r\n\tasync getParentFeatureList(@Query('data') data: any) {\r\n\t\treturn this.featureService.getParentFeatureList(data);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find all features.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found feature',\r\n\t\ttype: Feature\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@UseGuards(AuthGuard('jwt'))\r\n\t@Get('all')\r\n\tasync getAllFeatureList() {\r\n\t\treturn this.featureService.getAllFeatureList();\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find all feature organizations.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found feature',\r\n\t\ttype: Feature\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n\t@Get('/organizations')\r\n\tasync getFeaturesOrganization(@Query('data') data: any) {\r\n\t\treturn this.featureService.getFeatureOrganizations(data);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Enabled or disabled features' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully created/updated.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n\t@Post()\r\n\tasync enabledDisabledFeature(\r\n\t\t@Body() input: IFeatureOrganizationUpdateInput\r\n\t) {\r\n\t\treturn this.commandBus.execute(new FeatureToggleUpdateCommand(input));\r\n\t}\r\n}\r\n","import {\r\n\tAfterLoad,\r\n\tColumn,\r\n\tEntity,\r\n\tIndex,\r\n\tJoinColumn,\r\n\tManyToOne,\r\n\tOneToMany\r\n} from 'typeorm';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport * as _ from 'underscore';\r\nimport { Base } from '../core/entities/base';\r\nimport { FeatureOrganization } from './feature_organization.entity';\r\nimport {\r\n\tIFeature,\r\n\tIFeatureOrganization,\r\n\tFeatureStatusEnum\r\n} from '@gauzy/models';\r\nimport { IsNotEmpty, IsString } from 'class-validator';\r\nimport { FileStorage } from '../core/file-storage';\r\nimport { gauzyToggleFeatures } from '@env-api/environment';\r\n\r\n@Entity('feature')\r\nexport class Feature extends Base implements IFeature {\r\n\t@ApiProperty({ type: FeatureOrganization })\r\n\t@OneToMany(\r\n\t\t() => FeatureOrganization,\r\n\t\t(featureOrganization) => featureOrganization.feature,\r\n\t\t{\r\n\t\t\tcascade: true,\r\n\t\t\tonDelete: 'CASCADE'\r\n\t\t}\r\n\t)\r\n\t@JoinColumn()\r\n\tfeatureOrganizations?: IFeatureOrganization[];\r\n\r\n\t@ApiProperty({ type: Feature })\r\n\t@ManyToOne((type) => Feature, (feature) => feature.children)\r\n\tparent: Feature;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@Column({ nullable: true })\r\n\tparentId?: string;\r\n\r\n\t@ApiProperty({ type: Feature })\r\n\t@OneToMany((type) => Feature, (feature) => feature.parent, {\r\n\t\tcascade: true,\r\n\t\tonDelete: 'CASCADE'\r\n\t})\r\n\t@JoinColumn({ name: 'parentId' })\r\n\tchildren: Feature[];\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Index()\r\n\t@Column()\r\n\tname: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Index()\r\n\t@Column()\r\n\tcode: string;\r\n\r\n\t@ApiProperty({ type: Boolean, default: false })\r\n\t@Column({ default: false })\r\n\tisPaid?: boolean;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@IsString()\r\n\t@Column({ nullable: true })\r\n\tdescription: string;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@IsString()\r\n\t@Column({ nullable: true })\r\n\timage: string;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@IsString()\r\n\t@Column()\r\n\tlink: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@Column({ nullable: true })\r\n\tstatus: string;\r\n\r\n\t@AfterLoad()\r\n\tafterLoadStatus() {\r\n\t\tif (!this.status) {\r\n\t\t\tthis.status = _.shuffle(Object.values(FeatureStatusEnum))[0];\r\n\t\t}\r\n\t}\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@Column({ nullable: true })\r\n\ticon: string;\r\n\r\n\tisEnabled?: boolean;\r\n\t@AfterLoad()\r\n\tafterLoadEnabled?() {\r\n\t\tif (gauzyToggleFeatures.hasOwnProperty(this.code)) {\r\n\t\t\tconst feature = gauzyToggleFeatures[this.code];\r\n\t\t\tthis.isEnabled = feature;\r\n\t\t} else {\r\n\t\t\tthis.isEnabled = true;\r\n\t\t}\r\n\t}\r\n\r\n\timageUrl?: string;\r\n\t@AfterLoad()\r\n\tafterLoad?() {\r\n\t\tif (this.image) {\r\n\t\t\tthis.imageUrl = new FileStorage().getProvider().url(this.image);\r\n\t\t}\r\n\t}\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { Feature } from './feature.entity';\r\nimport { FeatureOrganization } from './feature_organization.entity';\r\nimport { FeaturesToggleController } from './feature-toggle.controller';\r\nimport { FeatureService } from './feature.service';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\nimport { CqrsModule } from '@nestjs/cqrs';\r\nimport { CommandHandlers } from './commands/handlers';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([Feature, FeatureOrganization]),\r\n\t\tTenantModule,\r\n\t\tCqrsModule\r\n\t],\r\n\tcontrollers: [FeaturesToggleController],\r\n\tproviders: [FeatureService, ...CommandHandlers]\r\n})\r\nexport class FeatureModule {}\r\n","import { Connection } from 'typeorm';\r\nimport * as path from 'path';\r\nimport { copyFileSync, mkdirSync } from 'fs';\r\nimport chalk from 'chalk';\r\nimport * as rimraf from 'rimraf';\r\nimport { environment as env } from '@env-api/environment';\r\nimport {\r\n\tIFeature,\r\n\tIFeatureCreateInput,\r\n\tIFeatureOrganization,\r\n\tITenant\r\n} from '@gauzy/models';\r\nimport { DEFAULT_FEATURES } from './default-features';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { Feature } from './feature.entity';\r\nimport { FeatureOrganization } from './feature_organization.entity';\r\n\r\nexport const createDefaultFeatureToggle = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant\r\n) => {\r\n\tawait cleanFeature(connection);\r\n\r\n\tDEFAULT_FEATURES.forEach(async (item: IFeatureCreateInput) => {\r\n\t\tconst feature: IFeature = createFeature(item, tenant);\r\n\t\tconst parent = await connection.manager.save(feature);\r\n\r\n\t\tconst { children = [] } = item;\r\n\t\tif (children.length > 0) {\r\n\t\t\tconst featureChildren: IFeature[] = [];\r\n\t\t\tchildren.forEach((child: IFeature) => {\r\n\t\t\t\tconst childFeature: IFeature = createFeature(child, tenant);\r\n\t\t\t\tchildFeature.parent = parent;\r\n\t\t\t\tfeatureChildren.push(childFeature);\r\n\t\t\t});\r\n\r\n\t\t\tawait connection.manager.save(featureChildren);\r\n\t\t}\r\n\t});\r\n\treturn await connection.getRepository(Feature).find();\r\n};\r\n\r\nexport const createRandomFeatureToggle = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[]\r\n) => {\r\n\tconst features: IFeature[] = await connection.getRepository(Feature).find();\r\n\r\n\tconst featureOrganizations: IFeatureOrganization[] = [];\r\n\tfeatures.forEach(async (feature: IFeature) => {\r\n\t\ttenants.forEach((tenant: ITenant) => {\r\n\t\t\tconst { isEnabled } = feature;\r\n\t\t\tconst featureOrganization: IFeatureOrganization = new FeatureOrganization(\r\n\t\t\t\t{\r\n\t\t\t\t\tisEnabled,\r\n\t\t\t\t\ttenant,\r\n\t\t\t\t\tfeature\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\tfeatureOrganizations.push(featureOrganization);\r\n\t\t});\r\n\t});\r\n\r\n\tawait connection.manager.save(featureOrganizations);\r\n\treturn features;\r\n};\r\n\r\nfunction createFeature(item: IFeature, tenant: Tenant) {\r\n\tconst {\r\n\t\tname,\r\n\t\tcode,\r\n\t\tdescription,\r\n\t\timage,\r\n\t\tlink,\r\n\t\tisEnabled,\r\n\t\tstatus,\r\n\t\ticon\r\n\t} = item;\r\n\tconst feature: IFeature = new Feature({\r\n\t\tname,\r\n\t\tcode,\r\n\t\tdescription,\r\n\t\timage: copyImage(image),\r\n\t\tlink,\r\n\t\tstatus,\r\n\t\ticon,\r\n\t\tfeatureOrganizations: [\r\n\t\t\tnew FeatureOrganization({\r\n\t\t\t\tisEnabled,\r\n\t\t\t\ttenant\r\n\t\t\t})\r\n\t\t]\r\n\t});\r\n\treturn feature;\r\n}\r\n\r\nasync function cleanFeature(connection) {\r\n\tif (env.database.type === 'sqlite') {\r\n\t\tawait connection.query('DELETE FROM feature');\r\n\t\tawait connection.query('DELETE FROM feature_organization');\r\n\t} else {\r\n\t\tawait connection.query(\r\n\t\t\t'TRUNCATE TABLE feature RESTART IDENTITY CASCADE'\r\n\t\t);\r\n\t\tawait connection.query(\r\n\t\t\t'TRUNCATE TABLE feature_organization RESTART IDENTITY CASCADE'\r\n\t\t);\r\n\t}\r\n\r\n\tconsole.log(chalk.green(`CLEANING UP FEATURE IMAGES...`));\r\n\tconst destDir = 'features';\r\n\r\n\tawait new Promise((resolve, reject) => {\r\n\t\tconst dir = env.isElectron\r\n\t\t\t? path.resolve(env.gauzyUserPath, ...['public', destDir])\r\n\t\t\t: path.resolve('.', ...['apps', 'api', 'public', destDir]);\r\n\r\n\t\t// delete old generated report image\r\n\t\trimraf(\r\n\t\t\tdir,\r\n\t\t\t() => {\r\n\t\t\t\tconsole.log(chalk.green(`CLEANED UP FEATURE IMAGES`));\r\n\t\t\t\tresolve(null);\r\n\t\t\t},\r\n\t\t\t(error) => {\r\n\t\t\t\treject(null);\r\n\t\t\t}\r\n\t\t);\r\n\t});\r\n}\r\n\r\nfunction copyImage(fileName: string) {\r\n\ttry {\r\n\t\tconst destDir = 'features';\r\n\t\tconst dir = env.isElectron\r\n\t\t\t? path.resolve(\r\n\t\t\t\t\tenv.gauzyUserPath,\r\n\t\t\t\t\t...['src', 'assets', 'seed', destDir]\r\n\t\t\t  )\r\n\t\t\t: path.resolve(\r\n\t\t\t\t\t'.',\r\n\t\t\t\t\t...['apps', 'api', 'src', 'assets', 'seed', destDir]\r\n\t\t\t  );\r\n\t\tconst baseDir = env.isElectron\r\n\t\t\t? path.resolve(env.gauzyUserPath, ...['public'])\r\n\t\t\t: path.resolve('.', ...['apps', 'api', 'public']);\r\n\r\n\t\tmkdirSync(path.join(baseDir, destDir), { recursive: true });\r\n\r\n\t\tconst destFilePath = path.join(destDir, fileName);\r\n\t\tcopyFileSync(\r\n\t\t\tpath.join(dir, fileName),\r\n\t\t\tpath.join(baseDir, destFilePath)\r\n\t\t);\r\n\r\n\t\treturn destFilePath;\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n}\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { IsNull, Repository } from 'typeorm';\r\nimport { Feature } from './feature.entity';\r\nimport { CrudService } from '../core/crud/crud.service';\r\nimport {\r\n\tIFeature,\r\n\tIFeatureOrganization,\r\n\tIFeatureOrganizationUpdateInput,\r\n\tIPagination,\r\n\tITenant\r\n} from '@gauzy/models';\r\nimport { FeatureOrganization } from './feature_organization.entity';\r\n\r\n@Injectable()\r\nexport class FeatureService extends CrudService<Feature> {\r\n\tconstructor(\r\n\t\t@InjectRepository(Feature)\r\n\t\tpublic readonly featureRepository: Repository<Feature>,\r\n\r\n\t\t@InjectRepository(FeatureOrganization)\r\n\t\tpublic readonly featureOrganizationRepository: Repository<FeatureOrganization>\r\n\t) {\r\n\t\tsuper(featureRepository);\r\n\t}\r\n\r\n\tasync getParentFeatureList(request: any): Promise<IPagination<IFeature>> {\r\n\t\tconst { relations = [] } = request;\r\n\t\treturn await this.findAll({\r\n\t\t\twhere: {\r\n\t\t\t\tparentId: IsNull()\r\n\t\t\t},\r\n\t\t\trelations,\r\n\t\t\torder: {\r\n\t\t\t\tcreatedAt: 'ASC'\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tasync getAllFeatureList(): Promise<IPagination<IFeature>> {\r\n\t\treturn await this.findAll({\r\n\t\t\torder: {\r\n\t\t\t\tcreatedAt: 'ASC'\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tasync getFeatureOrganizations(data: any): Promise<IFeatureOrganization[]> {\r\n\t\tconst { relations = [], findInput = {} } = data;\r\n\t\treturn await this.featureOrganizationRepository.find({\r\n\t\t\twhere: findInput,\r\n\t\t\trelations\r\n\t\t});\r\n\t}\r\n\r\n\tasync updateFeatureOrganization(\r\n\t\tinput: IFeatureOrganizationUpdateInput\r\n\t): Promise<IFeatureOrganization[]> {\r\n\t\tconst { featureId, tenantId, organizationId } = input;\r\n\t\tconst where = {\r\n\t\t\tfeatureId,\r\n\t\t\ttenantId\r\n\t\t};\r\n\r\n\t\tif (organizationId) {\r\n\t\t\twhere['organizationId'] = organizationId;\r\n\t\t}\r\n\r\n\t\tconst featureOrganizations = await this.featureOrganizationRepository.find(\r\n\t\t\t{\r\n\t\t\t\twhere\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (!featureOrganizations.length) {\r\n\t\t\tconst featureOrganization = new FeatureOrganization(input);\r\n\t\t\tawait this.featureOrganizationRepository.save(featureOrganization);\r\n\t\t} else {\r\n\t\t\tfeatureOrganizations.map((item: FeatureOrganization) => {\r\n\t\t\t\treturn new FeatureOrganization(Object.assign(item, input));\r\n\t\t\t});\r\n\t\t\tawait this.featureOrganizationRepository.save(featureOrganizations);\r\n\t\t}\r\n\t\treturn featureOrganizations;\r\n\t}\r\n\r\n\t/*\r\n\t * Create/Update feature organization for relative tenants\r\n\t */\r\n\tpublic async updateTenantFeatureOrganizations(\r\n\t\ttenants: ITenant[]\r\n\t): Promise<IFeatureOrganization[]> {\r\n\t\tif (!tenants.length) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst features: IFeature[] = await this.featureRepository.find();\r\n\r\n\t\tconst featureOrganizations: IFeatureOrganization[] = [];\r\n\t\tfeatures.forEach(async (feature: IFeature) => {\r\n\t\t\ttenants.forEach((tenant: ITenant) => {\r\n\t\t\t\tconst { isEnabled } = feature;\r\n\t\t\t\tconst featureOrganization: IFeatureOrganization = new FeatureOrganization(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tisEnabled,\r\n\t\t\t\t\t\ttenant,\r\n\t\t\t\t\t\tfeature\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t\tfeatureOrganizations.push(featureOrganization);\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\treturn await this.featureOrganizationRepository.save(\r\n\t\t\tfeatureOrganizations\r\n\t\t);\r\n\t}\r\n}\r\n","import { ApiProperty } from '@nestjs/swagger';\r\nimport { Column, Entity, JoinColumn, ManyToOne, RelationId } from 'typeorm';\r\nimport { Feature } from './feature.entity';\r\nimport { IFeature, IFeatureOrganization } from '@gauzy/models';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('feature_organization')\r\nexport class FeatureOrganization\r\n\textends TenantOrganizationBase\r\n\timplements IFeatureOrganization {\r\n\t@ApiProperty({ type: Feature })\r\n\t@ManyToOne(() => Feature)\r\n\t@JoinColumn()\r\n\tfeature: IFeature;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@RelationId((feature: FeatureOrganization) => feature.feature)\r\n\t@Column()\r\n\treadonly featureId: string;\r\n\r\n\t@Column({ default: true })\r\n\tisEnabled: boolean;\r\n}\r\n","import {\r\n\tController,\r\n\tUseGuards,\r\n\tHttpStatus,\r\n\tPost,\r\n\tBody,\r\n\tGet,\r\n\tQuery,\r\n\tHttpCode,\r\n\tPut,\r\n\tParam\r\n} from '@nestjs/common';\r\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { CrudController } from '../core';\r\nimport { GoalGeneralSetting } from './goal-general-setting.entity';\r\nimport { GoalGeneralSettingService } from './goal-general-setting.service';\r\nimport { Goal } from '../goal/goal.entity';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('GoalGeneralSetting')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class GoalGeneralSettingController extends CrudController<\r\n\tGoalGeneralSetting\r\n> {\r\n\tconstructor(\r\n\t\tprivate readonly goalGeneralSettingService: GoalGeneralSettingService\r\n\t) {\r\n\t\tsuper(goalGeneralSettingService);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Create Goal General Setting' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Goal general setting Created successfully',\r\n\t\ttype: GoalGeneralSetting\r\n\t})\r\n\t@Post('/create')\r\n\tasync createGoal(@Body() entity: Goal): Promise<any> {\r\n\t\treturn this.goalGeneralSettingService.create(entity);\r\n\t}\r\n\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get('all')\r\n\tasync getAll(@Query('data') data: string) {\r\n\t\tconst { findInput = null } = JSON.parse(data);\r\n\t\treturn this.goalGeneralSettingService.findAll({\r\n\t\t\twhere: { ...findInput }\r\n\t\t});\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Update an existing record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully edited.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Put(':id')\r\n\tasync update(\r\n\t\t@Param('id') id: string,\r\n\t\t@Body() entity: GoalGeneralSetting\r\n\t): Promise<GoalGeneralSetting> {\r\n\t\t//We are using create here because create calls the method save()\r\n\t\t//We need save() to save ManyToMany relations\r\n\t\ttry {\r\n\t\t\treturn await this.goalGeneralSettingService.create({\r\n\t\t\t\tid,\r\n\t\t\t\t...entity\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n}\r\n","import { IGoalGeneralSetting, GoalOwnershipEnum } from '@gauzy/models';\r\nimport { Entity, Column } from 'typeorm';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsEnum } from 'class-validator';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('goal_general_setting')\r\nexport class GoalGeneralSetting extends TenantOrganizationBase\r\n\timplements IGoalGeneralSetting {\r\n\t@ApiProperty({ type: Number })\r\n\t@Column()\r\n\tmaxObjectives: number;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@Column()\r\n\tmaxKeyResults: number;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@Column()\r\n\temployeeCanCreateObjective: boolean;\r\n\r\n\t@ApiProperty({ type: String, enum: GoalOwnershipEnum })\r\n\t@IsEnum(GoalOwnershipEnum)\r\n\t@Column()\r\n\tcanOwnObjectives: string;\r\n\r\n\t@ApiProperty({ type: String, enum: GoalOwnershipEnum })\r\n\t@IsEnum(GoalOwnershipEnum)\r\n\t@Column()\r\n\tcanOwnKeyResult: string;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@Column()\r\n\tkrTypeKPI: boolean;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@Column()\r\n\tkrTypeTask: boolean;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { GoalGeneralSettingController } from './goal-general-setting.controller';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { GoalGeneralSetting } from './goal-general-setting.entity';\r\nimport { GoalGeneralSettingService } from './goal-general-setting.service';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [TypeOrmModule.forFeature([GoalGeneralSetting]), TenantModule],\r\n\tcontrollers: [GoalGeneralSettingController],\r\n\tproviders: [GoalGeneralSettingService],\r\n\texports: [GoalGeneralSettingService]\r\n})\r\nexport class GoalGeneralSettingModule {}\r\n","import { GoalOwnershipEnum } from '@gauzy/models';\r\nimport { Connection } from 'typeorm';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { GoalGeneralSetting } from './goal-general-setting.entity';\r\n\r\nexport const createDefaultGeneralGoalSetting = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\torganizations: Organization[]\r\n): Promise<GoalGeneralSetting[]> => {\r\n\tconst defaultGeneralGoalSetting = [];\r\n\torganizations.forEach((organization) => {\r\n\t\tdefaultGeneralGoalSetting.push({\r\n\t\t\tmaxObjectives: 5,\r\n\t\t\tmaxKeyResults: 5,\r\n\t\t\temployeeCanCreateObjective: true,\r\n\t\t\tcanOwnObjectives: GoalOwnershipEnum.EMPLOYEES_AND_TEAMS,\r\n\t\t\tcanOwnKeyResult: GoalOwnershipEnum.EMPLOYEES_AND_TEAMS,\r\n\t\t\tkrTypeKPI: true,\r\n\t\t\tkrTypeTask: true,\r\n\t\t\torganization: organization,\r\n\t\t\ttenant: tenant\r\n\t\t});\r\n\t});\r\n\tawait insertDefaultGeneralGoalSetting(\r\n\t\tconnection,\r\n\t\tdefaultGeneralGoalSetting\r\n\t);\r\n\treturn defaultGeneralGoalSetting;\r\n};\r\n\r\nconst insertDefaultGeneralGoalSetting = async (\r\n\tconnection: Connection,\r\n\tdefaultGeneralGoalSetting: GoalGeneralSetting[]\r\n) => {\r\n\tawait connection\r\n\t\t.createQueryBuilder()\r\n\t\t.insert()\r\n\t\t.into(GoalGeneralSetting)\r\n\t\t.values(defaultGeneralGoalSetting)\r\n\t\t.execute();\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { GoalGeneralSetting } from './goal-general-setting.entity';\r\nimport { TenantAwareCrudService } from '../core/crud/tenant-aware-crud.service';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\n\r\n@Injectable()\r\nexport class GoalGeneralSettingService extends TenantAwareCrudService<\r\n\tGoalGeneralSetting\r\n> {\r\n\tconstructor(\r\n\t\t@InjectRepository(GoalGeneralSetting)\r\n\t\tprivate readonly goalGeneralSettingRepository: Repository<\r\n\t\t\tGoalGeneralSetting\r\n\t\t>\r\n\t) {\r\n\t\tsuper(goalGeneralSettingRepository);\r\n\t}\r\n}\r\n","import { IGoalKPITemplate } from '@gauzy/models';\r\n\r\nexport const DEFAULT_GOAL_KPI_TEMPLATES: IGoalKPITemplate[] = [\r\n\t{\r\n\t\tname: 'Average response time',\r\n\t\tdescription: '',\r\n\t\ttype: 'Numerical',\r\n\t\tunit: 'ms',\r\n\t\toperator: '<=',\r\n\t\tcurrentValue: 1000,\r\n\t\ttargetValue: 500\r\n\t},\r\n\t{\r\n\t\tname: '# of Priority bugs in production',\r\n\t\tdescription: '',\r\n\t\ttype: 'Numerical',\r\n\t\tunit: 'bugs',\r\n\t\toperator: '<=',\r\n\t\tcurrentValue: 15,\r\n\t\ttargetValue: 2\r\n\t}\r\n];\r\n","import {\r\n\tController,\r\n\tUseGuards,\r\n\tHttpStatus,\r\n\tPost,\r\n\tBody,\r\n\tGet\r\n} from '@nestjs/common';\r\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { CrudController } from '../core';\r\nimport { GoalKPITemplate } from './goal-kpi-template.entity';\r\nimport { GoalKpiTemplateService } from './goal-kpi-template.service';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('GoalKpiTemplate')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class GoalKpiTemplateController extends CrudController<GoalKPITemplate> {\r\n\tconstructor(\r\n\t\tprivate readonly goalKpiTemplateService: GoalKpiTemplateService\r\n\t) {\r\n\t\tsuper(goalKpiTemplateService);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Create Goal Template' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Goal Template Created successfully',\r\n\t\ttype: GoalKPITemplate\r\n\t})\r\n\t@Post('/create')\r\n\tasync createGoalKPITemplate(@Body() entity: GoalKPITemplate): Promise<any> {\r\n\t\treturn this.goalKpiTemplateService.create(entity);\r\n\t}\r\n\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get('all')\r\n\tasync getAll() {\r\n\t\treturn this.goalKpiTemplateService.findAll();\r\n\t}\r\n}\r\n","import { Entity, Column, ManyToOne, JoinColumn } from 'typeorm';\r\nimport {\r\n\tIGoalKPITemplate as IKPITemplate,\r\n\tKpiMetricEnum,\r\n\tIEmployee\r\n} from '@gauzy/models';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsEnum, IsOptional } from 'class-validator';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('goal_kpi_template')\r\nexport class GoalKPITemplate extends TenantOrganizationBase\r\n\timplements IKPITemplate {\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\tname: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\tdescription: string;\r\n\r\n\t@ApiProperty({ type: String, enum: KpiMetricEnum })\r\n\t@Column()\r\n\t@IsEnum(KpiMetricEnum)\r\n\ttype: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column({ nullable: true })\r\n\t@IsOptional()\r\n\tunit?: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\toperator: string;\r\n\r\n\t@ApiProperty({ type: Employee })\r\n\t@ManyToOne((type) => Employee, { nullable: true })\r\n\t@JoinColumn()\r\n\t@IsOptional()\r\n\tlead: IEmployee;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@Column()\r\n\t@IsOptional()\r\n\tcurrentValue?: number;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@Column()\r\n\t@IsOptional()\r\n\ttargetValue?: number;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { GoalKpiTemplateController } from './goal-kpi-template.controller';\r\nimport { GoalKpiTemplateService } from './goal-kpi-template.service';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { GoalKPITemplate } from './goal-kpi-template.entity';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [TypeOrmModule.forFeature([GoalKPITemplate]), TenantModule],\r\n\tcontrollers: [GoalKpiTemplateController],\r\n\tproviders: [GoalKpiTemplateService],\r\n\texports: [GoalKpiTemplateService]\r\n})\r\nexport class GoalKpiTemplateModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { DEFAULT_GOAL_KPI_TEMPLATES } from './default-goal-kpi-templates';\r\nimport { GoalKPITemplate } from './goal-kpi-template.entity';\r\n\r\nexport const createDefaultGoalKpiTemplate = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\torganization: Organization\r\n): Promise<GoalKPITemplate[]> => {\r\n\tconst goalKpiTemplates: GoalKPITemplate[] = [];\r\n\tDEFAULT_GOAL_KPI_TEMPLATES.forEach((item) => {\r\n\t\tconst goalKpi = new GoalKPITemplate();\r\n\t\tgoalKpi.name = item.name;\r\n\t\tgoalKpi.description = '';\r\n\t\tgoalKpi.type = item.type;\r\n\t\tgoalKpi.operator = item.operator;\r\n\t\tgoalKpi.unit = item.unit;\r\n\t\tgoalKpi.currentValue = item.currentValue;\r\n\t\tgoalKpi.targetValue = item.targetValue;\r\n\t\tgoalKpi.organization = organization;\r\n\t\tgoalKpi.tenant = tenant;\r\n\t\tgoalKpiTemplates.push(goalKpi);\r\n\t});\r\n\treturn await insertRandomGoalKpi(connection, goalKpiTemplates);\r\n};\r\n\r\nconst insertRandomGoalKpi = async (\r\n\tconnection: Connection,\r\n\tgoalKpiTemplates: GoalKPITemplate[]\r\n): Promise<GoalKPITemplate[]> => {\r\n\treturn await connection.manager.save(goalKpiTemplates);\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { TenantAwareCrudService } from '../core/crud/tenant-aware-crud.service';\r\nimport { GoalKPITemplate } from './goal-kpi-template.entity';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\n\r\n@Injectable()\r\nexport class GoalKpiTemplateService extends TenantAwareCrudService<\r\n\tGoalKPITemplate\r\n> {\r\n\tconstructor(\r\n\t\t@InjectRepository(GoalKPITemplate)\r\n\t\tprivate readonly goalKpiTemplateRepository: Repository<GoalKPITemplate>\r\n\t) {\r\n\t\tsuper(goalKpiTemplateRepository);\r\n\t}\r\n}\r\n","import { IKPI } from '@gauzy/models';\r\n\r\nexport const DEFAULT_GOAL_KPIS: IKPI[] = [\r\n\t{\r\n\t\tname: 'Average response time',\r\n\t\tdescription: '',\r\n\t\ttype: 'Numerical',\r\n\t\tunit: 'ms',\r\n\t\toperator: '<=',\r\n\t\tcurrentValue: 1000,\r\n\t\ttargetValue: 500\r\n\t},\r\n\t{\r\n\t\tname: '# of Priority bugs in production',\r\n\t\tdescription: '',\r\n\t\ttype: 'Numerical',\r\n\t\tunit: 'bugs',\r\n\t\toperator: '<=',\r\n\t\tcurrentValue: 15,\r\n\t\ttargetValue: 2\r\n\t}\r\n];\r\n","import {\r\n\tController,\r\n\tUseGuards,\r\n\tHttpStatus,\r\n\tPost,\r\n\tBody,\r\n\tGet,\r\n\tQuery,\r\n\tParam,\r\n\tDelete,\r\n\tHttpCode,\r\n\tPut\r\n} from '@nestjs/common';\r\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { CrudController } from '../core';\r\nimport { GoalKPI } from './goal-kpi.entity';\r\nimport { GoalKpiService } from './goal-kpi.service';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('GoalKpi')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class GoalKpiController extends CrudController<GoalKPI> {\r\n\tconstructor(private readonly goalKpiService: GoalKpiService) {\r\n\t\tsuper(goalKpiService);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Create Goal KPI' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'KPI added successfully',\r\n\t\ttype: GoalKPI\r\n\t})\r\n\t@Post('/create')\r\n\tasync createGoal(@Body() entity: GoalKPI): Promise<any> {\r\n\t\treturn this.goalKpiService.create(entity);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Get all KPI' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found all KPI'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'No KPI found'\r\n\t})\r\n\t@Get('all')\r\n\tasync getAll(@Query('data') data: string) {\r\n\t\tconst { findInput } = JSON.parse(data);\r\n\t\treturn this.goalKpiService.findAll({\r\n\t\t\twhere: { ...findInput },\r\n\t\t\trelations: ['lead']\r\n\t\t});\r\n\t}\r\n\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Delete(':id')\r\n\tasync deleteKPI(@Param('id') id: string): Promise<any> {\r\n\t\treturn this.goalKpiService.delete(id);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Update an existing record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully edited.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Put(':id')\r\n\tasync update(\r\n\t\t@Param('id') id: string,\r\n\t\t@Body() entity: GoalKPI\r\n\t): Promise<GoalKPI> {\r\n\t\ttry {\r\n\t\t\treturn await this.goalKpiService.create({\r\n\t\t\t\tid,\r\n\t\t\t\t...entity\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n}\r\n","import { Entity, Column, ManyToOne, JoinColumn } from 'typeorm';\r\nimport { IKPI, KpiMetricEnum } from '@gauzy/models';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsEnum, IsOptional } from 'class-validator';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('goal_kpi')\r\nexport class GoalKPI extends TenantOrganizationBase implements IKPI {\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\tname: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\tdescription: string;\r\n\r\n\t@ApiProperty({ type: String, enum: KpiMetricEnum })\r\n\t@Column()\r\n\t@IsEnum(KpiMetricEnum)\r\n\ttype: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column({ nullable: true })\r\n\t@IsOptional()\r\n\tunit?: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\toperator: string;\r\n\r\n\t@ApiProperty({ type: Employee })\r\n\t@ManyToOne((type) => Employee, { nullable: true })\r\n\t@JoinColumn()\r\n\t@IsOptional()\r\n\tlead: Employee;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@Column()\r\n\tcurrentValue: number;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@Column()\r\n\ttargetValue: number;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { GoalKpiController } from './goal-kpi.controller';\r\nimport { GoalKpiService } from './goal-kpi.service';\r\nimport { GoalKPI } from './goal-kpi.entity';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [TypeOrmModule.forFeature([GoalKPI]), TenantModule],\r\n\tcontrollers: [GoalKpiController],\r\n\tproviders: [GoalKpiService],\r\n\texports: [GoalKpiService]\r\n})\r\nexport class GoalKpiModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { IEmployee, IOrganization } from '@gauzy/models';\r\nimport { GoalKPI } from './goal-kpi.entity';\r\nimport * as faker from 'faker';\r\nimport { DEFAULT_GOAL_KPIS } from './default-goal-kpis';\r\n\r\nexport const createDefaultGoalKpi = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\torganizations: IOrganization[],\r\n\temployees: IEmployee[]\r\n): Promise<GoalKPI[]> => {\r\n\tconst goalKpis: GoalKPI[] = [];\r\n\torganizations.forEach((organization: IOrganization) => {\r\n\t\tDEFAULT_GOAL_KPIS.forEach((goalKPI) => {\r\n\t\t\tconst goalKpi = new GoalKPI();\r\n\t\t\tgoalKpi.name = goalKPI.name;\r\n\t\t\tgoalKpi.description = ' ';\r\n\t\t\tgoalKpi.type = goalKPI.type;\r\n\t\t\tgoalKpi.operator = goalKPI.operator;\r\n\t\t\tgoalKpi.unit = goalKPI.unit;\r\n\t\t\tgoalKpi.lead = faker.random.arrayElement(employees);\r\n\t\t\tgoalKpi.currentValue = goalKPI.currentValue;\r\n\t\t\tgoalKpi.targetValue = goalKPI.targetValue;\r\n\t\t\tgoalKpi.organization = organization;\r\n\t\t\tgoalKpi.tenant = tenant;\r\n\t\t\tgoalKpis.push(goalKpi);\r\n\t\t});\r\n\t});\r\n\treturn await insertRandomGoalKpi(connection, goalKpis);\r\n};\r\n\r\nconst insertRandomGoalKpi = async (\r\n\tconnection: Connection,\r\n\tgoalKpis: GoalKPI[]\r\n): Promise<GoalKPI[]> => {\r\n\treturn await connection.manager.save(goalKpis);\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { GoalKPI } from './goal-kpi.entity';\r\nimport { TenantAwareCrudService } from '../core/crud/tenant-aware-crud.service';\r\n\r\n@Injectable()\r\nexport class GoalKpiService extends TenantAwareCrudService<GoalKPI> {\r\n\tconstructor(\r\n\t\t@InjectRepository(GoalKPI)\r\n\t\tprivate readonly goalKpiRepository: Repository<GoalKPI>\r\n\t) {\r\n\t\tsuper(goalKpiRepository);\r\n\t}\r\n}\r\n","import { GoalTemplateCategoriesEnum, IGoalTemplate } from '@gauzy/models';\r\n\r\nexport const DEFAULT_GOAL_TEMPLATES: IGoalTemplate[] = [\r\n\t{\r\n\t\tname: 'Improve product performance',\r\n\t\tlevel: 'Organization',\r\n\t\tcategory: GoalTemplateCategoriesEnum.PRODUCT_MANAGEMENT\r\n\t},\r\n\t{\r\n\t\tname: 'Successfully launch version 2 of our main product',\r\n\t\tlevel: 'Organization',\r\n\t\tcategory: GoalTemplateCategoriesEnum.MARKETING\r\n\t},\r\n\t{\r\n\t\tname: 'Redesign and launch our new landing page',\r\n\t\tlevel: 'Team',\r\n\t\tcategory: GoalTemplateCategoriesEnum.PRODUCT_MANAGEMENT\r\n\t},\r\n\t{\r\n\t\tname: 'Increase quality of releases and make sure they are timely',\r\n\t\tlevel: 'Team',\r\n\t\tcategory: GoalTemplateCategoriesEnum.PRODUCT_MANAGEMENT\r\n\t},\r\n\t{\r\n\t\tname: 'Identify problems with current user interface',\r\n\t\tlevel: 'Employee',\r\n\t\tcategory: GoalTemplateCategoriesEnum.PRODUCT_MANAGEMENT\r\n\t}\r\n];\r\n","import {\r\n\tController,\r\n\tUseGuards,\r\n\tHttpStatus,\r\n\tGet,\r\n\tBody,\r\n\tPost,\r\n\tQuery\r\n} from '@nestjs/common';\r\nimport { ApiTags, ApiResponse, ApiOperation } from '@nestjs/swagger';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { GoalTemplateService } from './goal-template.service';\r\nimport { CrudController } from '../core';\r\nimport { GoalTemplate } from './goal-template.entity';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('GoalTemplates')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class GoalTemplateController extends CrudController<GoalTemplate> {\r\n\tconstructor(private readonly goalTemplateService: GoalTemplateService) {\r\n\t\tsuper(goalTemplateService);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Create Goal Template' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Goal Template Created successfully',\r\n\t\ttype: GoalTemplate\r\n\t})\r\n\t@Post('/create')\r\n\tasync createGoalTemplate(@Body() entity: GoalTemplate): Promise<any> {\r\n\t\treturn this.goalTemplateService.create(entity);\r\n\t}\r\n\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get('all')\r\n\tasync getAll(@Query('data') data: string) {\r\n\t\tconst { findInput } = JSON.parse(data);\r\n\t\treturn this.goalTemplateService.findAll({\r\n\t\t\trelations: ['keyResults', 'keyResults.kpi'],\r\n\t\t\twhere: { ...findInput }\r\n\t\t});\r\n\t}\r\n}\r\n","import {\r\n\tIGoalTemplate,\r\n\tGoalLevelEnum,\r\n\tGoalTemplateCategoriesEnum,\r\n\tIKeyResultTemplate\r\n} from '@gauzy/models';\r\nimport { Entity, Column, OneToMany } from 'typeorm';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsOptional, IsEnum } from 'class-validator';\r\nimport { KeyResultTemplate } from '../keyresult-template/keyresult-template.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('goal_template')\r\nexport class GoalTemplate extends TenantOrganizationBase\r\n\timplements IGoalTemplate {\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\tname: string;\r\n\r\n\t@ApiProperty({ type: String, enum: GoalLevelEnum })\r\n\t@IsEnum(GoalLevelEnum)\r\n\t@Column()\r\n\tlevel: string;\r\n\r\n\t@ApiProperty({ type: String, enum: GoalTemplateCategoriesEnum })\r\n\t@IsEnum(GoalTemplateCategoriesEnum)\r\n\t@Column()\r\n\tcategory: string;\r\n\r\n\t@ApiProperty({ type: KeyResultTemplate })\r\n\t@OneToMany((type) => KeyResultTemplate, (keyResult) => keyResult.goal)\r\n\t@IsOptional()\r\n\tkeyResults?: IKeyResultTemplate[];\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { GoalTemplateController } from './goal-template.controller';\r\nimport { GoalTemplateService } from './goal-template.service';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { GoalTemplate } from './goal-template.entity';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [TypeOrmModule.forFeature([GoalTemplate]), TenantModule],\r\n\tcontrollers: [GoalTemplateController],\r\n\tproviders: [GoalTemplateService],\r\n\texports: [GoalTemplateService]\r\n})\r\nexport class GoalTemplateModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { GoalTemplate } from './goal-template.entity';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { DEFAULT_GOAL_TEMPLATES } from './default-goal-templates';\r\n\r\nexport const createDefaultGoalTemplates = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\torganization: Organization\r\n): Promise<GoalTemplate[]> => {\r\n\tconst defaultGoalTemplates = [];\r\n\tDEFAULT_GOAL_TEMPLATES.forEach((goalData) => {\r\n\t\tconst goalTemplate = new GoalTemplate();\r\n\t\tgoalTemplate.name = goalData.name;\r\n\t\tgoalTemplate.level = goalData.level;\r\n\t\tgoalTemplate.category = goalData.category;\r\n\t\tgoalTemplate.tenant = tenant;\r\n\t\tgoalTemplate.organization = organization;\r\n\t\tdefaultGoalTemplates.push(goalTemplate);\r\n\t});\r\n\r\n\treturn await insertDefaultGoalTemplates(connection, defaultGoalTemplates);\r\n};\r\n\r\nconst insertDefaultGoalTemplates = async (\r\n\tconnection: Connection,\r\n\tdefaultGoalTemplates: GoalTemplate[]\r\n): Promise<GoalTemplate[]> => {\r\n\treturn await connection.manager.save(defaultGoalTemplates);\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { TenantAwareCrudService } from '../core/crud/tenant-aware-crud.service';\r\nimport { GoalTemplate } from './goal-template.entity';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\n\r\n@Injectable()\r\nexport class GoalTemplateService extends TenantAwareCrudService<GoalTemplate> {\r\n\tconstructor(\r\n\t\t@InjectRepository(GoalTemplate)\r\n\t\tprivate readonly goalTemplateRepository: Repository<GoalTemplate>\r\n\t) {\r\n\t\tsuper(goalTemplateRepository);\r\n\t}\r\n}\r\n","import {\r\n\tController,\r\n\tUseGuards,\r\n\tHttpStatus,\r\n\tPost,\r\n\tBody,\r\n\tGet,\r\n\tHttpCode,\r\n\tDelete,\r\n\tParam,\r\n\tPut,\r\n\tQuery\r\n} from '@nestjs/common';\r\nimport { CrudController } from '../core';\r\nimport { GoalTimeFrame } from './goal-time-frame.entity';\r\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { GoalTimeFrameService } from './goal-time-frame.service';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('GoalTimeFrame')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class GoalTimeFrameController extends CrudController<GoalTimeFrame> {\r\n\tconstructor(private readonly goalTimeFrameService: GoalTimeFrameService) {\r\n\t\tsuper(goalTimeFrameService);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Create Goal Time Frame' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Time Frame added successfully',\r\n\t\ttype: GoalTimeFrame\r\n\t})\r\n\t@Post('/create')\r\n\tasync createGoal(@Body() entity: GoalTimeFrame): Promise<any> {\r\n\t\treturn this.goalTimeFrameService.create(entity);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Get all Goal Time Frames' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found all Time Frames'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'No Time Frame found'\r\n\t})\r\n\t@Get('all')\r\n\tasync getAll(@Query('data') data: string) {\r\n\t\tconst { findInput } = JSON.parse(data);\r\n\t\treturn this.goalTimeFrameService.findAll({ where: { ...findInput } });\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find Goal Time Frames with name' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found all Time Frames'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'No Time Frame found'\r\n\t})\r\n\t@Get(':name')\r\n\tasync getByName(@Param('name') name: string) {\r\n\t\treturn this.goalTimeFrameService.findAll({ where: { name: name } });\r\n\t}\r\n\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Delete(':id')\r\n\tasync deleteTask(@Param('id') id: string): Promise<any> {\r\n\t\treturn this.goalTimeFrameService.delete(id);\r\n\t}\r\n\t@ApiOperation({ summary: 'Update an existing record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully edited.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Put(':id')\r\n\tasync update(\r\n\t\t@Param('id') id: string,\r\n\t\t@Body() entity: GoalTimeFrame\r\n\t): Promise<GoalTimeFrame> {\r\n\t\ttry {\r\n\t\t\treturn await this.goalTimeFrameService.create({\r\n\t\t\t\tid,\r\n\t\t\t\t...entity\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n}\r\n","import { Entity, Column } from 'typeorm';\r\nimport { IGoalTimeFrame, TimeFrameStatusEnum } from '@gauzy/models';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsEnum } from 'class-validator';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('goal_time_frame')\r\nexport class GoalTimeFrame extends TenantOrganizationBase\r\n\timplements IGoalTimeFrame {\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\tname: string;\r\n\r\n\t@ApiProperty({ type: String, enum: TimeFrameStatusEnum })\r\n\t@IsEnum(TimeFrameStatusEnum)\r\n\t@Column()\r\n\tstatus: string;\r\n\r\n\t@ApiProperty({ type: Date })\r\n\t@Column()\r\n\tstartDate: Date;\r\n\r\n\t@ApiProperty({ type: Date })\r\n\t@Column()\r\n\tendDate: Date;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { GoalTimeFrameController } from './goal-time-frame.controller';\r\nimport { GoalTimeFrameService } from './goal-time-frame.service';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { GoalTimeFrame } from './goal-time-frame.entity';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [TypeOrmModule.forFeature([GoalTimeFrame]), TenantModule],\r\n\tcontrollers: [GoalTimeFrameController],\r\n\tproviders: [GoalTimeFrameService],\r\n\texports: [GoalTimeFrameService]\r\n})\r\nexport class GoalTimeFrameModule {}\r\n","import { GoalTimeFrame } from './goal-time-frame.entity';\r\nimport { Connection } from 'typeorm';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport * as moment from 'moment';\r\n\r\nexport const createDefaultTimeFrames = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\torganizations: Organization[]\r\n): Promise<GoalTimeFrame[]> => {\r\n\tconst defaultTimeFrames = [];\r\n\torganizations.forEach((organization) => {\r\n\t\t// Annual time frame current year\r\n\t\tdefaultTimeFrames.push({\r\n\t\t\tname: `Annual-${moment().year()}`,\r\n\t\t\tstatus: 'Active',\r\n\t\t\tstartDate: moment().startOf('year').toDate(),\r\n\t\t\tendDate: moment().endOf('year').toDate(),\r\n\t\t\ttenant: tenant,\r\n\t\t\torganization: organization\r\n\t\t});\r\n\t\t// will add all 4 Quarters of current year\r\n\t\tfor (let i = 1; i <= 4; i++) {\r\n\t\t\tconst start = moment().quarter(i).startOf('quarter').toDate();\r\n\t\t\tconst end = moment().quarter(i).endOf('quarter').toDate();\r\n\t\t\tdefaultTimeFrames.push({\r\n\t\t\t\tname: `Q${i}-${moment().year()}`,\r\n\t\t\t\tstatus: 'Active',\r\n\t\t\t\tstartDate: start,\r\n\t\t\t\tendDate: end,\r\n\t\t\t\ttenant: tenant,\r\n\t\t\t\torganization: organization\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n\r\n\tawait insertDefaultTimeFrames(connection, defaultTimeFrames);\r\n\r\n\treturn defaultTimeFrames;\r\n};\r\n\r\nconst insertDefaultTimeFrames = async (\r\n\tconnection: Connection,\r\n\tdefaultTimeFrames: GoalTimeFrame[]\r\n) => {\r\n\tawait connection\r\n\t\t.createQueryBuilder()\r\n\t\t.insert()\r\n\t\t.into(GoalTimeFrame)\r\n\t\t.values(defaultTimeFrames)\r\n\t\t.execute();\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { GoalTimeFrame } from './goal-time-frame.entity';\r\nimport { TenantAwareCrudService } from '../core/crud/tenant-aware-crud.service';\r\n\r\n@Injectable()\r\nexport class GoalTimeFrameService extends TenantAwareCrudService<\r\n\tGoalTimeFrame\r\n> {\r\n\tconstructor(\r\n\t\t@InjectRepository(GoalTimeFrame)\r\n\t\tprivate readonly goalTimeFrameRepository: Repository<GoalTimeFrame>\r\n\t) {\r\n\t\tsuper(goalTimeFrameRepository);\r\n\t}\r\n}\r\n","export const DEFAULT_GOALS = [\r\n\t{\r\n\t\tname: 'Improve product performance',\r\n\t\tlevel: 'Organization'\r\n\t},\r\n\t{\r\n\t\tname: 'Successfully launch version 2 of our main product',\r\n\t\tlevel: 'Organization'\r\n\t},\r\n\t{\r\n\t\tname: 'Redesign and launch our new landing page',\r\n\t\tlevel: 'Team'\r\n\t},\r\n\t{\r\n\t\tname: 'Increase quality of releases and make sure they are timely',\r\n\t\tlevel: 'Team'\r\n\t},\r\n\t{\r\n\t\tname: 'Identify problems with current user interface',\r\n\t\tlevel: 'Employee'\r\n\t}\r\n];\r\n","import {\r\n\tController,\r\n\tHttpStatus,\r\n\tGet,\r\n\tPost,\r\n\tBody,\r\n\tHttpCode,\r\n\tPut,\r\n\tParam,\r\n\tUseGuards,\r\n\tDelete,\r\n\tQuery\r\n} from '@nestjs/common';\r\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport { GoalService } from './goal.service';\r\nimport { Goal } from './goal.entity';\r\nimport { CrudController } from '../core';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('Goals')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class GoalController extends CrudController<Goal> {\r\n\tconstructor(private readonly goalService: GoalService) {\r\n\t\tsuper(goalService);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Create Goal' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Goal Created successfully',\r\n\t\ttype: Goal\r\n\t})\r\n\t@Post('/create')\r\n\tasync createGoal(@Body() entity: Goal): Promise<any> {\r\n\t\treturn this.goalService.create(entity);\r\n\t}\r\n\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get('all')\r\n\tasync getAll(@Query('data') data: string) {\r\n\t\tconst { relations, findInput } = JSON.parse(data);\r\n\t\treturn this.goalService.findAll({\r\n\t\t\twhere: { ...findInput },\r\n\t\t\trelations,\r\n\t\t\torder: { createdAt: 'ASC' }\r\n\t\t});\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Update an existing record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully edited.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Put(':id')\r\n\tasync update(@Param('id') id: string, @Body() entity: Goal): Promise<Goal> {\r\n\t\t//We are using create here because create calls the method save()\r\n\t\t//We need save() to save ManyToMany relations\r\n\t\ttry {\r\n\t\t\treturn await this.goalService.create({\r\n\t\t\t\tid,\r\n\t\t\t\t...entity\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Delete(':id')\r\n\tasync deleteGoal(@Param('id') id: string): Promise<any> {\r\n\t\treturn this.goalService.delete(id);\r\n\t}\r\n}\r\n","import { IGoal, GoalLevelEnum } from '@gauzy/models';\r\nimport { Entity, Column, OneToMany, ManyToOne, JoinColumn } from 'typeorm';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsOptional, IsEnum } from 'class-validator';\r\nimport { KeyResult } from '../keyresult/keyresult.entity';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { OrganizationTeam } from '../organization-team/organization-team.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('goal')\r\nexport class Goal extends TenantOrganizationBase implements IGoal {\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\tname: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\t@IsOptional()\r\n\tdescription?: string;\r\n\r\n\t@ManyToOne((type) => OrganizationTeam)\r\n\t@JoinColumn()\r\n\townerTeam?: OrganizationTeam;\r\n\r\n\t@ManyToOne((type) => Employee)\r\n\t@JoinColumn()\r\n\townerEmployee?: Employee;\r\n\r\n\t@ApiProperty({ type: Employee })\r\n\t@ManyToOne((type) => Employee, { nullable: true })\r\n\t@JoinColumn()\r\n\t@IsOptional()\r\n\tlead?: Employee;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\tdeadline: string;\r\n\r\n\t@ApiProperty({ type: String, enum: GoalLevelEnum })\r\n\t@IsEnum(GoalLevelEnum)\r\n\t@Column()\r\n\tlevel: string;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@Column()\r\n\tprogress: number;\r\n\r\n\t@ApiProperty({ type: KeyResult })\r\n\t@OneToMany((type) => KeyResult, (keyResult) => keyResult.goal)\r\n\t@IsOptional()\r\n\tkeyResults?: KeyResult[];\r\n\r\n\t@ManyToOne((type) => KeyResult, (keyResult) => keyResult.id)\r\n\talignedKeyResult?: KeyResult;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column({ nullable: true })\r\n\talignedKeyResultId: string;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { GoalController } from './goal.controller';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { Goal } from './goal.entity';\r\nimport { GoalService } from './goal.service';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [TypeOrmModule.forFeature([Goal]), TenantModule],\r\n\tcontrollers: [GoalController],\r\n\tproviders: [GoalService],\r\n\texports: [GoalService]\r\n})\r\nexport class GoalModule {}\r\n","import { Goal } from './goal.entity';\r\nimport { Connection } from 'typeorm';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport * as faker from 'faker';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { GoalTimeFrame } from '../goal-time-frame/goal-time-frame.entity';\r\nimport { GoalLevelEnum } from '@gauzy/models';\r\nimport { OrganizationTeam } from '../organization-team/organization-team.entity';\r\nimport { DEFAULT_GOALS } from './default-goals';\r\n\r\nexport const createDefaultGoals = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\torganizations: Organization[],\r\n\temployees: Employee[]\r\n): Promise<Goal[]> => {\r\n\tconst defaultGoals = [];\r\n\tconst goalTimeFrames: GoalTimeFrame[] = await connection.manager.find(\r\n\t\tGoalTimeFrame\r\n\t);\r\n\tconst orgTeams: OrganizationTeam[] = await connection.manager.find(\r\n\t\tOrganizationTeam\r\n\t);\r\n\r\n\torganizations.forEach((organization, index) => {\r\n\t\tDEFAULT_GOALS.forEach((goalData) => {\r\n\t\t\tconst goal = new Goal();\r\n\t\t\tgoal.name = goalData.name;\r\n\t\t\tgoal.progress = 0;\r\n\t\t\tgoal.level = goalData.level;\r\n\t\t\tif (goal.level === GoalLevelEnum.EMPLOYEE) {\r\n\t\t\t\tgoal.ownerEmployee = faker.random.arrayElement(employees);\r\n\t\t\t} else if (goal.level === GoalLevelEnum.TEAM) {\r\n\t\t\t\tgoal.ownerTeam = faker.random.arrayElement(orgTeams);\r\n\t\t\t} else if (goal.level === GoalLevelEnum.ORGANIZATION) {\r\n\t\t\t\tgoal.organization = organization;\r\n\t\t\t}\r\n\t\t\tgoal.lead = faker.random.arrayElement(employees);\r\n\t\t\tgoal.tenant = tenant;\r\n\t\t\tgoal.description = ' ';\r\n\t\t\tgoal.deadline = faker.random.arrayElement(goalTimeFrames).name;\r\n\t\t\tgoal.organization = organization;\r\n\t\t\tgoal.organizationId = organization.id;\r\n\t\t\tdefaultGoals.push(goal);\r\n\t\t});\r\n\t});\r\n\r\n\tawait insertDefaultGoals(connection, defaultGoals);\r\n\r\n\treturn defaultGoals;\r\n};\r\n\r\nexport const updateDefaultGoalProgress = async (\r\n\tconnection: Connection\r\n): Promise<Goal[]> => {\r\n\tconst goals: Goal[] = await connection.manager.find(Goal, {\r\n\t\trelations: ['keyResults']\r\n\t});\r\n\tif (goals && goals.length > 0) {\r\n\t\tgoals.forEach(async (goal) => {\r\n\t\t\tif (goal.keyResults && goal.keyResults.length > 0) {\r\n\t\t\t\tconst progressTotal = goal.keyResults.reduce(\r\n\t\t\t\t\t(a, b) => a + b.progress * +b.weight,\r\n\t\t\t\t\t0\r\n\t\t\t\t);\r\n\t\t\t\tconst weightTotal = goal.keyResults.reduce(\r\n\t\t\t\t\t(a, b) => a + +b.weight,\r\n\t\t\t\t\t0\r\n\t\t\t\t);\r\n\t\t\t\tconst goalProgress = Math.round(progressTotal / weightTotal);\r\n\t\t\t\tawait connection.manager.update(\r\n\t\t\t\t\tGoal,\r\n\t\t\t\t\t{ id: goal.id },\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tprogress: goalProgress\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn goals;\r\n\t}\r\n};\r\n\r\nconst insertDefaultGoals = async (\r\n\tconnection: Connection,\r\n\tdefaultGoals: Goal[]\r\n) => {\r\n\tawait connection\r\n\t\t.createQueryBuilder()\r\n\t\t.insert()\r\n\t\t.into(Goal)\r\n\t\t.values(defaultGoals)\r\n\t\t.execute();\r\n};\r\n\r\nexport const createRandomGoal = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantOrganizationsMap: Map<Tenant, Organization[]>,\r\n\ttenantEmployeeMap: Map<Tenant, Employee[]>\r\n): Promise<Goal[]> => {\r\n\tif (!tenantOrganizationsMap) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: tenantOrganizationsMap not found, Random Goal will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\tif (!tenantEmployeeMap) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: tenantEmployeeMap not found, Random Goal will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst goalTimeFrames: GoalTimeFrame[] = await connection.manager.find(\r\n\t\tGoalTimeFrame\r\n\t);\r\n\r\n\tconst goals: Goal[] = [];\r\n\r\n\tfor (const tenant of tenants) {\r\n\t\tconst tenantOrgs = tenantOrganizationsMap.get(tenant);\r\n\t\tconst tenantEmployees = tenantEmployeeMap.get(tenant);\r\n\t\tfor (const tenantOrg of tenantOrgs) {\r\n\t\t\tconst organizationTeams = await connection.manager.find(\r\n\t\t\t\tOrganizationTeam,\r\n\t\t\t\t{\r\n\t\t\t\t\twhere: [{ organizationId: tenantOrg.id }]\r\n\t\t\t\t}\r\n\t\t\t);\r\n\r\n\t\t\tconst goal = new Goal();\r\n\r\n\t\t\tgoal.name = faker.name.jobTitle();\r\n\t\t\tgoal.progress = 0;\r\n\t\t\tgoal.level = faker.random.arrayElement([\r\n\t\t\t\t'Organization',\r\n\t\t\t\t'Team',\r\n\t\t\t\t'Employee'\r\n\t\t\t]);\r\n\t\t\tif (goal.level === GoalLevelEnum.EMPLOYEE) {\r\n\t\t\t\tgoal.ownerEmployee = faker.random.arrayElement(tenantEmployees);\r\n\t\t\t} else if (goal.level === GoalLevelEnum.TEAM) {\r\n\t\t\t\tgoal.ownerTeam = faker.random.arrayElement(organizationTeams);\r\n\t\t\t} else if (goal.level === GoalLevelEnum.ORGANIZATION) {\r\n\t\t\t\tgoal.organization = tenantOrg;\r\n\t\t\t}\r\n\t\t\tgoal.lead = faker.random.arrayElement(tenantEmployees);\r\n\t\t\tgoal.tenant = tenant;\r\n\t\t\tgoal.description = faker.name.jobDescriptor();\r\n\t\t\tgoal.deadline = faker.random.arrayElement(goalTimeFrames).name;\r\n\t\t\tgoal.organization = tenantOrg;\r\n\t\t\tgoal.organizationId = tenantOrg.id;\r\n\r\n\t\t\tgoals.push(goal);\r\n\t\t}\r\n\t}\r\n\r\n\tawait connection.manager.save(goals);\r\n\treturn goals;\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Goal } from './goal.entity';\r\nimport { Repository } from 'typeorm';\r\nimport { TenantAwareCrudService } from '../core/crud/tenant-aware-crud.service';\r\n\r\n@Injectable()\r\nexport class GoalService extends TenantAwareCrudService<Goal> {\r\n\tconstructor(\r\n\t\t@InjectRepository(Goal)\r\n\t\tprivate readonly goalRepository: Repository<Goal>\r\n\t) {\r\n\t\tsuper(goalRepository);\r\n\t}\r\n}\r\n","import { HelpCenterArticleService } from './../../../help-center-article/help-center-article.service';\r\nimport { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { KnowledgeBaseCategoryBulkDeleteCommand } from '../help-center.menu.bulk.delete.command';\r\n\r\n@CommandHandler(KnowledgeBaseCategoryBulkDeleteCommand)\r\nexport class KnowledgeBaseCategoryBulkDeleteHandler\r\n\timplements ICommandHandler<KnowledgeBaseCategoryBulkDeleteCommand> {\r\n\tconstructor(private readonly helpCenterArticle: HelpCenterArticleService) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: KnowledgeBaseCategoryBulkDeleteCommand\r\n\t): Promise<any> {\r\n\t\tconst { id } = command;\r\n\t\tconst articles = await this.helpCenterArticle.getArticlesByCategoryId(\r\n\t\t\tid\r\n\t\t);\r\n\t\tawait this.helpCenterArticle.deleteBulkByCategoryId(\r\n\t\t\tarticles.map((item) => item.id)\r\n\t\t);\r\n\r\n\t\treturn;\r\n\t}\r\n}\r\n","import { KnowledgeBaseCategoryBulkDeleteHandler } from './help-center.menu.bulk.delete.handler';\r\n\r\nexport const CommandHandlers = [KnowledgeBaseCategoryBulkDeleteHandler];\r\n","import { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class KnowledgeBaseCategoryBulkDeleteCommand implements ICommand {\r\n\tstatic readonly type = '[KnowledgeBaseCategory] Delete';\r\n\r\n\tconstructor(public readonly id: string) {}\r\n}\r\n","export { KnowledgeBaseCategoryBulkDeleteCommand } from './help-center.menu.bulk.delete.command';\r\n","import { HelpCenterArticle } from './help-center-article.entity';\r\nimport { PermissionsEnum, IHelpCenterArticle } from '@gauzy/models';\r\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport {\r\n\tController,\r\n\tHttpStatus,\r\n\tPost,\r\n\tBody,\r\n\tUseGuards,\r\n\tGet,\r\n\tParam,\r\n\tDelete,\r\n\tQuery\r\n} from '@nestjs/common';\r\nimport { CrudController } from '../core';\r\nimport { ParseJsonPipe } from '../shared';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { Permissions } from '../shared/decorators/permissions';\r\nimport { PermissionGuard } from '../shared/guards/auth/permission.guard';\r\nimport { HelpCenterArticleService } from './help-center-article.service';\r\nimport { KnowledgeBaseCategoryBulkDeleteCommand } from './commands';\r\nimport { CommandBus } from '@nestjs/cqrs';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('KnowledgeBaseArticle')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class HelpCenterArticleController extends CrudController<\r\n\tHelpCenterArticle\r\n> {\r\n\tconstructor(\r\n\t\tprivate readonly helpCenterService: HelpCenterArticleService,\r\n\t\tprivate readonly commandBus: CommandBus\r\n\t) {\r\n\t\tsuper(helpCenterService);\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Create new article'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'Success Add article',\r\n\t\ttype: HelpCenterArticle\r\n\t})\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_HELP_CENTER_EDIT)\r\n\t@Post()\r\n\tasync createNode(@Body() entity: IHelpCenterArticle): Promise<any> {\r\n\t\treturn this.helpCenterService.create(entity);\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find articles By Category Id.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found category articles',\r\n\t\ttype: HelpCenterArticle\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@UseGuards(PermissionGuard)\r\n\t@Get(':categoryId')\r\n\tasync findByCategoryId(\r\n\t\t@Param('categoryId') categoryId: string\r\n\t): Promise<HelpCenterArticle[]> {\r\n\t\treturn this.helpCenterService.getArticlesByCategoryId(categoryId);\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Delete Articles By Category Id.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found category articles',\r\n\t\ttype: HelpCenterArticle\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@UseGuards(PermissionGuard)\r\n\t@Delete('deleteBulkByCategoryId')\r\n\tasync deleteBulkByCategoryId(\r\n\t\t@Query('data', ParseJsonPipe) data: any\r\n\t): Promise<any> {\r\n\t\tconst { id = null } = data;\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew KnowledgeBaseCategoryBulkDeleteCommand(id)\r\n\t\t);\r\n\t}\r\n}\r\n","import { Entity, Column } from 'typeorm';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IHelpCenterArticle } from '@gauzy/models';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('knowledge_base_article')\r\nexport class HelpCenterArticle extends TenantOrganizationBase\r\n\timplements IHelpCenterArticle {\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\tname: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\tdescription: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\tdata: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\tcategoryId: string;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@Column()\r\n\tdraft: boolean;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@Column()\r\n\tprivacy: boolean;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@Column()\r\n\tindex: number;\r\n}\r\n","import { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { User } from '../user/user.entity';\r\nimport { UserService } from '../user/user.service';\r\nimport { Module } from '@nestjs/common';\r\nimport { HelpCenterArticle } from './help-center-article.entity';\r\nimport { HelpCenterArticleService } from './help-center-article.service';\r\nimport { HelpCenterArticleController } from './help-center-article.controller';\r\nimport { CqrsModule } from '@nestjs/cqrs';\r\nimport { CommandHandlers } from './commands/handlers';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([HelpCenterArticle, User]),\r\n\t\tCqrsModule,\r\n\t\tTenantModule\r\n\t],\r\n\tproviders: [HelpCenterArticleService, UserService, ...CommandHandlers],\r\n\tcontrollers: [HelpCenterArticleController],\r\n\texports: [HelpCenterArticleService]\r\n})\r\nexport class HelpCenterArticleModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { HelpCenterArticle } from './help-center-article.entity';\r\nimport * as faker from 'faker';\r\nimport { Organization } from '../organization/organization.entity';\r\n\r\nexport const createHelpCenterArticle = async (\r\n\tconnection: Connection,\r\n\torganizations: Organization[],\r\n\tnumberOfHelpCenterArticle\r\n): Promise<HelpCenterArticle[]> => {\r\n\tconst helpCenterArticles: HelpCenterArticle[] = [];\r\n\r\n\tconst booleanAry = [true, false];\r\n\tfor (let i = 0; i <= numberOfHelpCenterArticle; i++) {\r\n\t\torganizations.forEach((organization: Organization) => {\r\n\t\t\tconst article = new HelpCenterArticle();\r\n\t\t\tarticle.organization = organization;\r\n\t\t\tarticle.tenant = organization.tenant;\r\n\t\t\tarticle.name = faker.name.title();\r\n\t\t\tarticle.description = faker.name.jobDescriptor();\r\n\t\t\tarticle.data = faker.commerce.productMaterial();\r\n\t\t\tarticle.categoryId = (\r\n\t\t\t\tMath.floor(Math.random() * 99999) + 1\r\n\t\t\t).toString();\r\n\t\t\tarticle.draft = booleanAry[Math.random() > 0.5 ? 1 : 0];\r\n\t\t\tarticle.privacy = booleanAry[Math.random() > 0.5 ? 1 : 0];\r\n\t\t\tarticle.index = Math.floor(Math.random() * 99999) + 1;\r\n\r\n\t\t\thelpCenterArticles.push(article);\r\n\t\t});\r\n\t}\r\n\r\n\treturn await insertRandomHelpCenterArticle(connection, helpCenterArticles);\r\n};\r\n\r\nconst insertRandomHelpCenterArticle = async (\r\n\tconnection: Connection,\r\n\tdata: HelpCenterArticle[]\r\n): Promise<HelpCenterArticle[]> => {\r\n\treturn await connection.manager.save(data);\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { CrudService } from '../core/crud/crud.service';\r\nimport { HelpCenterArticle } from './help-center-article.entity';\r\n\r\n@Injectable()\r\nexport class HelpCenterArticleService extends CrudService<HelpCenterArticle> {\r\n\tconstructor(\r\n\t\t@InjectRepository(HelpCenterArticle)\r\n\t\tprivate readonly HelpCenterArticleRepository: Repository<\r\n\t\t\tHelpCenterArticle\r\n\t\t>\r\n\t) {\r\n\t\tsuper(HelpCenterArticleRepository);\r\n\t}\r\n\r\n\tasync getArticlesByCategoryId(\r\n\t\tcategoryId: string\r\n\t): Promise<HelpCenterArticle[]> {\r\n\t\treturn await this.repository\r\n\t\t\t.createQueryBuilder('knowledge_base_article')\r\n\t\t\t.where('knowledge_base_article.categoryId = :categoryId', {\r\n\t\t\t\tcategoryId\r\n\t\t\t})\r\n\t\t\t.getMany();\r\n\t}\r\n\tasync deleteBulkByCategoryId(ids: string[]) {\r\n\t\treturn await this.repository.delete(ids);\r\n\t}\r\n}\r\n","import { IHelpCenterAuthor } from '@gauzy/models';\r\nimport { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { ArticleAuthorsBulkCreateCommand } from '..';\r\nimport { HelpCenterAuthorService } from '../../help-center-author.service';\r\n\r\n@CommandHandler(ArticleAuthorsBulkCreateCommand)\r\nexport class ArticleAuthorsBulkCreateHandler\r\n\timplements ICommandHandler<ArticleAuthorsBulkCreateCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly helpCenterAuthorService: HelpCenterAuthorService\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: ArticleAuthorsBulkCreateCommand\r\n\t): Promise<IHelpCenterAuthor[]> {\r\n\t\tconst { input } = command;\r\n\t\tconst { articleId, employeeIds, organizationId, tenantId } = input;\r\n\r\n\t\tlet author: IHelpCenterAuthor;\r\n\t\tconst createInput: IHelpCenterAuthor[] = [];\r\n\r\n\t\tfor (const employeeId of employeeIds) {\r\n\t\t\tauthor = {\r\n\t\t\t\tarticleId: articleId,\r\n\t\t\t\temployeeId: employeeId,\r\n\t\t\t\torganizationId,\r\n\t\t\t\ttenantId\r\n\t\t\t};\r\n\t\t\tcreateInput.push(author);\r\n\t\t}\r\n\t\treturn await this.helpCenterAuthorService.createBulk(createInput);\r\n\t}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { KnowledgeBaseArticleBulkDeleteCommand } from '..';\r\nimport { HelpCenterAuthorService } from '../../help-center-author.service';\r\n\r\n@CommandHandler(KnowledgeBaseArticleBulkDeleteCommand)\r\nexport class KnowledgeBaseArticleBulkDeleteHandler\r\n\timplements ICommandHandler<KnowledgeBaseArticleBulkDeleteCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly helpCenterAuthorService: HelpCenterAuthorService\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: KnowledgeBaseArticleBulkDeleteCommand\r\n\t): Promise<any> {\r\n\t\tconst { id } = command;\r\n\t\tconst authors = await this.helpCenterAuthorService.findByArticleId(id);\r\n\t\tawait this.helpCenterAuthorService.deleteBulkByArticleId(\r\n\t\t\tauthors.map((item) => item.id)\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n}\r\n","import { KnowledgeBaseArticleBulkDeleteHandler } from './help-center-author.bulk.delete.handler';\r\nimport { ArticleAuthorsBulkCreateHandler } from './help-center-author.bulk.create.handler';\r\n\r\nexport const CommandHandlers = [\r\n\tKnowledgeBaseArticleBulkDeleteHandler,\r\n\tArticleAuthorsBulkCreateHandler\r\n];\r\n","import { IHelpCenterAuthorCreate } from '@gauzy/models';\r\nimport { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class ArticleAuthorsBulkCreateCommand implements ICommand {\r\n\tstatic readonly type = '[ArticleAuthors] Add';\r\n\r\n\tconstructor(public readonly input: IHelpCenterAuthorCreate) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class KnowledgeBaseArticleBulkDeleteCommand implements ICommand {\r\n\tstatic readonly type = '[KnowledgeBaseArticle] Delete';\r\n\r\n\tconstructor(public readonly id: string) {}\r\n}\r\n","export { KnowledgeBaseArticleBulkDeleteCommand } from './help-center-author.bulk.delete.command';\r\nexport { ArticleAuthorsBulkCreateCommand } from './help-center-author.bulk.create.command';\r\n","import { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport {\r\n\tController,\r\n\tUseGuards,\r\n\tHttpStatus,\r\n\tGet,\r\n\tParam,\r\n\tDelete,\r\n\tQuery,\r\n\tPost,\r\n\tBody\r\n} from '@nestjs/common';\r\nimport { CrudController, IPagination } from '../core';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { HelpCenterAuthor } from './help-center-author.entity';\r\nimport { HelpCenterAuthorService } from './help-center-author.service';\r\nimport { PermissionGuard } from '../shared/guards/auth/permission.guard';\r\nimport { ParseJsonPipe } from '../shared';\r\nimport { CommandBus } from '@nestjs/cqrs';\r\nimport {\r\n\tArticleAuthorsBulkCreateCommand,\r\n\tKnowledgeBaseArticleBulkDeleteCommand\r\n} from './commands';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('KnowledgeBaseAuthor')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class HelpCenterAuthorController extends CrudController<\r\n\tHelpCenterAuthor\r\n> {\r\n\tconstructor(\r\n\t\tprivate readonly commandBus: CommandBus,\r\n\t\tprivate readonly helpCenterAuthorService: HelpCenterAuthorService\r\n\t) {\r\n\t\tsuper(helpCenterAuthorService);\r\n\t}\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find authors By Article Id.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found article authors',\r\n\t\ttype: HelpCenterAuthor\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@UseGuards(PermissionGuard)\r\n\t@Get(':articleId')\r\n\tasync findByArticleId(\r\n\t\t@Param('articleId') articleId: string\r\n\t): Promise<HelpCenterAuthor[]> {\r\n\t\treturn this.helpCenterAuthorService.findByArticleId(articleId);\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find all authors.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found authors',\r\n\t\ttype: HelpCenterAuthor\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get()\r\n\tasync getAll(\r\n\t\t@Query('data', ParseJsonPipe) data: any\r\n\t): Promise<IPagination<HelpCenterAuthor>> {\r\n\t\tconst { relations = [], findInput = null } = data;\r\n\t\treturn this.helpCenterAuthorService.findAll({\r\n\t\t\trelations,\r\n\t\t\twhere: findInput\r\n\t\t});\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Create authors in Bulk' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'Authors have been successfully created.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@UseGuards(PermissionGuard)\r\n\t@Post('createBulk')\r\n\tasync createBulk(@Body() input: any): Promise<HelpCenterAuthor[]> {\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew ArticleAuthorsBulkCreateCommand(input)\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Delete Authors By Article Id.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found article authors',\r\n\t\ttype: HelpCenterAuthor\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@UseGuards(PermissionGuard)\r\n\t@Delete('deleteBulkByArticleId')\r\n\tasync deleteBulkByArticleId(\r\n\t\t@Query('data', ParseJsonPipe) data: any\r\n\t): Promise<any> {\r\n\t\tconst { id = null } = data;\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew KnowledgeBaseArticleBulkDeleteCommand(id)\r\n\t\t);\r\n\t}\r\n}\r\n","import { Entity, Column } from 'typeorm';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IHelpCenterAuthor } from '@gauzy/models';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('knowledge_base_author')\r\nexport class HelpCenterAuthor extends TenantOrganizationBase\r\n\timplements IHelpCenterAuthor {\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\temployeeId: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\tarticleId: string;\r\n}\r\n","import { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { User } from '../user/user.entity';\r\nimport { UserService } from '../user/user.service';\r\nimport { Module } from '@nestjs/common';\r\nimport { HelpCenterAuthorService } from './help-center-author.service';\r\nimport { HelpCenterAuthorController } from './help-center-author.controller';\r\nimport { HelpCenterAuthor } from './help-center-author.entity';\r\nimport { CqrsModule } from '@nestjs/cqrs';\r\nimport { CommandHandlers } from './commands/handlers';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([HelpCenterAuthor, User]),\r\n\t\tCqrsModule,\r\n\t\tTenantModule\r\n\t],\r\n\tproviders: [HelpCenterAuthorService, UserService, ...CommandHandlers],\r\n\tcontrollers: [HelpCenterAuthorController],\r\n\texports: [HelpCenterAuthorService]\r\n})\r\nexport class HelpCenterAuthorModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { HelpCenterAuthor } from './help-center-author.entity';\r\nimport { HelpCenterArticle } from '../help-center-article/help-center-article.entity';\r\nimport * as faker from 'faker';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { IEmployee } from '@gauzy/models';\r\n\r\nexport const createDefaultHelpCenterAuthor = async (\r\n\tconnection: Connection,\r\n\tdefaultEmployees: IEmployee[]\r\n): Promise<HelpCenterAuthor[]> => {\r\n\tif (!defaultEmployees) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: defaultEmployees not found, default help center author not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tlet mapEmployeeToArticles: HelpCenterAuthor[] = [];\r\n\r\n\tconst allArticle = await connection.manager.find(HelpCenterArticle, {});\r\n\r\n\tmapEmployeeToArticles = await operateData(\r\n\t\tconnection,\r\n\t\tmapEmployeeToArticles,\r\n\t\tallArticle,\r\n\t\tdefaultEmployees\r\n\t);\r\n\r\n\treturn mapEmployeeToArticles;\r\n};\r\n\r\nexport const createRandomHelpCenterAuthor = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantEmployeeMap: Map<Tenant, IEmployee[]> | void\r\n): Promise<HelpCenterAuthor[]> => {\r\n\tif (!tenantEmployeeMap) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: tenantEmployeeMap not found, help center author not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tlet mapEmployeeToArticles: HelpCenterAuthor[] = [];\r\n\tconst employees: IEmployee[] = [];\r\n\r\n\tconst allArticle = await connection.manager.find(HelpCenterArticle, {});\r\n\tfor (const tenant of tenants) {\r\n\t\tconst tenantEmployee = tenantEmployeeMap.get(tenant);\r\n\t\tfor (const tenantEmp of tenantEmployee) {\r\n\t\t\temployees.push(tenantEmp);\r\n\t\t}\r\n\t}\r\n\r\n\tmapEmployeeToArticles = await operateData(\r\n\t\tconnection,\r\n\t\tmapEmployeeToArticles,\r\n\t\tallArticle,\r\n\t\temployees\r\n\t);\r\n\r\n\treturn mapEmployeeToArticles;\r\n};\r\n\r\nconst insertRandomHelpCenterAuthor = async (\r\n\tconnection: Connection,\r\n\tdata: HelpCenterAuthor[]\r\n) => {\r\n\tawait connection.manager.save(data);\r\n};\r\n\r\nconst operateData = async (\r\n\tconnection,\r\n\tmapEmployeeToArticles,\r\n\tallArticle,\r\n\temployees: IEmployee[]\r\n) => {\r\n\tfor (let i = 0; i < allArticle.length; i++) {\r\n\t\tconst employee = faker.random.arrayElement(employees);\r\n\r\n\t\tconst employeeMap = new HelpCenterAuthor();\r\n\r\n\t\temployeeMap.employeeId = employee.id;\r\n\t\temployeeMap.articleId = allArticle[i].id;\r\n\t\temployeeMap.organization = employee.organization;\r\n\t\temployeeMap.tenant = employee.organization.tenant;\r\n\r\n\t\tmapEmployeeToArticles.push(employeeMap);\r\n\t}\r\n\r\n\tawait insertRandomHelpCenterAuthor(connection, mapEmployeeToArticles);\r\n\treturn mapEmployeeToArticles;\r\n};\r\n","import { IHelpCenterAuthor } from '@gauzy/models';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { CrudService } from '../core/crud/crud.service';\r\nimport { HelpCenterAuthor } from './help-center-author.entity';\r\n\r\n@Injectable()\r\nexport class HelpCenterAuthorService extends CrudService<HelpCenterAuthor> {\r\n\tconstructor(\r\n\t\t@InjectRepository(HelpCenterAuthor)\r\n\t\tprivate readonly HelpCenterAuthorRepository: Repository<\r\n\t\t\tHelpCenterAuthor\r\n\t\t>\r\n\t) {\r\n\t\tsuper(HelpCenterAuthorRepository);\r\n\t}\r\n\tasync findByArticleId(articleId: string): Promise<HelpCenterAuthor[]> {\r\n\t\treturn await this.repository\r\n\t\t\t.createQueryBuilder('knowledge_base_author')\r\n\t\t\t.where('knowledge_base_author.articleId = :articleId', {\r\n\t\t\t\tarticleId\r\n\t\t\t})\r\n\t\t\t.getMany();\r\n\t}\r\n\tasync createBulk(createInput: IHelpCenterAuthor[]) {\r\n\t\treturn await this.repository.save(createInput);\r\n\t}\r\n\tasync deleteBulkByArticleId(ids: string[]) {\r\n\t\treturn await this.repository.delete(ids);\r\n\t}\r\n\tasync getAll(): Promise<IHelpCenterAuthor[]> {\r\n\t\treturn await this.repository\r\n\t\t\t.createQueryBuilder('knowledge_base_author')\r\n\t\t\t.getMany();\r\n\t}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { KnowledgeBaseBulkDeleteCommand } from '..';\r\nimport { HelpCenterService } from '../../help-center.service';\r\n\r\n@CommandHandler(KnowledgeBaseBulkDeleteCommand)\r\nexport class KnowledgeBaseBulkDeleteHandler\r\n\timplements ICommandHandler<KnowledgeBaseBulkDeleteCommand> {\r\n\tconstructor(private readonly helpCenterService: HelpCenterService) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: KnowledgeBaseBulkDeleteCommand\r\n\t): Promise<any> {\r\n\t\tconst { id } = command;\r\n\t\tconst categories = await this.helpCenterService.getCategoriesByBaseId(\r\n\t\t\tid\r\n\t\t);\r\n\t\tawait this.helpCenterService.deleteBulkByBaseId(\r\n\t\t\tcategories.map((item) => item.id)\r\n\t\t);\r\n\r\n\t\treturn;\r\n\t}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { HelpCenter } from '../../help-center.entity';\r\nimport { HelpCenterService } from '../../help-center.service';\r\nimport { IHelpCenter } from '@gauzy/models';\r\nimport { HelpCenterUpdateCommand } from '../help-center.bulk.command';\r\n\r\n@CommandHandler(HelpCenterUpdateCommand)\r\nexport class HelpCenterUpdateHandler\r\n\timplements ICommandHandler<HelpCenterUpdateCommand> {\r\n\tconstructor(private readonly helpCenterService: HelpCenterService) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: HelpCenterUpdateCommand\r\n\t): Promise<HelpCenter[]> {\r\n\t\tconst { oldChildren, newChildren } = command;\r\n\t\tconst updateInput: IHelpCenter[] = await this.helpCenterService.getAllNodes();\r\n\t\tfor (let i = 0; i < oldChildren.length; i++) {\r\n\t\t\tupdateInput.forEach(async (node) => {\r\n\t\t\t\tif (oldChildren[i].id === node.id) {\r\n\t\t\t\t\tawait this.helpCenterService.update(node.id, {\r\n\t\t\t\t\t\tindex: i\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tconst diffArray = this.diff(oldChildren, newChildren);\r\n\t\tif (diffArray.length !== 0)\r\n\t\t\tfor (let i = 0; i < newChildren.length; i++) {\r\n\t\t\t\tupdateInput.forEach(async (node) => {\r\n\t\t\t\t\tif (newChildren[i].id === node.id) {\r\n\t\t\t\t\t\tawait this.helpCenterService.update(node.id, {\r\n\t\t\t\t\t\t\tindex: i\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\treturn await this.helpCenterService.updateBulk(updateInput);\r\n\t}\r\n\tdiff = function (oldChildren, newChildren) {\r\n\t\treturn oldChildren\r\n\t\t\t.filter((i) => !newChildren.includes(i))\r\n\t\t\t.concat(newChildren.filter((i) => !oldChildren.includes(i)));\r\n\t};\r\n}\r\n","import { HelpCenterUpdateHandler } from './help-center.bulk.handler';\r\nimport { KnowledgeBaseBulkDeleteHandler } from './help-center-base.bulk.handler';\r\n\r\nexport const CommandHandlers = [\r\n\tHelpCenterUpdateHandler,\r\n\tKnowledgeBaseBulkDeleteHandler\r\n];\r\n","import { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class KnowledgeBaseBulkDeleteCommand implements ICommand {\r\n\tstatic readonly type = '[KnowledgeBase] Delete';\r\n\r\n\tconstructor(public readonly id: string) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { IHelpCenter } from '@gauzy/models';\r\n\r\nexport class HelpCenterUpdateCommand implements ICommand {\r\n\tstatic readonly type = '[HelpCenter] Update';\r\n\r\n\tconstructor(\r\n\t\tpublic readonly oldChildren: IHelpCenter[],\r\n\t\tpublic readonly newChildren: IHelpCenter[]\r\n\t) {}\r\n}\r\n","export { HelpCenterUpdateCommand } from './help-center.bulk.command';\r\nexport { KnowledgeBaseBulkDeleteCommand } from './help-center-base.bulk.command';\r\n","import { IHelpCenter } from '@gauzy/models';\r\n\r\nexport const DEFAULT_HELP_CENTER_MENUS: IHelpCenter[] = [\r\n\t{\r\n\t\tname: 'Gauzy Platform',\r\n\t\ticon: 'book-open-outline',\r\n\t\tflag: 'base',\r\n\t\tprivacy: 'eye-outline',\r\n\t\tlanguage: 'en',\r\n\t\tcolor: '#d53636',\r\n\t\tindex: 0,\r\n\t\ttenant: {},\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\tname: 'Cookies',\r\n\t\t\t\ticon: 'alert-circle-outline',\r\n\t\t\t\tflag: 'category',\r\n\t\t\t\tprivacy: 'eye-outline',\r\n\t\t\t\tdescription: 'Information',\r\n\t\t\t\tlanguage: 'en',\r\n\t\t\t\tcolor: '#d53636',\r\n\t\t\t\ttenant: {},\r\n\t\t\t\tindex: 0\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Device',\r\n\t\t\t\ticon: 'book-open-outline',\r\n\t\t\t\tflag: 'category',\r\n\t\t\t\tprivacy: 'eye-off-outline',\r\n\t\t\t\tdescription: 'Device Information',\r\n\t\t\t\tlanguage: 'en',\r\n\t\t\t\tcolor: '#d53636',\r\n\t\t\t\ttenant: {},\r\n\t\t\t\tindex: 1\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tflag: 'category',\r\n\t\t\t\ticon: 'book-open-outline',\r\n\t\t\t\tprivacy: 'eye-off-outline',\r\n\t\t\t\tname: 'Privacy',\r\n\t\t\t\tdescription: 'Gauzy Privacy Statement',\r\n\t\t\t\tdata: 'Usage Information',\r\n\t\t\t\tlanguage: 'en',\r\n\t\t\t\tcolor: '#d53636',\r\n\t\t\t\ttenant: {},\r\n\t\t\t\tindex: 2\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tflag: 'category',\r\n\t\t\t\ticon: 'book-open-outline',\r\n\t\t\t\tprivacy: 'eye-off-outline',\r\n\t\t\t\tname: 'Testing',\r\n\t\t\t\tdescription: 'Gauzy Testing',\r\n\t\t\t\tlanguage: 'en',\r\n\t\t\t\tcolor: '#d53636',\r\n\t\t\t\ttenant: {},\r\n\t\t\t\tindex: 3\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tname: 'Ever Platform',\r\n\t\ticon: 'book-open-outline',\r\n\t\tflag: 'base',\r\n\t\tprivacy: 'eye-off-outline',\r\n\t\tlanguage: 'en',\r\n\t\tcolor: '#d53636',\r\n\t\tindex: 1,\r\n\t\ttenant: {},\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\tname: 'Cookies',\r\n\t\t\t\ticon: 'alert-circle-outline',\r\n\t\t\t\tflag: 'category',\r\n\t\t\t\tprivacy: 'eye-outline',\r\n\t\t\t\tdescription: 'Information',\r\n\t\t\t\tlanguage: 'en',\r\n\t\t\t\tcolor: '#d53636',\r\n\t\t\t\ttenant: {},\r\n\t\t\t\tindex: 0\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tflag: 'base',\r\n\t\ticon: 'book-open-outline',\r\n\t\tprivacy: 'eye-off-outline',\r\n\t\tname: 'Privacy',\r\n\t\tlanguage: 'en',\r\n\t\tcolor: '#d53636',\r\n\t\tindex: 2,\r\n\t\ttenant: {},\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\tname: 'Cookies',\r\n\t\t\t\ticon: 'alert-circle-outline',\r\n\t\t\t\tflag: 'category',\r\n\t\t\t\tprivacy: 'eye-outline',\r\n\t\t\t\tdescription: 'Information',\r\n\t\t\t\tlanguage: 'en',\r\n\t\t\t\tcolor: '#d53636',\r\n\t\t\t\ttenant: {},\r\n\t\t\t\tindex: 0\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n];\r\n","import { IHelpCenter, PermissionsEnum } from '@gauzy/models';\r\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport {\r\n\tController,\r\n\tHttpStatus,\r\n\tPost,\r\n\tBody,\r\n\tUseGuards,\r\n\tGet,\r\n\tQuery,\r\n\tDelete,\r\n\tParam\r\n} from '@nestjs/common';\r\nimport { CrudController, IPagination } from '../core';\r\nimport { HelpCenterService } from './help-center.service';\r\nimport { HelpCenter } from './help-center.entity';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { Permissions } from '../shared/decorators/permissions';\r\nimport { PermissionGuard } from '../shared/guards/auth/permission.guard';\r\nimport { ParseJsonPipe } from '../shared';\r\nimport { CommandBus } from '@nestjs/cqrs';\r\nimport { KnowledgeBaseBulkDeleteCommand } from './commands';\r\nimport { HelpCenterUpdateCommand } from './commands/help-center.bulk.command';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('KnowledgeBase')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class HelpCenterController extends CrudController<HelpCenter> {\r\n\tconstructor(\r\n\t\tprivate readonly helpCenterService: HelpCenterService,\r\n\t\tprivate readonly commandBus: CommandBus\r\n\t) {\r\n\t\tsuper(helpCenterService);\r\n\t}\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find all menus.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found tree',\r\n\t\ttype: HelpCenter\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get()\r\n\tasync findMenu(\r\n\t\t@Query('data', ParseJsonPipe) data: any\r\n\t): Promise<IPagination<HelpCenter>> {\r\n\t\tconst { relations = [], findInput = null } = data;\r\n\t\treturn this.helpCenterService.findAll({\r\n\t\t\trelations,\r\n\t\t\twhere: findInput\r\n\t\t});\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Create new category'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'Success Add category',\r\n\t\ttype: HelpCenter\r\n\t})\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_HELP_CENTER_EDIT)\r\n\t@Post()\r\n\tasync createNode(@Body() entity: IHelpCenter): Promise<any> {\r\n\t\treturn this.helpCenterService.create(entity);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Update indexes in Bulk' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'Indexes have been successfully updated.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_HELP_CENTER_EDIT)\r\n\t@Post('updateBulk')\r\n\tasync updateBulk(@Body() input: any): Promise<IHelpCenter[]> {\r\n\t\tconst { oldChildren = [], newChildren = [] } = input;\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew HelpCenterUpdateCommand(oldChildren, newChildren)\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find Categories By Base Id.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found base categories',\r\n\t\ttype: HelpCenter\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@UseGuards(PermissionGuard)\r\n\t@Get(':baseId')\r\n\tasync findByBaseId(@Param('baseId') baseId: string): Promise<HelpCenter[]> {\r\n\t\treturn this.helpCenterService.getCategoriesByBaseId(baseId);\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Delete Categories By Base Id.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found base categories',\r\n\t\ttype: HelpCenter\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@UseGuards(PermissionGuard)\r\n\t@Delete('deleteBulkByBaseId')\r\n\tasync deleteBulkByBaseId(\r\n\t\t@Query('data', ParseJsonPipe) data: any\r\n\t): Promise<any> {\r\n\t\tconst { id = null } = data;\r\n\t\treturn this.commandBus.execute(new KnowledgeBaseBulkDeleteCommand(id));\r\n\t}\r\n}\r\n","import { Entity, Column, ManyToOne, OneToMany, JoinTable } from 'typeorm';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IHelpCenter, IHelpCenterArticle } from '@gauzy/models';\r\nimport { HelpCenterArticle } from '../help-center-article/help-center-article.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('knowledge_base')\r\nexport class HelpCenter extends TenantOrganizationBase implements IHelpCenter {\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\tname: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\tflag: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\ticon: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\tprivacy: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\tlanguage: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\tcolor: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column({ nullable: true })\r\n\tdescription?: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column({ nullable: true })\r\n\tdata?: string;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@Column({ nullable: true })\r\n\tindex: number;\r\n\r\n\t@ManyToOne((type) => HelpCenter, (children) => children.children, {\r\n\t\tcascade: ['insert'],\r\n\t\tnullable: true\r\n\t})\r\n\tparent?: IHelpCenter;\r\n\r\n\t@OneToMany((type) => HelpCenter, (children) => children.parent, {\r\n\t\tcascade: ['insert'],\r\n\t\tnullable: true\r\n\t})\r\n\tchildren?: IHelpCenter[];\r\n\r\n\t@ManyToOne((type) => HelpCenterArticle, { cascade: true })\r\n\t@JoinTable({\r\n\t\tname: 'HelpCenterArticle'\r\n\t})\r\n\tarticles?: IHelpCenterArticle[];\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column({ nullable: true })\r\n\tparentId?: string;\r\n}\r\n","import { HelpCenterController } from './help-center.controller';\r\nimport { HelpCenter } from './help-center.entity';\r\nimport { HelpCenterService } from './help-center.service';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { User } from '../user/user.entity';\r\nimport { UserService } from '../user/user.service';\r\nimport { Module } from '@nestjs/common';\r\nimport { CommandHandlers } from './commands/handlers';\r\nimport { CqrsModule } from '@nestjs/cqrs';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([HelpCenter, User]),\r\n\t\tCqrsModule,\r\n\t\tTenantModule\r\n\t],\r\n\tproviders: [HelpCenterService, UserService, ...CommandHandlers],\r\n\tcontrollers: [HelpCenterController],\r\n\texports: [HelpCenterService]\r\n})\r\nexport class HelpCenterModule {}\r\n","import { HelpCenter } from './help-center.entity';\r\nimport { IHelpCenter } from '@gauzy/models';\r\nimport { Connection } from 'typeorm';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { DEFAULT_HELP_CENTER_MENUS } from './default-help-centers';\r\n\r\nexport const createHelpCenter = async (\r\n\tconnection: Connection,\r\n\t{\r\n\t\ttenant,\r\n\t\torg\r\n\t}: {\r\n\t\ttenant: Tenant;\r\n\t\torg: Organization;\r\n\t}\r\n): Promise<IHelpCenter[]> => {\r\n\tconst helpCenterMenuList: IHelpCenter[] = DEFAULT_HELP_CENTER_MENUS;\r\n\tfor (const node of helpCenterMenuList) {\r\n\t\tconst helpCenter: HelpCenter = {\r\n\t\t\t...node,\r\n\t\t\ttenant,\r\n\t\t\torganization: org,\r\n\t\t\torganizationId: org.id\r\n\t\t};\r\n\t\thelpCenter.children.forEach((child: HelpCenter) => {\r\n\t\t\tchild.organization = org;\r\n\t\t\tchild.tenant = tenant;\r\n\t\t});\r\n\t\tconst entity = await createEntity(connection, helpCenter);\r\n\t\tawait save(connection, entity);\r\n\t}\r\n\treturn helpCenterMenuList;\r\n};\r\n\r\nconst save = async (\r\n\tconnection: Connection,\r\n\tnode: IHelpCenter\r\n): Promise<void> => {\r\n\tawait connection.manager.save(node);\r\n};\r\n\r\nconst createEntity = async (connection: Connection, node: HelpCenter) => {\r\n\tif (!node) {\r\n\t\treturn;\r\n\t}\r\n\treturn connection.manager.create(HelpCenter, node);\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { HelpCenter } from './help-center.entity';\r\nimport { IHelpCenter } from '@gauzy/models';\r\nimport { TenantAwareCrudService } from '../core/crud/tenant-aware-crud.service';\r\n\r\n@Injectable()\r\nexport class HelpCenterService extends TenantAwareCrudService<HelpCenter> {\r\n\tconstructor(\r\n\t\t@InjectRepository(HelpCenter)\r\n\t\tprivate readonly HelpCenterRepository: Repository<HelpCenter>\r\n\t) {\r\n\t\tsuper(HelpCenterRepository);\r\n\t}\r\n\tasync updateBulk(updateInput: IHelpCenter[]) {\r\n\t\treturn await this.repository.save(updateInput);\r\n\t}\r\n\tasync deleteBulkByBaseId(ids: string[]) {\r\n\t\treturn await this.repository.delete(ids);\r\n\t}\r\n\tasync getCategoriesByBaseId(baseId: string): Promise<HelpCenter[]> {\r\n\t\treturn await this.repository\r\n\t\t\t.createQueryBuilder('knowledge_base')\r\n\t\t\t.where('knowledge_base.parentId = :baseId', {\r\n\t\t\t\tbaseId\r\n\t\t\t})\r\n\t\t\t.getMany();\r\n\t}\r\n\tasync getAllNodes(): Promise<HelpCenter[]> {\r\n\t\treturn await this.repository\r\n\t\t\t.createQueryBuilder('knowledge_base')\r\n\t\t\t.getMany();\r\n\t}\r\n}\r\n","import { Controller, Get } from '@nestjs/common';\r\n\r\n@Controller()\r\nexport class HomeController {\r\n\t@Get('/')\r\n\thome() {\r\n\t\treturn `Gauzy API`;\r\n\t}\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { HomeController } from './home.controller';\r\n\r\n@Module({\r\n\tcontrollers: [HomeController]\r\n})\r\nexport class HomeModule {}\r\n","import { Controller, Post, Body, Get, Param, UseGuards } from '@nestjs/common';\r\nimport { HubstaffService } from './hubstaff.service';\r\nimport {\r\n\tIIntegrationTenant,\r\n\tIHubstaffOrganization,\r\n\tIHubstaffProject,\r\n\tIIntegrationMap\r\n} from '@gauzy/models';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { ApiTags } from '@nestjs/swagger';\r\n\r\n@ApiTags('Integrations')\r\n@UseGuards(AuthGuard('jwt'))\r\n@Controller()\r\nexport class HubstaffController {\r\n\tconstructor(private _hubstaffService: HubstaffService) {}\r\n\r\n\t@Get('/get-token/:integrationId')\r\n\tgetHubstaffToken(\r\n\t\t@Param('integrationId') integrationId: string\r\n\t): Promise<string> {\r\n\t\treturn this._hubstaffService.getHubstaffToken(integrationId);\r\n\t}\r\n\r\n\t@Get('/refresh-token/:integrationId')\r\n\trefreshHubstaffToken(\r\n\t\t@Param('integrationId') integrationId: string\r\n\t): Promise<string> {\r\n\t\treturn this._hubstaffService.refreshToken(integrationId);\r\n\t}\r\n\r\n\t@Post('/add-integration')\r\n\taddIntegration(@Body() body): Promise<IIntegrationTenant> {\r\n\t\treturn this._hubstaffService.addIntegration(body);\r\n\t}\r\n\r\n\t@Post('/organizations/:integrationId')\r\n\tasync getOrganizations(\r\n\t\t@Param('integrationId') integrationId: string,\r\n\t\t@Body() body\r\n\t): Promise<IHubstaffOrganization[]> {\r\n\t\treturn this._hubstaffService.fetchOrganizations({\r\n\t\t\tintegrationId,\r\n\t\t\t...body\r\n\t\t});\r\n\t}\r\n\r\n\t@Post('/projects/:organizationId')\r\n\tasync getProjects(\r\n\t\t@Param('organizationId') organizationId: string,\r\n\t\t@Body() body\r\n\t): Promise<IHubstaffProject[]> {\r\n\t\treturn this._hubstaffService.fetchOrganizationProjects({\r\n\t\t\torganizationId,\r\n\t\t\t...body\r\n\t\t});\r\n\t}\r\n\r\n\t@Post('/sync-projects/:integrationId')\r\n\tasync syncProjects(\r\n\t\t@Param('integrationId') integrationId: string,\r\n\t\t@Body() body\r\n\t): Promise<IIntegrationMap[]> {\r\n\t\treturn await this._hubstaffService.syncProjects({\r\n\t\t\tintegrationId,\r\n\t\t\t...body\r\n\t\t});\r\n\t}\r\n\r\n\t@Post('/sync-organizations/:integrationId')\r\n\tasync syncOrganizations(\r\n\t\t@Param('integrationId') integrationId: string,\r\n\t\t@Body() body\r\n\t): Promise<IIntegrationMap[]> {\r\n\t\treturn await this._hubstaffService.syncOrganizations({\r\n\t\t\tintegrationId,\r\n\t\t\t...body\r\n\t\t});\r\n\t}\r\n\r\n\t@Post('/auto-sync/:integrationId')\r\n\tasync autoSync(\r\n\t\t@Param('integrationId') integrationId: string,\r\n\t\t@Body() body\r\n\t): Promise<any> {\r\n\t\treturn await this._hubstaffService.autoSync({\r\n\t\t\tintegrationId,\r\n\t\t\t...body\r\n\t\t});\r\n\t}\r\n}\r\n","import { Module, HttpModule } from '@nestjs/common';\r\nimport { HubstaffService } from './hubstaff.service';\r\nimport { HubstaffController } from './hubstaff.controller';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { IntegrationTenant } from '../integration-tenant/integration-tenant.entity';\r\nimport { IntegrationTenantService } from '../integration-tenant/integration-tenant.service';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { TenantService } from '../tenant/tenant.service';\r\nimport { IntegrationSetting } from '../integration-setting/integration-setting.entity';\r\nimport { IntegrationSettingService } from '../integration-setting/integration-setting.service';\r\nimport { IntegrationMap } from '../integration-map/integration-map.entity';\r\nimport { IntegrationMapService } from '../integration-map/integration-map.service';\r\nimport { OrganizationProject } from '../organization-projects/organization-projects.entity';\r\nimport { OrganizationProjectsService } from '../organization-projects/organization-projects.service';\r\nimport { IntegrationEntitySettingService } from '../integration-entity-setting/integration-entity-setting.service';\r\nimport { IntegrationEntitySetting } from '../integration-entity-setting/integration-entity-setting.entity';\r\nimport { CqrsModule } from '@nestjs/cqrs';\r\nimport { IntegrationEntitySettingTiedEntity } from '../integration-entity-setting-tied-entity/integration-entity-setting-tied-entity.entity';\r\nimport { IntegrationEntitySettingTiedEntityService } from '../integration-entity-setting-tied-entity/integration-entity-setting-tied-entity.service';\r\nimport { RoleService } from '../role/role.service';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { OrganizationService } from '../organization/organization.service';\r\nimport { Role } from '../role/role.entity';\r\nimport { User } from '../user/user.entity';\r\nimport { UserService } from '../user/user.service';\r\nimport { UserModule } from '../user/user.module';\r\nimport { RoleModule } from '../role/role.module';\r\nimport { RolePermissionsModule } from '../role-permissions/role-permissions.module';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tHttpModule,\r\n\t\tTypeOrmModule.forFeature([\r\n\t\t\tIntegrationTenant,\r\n\t\t\tTenant,\r\n\t\t\tIntegrationSetting,\r\n\t\t\tIntegrationMap,\r\n\t\t\tOrganizationProject,\r\n\t\t\tIntegrationEntitySetting,\r\n\t\t\tIntegrationEntitySettingTiedEntity,\r\n\t\t\tRole,\r\n\t\t\tOrganization,\r\n\t\t\tUser\r\n\t\t]),\r\n\t\tCqrsModule,\r\n\t\tRoleModule,\r\n\t\tUserModule,\r\n\t\tRolePermissionsModule\r\n\t],\r\n\tcontrollers: [HubstaffController],\r\n\tproviders: [\r\n\t\tHubstaffService,\r\n\t\tIntegrationTenantService,\r\n\t\tTenantService,\r\n\t\tIntegrationSettingService,\r\n\t\tIntegrationMapService,\r\n\t\tOrganizationProjectsService,\r\n\t\tIntegrationEntitySettingService,\r\n\t\tIntegrationEntitySettingTiedEntityService,\r\n\t\tOrganizationService,\r\n\t\tRoleService,\r\n\t\tUserService\r\n\t]\r\n})\r\nexport class HubstaffModule {}\r\n","import {\r\n\tInjectable,\r\n\tHttpService,\r\n\tBadRequestException,\r\n\tHttpStatus,\r\n\tUnauthorizedException\r\n} from '@nestjs/common';\r\nimport { map, catchError, switchMap } from 'rxjs/operators';\r\nimport {\r\n\tICreateIntegrationDto,\r\n\tIIntegrationTenant,\r\n\tIntegrationEnum,\r\n\tIntegrationEntity,\r\n\tIIntegrationMap,\r\n\tIIntegrationSetting,\r\n\tRolesEnum,\r\n\tTimeLogType,\r\n\tContactType,\r\n\tCurrenciesEnum,\r\n\tProjectBillingEnum,\r\n\tTimeLogSourceEnum,\r\n\tIHubstaffOrganization,\r\n\tIHubstaffProject\r\n} from '@gauzy/models';\r\nimport { IntegrationTenantService } from '../integration-tenant/integration-tenant.service';\r\nimport { IntegrationSettingService } from '../integration-setting/integration-setting.service';\r\nimport { IntegrationMapService } from '../integration-map/integration-map.service';\r\nimport { IntegrationEntitySettingService } from '../integration-entity-setting/integration-entity-setting.service';\r\nimport {\r\n\tDEFAULT_ENTITY_SETTINGS,\r\n\tPROJECT_TIED_ENTITIES\r\n} from '@gauzy/integration-hubstaff';\r\nimport {\r\n\tOrganizationCreateCommand,\r\n\tOrganizationUpdateCommand\r\n} from '../organization/commands';\r\nimport { CommandBus } from '@nestjs/cqrs';\r\nimport { OrganizationContactCreateCommand } from '../organization-contact/commands/organization-contact-create.command';\r\nimport { TaskCreateCommand } from '../tasks/commands';\r\nimport { IntegrationEntitySettingTiedEntityService } from '../integration-entity-setting-tied-entity/integration-entity-setting-tied-entity.service';\r\nimport { DeepPartial } from 'typeorm';\r\nimport { IntegrationEntitySetting } from '../integration-entity-setting/integration-entity-setting.entity';\r\nimport { EmployeeCreateCommand } from '../employee/commands';\r\nimport { RoleService } from '../role/role.service';\r\nimport { OrganizationService } from '../organization/organization.service';\r\nimport { UserService } from '../user/user.service';\r\nimport { EmployeeGetCommand } from '../employee/commands/employee.get.command';\r\nimport * as moment from 'moment';\r\nimport {\r\n\tTimeSlotCreateCommand,\r\n\tTimesheetGetCommand,\r\n\tTimesheetCreateCommand,\r\n\tScreenshotCreateCommand,\r\n\tActivityCreateCommand\r\n} from '../timesheet/commands';\r\nimport { environment } from '@env-api/environment';\r\nimport { getDummyImage } from '../core';\r\nimport { TimeLogCreateCommand } from '../timesheet/time-log/commands/time-log-create.command';\r\nimport { RequestContext } from '../core/context';\r\nimport { OrganizationProjectCreateCommand } from '../organization-projects/commands/organization-project.create.command';\r\nimport { OrganizationProjectUpdateCommand } from '../organization-projects/commands/organization-project.update.command';\r\nimport { TaskUpdateCommand } from '../tasks/commands/task-update.command';\r\nimport { environment as env } from '@env-api/environment';\r\n\r\n@Injectable()\r\nexport class HubstaffService {\r\n\tconstructor(\r\n\t\tprivate _httpService: HttpService,\r\n\t\tprivate _integrationService: IntegrationTenantService,\r\n\t\tprivate _integrationSettingService: IntegrationSettingService,\r\n\t\tprivate _integrationMapService: IntegrationMapService,\r\n\t\tprivate _integrationEntitySettingService: IntegrationEntitySettingService,\r\n\t\tprivate _integrationEntitySettingTiedEntityService: IntegrationEntitySettingTiedEntityService,\r\n\t\tprivate _roleService: RoleService,\r\n\t\tprivate _organizationService: OrganizationService,\r\n\t\tprivate _userService: UserService,\r\n\t\tprivate readonly commandBus: CommandBus\r\n\t) {}\r\n\r\n\tasync fetchIntegration(url, token): Promise<any> {\r\n\t\tconst headers = {\r\n\t\t\tAuthorization: `Bearer ${token}`\r\n\t\t};\r\n\t\ttry {\r\n\t\t\treturn await this._httpService\r\n\t\t\t\t.get(url, { headers })\r\n\t\t\t\t.pipe(map((response) => response.data))\r\n\t\t\t\t.toPromise();\r\n\t\t} catch (error) {\r\n\t\t\tif (error.response.status === HttpStatus.UNAUTHORIZED) {\r\n\t\t\t\tthrow new UnauthorizedException();\r\n\t\t\t}\r\n\t\t\tthrow new BadRequestException(error);\r\n\t\t}\r\n\t}\r\n\r\n\tasync refreshToken(integrationId) {\r\n\t\tconst {\r\n\t\t\titems: settings\r\n\t\t} = await this._integrationSettingService.findAll({\r\n\t\t\twhere: {\r\n\t\t\t\tintegration: { id: integrationId }\r\n\t\t\t}\r\n\t\t});\r\n\t\tconst headers = {\r\n\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\r\n\t\t};\r\n\r\n\t\tconst urlParams = new URLSearchParams();\r\n\r\n\t\tconst { client_id, client_secret, refresh_token } = settings.reduce(\r\n\t\t\t(prev, current) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...prev,\r\n\t\t\t\t\tclient_id:\r\n\t\t\t\t\t\tcurrent.settingsName === 'client_id'\r\n\t\t\t\t\t\t\t? current.settingsValue\r\n\t\t\t\t\t\t\t: prev.client_id,\r\n\t\t\t\t\tclient_secret:\r\n\t\t\t\t\t\tcurrent.settingsName === 'client_secret'\r\n\t\t\t\t\t\t\t? current.settingsValue\r\n\t\t\t\t\t\t\t: prev.client_secret,\r\n\t\t\t\t\trefresh_token:\r\n\t\t\t\t\t\tcurrent.settingsName === 'refresh_token'\r\n\t\t\t\t\t\t\t? current.settingsValue\r\n\t\t\t\t\t\t\t: prev.refresh_token\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tclient_id: '',\r\n\t\t\t\tclient_secret: '',\r\n\t\t\t\trefresh_token: ''\r\n\t\t\t}\r\n\t\t);\r\n\t\turlParams.append('grant_type', 'refresh_token');\r\n\t\turlParams.append('refresh_token', refresh_token);\r\n\r\n\t\turlParams.append('client_id', client_id);\r\n\t\turlParams.append('client_secret', client_secret);\r\n\r\n\t\ttry {\r\n\t\t\tconst tokens = await this._httpService\r\n\t\t\t\t.post('https://account.hubstaff.com/access_tokens', urlParams, {\r\n\t\t\t\t\theaders\r\n\t\t\t\t})\r\n\t\t\t\t.pipe(map((response) => response.data))\r\n\t\t\t\t.toPromise();\r\n\r\n\t\t\tconst settingsDto = settings.map((setting) => {\r\n\t\t\t\tif (setting.settingsName === 'access_token') {\r\n\t\t\t\t\tsetting.settingsValue = tokens.access_token;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (setting.settingsName === 'refresh_token') {\r\n\t\t\t\t\tsetting.settingsValue = tokens.refresh_token;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn setting;\r\n\t\t\t}) as DeepPartial<IIntegrationSetting>;\r\n\r\n\t\t\tawait this._integrationSettingService.create(settingsDto);\r\n\t\t\treturn tokens;\r\n\t\t} catch (error) {\r\n\t\t\tthrow new BadRequestException(error);\r\n\t\t}\r\n\t}\r\n\r\n\tasync getHubstaffToken(integrationId): Promise<string> {\r\n\t\tconst {\r\n\t\t\trecord: integrationSetting\r\n\t\t} = await this._integrationSettingService.findOneOrFail({\r\n\t\t\twhere: {\r\n\t\t\t\tintegration: { id: integrationId },\r\n\t\t\t\tsettingsName: 'access_token'\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn integrationSetting;\r\n\t}\r\n\r\n\tasync addIntegration(\r\n\t\tbody: ICreateIntegrationDto\r\n\t): Promise<IIntegrationTenant> {\r\n\t\tconst headers = {\r\n\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\r\n\t\t};\r\n\t\tconst {\r\n\t\t\tclient_id,\r\n\t\t\tclient_secret,\r\n\t\t\tcode,\r\n\t\t\tredirect_uri,\r\n\t\t\torganizationId\r\n\t\t} = body;\r\n\t\tconst urlParams = new URLSearchParams();\r\n\t\turlParams.append('client_id', client_id);\r\n\t\turlParams.append('code', code);\r\n\t\turlParams.append('grant_type', 'authorization_code');\r\n\t\turlParams.append('redirect_uri', redirect_uri);\r\n\t\turlParams.append('client_secret', client_secret);\r\n\r\n\t\tconst tenantId = RequestContext.currentTenantId();\r\n\t\tconst tiedEntities = [];\r\n\t\tfor await (const entity of PROJECT_TIED_ENTITIES) {\r\n\t\t\tconst create = await this._integrationEntitySettingTiedEntityService.create(\r\n\t\t\t\tObject.assign(entity, { organizationId, tenantId })\r\n\t\t\t);\r\n\t\t\ttiedEntities.push(create);\r\n\t\t}\r\n\r\n\t\tconst settingsForEntities = DEFAULT_ENTITY_SETTINGS.map(\r\n\t\t\t(settingEntity) => {\r\n\t\t\t\treturn Object.assign(settingEntity, {\r\n\t\t\t\t\torganizationId,\r\n\t\t\t\t\ttenantId\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t).map((settingEntity) =>\r\n\t\t\tsettingEntity.entity === IntegrationEntity.PROJECT\r\n\t\t\t\t? {\r\n\t\t\t\t\t\t...settingEntity,\r\n\t\t\t\t\t\ttiedEntities: tiedEntities\r\n\t\t\t\t  }\r\n\t\t\t\t: settingEntity\r\n\t\t) as DeepPartial<IntegrationEntitySetting>;\r\n\r\n\t\tconst entitySettings = await this._integrationEntitySettingService.create(\r\n\t\t\tsettingsForEntities\r\n\t\t);\r\n\t\treturn this._httpService\r\n\t\t\t.post('https://account.hubstaff.com/access_tokens', urlParams, {\r\n\t\t\t\theaders\r\n\t\t\t})\r\n\t\t\t.pipe(\r\n\t\t\t\tswitchMap(({ data }) =>\r\n\t\t\t\t\tthis._integrationService.addIntegration({\r\n\t\t\t\t\t\torganizationId,\r\n\t\t\t\t\t\ttenantId,\r\n\t\t\t\t\t\tname: IntegrationEnum.HUBSTAFF,\r\n\t\t\t\t\t\tentitySettings,\r\n\t\t\t\t\t\tsettings: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tsettingsName: 'client_id',\r\n\t\t\t\t\t\t\t\tsettingsValue: client_id\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tsettingsName: 'client_secret',\r\n\t\t\t\t\t\t\t\tsettingsValue: client_secret\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tsettingsName: 'access_token',\r\n\t\t\t\t\t\t\t\tsettingsValue: data.access_token\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tsettingsName: 'refresh_token',\r\n\t\t\t\t\t\t\t\tsettingsValue: data.refresh_token\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t].map((setting) => {\r\n\t\t\t\t\t\t\treturn { organizationId, ...setting };\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t),\r\n\t\t\t\tcatchError((err) => {\r\n\t\t\t\t\tthrow new BadRequestException(err);\r\n\t\t\t\t})\r\n\t\t\t)\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\t/*\r\n\t * Fetch all organizations\r\n\t */\r\n\tasync fetchOrganizations({\r\n\t\tintegrationId,\r\n\t\ttoken\r\n\t}): Promise<IHubstaffOrganization[]> {\r\n\t\tconst { organizations } = await this.fetchIntegration(\r\n\t\t\t'https://api.hubstaff.com/v2/organizations',\r\n\t\t\ttoken\r\n\t\t);\r\n\t\treturn organizations;\r\n\t}\r\n\r\n\t/*\r\n\t * Fetch all organization projects\r\n\t */\r\n\tasync fetchOrganizationProjects({\r\n\t\torganizationId,\r\n\t\ttoken\r\n\t}): Promise<IHubstaffProject[]> {\r\n\t\tconst { projects } = await this.fetchIntegration(\r\n\t\t\t`https://api.hubstaff.com/v2/organizations/${organizationId}/projects?status=all`,\r\n\t\t\ttoken\r\n\t\t);\r\n\t\treturn projects;\r\n\t}\r\n\r\n\tasync syncProjects({\r\n\t\tintegrationId,\r\n\t\torganizationId,\r\n\t\tprojects\r\n\t}): Promise<IIntegrationMap[]> {\r\n\t\tconst tenantId = RequestContext.currentTenantId();\r\n\t\tconst integrationMaps = await projects.map(\r\n\t\t\tasync ({ name, sourceId, billable, description }) => {\r\n\t\t\t\tconst payload = {\r\n\t\t\t\t\tname,\r\n\t\t\t\t\torganizationId,\r\n\t\t\t\t\tpublic: true,\r\n\t\t\t\t\tbilling: ProjectBillingEnum.RATE,\r\n\t\t\t\t\tcurrency: env.defaultCurrency as CurrenciesEnum,\r\n\t\t\t\t\tbillable,\r\n\t\t\t\t\tdescription\r\n\t\t\t\t};\r\n\t\t\t\tconst {\r\n\t\t\t\t\trecord\r\n\t\t\t\t} = await this._integrationMapService.findOneOrFail({\r\n\t\t\t\t\twhere: {\r\n\t\t\t\t\t\tsourceId,\r\n\t\t\t\t\t\tentity: IntegrationEntity.PROJECT,\r\n\t\t\t\t\t\torganizationId,\r\n\t\t\t\t\t\ttenantId\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\t//if project already integrated then only update model/entity\r\n\t\t\t\tif (record) {\r\n\t\t\t\t\tawait this.commandBus.execute(\r\n\t\t\t\t\t\tnew OrganizationProjectUpdateCommand(\r\n\t\t\t\t\t\t\tObject.assign(payload, { id: record.gauzyId })\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t);\r\n\t\t\t\t\treturn record;\r\n\t\t\t\t}\r\n\t\t\t\tconst gauzyProject = await this.commandBus.execute(\r\n\t\t\t\t\tnew OrganizationProjectCreateCommand(payload)\r\n\t\t\t\t);\r\n\t\t\t\treturn await this._integrationMapService.create({\r\n\t\t\t\t\tgauzyId: gauzyProject.id,\r\n\t\t\t\t\tintegrationId,\r\n\t\t\t\t\tsourceId,\r\n\t\t\t\t\tentity: IntegrationEntity.PROJECT,\r\n\t\t\t\t\torganizationId\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\treturn await Promise.all(integrationMaps);\r\n\t}\r\n\r\n\tasync syncOrganizations({\r\n\t\tintegrationId,\r\n\t\torganizations\r\n\t}): Promise<IIntegrationMap[]> {\r\n\t\tconst { tenantId } = RequestContext.currentUser();\r\n\t\tconst integrationMaps = await organizations.map(\r\n\t\t\tasync (organization) => {\r\n\t\t\t\tconst { sourceId } = organization;\r\n\t\t\t\tconst {\r\n\t\t\t\t\trecord\r\n\t\t\t\t} = await this._integrationMapService.findOneOrFail({\r\n\t\t\t\t\twhere: {\r\n\t\t\t\t\t\tsourceId,\r\n\t\t\t\t\t\tentity: IntegrationEntity.ORGANIZATION,\r\n\t\t\t\t\t\ttenantId\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\t//if organization already integrated then only update model/entity\r\n\t\t\t\tif (record) {\r\n\t\t\t\t\t//unset sourceId before update organization\r\n\t\t\t\t\tdelete organization['sourceId'];\r\n\t\t\t\t\tawait this.commandBus.execute(\r\n\t\t\t\t\t\tnew OrganizationUpdateCommand(\r\n\t\t\t\t\t\t\tObject.assign(organization, {\r\n\t\t\t\t\t\t\t\tgauzyId: record.gauzyId,\r\n\t\t\t\t\t\t\t\timageUrl:\r\n\t\t\t\t\t\t\t\t\torganization.imageUrl ||\r\n\t\t\t\t\t\t\t\t\tgetDummyImage(\r\n\t\t\t\t\t\t\t\t\t\t330,\r\n\t\t\t\t\t\t\t\t\t\t300,\r\n\t\t\t\t\t\t\t\t\t\torganization.name\r\n\t\t\t\t\t\t\t\t\t\t\t.charAt(0)\r\n\t\t\t\t\t\t\t\t\t\t\t.toUpperCase()\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t);\r\n\t\t\t\t\treturn record;\r\n\t\t\t\t}\r\n\t\t\t\tconst gauzyOrganization = await this.commandBus.execute(\r\n\t\t\t\t\tnew OrganizationCreateCommand({\r\n\t\t\t\t\t\t...organization,\r\n\t\t\t\t\t\timageUrl:\r\n\t\t\t\t\t\t\torganization.imageUrl ||\r\n\t\t\t\t\t\t\tgetDummyImage(\r\n\t\t\t\t\t\t\t\t330,\r\n\t\t\t\t\t\t\t\t300,\r\n\t\t\t\t\t\t\t\torganization.name.charAt(0).toUpperCase()\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\t\treturn await this._integrationMapService.create({\r\n\t\t\t\t\tgauzyId: gauzyOrganization.id,\r\n\t\t\t\t\tintegrationId,\r\n\t\t\t\t\tsourceId,\r\n\t\t\t\t\tentity: IntegrationEntity.ORGANIZATION,\r\n\t\t\t\t\torganizationId: gauzyOrganization.id\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\treturn await Promise.all(integrationMaps);\r\n\t}\r\n\r\n\tasync syncClients({\r\n\t\tintegrationId,\r\n\t\torganizationId,\r\n\t\tclients\r\n\t}): Promise<IIntegrationMap[]> {\r\n\t\tconst integrationMaps = await clients.map(\r\n\t\t\tasync ({ name, id, emails }) => {\r\n\t\t\t\tconst gauzyClient = await this.commandBus.execute(\r\n\t\t\t\t\tnew OrganizationContactCreateCommand({\r\n\t\t\t\t\t\tname,\r\n\t\t\t\t\t\torganizationId,\r\n\t\t\t\t\t\tprimaryEmail: emails[0],\r\n\t\t\t\t\t\tcontactType: ContactType.CLIENT\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\r\n\t\t\t\treturn await this._integrationMapService.create({\r\n\t\t\t\t\tgauzyId: gauzyClient.id,\r\n\t\t\t\t\tintegrationId,\r\n\t\t\t\t\tsourceId: id,\r\n\t\t\t\t\tentity: IntegrationEntity.CLIENT,\r\n\t\t\t\t\torganizationId\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\treturn await Promise.all(integrationMaps);\r\n\t}\r\n\r\n\t/*\r\n\t * Sync screenshot using timeslot\r\n\t */\r\n\tasync syncScreenshots({\r\n\t\tintegrationId,\r\n\t\tprojectId,\r\n\t\tscreenshots,\r\n\t\ttoken,\r\n\t\torganizationId\r\n\t}): Promise<IIntegrationMap[]> {\r\n\t\tlet integratedScreenshots = [];\r\n\t\tfor await (const screenshot of screenshots) {\r\n\t\t\tconst {\r\n\t\t\t\tid,\r\n\t\t\t\ttime_slot,\r\n\t\t\t\tfull_url,\r\n\t\t\t\tthumb_url,\r\n\t\t\t\trecorded_at,\r\n\t\t\t\tuser_id\r\n\t\t\t} = screenshot;\r\n\t\t\tconst employee = await this._getEmployeeByHubstaffUserId(\r\n\t\t\t\tuser_id,\r\n\t\t\t\ttoken,\r\n\t\t\t\tintegrationId,\r\n\t\t\t\torganizationId\r\n\t\t\t);\r\n\t\t\tconst gauzyScreenshot = await this.commandBus.execute(\r\n\t\t\t\tnew ScreenshotCreateCommand({\r\n\t\t\t\t\tfile: full_url,\r\n\t\t\t\t\tthumb: thumb_url,\r\n\t\t\t\t\trecordedAt: recorded_at,\r\n\t\t\t\t\tactivityTimestamp: time_slot,\r\n\t\t\t\t\temployeeId: employee.gauzyId,\r\n\t\t\t\t\torganizationId\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\tconst integratedScreenshot = await this._integrationMapService.create(\r\n\t\t\t\t{\r\n\t\t\t\t\tgauzyId: gauzyScreenshot.id,\r\n\t\t\t\t\tintegrationId,\r\n\t\t\t\t\tsourceId: id,\r\n\t\t\t\t\tentity: IntegrationEntity.SCREENSHOT,\r\n\t\t\t\t\torganizationId\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\tintegratedScreenshots = integratedScreenshots.concat(\r\n\t\t\t\tintegratedScreenshot\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn integratedScreenshots;\r\n\t}\r\n\r\n\tasync syncTasks({\r\n\t\tintegrationId,\r\n\t\tprojectId,\r\n\t\ttasks,\r\n\t\torganizationId\r\n\t}): Promise<IIntegrationMap[]> {\r\n\t\tconst { id: creatorId, tenantId } = RequestContext.currentUser();\r\n\t\tconst integrationMaps = await tasks.map(\r\n\t\t\tasync ({ summary: title, id, status, due_at }) => {\r\n\t\t\t\tif (!due_at) {\r\n\t\t\t\t\tdue_at = new Date(\r\n\t\t\t\t\t\tmoment().add(2, 'week').format('YYYY-MM-DD HH:mm:ss')\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tconst payload = {\r\n\t\t\t\t\ttitle,\r\n\t\t\t\t\tprojectId,\r\n\t\t\t\t\tdescription: 'Hubstaff Task',\r\n\t\t\t\t\tstatus: status.charAt(0).toUpperCase() + status.slice(1),\r\n\t\t\t\t\tcreatorId,\r\n\t\t\t\t\tdueDate: due_at,\r\n\t\t\t\t\torganizationId,\r\n\t\t\t\t\ttenantId\r\n\t\t\t\t};\r\n\t\t\t\t//if task already integrated then only update model/entity\r\n\t\t\t\tconst {\r\n\t\t\t\t\trecord\r\n\t\t\t\t} = await this._integrationMapService.findOneOrFail({\r\n\t\t\t\t\twhere: {\r\n\t\t\t\t\t\tsourceId: id,\r\n\t\t\t\t\t\tentity: IntegrationEntity.TASK,\r\n\t\t\t\t\t\torganizationId,\r\n\t\t\t\t\t\ttenantId\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tif (record) {\r\n\t\t\t\t\tawait this.commandBus.execute(\r\n\t\t\t\t\t\tnew TaskUpdateCommand(\r\n\t\t\t\t\t\t\tObject.assign(payload, { id: record.gauzyId })\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t);\r\n\t\t\t\t\treturn record;\r\n\t\t\t\t}\r\n\t\t\t\tconst gauzyTask = await this.commandBus.execute(\r\n\t\t\t\t\tnew TaskCreateCommand(payload)\r\n\t\t\t\t);\r\n\t\t\t\treturn await this._integrationMapService.create({\r\n\t\t\t\t\tgauzyId: gauzyTask.id,\r\n\t\t\t\t\tintegrationId,\r\n\t\t\t\t\tsourceId: id,\r\n\t\t\t\t\tentity: IntegrationEntity.TASK,\r\n\t\t\t\t\torganizationId\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\treturn await Promise.all(integrationMaps);\r\n\t}\r\n\r\n\tprivate async _getEmployeeByHubstaffUserId(\r\n\t\tuser_id,\r\n\t\ttoken,\r\n\t\tintegrationId,\r\n\t\torganizationId\r\n\t) {\r\n\t\tconst tenantId = RequestContext.currentTenantId();\r\n\t\tconst { record } = await this._integrationMapService.findOneOrFail({\r\n\t\t\twhere: {\r\n\t\t\t\tsourceId: user_id,\r\n\t\t\t\tentity: IntegrationEntity.EMPLOYEE,\r\n\t\t\t\torganizationId,\r\n\t\t\t\ttenantId\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn record\r\n\t\t\t? record\r\n\t\t\t: await this._handleEmployee({\r\n\t\t\t\t\tuser_id,\r\n\t\t\t\t\ttoken,\r\n\t\t\t\t\tintegrationId,\r\n\t\t\t\t\torganizationId\r\n\t\t\t  });\r\n\t}\r\n\r\n\tasync syncTimeSlots(timeSlots, token, integrationId, organizationId) {\r\n\t\tlet integratedTimeSlots = [];\r\n\r\n\t\tfor await (const timeSlot of timeSlots) {\r\n\t\t\tconst employee = await this._getEmployeeByHubstaffUserId(\r\n\t\t\t\ttimeSlot.user_id,\r\n\t\t\t\ttoken,\r\n\t\t\t\tintegrationId,\r\n\t\t\t\torganizationId\r\n\t\t\t);\r\n\r\n\t\t\tconst gauzyTimeSlot = await this.commandBus.execute(\r\n\t\t\t\tnew TimeSlotCreateCommand({\r\n\t\t\t\t\temployeeId: employee.gauzyId,\r\n\t\t\t\t\tstartedAt: timeSlot.starts_at,\r\n\t\t\t\t\tkeyboard: timeSlot.keyboard,\r\n\t\t\t\t\tmouse: timeSlot.mouse,\r\n\t\t\t\t\toverall: timeSlot.overall,\r\n\t\t\t\t\tduration: timeSlot.tracked,\r\n\t\t\t\t\ttime_slot: timeSlot.time_slot,\r\n\t\t\t\t\torganizationId\r\n\t\t\t\t})\r\n\t\t\t);\r\n\r\n\t\t\tconst integratedSlots = await this._integrationMapService.create({\r\n\t\t\t\tgauzyId: gauzyTimeSlot.id,\r\n\t\t\t\tintegrationId,\r\n\t\t\t\tsourceId: timeSlot.id,\r\n\t\t\t\tentity: IntegrationEntity.TIME_SLOT,\r\n\t\t\t\torganizationId\r\n\t\t\t});\r\n\r\n\t\t\tintegratedTimeSlots = integratedTimeSlots.concat(integratedSlots);\r\n\t\t}\r\n\t\treturn integratedTimeSlots;\r\n\t}\r\n\r\n\tasync syncTimeLogs(\r\n\t\ttimeLogs,\r\n\t\ttoken,\r\n\t\tintegrationId,\r\n\t\torganizationId,\r\n\t\tprojectId,\r\n\t\tstart,\r\n\t\tend\r\n\t) {\r\n\t\tlet integratedTimeLogs = [];\r\n\t\tconst tenantId = RequestContext.currentRequest();\r\n\t\tfor await (const timeLog of timeLogs) {\r\n\t\t\tconst employee = await this._getEmployeeByHubstaffUserId(\r\n\t\t\t\ttimeLog.user_id,\r\n\t\t\t\ttoken,\r\n\t\t\t\tintegrationId,\r\n\t\t\t\torganizationId\r\n\t\t\t);\r\n\r\n\t\t\tlet timesheet = await this.commandBus.execute(\r\n\t\t\t\tnew TimesheetGetCommand({\r\n\t\t\t\t\twhere: {\r\n\t\t\t\t\t\temployeeId: employee.gauzyId,\r\n\t\t\t\t\t\torganizationId,\r\n\t\t\t\t\t\ttenantId\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t);\r\n\r\n\t\t\tif (!timesheet) {\r\n\t\t\t\ttimesheet = await this.commandBus.execute(\r\n\t\t\t\t\tnew TimesheetCreateCommand({\r\n\t\t\t\t\t\tstartedAt: start,\r\n\t\t\t\t\t\tstoppedAt: end,\r\n\t\t\t\t\t\temployeeId: employee.gauzyId,\r\n\t\t\t\t\t\t// to be get from formatedLogs, filtered by user and get totals\r\n\t\t\t\t\t\tmouse: 0,\r\n\t\t\t\t\t\tkeyboard: 0,\r\n\t\t\t\t\t\tduration: 0,\r\n\t\t\t\t\t\torganizationId\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tconst gauzyTimeLog = await this.commandBus.execute(\r\n\t\t\t\tnew TimeLogCreateCommand({\r\n\t\t\t\t\tprojectId,\r\n\t\t\t\t\temployeeId: employee.gauzyId,\r\n\t\t\t\t\tlogType: timeLog.logType,\r\n\t\t\t\t\tduration: timeLog.tracked,\r\n\t\t\t\t\tstartedAt: timeLog.starts_at,\r\n\t\t\t\t\ttimesheetId: timesheet.id,\r\n\t\t\t\t\tsource: TimeLogSourceEnum.HUBSTAFF,\r\n\t\t\t\t\torganizationId\r\n\t\t\t\t})\r\n\t\t\t);\r\n\r\n\t\t\tconst integratedLogs = await this._integrationMapService.create({\r\n\t\t\t\tgauzyId: gauzyTimeLog.id,\r\n\t\t\t\tintegrationId,\r\n\t\t\t\tsourceId: timeLog.id,\r\n\t\t\t\tentity: IntegrationEntity.TIME_LOG,\r\n\t\t\t\torganizationId\r\n\t\t\t});\r\n\t\t\tintegratedTimeLogs = integratedTimeLogs.concat(integratedLogs);\r\n\t\t}\r\n\r\n\t\treturn integratedTimeLogs;\r\n\t}\r\n\r\n\tasync syncEmployee({ integrationId, user, organizationId }) {\r\n\t\tconst tenantId = RequestContext.currentTenantId();\r\n\t\tconst { record } = await this._userService.findOneOrFail({\r\n\t\t\twhere: { email: user.email }\r\n\t\t});\r\n\t\tlet employee;\r\n\t\tif (record) {\r\n\t\t\temployee = await this.commandBus.execute(\r\n\t\t\t\tnew EmployeeGetCommand({ where: { userId: record.id } })\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tconst [role, organization] = await Promise.all([\r\n\t\t\t\tawait this._roleService.findOne({\r\n\t\t\t\t\twhere: { name: RolesEnum.EMPLOYEE }\r\n\t\t\t\t}),\r\n\t\t\t\tawait this._organizationService.findOne({\r\n\t\t\t\t\twhere: { id: organizationId }\r\n\t\t\t\t})\r\n\t\t\t]);\r\n\t\t\tconst [firstName, lastName] = user.name.split(' ');\r\n\t\t\tconst isActive = user.status === 'active' ? true : false;\r\n\t\t\temployee = await this.commandBus.execute(\r\n\t\t\t\tnew EmployeeCreateCommand({\r\n\t\t\t\t\tuser: {\r\n\t\t\t\t\t\temail: user.email,\r\n\t\t\t\t\t\tfirstName,\r\n\t\t\t\t\t\tlastName,\r\n\t\t\t\t\t\trole,\r\n\t\t\t\t\t\ttags: null,\r\n\t\t\t\t\t\ttenantId,\r\n\t\t\t\t\t\tthirdPartyId: user.id\r\n\t\t\t\t\t},\r\n\t\t\t\t\tpassword: environment.defaultHubstaffUserPass,\r\n\t\t\t\t\torganization,\r\n\t\t\t\t\tstartedWorkOn: new Date(\r\n\t\t\t\t\t\tmoment().format('YYYY-MM-DD HH:mm:ss')\r\n\t\t\t\t\t),\r\n\t\t\t\t\tisActive\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn await this._integrationMapService.create({\r\n\t\t\tgauzyId: employee.id,\r\n\t\t\tintegrationId,\r\n\t\t\tsourceId: user.id,\r\n\t\t\tentity: IntegrationEntity.EMPLOYEE,\r\n\t\t\torganizationId\r\n\t\t});\r\n\t}\r\n\r\n\tprivate async _handleEmployee({\r\n\t\tuser_id,\r\n\t\tintegrationId,\r\n\t\ttoken,\r\n\t\torganizationId\r\n\t}) {\r\n\t\tconst { user } = await this.fetchIntegration(\r\n\t\t\t`https://api.hubstaff.com/v2/users/${user_id}`,\r\n\t\t\ttoken\r\n\t\t);\r\n\r\n\t\treturn await this.syncEmployee({\r\n\t\t\tintegrationId,\r\n\t\t\tuser,\r\n\t\t\torganizationId\r\n\t\t});\r\n\t}\r\n\r\n\tprivate async _handleProjects(sourceId, integrationId, gauzyId, token) {\r\n\t\ttry {\r\n\t\t\tconst { projects } = await this.fetchIntegration(\r\n\t\t\t\t`https://api.hubstaff.com/v2/organizations/${sourceId}/projects?status=all`,\r\n\t\t\t\ttoken\r\n\t\t\t);\r\n\t\t\tconst projectMap = projects.map(\r\n\t\t\t\t({ name, id, billable, description }) => ({\r\n\t\t\t\t\tname,\r\n\t\t\t\t\tsourceId: id,\r\n\t\t\t\t\tbillable,\r\n\t\t\t\t\tdescription\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\treturn await this.syncProjects({\r\n\t\t\t\tintegrationId,\r\n\t\t\t\torganizationId: gauzyId,\r\n\t\t\t\tprojects: projectMap\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tthrow new BadRequestException('Cannot sync Projects');\r\n\t\t}\r\n\t}\r\n\r\n\tprivate async _handleClients(sourceId, integrationId, gauzyId, token) {\r\n\t\tconst { clients } = await this.fetchIntegration(\r\n\t\t\t`https://api.hubstaff.com/v2/organizations/${sourceId}/clients?status=active`,\r\n\t\t\ttoken\r\n\t\t);\r\n\r\n\t\treturn await this.syncClients({\r\n\t\t\tintegrationId,\r\n\t\t\torganizationId: gauzyId,\r\n\t\t\tclients\r\n\t\t});\r\n\t}\r\n\r\n\tprivate async _handleTasks(projectsMap, integrationId, token, gauzyId) {\r\n\t\tconst tasksMap = await Promise.all(\r\n\t\t\tprojectsMap.map(async (project) => {\r\n\t\t\t\tconst { tasks } = await this.fetchIntegration(\r\n\t\t\t\t\t`https://api.hubstaff.com/v2/projects/${project.sourceId}/tasks`,\r\n\t\t\t\t\ttoken\r\n\t\t\t\t);\r\n\t\t\t\treturn await this.syncTasks({\r\n\t\t\t\t\tintegrationId,\r\n\t\t\t\t\ttasks,\r\n\t\t\t\t\tprojectId: project.gauzyId,\r\n\t\t\t\t\torganizationId: gauzyId\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\treturn tasksMap;\r\n\t}\r\n\r\n\t/*\r\n\t * Sync with database urls activities\r\n\t */\r\n\tasync syncUrlActivities({\r\n\t\tintegrationId,\r\n\t\tprojectId,\r\n\t\tactivities,\r\n\t\ttoken,\r\n\t\torganizationId\r\n\t}): Promise<IIntegrationMap[]> {\r\n\t\tlet integrationMaps = [];\r\n\t\tfor await (const activity of activities) {\r\n\t\t\tconst { id, site, tracked, user_id } = activity;\r\n\t\t\tlet { date } = activity;\r\n\r\n\t\t\tconst { record } = await this._integrationMapService.findOneOrFail({\r\n\t\t\t\twhere: {\r\n\t\t\t\t\tsourceId: id,\r\n\t\t\t\t\tentity: IntegrationEntity.ACTIVITY\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t//if activity already integrated then no need to create new one\r\n\t\t\tif (record) {\r\n\t\t\t\treturn record;\r\n\t\t\t}\r\n\r\n\t\t\tconst employee = await this._getEmployeeByHubstaffUserId(\r\n\t\t\t\tuser_id,\r\n\t\t\t\ttoken,\r\n\t\t\t\tintegrationId,\r\n\t\t\t\torganizationId\r\n\t\t\t);\r\n\t\t\tconst time = moment(date).format('HH:mm:ss');\r\n\t\t\tdate = moment(date).format('YYYY-MM-DD');\r\n\r\n\t\t\tconst gauzyActivity = await this.commandBus.execute(\r\n\t\t\t\tnew ActivityCreateCommand({\r\n\t\t\t\t\ttitle: site,\r\n\t\t\t\t\tduration: tracked,\r\n\t\t\t\t\ttype: 'URL',\r\n\t\t\t\t\tdate,\r\n\t\t\t\t\ttime,\r\n\t\t\t\t\tprojectId,\r\n\t\t\t\t\temployeeId: employee.gauzyId\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\tconst integrationMap = await this._integrationMapService.create({\r\n\t\t\t\tgauzyId: gauzyActivity.id,\r\n\t\t\t\tintegrationId,\r\n\t\t\t\tsourceId: id,\r\n\t\t\t\tentity: IntegrationEntity.ACTIVITY\r\n\t\t\t});\r\n\t\t\tintegrationMaps = integrationMaps.concat(integrationMap);\r\n\t\t}\r\n\r\n\t\treturn integrationMaps;\r\n\t}\r\n\r\n\t/*\r\n\t * auto sync for urls activities for seperate project\r\n\t */\r\n\tprivate async _handleUrlActivities(\r\n\t\tprojectsMap,\r\n\t\tintegrationId,\r\n\t\ttoken,\r\n\t\torganizationId,\r\n\t\tdateRange\r\n\t) {\r\n\t\ttry {\r\n\t\t\tconst start = moment(dateRange.start).format('YYYY-MM-DD');\r\n\t\t\tconst end = moment(dateRange.end).format('YYYY-MM-DD');\r\n\t\t\tconst pageLimit = 500;\r\n\r\n\t\t\tconst urlActivitiesMapped = await Promise.all(\r\n\t\t\t\tprojectsMap.map(async (project) => {\r\n\t\t\t\t\tconst { gauzyId, sourceId } = project;\r\n\t\t\t\t\tconst syncedActivities = {\r\n\t\t\t\t\t\turlActivities: []\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tlet stillRecordsAvailable = true;\r\n\t\t\t\t\tlet nextPageStartId = null;\r\n\r\n\t\t\t\t\twhile (stillRecordsAvailable) {\r\n\t\t\t\t\t\tlet url = `https://api.hubstaff.com/v2/projects/${sourceId}/url_activities?page_limit=${pageLimit}&time_slot[start]=${start}&time_slot[stop]=${end}`;\r\n\t\t\t\t\t\tif (nextPageStartId) {\r\n\t\t\t\t\t\t\turl += `&page_start_id=${nextPageStartId}`;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst {\r\n\t\t\t\t\t\t\turls,\r\n\t\t\t\t\t\t\tpagination = {}\r\n\t\t\t\t\t\t} = await this.fetchIntegration(url, token);\r\n\r\n\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\tpagination &&\r\n\t\t\t\t\t\t\tpagination.hasOwnProperty('next_page_start_id')\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\tconst { next_page_start_id } = pagination;\r\n\t\t\t\t\t\t\tnextPageStartId = next_page_start_id;\r\n\t\t\t\t\t\t\tstillRecordsAvailable = true;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tnextPageStartId = null;\r\n\t\t\t\t\t\t\tstillRecordsAvailable = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsyncedActivities.urlActivities.push(urls);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst activities = [].concat.apply(\r\n\t\t\t\t\t\t[],\r\n\t\t\t\t\t\tsyncedActivities.urlActivities\r\n\t\t\t\t\t);\r\n\t\t\t\t\treturn await this.syncUrlActivities({\r\n\t\t\t\t\t\tintegrationId,\r\n\t\t\t\t\t\tprojectId: gauzyId,\r\n\t\t\t\t\t\tactivities,\r\n\t\t\t\t\t\ttoken,\r\n\t\t\t\t\t\torganizationId\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\treturn urlActivitiesMapped;\r\n\t\t} catch (error) {\r\n\t\t\tthrow new BadRequestException('Cannot sync url activities');\r\n\t\t}\r\n\t}\r\n\r\n\t/*\r\n\t * Sync with database application activities\r\n\t */\r\n\tasync syncAppActivities({\r\n\t\tintegrationId,\r\n\t\tprojectId,\r\n\t\tactivities,\r\n\t\ttoken,\r\n\t\torganizationId\r\n\t}): Promise<IIntegrationMap[]> {\r\n\t\tlet integratedAppActivities = [];\r\n\t\tfor await (const activity of activities) {\r\n\t\t\tconst { id, name, tracked, user_id } = activity;\r\n\t\t\tlet { date } = activity;\r\n\r\n\t\t\tconst { record } = await this._integrationMapService.findOneOrFail({\r\n\t\t\t\twhere: {\r\n\t\t\t\t\tsourceId: id,\r\n\t\t\t\t\tentity: IntegrationEntity.ACTIVITY,\r\n\t\t\t\t\torganizationId\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t//if activity already integrated then no need to create new one\r\n\t\t\tif (record) {\r\n\t\t\t\treturn record;\r\n\t\t\t}\r\n\r\n\t\t\tconst employee = await this._getEmployeeByHubstaffUserId(\r\n\t\t\t\tuser_id,\r\n\t\t\t\ttoken,\r\n\t\t\t\tintegrationId,\r\n\t\t\t\torganizationId\r\n\t\t\t);\r\n\t\t\tconst time = moment(date).format('HH:mm:ss');\r\n\t\t\tdate = moment(date).format('YYYY-MM-DD');\r\n\r\n\t\t\tconst gauzyActivity = await this.commandBus.execute(\r\n\t\t\t\tnew ActivityCreateCommand({\r\n\t\t\t\t\ttitle: name,\r\n\t\t\t\t\tduration: tracked,\r\n\t\t\t\t\ttype: 'APP',\r\n\t\t\t\t\ttime,\r\n\t\t\t\t\tdate,\r\n\t\t\t\t\tprojectId,\r\n\t\t\t\t\temployeeId: employee.gauzyId,\r\n\t\t\t\t\torganizationId\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\tconst integartedActivity = await this._integrationMapService.create(\r\n\t\t\t\t{\r\n\t\t\t\t\tgauzyId: gauzyActivity.id,\r\n\t\t\t\t\tintegrationId,\r\n\t\t\t\t\tsourceId: id,\r\n\t\t\t\t\tentity: IntegrationEntity.ACTIVITY,\r\n\t\t\t\t\torganizationId\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\tintegratedAppActivities = integratedAppActivities.concat(\r\n\t\t\t\tintegartedActivity\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn integratedAppActivities;\r\n\t}\r\n\r\n\t/*\r\n\t * auto sync for application activities for seperate project\r\n\t */\r\n\tprivate async _handleAppActivities(\r\n\t\tprojectsMap,\r\n\t\tintegrationId,\r\n\t\ttoken,\r\n\t\torganizationId,\r\n\t\tdateRange\r\n\t) {\r\n\t\ttry {\r\n\t\t\tconst start = moment(dateRange.start).format('YYYY-MM-DD');\r\n\t\t\tconst end = moment(dateRange.end).format('YYYY-MM-DD');\r\n\t\t\tconst pageLimit = 500;\r\n\r\n\t\t\tconst appActivitiesMapped = await Promise.all(\r\n\t\t\t\tprojectsMap.map(async (project) => {\r\n\t\t\t\t\tconst { gauzyId, sourceId } = project;\r\n\t\t\t\t\tconst syncedActivities = {\r\n\t\t\t\t\t\tapplicationActivities: []\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tlet stillRecordsAvailable = true;\r\n\t\t\t\t\tlet nextPageStartId = null;\r\n\r\n\t\t\t\t\twhile (stillRecordsAvailable) {\r\n\t\t\t\t\t\tlet url = `https://api.hubstaff.com/v2/projects/${sourceId}/application_activities?page_limit=${pageLimit}&time_slot[start]=${start}&time_slot[stop]=${end}`;\r\n\t\t\t\t\t\tif (nextPageStartId) {\r\n\t\t\t\t\t\t\turl += `&page_start_id=${nextPageStartId}`;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst {\r\n\t\t\t\t\t\t\tapplications,\r\n\t\t\t\t\t\t\tpagination = {}\r\n\t\t\t\t\t\t} = await this.fetchIntegration(url, token);\r\n\r\n\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\tpagination &&\r\n\t\t\t\t\t\t\tpagination.hasOwnProperty('next_page_start_id')\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\tconst { next_page_start_id } = pagination;\r\n\t\t\t\t\t\t\tnextPageStartId = next_page_start_id;\r\n\t\t\t\t\t\t\tstillRecordsAvailable = true;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tnextPageStartId = null;\r\n\t\t\t\t\t\t\tstillRecordsAvailable = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsyncedActivities.applicationActivities.push(\r\n\t\t\t\t\t\t\tapplications\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst activities = [].concat.apply(\r\n\t\t\t\t\t\t[],\r\n\t\t\t\t\t\tsyncedActivities.applicationActivities\r\n\t\t\t\t\t);\r\n\t\t\t\t\treturn await this.syncAppActivities({\r\n\t\t\t\t\t\tintegrationId,\r\n\t\t\t\t\t\tprojectId: gauzyId,\r\n\t\t\t\t\t\tactivities,\r\n\t\t\t\t\t\ttoken,\r\n\t\t\t\t\t\torganizationId\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\treturn appActivitiesMapped;\r\n\t\t} catch (error) {\r\n\t\t\tthrow new BadRequestException('Cannot sync application activities');\r\n\t\t}\r\n\t}\r\n\r\n\tprivate async _handleActivities(\r\n\t\tprojectsMap,\r\n\t\tintegrationId,\r\n\t\ttoken,\r\n\t\torganizationId,\r\n\t\tdateRange\r\n\t) {\r\n\t\tconst start = moment(dateRange.start).format('YYYY-MM-DD');\r\n\t\tconst end = moment(dateRange.end).format('YYYY-MM-DD');\r\n\t\tconst syncedActivities = {\r\n\t\t\tintegratedTimeLogs: [],\r\n\t\t\tintegratedTimeSlots: []\r\n\t\t};\r\n\r\n\t\tfor await (const project of projectsMap) {\r\n\t\t\tconst timeSlots = await this.fetchIntegration(\r\n\t\t\t\t`https://api.hubstaff.com/v2/projects/${project.sourceId}/activities?time_slot[start]=${start}&time_slot[stop]=${end}`,\r\n\t\t\t\ttoken\r\n\t\t\t);\r\n\r\n\t\t\tconst integratedTimeLogs = await this.syncTimeLogs(\r\n\t\t\t\tthis.formatedLogsFromSlots(timeSlots.activities),\r\n\t\t\t\ttoken,\r\n\t\t\t\tintegrationId,\r\n\t\t\t\torganizationId,\r\n\t\t\t\tproject.gauzyId,\r\n\t\t\t\tstart,\r\n\t\t\t\tend\r\n\t\t\t);\r\n\r\n\t\t\tconst integratedTimeSlots = await this.syncTimeSlots(\r\n\t\t\t\ttimeSlots.activities,\r\n\t\t\t\ttoken,\r\n\t\t\t\tintegrationId,\r\n\t\t\t\torganizationId\r\n\t\t\t);\r\n\r\n\t\t\tsyncedActivities.integratedTimeLogs = syncedActivities.integratedTimeLogs.concat(\r\n\t\t\t\tintegratedTimeLogs\r\n\t\t\t);\r\n\t\t\tsyncedActivities.integratedTimeSlots = syncedActivities.integratedTimeSlots.concat(\r\n\t\t\t\tintegratedTimeSlots\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn syncedActivities;\r\n\t}\r\n\r\n\t/**\r\n\t * Sync activities screenshots\r\n\t */\r\n\tprivate async _handleScreenshots(\r\n\t\tprojectsMap,\r\n\t\tintegrationId,\r\n\t\ttoken,\r\n\t\torganizationId,\r\n\t\tdateRange\r\n\t) {\r\n\t\ttry {\r\n\t\t\tconst start = moment(dateRange.start).format('YYYY-MM-DD');\r\n\t\t\tconst end = moment(dateRange.end).format('YYYY-MM-DD');\r\n\t\t\tconst pageLimit = 500;\r\n\r\n\t\t\tconst screenshotsMapped = await Promise.all(\r\n\t\t\t\tprojectsMap.map(async (project) => {\r\n\t\t\t\t\tconst { gauzyId, sourceId } = project;\r\n\t\t\t\t\tconst syncedActivities = {\r\n\t\t\t\t\t\tscreenshots: []\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tlet stillRecordsAvailable = true;\r\n\t\t\t\t\tlet nextPageStartId = null;\r\n\r\n\t\t\t\t\twhile (stillRecordsAvailable) {\r\n\t\t\t\t\t\tlet url = `https://api.hubstaff.com/v2/projects/${sourceId}/screenshots?page_limit=${pageLimit}&time_slot[start]=${start}&time_slot[stop]=${end}`;\r\n\t\t\t\t\t\tif (nextPageStartId) {\r\n\t\t\t\t\t\t\turl += `&page_start_id=${nextPageStartId}`;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst {\r\n\t\t\t\t\t\t\tscreenshots: fetchScreenshots,\r\n\t\t\t\t\t\t\tpagination = {}\r\n\t\t\t\t\t\t} = await this.fetchIntegration(url, token);\r\n\r\n\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\tpagination &&\r\n\t\t\t\t\t\t\tpagination.hasOwnProperty('next_page_start_id')\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\tconst { next_page_start_id } = pagination;\r\n\t\t\t\t\t\t\tnextPageStartId = next_page_start_id;\r\n\t\t\t\t\t\t\tstillRecordsAvailable = true;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tnextPageStartId = null;\r\n\t\t\t\t\t\t\tstillRecordsAvailable = false;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tsyncedActivities.screenshots.push(fetchScreenshots);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst screenshots = [].concat.apply(\r\n\t\t\t\t\t\t[],\r\n\t\t\t\t\t\tsyncedActivities.screenshots\r\n\t\t\t\t\t);\r\n\t\t\t\t\treturn await this.syncScreenshots({\r\n\t\t\t\t\t\tintegrationId,\r\n\t\t\t\t\t\tprojectId: gauzyId,\r\n\t\t\t\t\t\tscreenshots,\r\n\t\t\t\t\t\ttoken,\r\n\t\t\t\t\t\torganizationId\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\treturn screenshotsMapped;\r\n\t\t} catch (error) {\r\n\t\t\tthrow new BadRequestException('Cannot sync activities screenshots');\r\n\t\t}\r\n\t}\r\n\r\n\tasync autoSync({\r\n\t\tintegrationId,\r\n\t\tentitiesToSync,\r\n\t\tgauzyId,\r\n\t\tsourceId,\r\n\t\ttoken,\r\n\t\tdateRange\r\n\t}) {\r\n\t\t// entities have depended entity. eg to fetch Task we need Project id or Org id, because our Task entity is related to Project, the relation here is same, we need project id to fetch Tasks\r\n\t\tconst integratedMaps = await Promise.all(\r\n\t\t\tentitiesToSync.map(async (setting) => {\r\n\t\t\t\tswitch (setting.entity) {\r\n\t\t\t\t\tcase IntegrationEntity.PROJECT:\r\n\t\t\t\t\t\tlet tasks, activities, screenshots;\r\n\t\t\t\t\t\tconst projectsMap = await this._handleProjects(\r\n\t\t\t\t\t\t\tsourceId,\r\n\t\t\t\t\t\t\tintegrationId,\r\n\t\t\t\t\t\t\tgauzyId,\r\n\t\t\t\t\t\t\ttoken\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tconst taskSetting = setting.tiedEntities.find(\r\n\t\t\t\t\t\t\t(res) => res.entity === IntegrationEntity.TASK\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tconst activitySetting = setting.tiedEntities.find(\r\n\t\t\t\t\t\t\t(res) => res.entity === IntegrationEntity.ACTIVITY\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tconst screenshotSetting = setting.tiedEntities.find(\r\n\t\t\t\t\t\t\t(res) => res.entity === IntegrationEntity.SCREENSHOT\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\ttypeof taskSetting === 'object' &&\r\n\t\t\t\t\t\t\ttaskSetting.sync\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\ttasks = await this._handleTasks(\r\n\t\t\t\t\t\t\t\tprojectsMap,\r\n\t\t\t\t\t\t\t\tintegrationId,\r\n\t\t\t\t\t\t\t\ttoken,\r\n\t\t\t\t\t\t\t\tgauzyId\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\ttypeof activitySetting === 'object' &&\r\n\t\t\t\t\t\t\tactivitySetting.sync\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\tactivities = await this._handleActivities(\r\n\t\t\t\t\t\t\t\tprojectsMap,\r\n\t\t\t\t\t\t\t\tintegrationId,\r\n\t\t\t\t\t\t\t\ttoken,\r\n\t\t\t\t\t\t\t\tgauzyId,\r\n\t\t\t\t\t\t\t\tdateRange\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tactivities.application = await this._handleAppActivities(\r\n\t\t\t\t\t\t\t\tprojectsMap,\r\n\t\t\t\t\t\t\t\tintegrationId,\r\n\t\t\t\t\t\t\t\ttoken,\r\n\t\t\t\t\t\t\t\tgauzyId,\r\n\t\t\t\t\t\t\t\tdateRange\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tactivities.urls = await this._handleUrlActivities(\r\n\t\t\t\t\t\t\t\tprojectsMap,\r\n\t\t\t\t\t\t\t\tintegrationId,\r\n\t\t\t\t\t\t\t\ttoken,\r\n\t\t\t\t\t\t\t\tgauzyId,\r\n\t\t\t\t\t\t\t\tdateRange\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\ttypeof screenshotSetting === 'object' &&\r\n\t\t\t\t\t\t\tscreenshotSetting.sync\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\tscreenshots = await this._handleScreenshots(\r\n\t\t\t\t\t\t\t\tprojectsMap,\r\n\t\t\t\t\t\t\t\tintegrationId,\r\n\t\t\t\t\t\t\t\ttoken,\r\n\t\t\t\t\t\t\t\tgauzyId,\r\n\t\t\t\t\t\t\t\tdateRange\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn { tasks, projectsMap, activities, screenshots };\r\n\t\t\t\t\tcase IntegrationEntity.CLIENT:\r\n\t\t\t\t\t\tconst clients = await this._handleClients(\r\n\t\t\t\t\t\t\tsourceId,\r\n\t\t\t\t\t\t\tintegrationId,\r\n\t\t\t\t\t\t\tgauzyId,\r\n\t\t\t\t\t\t\ttoken\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\treturn { clients };\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\t\treturn integratedMaps;\r\n\t}\r\n\r\n\tformatedLogsFromSlots(timeSlots) {\r\n\t\tconst timeLogs = timeSlots.reduce((prev, current) => {\r\n\t\t\tconst prevLog = prev[current.date];\r\n\t\t\treturn {\r\n\t\t\t\t...prev,\r\n\t\t\t\t[current.date]: prevLog\r\n\t\t\t\t\t? {\r\n\t\t\t\t\t\t\tid: current.id,\r\n\t\t\t\t\t\t\tdate: current.date,\r\n\t\t\t\t\t\t\tuser_id: prevLog.user_id,\r\n\t\t\t\t\t\t\tproject_id: prevLog.project_id,\r\n\t\t\t\t\t\t\tstarts_at: moment\r\n\t\t\t\t\t\t\t\t.utc(prevLog.starts_at)\r\n\t\t\t\t\t\t\t\t.format('YYYY-MM-DD HH:mm:ss'),\r\n\t\t\t\t\t\t\tkeyboard: prevLog.keyboard += current.keyboard,\r\n\t\t\t\t\t\t\tmouse: prevLog.mouse += current.mouse,\r\n\t\t\t\t\t\t\toverall: prevLog.overall += current.overall,\r\n\t\t\t\t\t\t\ttracked: prevLog.tracked += current.tracked,\r\n\t\t\t\t\t\t\t// this will take the last chunk(slot), maybe we should allow percentage for this, as one time log can have both manual and tracked\r\n\t\t\t\t\t\t\tlogType:\r\n\t\t\t\t\t\t\t\tcurrent.client === 'windows'\r\n\t\t\t\t\t\t\t\t\t? TimeLogType.TRACKED\r\n\t\t\t\t\t\t\t\t\t: TimeLogType.MANUAL\r\n\t\t\t\t\t  }\r\n\t\t\t\t\t: {\r\n\t\t\t\t\t\t\tid: current.id,\r\n\t\t\t\t\t\t\tdate: current.date,\r\n\t\t\t\t\t\t\tuser_id: current.user_id,\r\n\t\t\t\t\t\t\tproject_id: current.project_id,\r\n\t\t\t\t\t\t\tstarts_at: moment\r\n\t\t\t\t\t\t\t\t.utc(current.starts_at)\r\n\t\t\t\t\t\t\t\t.format('YYYY-MM-DD HH:mm:ss'),\r\n\t\t\t\t\t\t\tkeyboard: current.keyboard,\r\n\t\t\t\t\t\t\tmouse: current.mouse,\r\n\t\t\t\t\t\t\toverall: current.overall,\r\n\t\t\t\t\t\t\ttracked: current.tracked,\r\n\t\t\t\t\t\t\tlogType:\r\n\t\t\t\t\t\t\t\tcurrent.client === 'windows'\r\n\t\t\t\t\t\t\t\t\t? TimeLogType.TRACKED\r\n\t\t\t\t\t\t\t\t\t: TimeLogType.MANUAL\r\n\t\t\t\t\t  }\r\n\t\t\t};\r\n\t\t}, {});\r\n\t\treturn Object.values(timeLogs);\r\n\t}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { IncomeCreateCommand } from '../income.create.command';\r\nimport { IncomeService } from '../../income.service';\r\nimport { Income } from '../../income.entity';\r\nimport { EmployeeService } from '../../../employee/employee.service';\r\nimport { OrganizationService } from '../../../organization/organization.service';\r\nimport { EmployeeStatisticsService } from '../../../employee-statistics';\r\nimport { RequestContext } from '../../../core/context';\r\n\r\n@CommandHandler(IncomeCreateCommand)\r\nexport class IncomeCreateHandler\r\n\timplements ICommandHandler<IncomeCreateCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly incomeService: IncomeService,\r\n\t\tprivate readonly employeeService: EmployeeService,\r\n\t\tprivate readonly organizationService: OrganizationService,\r\n\t\tprivate readonly employeeStatisticsService: EmployeeStatisticsService\r\n\t) {}\r\n\r\n\tpublic async execute(command: IncomeCreateCommand): Promise<Income> {\r\n\t\tconst income = await this.createIncome(command);\r\n\t\tlet averageIncome = 0;\r\n\t\tlet averageBonus = 0;\r\n\t\tif (income && income.employeeId) {\r\n\t\t\tconst id = income.employeeId;\r\n\t\t\tconst stat = await this.employeeStatisticsService.getStatisticsByEmployeeId(\r\n\t\t\t\tincome.employeeId\r\n\t\t\t);\r\n\t\t\taverageIncome = this.incomeService.countStatistic(\r\n\t\t\t\tstat.incomeStatistics\r\n\t\t\t);\r\n\t\t\taverageBonus = this.incomeService.countStatistic(\r\n\t\t\t\tstat.bonusStatistics\r\n\t\t\t);\r\n\t\t\tawait this.employeeService.create({\r\n\t\t\t\tid,\r\n\t\t\t\taverageIncome: averageIncome,\r\n\t\t\t\taverageBonus: averageBonus\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn income;\r\n\t}\r\n\r\n\tpublic async createIncome(command: IncomeCreateCommand): Promise<Income> {\r\n\t\tconst { input } = command;\r\n\r\n\t\tconst income = new Income();\r\n\t\tconst employee = input.employeeId\r\n\t\t\t? await this.employeeService.findOne(input.employeeId)\r\n\t\t\t: null;\r\n\t\tconst organization = await this.organizationService.findOne(\r\n\t\t\tinput.organizationId\r\n\t\t);\r\n\r\n\t\tincome.clientName = input.clientName;\r\n\t\tincome.clientId = input.clientId;\r\n\t\tincome.employee = employee;\r\n\t\tincome.organization = organization;\r\n\t\tincome.amount = input.amount;\r\n\t\tincome.valueDate = input.valueDate;\r\n\t\tincome.notes = input.notes;\r\n\t\tincome.currency = input.currency;\r\n\t\tincome.isBonus = input.isBonus;\r\n\t\tincome.reference = input.reference;\r\n\t\tincome.tags = input.tags;\r\n\t\tincome.tenantId = RequestContext.currentTenantId();\r\n\r\n\t\tif (!income.currency) {\r\n\t\t\tincome.currency = organization.currency;\r\n\t\t}\r\n\r\n\t\treturn await this.incomeService.create(income);\r\n\t}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { IncomeService } from '../../income.service';\r\nimport { EmployeeService } from '../../../employee/employee.service';\r\nimport { EmployeeStatisticsService } from '../../../employee-statistics';\r\nimport { IncomeDeleteCommand } from '../income.delete.command';\r\n\r\n@CommandHandler(IncomeDeleteCommand)\r\nexport class IncomeDeleteHandler\r\n\timplements ICommandHandler<IncomeDeleteCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly incomeService: IncomeService,\r\n\t\tprivate readonly employeeService: EmployeeService,\r\n\t\tprivate readonly employeeStatisticsService: EmployeeStatisticsService\r\n\t) {}\r\n\r\n\tpublic async execute(command: IncomeDeleteCommand): Promise<any> {\r\n\t\tconst { employeeId, incomeId } = command;\r\n\t\tawait this.deleteIncome(incomeId);\r\n\t\tif (employeeId) {\r\n\t\t\tconst id = employeeId;\r\n\t\t\tlet averageIncome = 0;\r\n\t\t\tlet averageBonus = 0;\r\n\r\n\t\t\tconst stat = await this.employeeStatisticsService.getStatisticsByEmployeeId(\r\n\t\t\t\tid\r\n\t\t\t);\r\n\r\n\t\t\taverageIncome = this.incomeService.countStatistic(\r\n\t\t\t\tstat.incomeStatistics\r\n\t\t\t);\r\n\t\t\taverageBonus = this.incomeService.countStatistic(\r\n\t\t\t\tstat.bonusStatistics\r\n\t\t\t);\r\n\t\t\treturn await this.employeeService.create({\r\n\t\t\t\tid,\r\n\t\t\t\taverageIncome: averageIncome,\r\n\t\t\t\taverageBonus: averageBonus\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tpublic async deleteIncome(incomeId: string): Promise<any> {\r\n\t\treturn await this.incomeService.delete(incomeId);\r\n\t}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { IncomeService } from '../../income.service';\r\nimport { EmployeeService } from '../../../employee/employee.service';\r\nimport { EmployeeStatisticsService } from '../../../employee-statistics';\r\nimport { IncomeUpdateCommand } from '../income.update.command';\r\nimport { IIncome } from '@gauzy/models';\r\n\r\n@CommandHandler(IncomeUpdateCommand)\r\nexport class IncomeUpdateHandler\r\n\timplements ICommandHandler<IncomeUpdateCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly incomeService: IncomeService,\r\n\t\tprivate readonly employeeService: EmployeeService,\r\n\t\tprivate readonly employeeStatisticsService: EmployeeStatisticsService\r\n\t) {}\r\n\r\n\tpublic async execute(command: IncomeUpdateCommand): Promise<any> {\r\n\t\tlet { id } = command;\r\n\t\tconst { entity } = command;\r\n\t\tconst income = await this.updateIncome(id, entity);\r\n\t\tlet averageIncome = 0;\r\n\t\tlet averageBonus = 0;\r\n\t\tif (income && income.employeeId) {\r\n\t\t\tid = income.employeeId;\r\n\t\t\tconst stat = await this.employeeStatisticsService.getStatisticsByEmployeeId(\r\n\t\t\t\tid\r\n\t\t\t);\r\n\t\t\taverageIncome = this.incomeService.countStatistic(\r\n\t\t\t\tstat.incomeStatistics\r\n\t\t\t);\r\n\t\t\taverageBonus = this.incomeService.countStatistic(\r\n\t\t\t\tstat.bonusStatistics\r\n\t\t\t);\r\n\r\n\t\t\treturn await this.employeeService.create({\r\n\t\t\t\tid,\r\n\t\t\t\taverageIncome: averageIncome,\r\n\t\t\t\taverageBonus: averageBonus\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tpublic async updateIncome(\r\n\t\tincomeId: string,\r\n\t\tentity: IIncome\r\n\t): Promise<IIncome> {\r\n\t\tconst id = incomeId;\r\n\t\treturn this.incomeService.create({\r\n\t\t\tid,\r\n\t\t\t...entity\r\n\t\t});\r\n\t}\r\n}\r\n","import { IncomeCreateHandler } from './income.create.handler';\r\nimport { IncomeDeleteHandler } from './income.delete.handler';\r\nimport { IncomeUpdateHandler } from './income.update.handler';\r\n\r\nexport const CommandHandlers = [\r\n\tIncomeCreateHandler,\r\n\tIncomeDeleteHandler,\r\n\tIncomeUpdateHandler\r\n];\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { IIncomeCreateInput } from '@gauzy/models';\r\n\r\nexport class IncomeCreateCommand implements ICommand {\r\n\tstatic readonly type = '[Income] Create';\r\n\r\n\tconstructor(public readonly input: IIncomeCreateInput) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class IncomeDeleteCommand implements ICommand {\r\n\tstatic readonly type = '[Income] Delete';\r\n\r\n\tconstructor(\r\n\t\tpublic readonly employeeId: string,\r\n\t\tpublic readonly incomeId: string\r\n\t) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { IIncome } from '@gauzy/models';\r\n\r\nexport class IncomeUpdateCommand implements ICommand {\r\n\tstatic readonly type = '[Income] Update';\r\n\r\n\tconstructor(public readonly id: string, public readonly entity: IIncome) {}\r\n}\r\n","import { IIncomeCreateInput, PermissionsEnum } from '@gauzy/models';\r\nimport {\r\n\tBody,\r\n\tController,\r\n\tGet,\r\n\tHttpCode,\r\n\tHttpStatus,\r\n\tParam,\r\n\tPost,\r\n\tPut,\r\n\tQuery,\r\n\tUseGuards,\r\n\tDelete\r\n} from '@nestjs/common';\r\nimport { CommandBus } from '@nestjs/cqrs';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\r\nimport { IPagination } from '../core';\r\nimport { RequestContext } from '../core/context';\r\nimport { CrudController } from '../core/crud/crud.controller';\r\nimport { EmployeeService } from '../employee/employee.service';\r\nimport { Permissions } from '../shared/decorators/permissions';\r\nimport { PermissionGuard } from '../shared/guards/auth/permission.guard';\r\nimport { IncomeCreateCommand } from './commands/income.create.command';\r\nimport { Income } from './income.entity';\r\nimport { IncomeService } from './income.service';\r\nimport { ParseJsonPipe } from '../shared';\r\nimport { IncomeDeleteCommand } from './commands/income.delete.command';\r\nimport { IncomeUpdateCommand } from './commands/income.update.command';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('Income')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class IncomeController extends CrudController<Income> {\r\n\tconstructor(\r\n\t\tprivate readonly incomeService: IncomeService,\r\n\t\tprivate readonly employeeService: EmployeeService,\r\n\t\tprivate readonly commandBus: CommandBus\r\n\t) {\r\n\t\tsuper(incomeService);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find all income.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found income',\r\n\t\ttype: Income\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get('me')\r\n\tasync findMyIncome(\r\n\t\t@Query('data') data: string\r\n\t): Promise<IPagination<Income>> {\r\n\t\tconst { relations, findInput, filterDate } = JSON.parse(data);\r\n\r\n\t\t//If user is not an employee, then this will return 404\r\n\t\tconst employee = await this.employeeService.findOne({\r\n\t\t\tuser: { id: RequestContext.currentUser().id }\r\n\t\t});\r\n\r\n\t\treturn this.incomeService.findAllIncomes(\r\n\t\t\t{ where: { ...findInput, employeeId: employee.id }, relations },\r\n\t\t\tfilterDate\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find all income.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found income',\r\n\t\ttype: Income\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_INCOMES_VIEW)\r\n\t@Get()\r\n\tasync findAllIncome(\r\n\t\t@Query('data') data: string\r\n\t): Promise<IPagination<Income>> {\r\n\t\tconst { relations, findInput, filterDate } = JSON.parse(data);\r\n\t\treturn this.incomeService.findAllIncomes(\r\n\t\t\t{ where: findInput, relations },\r\n\t\t\tfilterDate\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Update an existing record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully edited.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_INCOMES_EDIT)\r\n\t@Put(':id')\r\n\tasync update(\r\n\t\t@Param('id') id: string,\r\n\t\t@Body() entity: Income,\r\n\t\t...options: any[]\r\n\t): Promise<any> {\r\n\t\treturn this.commandBus.execute(new IncomeUpdateCommand(id, entity));\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Create new record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully created.' /*, type: T*/\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_INCOMES_EDIT)\r\n\t@Post('/create')\r\n\tasync create(\r\n\t\t@Body() entity: IIncomeCreateInput,\r\n\t\t...options: any[]\r\n\t): Promise<Income> {\r\n\t\treturn this.commandBus.execute(new IncomeCreateCommand(entity));\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Delete record'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'The record has been successfully deleted'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_INCOMES_EDIT)\r\n\t@Delete('deleteIncome')\r\n\tasync deleteIncome(@Query('data', ParseJsonPipe) data: any): Promise<any> {\r\n\t\tconst { incomeId = null, employeeId = null } = data;\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew IncomeDeleteCommand(employeeId, incomeId)\r\n\t\t);\r\n\t}\r\n}\r\n","import {\r\n\tColumn,\r\n\tEntity,\r\n\tIndex,\r\n\tJoinColumn,\r\n\tRelationId,\r\n\tManyToOne,\r\n\tManyToMany,\r\n\tJoinTable\r\n} from 'typeorm';\r\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\r\nimport {\r\n\tIsNotEmpty,\r\n\tIsString,\r\n\tIsNumber,\r\n\tIsOptional,\r\n\tIsDate,\r\n\tIsEnum,\r\n\tIsBoolean\r\n} from 'class-validator';\r\nimport { IIncome, CurrenciesEnum } from '@gauzy/models';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { Tag } from '../tags/tag.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('income')\r\nexport class Income extends TenantOrganizationBase implements IIncome {\r\n\t@ManyToMany((type) => Tag, (tag) => tag.income)\r\n\t@JoinTable({\r\n\t\tname: 'tag_income'\r\n\t})\r\n\ttags: Tag[];\r\n\r\n\t@ApiProperty({ type: Employee })\r\n\t@ManyToOne((type) => Employee, { nullable: true, onDelete: 'CASCADE' })\r\n\t@JoinColumn()\r\n\temployee: Employee;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@RelationId((income: Income) => income.employee)\r\n\t@Column({ nullable: true })\r\n\treadonly employeeId?: string;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@IsNumber()\r\n\t@IsNotEmpty()\r\n\t@Index()\r\n\t@Column({ type: 'numeric' })\r\n\tamount: number;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@Index()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tclientId?: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Index()\r\n\t@Column()\r\n\tclientName: string;\r\n\r\n\t@ApiProperty({ type: String, enum: CurrenciesEnum })\r\n\t@IsEnum(CurrenciesEnum)\r\n\t@IsNotEmpty()\r\n\t@Index()\r\n\t@Column()\r\n\tcurrency: string;\r\n\r\n\t@ApiPropertyOptional({ type: Date })\r\n\t@IsDate()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tvalueDate?: Date;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@Index()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tnotes?: string;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@IsBoolean()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tisBonus: boolean;\r\n\r\n\t@ApiPropertyOptional({ type: String, maxLength: 256 })\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\treference?: string;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { Income } from './income.entity';\r\nimport { IncomeService } from './income.service';\r\nimport { IncomeController } from './income.controller';\r\nimport { CommandHandlers } from './commands/handlers';\r\nimport { CqrsModule } from '@nestjs/cqrs';\r\nimport { EmployeeService } from '../employee/employee.service';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { OrganizationService } from '../organization/organization.service';\r\nimport { User } from '../user/user.entity';\r\nimport { UserService } from '../user/user.service';\r\nimport { Expense } from '../expense/expense.entity';\r\nimport {\r\n\tEmployeeRecurringExpense,\r\n\tEmployeeRecurringExpenseService\r\n} from '../employee-recurring-expense';\r\nimport { OrganizationRecurringExpense } from '../organization-recurring-expense/organization-recurring-expense.entity';\r\nimport { ExpenseService } from '../expense/expense.service';\r\nimport { EmployeeStatisticsService } from '../employee-statistics';\r\nimport { OrganizationRecurringExpenseService } from '../organization-recurring-expense/organization-recurring-expense.service';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([\r\n\t\t\tIncome,\r\n\t\t\tEmployee,\r\n\t\t\tOrganization,\r\n\t\t\tUser,\r\n\t\t\tExpense,\r\n\t\t\tEmployeeRecurringExpense,\r\n\t\t\tOrganizationRecurringExpense\r\n\t\t]),\r\n\t\tCqrsModule,\r\n\t\tTenantModule\r\n\t],\r\n\tcontrollers: [IncomeController],\r\n\tproviders: [\r\n\t\tIncomeService,\r\n\t\tEmployeeService,\r\n\t\tOrganizationService,\r\n\t\tUserService,\r\n\t\tExpenseService,\r\n\t\tEmployeeStatisticsService,\r\n\t\tEmployeeRecurringExpenseService,\r\n\t\tOrganizationRecurringExpenseService,\r\n\t\t...CommandHandlers\r\n\t],\r\n\texports: [IncomeService]\r\n})\r\nexport class IncomeModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { Income } from './income.entity';\r\nimport * as faker from 'faker';\r\nimport { IOrganization, IEmployee } from '@gauzy/models';\r\nimport * as fs from 'fs';\r\nimport * as csv from 'csv-parser';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport * as moment from 'moment';\r\nimport { environment as env } from '@env-api/environment';\r\n\r\nexport const createDefaultIncomes = async (\r\n\tconnection: Connection,\r\n\tdefaultData: {\r\n\t\torganizations: IOrganization[];\r\n\t\temployees: IEmployee[];\r\n\t}\r\n): Promise<Income[]> => {\r\n\tconst incomeFromFile = [];\r\n\tlet defaultIncomes = [];\r\n\tlet filePath = './src/app/income/income-seed-data/income-data.csv';\r\n\r\n\ttry {\r\n\t\tfilePath = fs.existsSync(filePath)\r\n\t\t\t? filePath\r\n\t\t\t: `./apps/api/${filePath.slice(2)}`;\r\n\t} catch (error) {\r\n\t\tconsole.error('Cannot find income data csv');\r\n\t}\r\n\r\n\tfor (const organization of defaultData.organizations) {\r\n\t\tfs.createReadStream(filePath)\r\n\t\t\t.pipe(csv())\r\n\t\t\t.on('data', (data) => incomeFromFile.push(data))\r\n\t\t\t.on('end', async () => {\r\n\t\t\t\tdefaultIncomes = incomeFromFile.map((seedIncome) => {\r\n\t\t\t\t\tconst income = new Income();\r\n\t\t\t\t\tconst foundEmployee = defaultData.employees.find(\r\n\t\t\t\t\t\t(emp) => emp.user.email === seedIncome.email\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tincome.employee = foundEmployee;\r\n\t\t\t\t\tincome.clientName = seedIncome.clientName;\r\n\t\t\t\t\tincome.organization = organization;\r\n\t\t\t\t\tincome.tenant = organization.tenant;\r\n\t\t\t\t\tincome.amount = seedIncome.amount;\r\n\t\t\t\t\tincome.clientId = faker.random\r\n\t\t\t\t\t\t.number({ min: 10, max: 9999 })\r\n\t\t\t\t\t\t.toString();\r\n\t\t\t\t\tincome.currency =\r\n\t\t\t\t\t\tseedIncome.currency || env.defaultCurrency;\r\n\t\t\t\t\tincome.valueDate = faker.date.between(\r\n\t\t\t\t\t\tnew Date(),\r\n\t\t\t\t\t\tmoment(new Date()).add(10, 'days').toDate()\r\n\t\t\t\t\t);\r\n\t\t\t\t\tincome.notes = seedIncome.notes;\r\n\t\t\t\t\treturn income;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tawait insertIncome(connection, defaultIncomes);\r\n\t\t\t});\r\n\t}\r\n\r\n\treturn defaultIncomes;\r\n};\r\n\r\nexport const createRandomIncomes = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantEmployeeMap: Map<Tenant, IEmployee[]>\r\n): Promise<void> => {\r\n\tconst clientsArray = ['NA', 'UR', 'CA', 'ET', 'GA'];\r\n\tconst notesArray = [\r\n\t\t'Great job!',\r\n\t\t'Well done!',\r\n\t\t'Nice!',\r\n\t\t'Done',\r\n\t\t'Great job!'\r\n\t];\r\n\r\n\tconst randomIncomes: Income[] = [];\r\n\t(tenants || []).forEach((tenant) => {\r\n\t\tconst employees = tenantEmployeeMap.get(tenant);\r\n\t\t(employees || []).forEach((employee) => {\r\n\t\t\tfor (let index = 0; index < 100; index++) {\r\n\t\t\t\tconst income = new Income();\r\n\t\t\t\tconst currentIndex = faker.random.number({\r\n\t\t\t\t\tmin: 0,\r\n\t\t\t\t\tmax: index % 5\r\n\t\t\t\t});\r\n\t\t\t\tincome.organization = employee.organization;\r\n\t\t\t\tincome.tenant = tenant;\r\n\t\t\t\tincome.employee = employee;\r\n\t\t\t\tincome.clientName = clientsArray[currentIndex];\r\n\t\t\t\tincome.amount = faker.random.number({ min: 10, max: 9999 });\r\n\t\t\t\tincome.clientId = faker.random\r\n\t\t\t\t\t.number({ min: 10, max: 9999 })\r\n\t\t\t\t\t.toString();\r\n\t\t\t\tincome.currency =\r\n\t\t\t\t\temployee.organization.currency || env.defaultCurrency;\r\n\t\t\t\tincome.valueDate = faker.date.between(\r\n\t\t\t\t\tnew Date(),\r\n\t\t\t\t\tmoment(new Date()).add(10, 'days').toDate()\r\n\t\t\t\t);\r\n\t\t\t\tincome.notes = notesArray[currentIndex];\r\n\t\t\t\trandomIncomes.push(income);\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\r\n\tawait insertIncome(connection, randomIncomes);\r\n\treturn;\r\n};\r\n\r\nconst insertIncome = async (\r\n\tconnection: Connection,\r\n\tincomes: Income[]\r\n): Promise<void> => {\r\n\tawait connection.manager.save(incomes);\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository, FindManyOptions, Between } from 'typeorm';\r\nimport { Income } from './income.entity';\r\nimport { IPagination } from '../core';\r\nimport { TenantAwareCrudService } from '../core/crud/tenant-aware-crud.service';\r\nimport * as moment from 'moment';\r\n@Injectable()\r\nexport class IncomeService extends TenantAwareCrudService<Income> {\r\n\tconstructor(\r\n\t\t@InjectRepository(Income)\r\n\t\tprivate readonly incomeRepository: Repository<Income>\r\n\t) {\r\n\t\tsuper(incomeRepository);\r\n\t}\r\n\r\n\tpublic async findAllIncomes(\r\n\t\tfilter?: FindManyOptions<Income>,\r\n\t\tfilterDate?: string\r\n\t): Promise<IPagination<Income>> {\r\n\t\tif (filterDate) {\r\n\t\t\tconst startOfMonth = moment(filterDate)\r\n\t\t\t\t.startOf('month')\r\n\t\t\t\t.format('YYYY-MM-DD hh:mm:ss');\r\n\t\t\tconst endOfMonth = moment(filterDate)\r\n\t\t\t\t.endOf('month')\r\n\t\t\t\t.format('YYYY-MM-DD hh:mm:ss');\r\n\t\t\treturn filter\r\n\t\t\t\t? await this.findAll({\r\n\t\t\t\t\t\twhere: {\r\n\t\t\t\t\t\t\tvalueDate: Between(startOfMonth, endOfMonth),\r\n\t\t\t\t\t\t\t...(filter.where as Object)\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\trelations: filter.relations\r\n\t\t\t\t  })\r\n\t\t\t\t: await this.findAll({\r\n\t\t\t\t\t\twhere: {\r\n\t\t\t\t\t\t\tvalueDate: Between(startOfMonth, endOfMonth)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t  });\r\n\t\t}\r\n\t\treturn await this.findAll(filter || {});\r\n\t}\r\n\tpublic countStatistic(data: number[]) {\r\n\t\treturn data.filter(Number).reduce((a, b) => a + b, 0) !== 0\r\n\t\t\t? data.filter(Number).reduce((a, b) => a + b, 0) /\r\n\t\t\t\t\tdata.filter(Number).length\r\n\t\t\t: 0;\r\n\t}\r\n}\r\n","import {\r\n\tController,\r\n\tHttpStatus,\r\n\tParam,\r\n\tPut,\r\n\tBody,\r\n\tUseGuards\r\n} from '@nestjs/common';\r\nimport { CrudController } from '../core';\r\n\r\nimport { IntegrationEntitySettingTiedEntity } from './integration-entity-setting-tied-entity.entity';\r\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\r\nimport { IntegrationEntitySettingTiedEntityService } from './integration-entity-setting-tied-entity.service';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('IntegrationsEntitySetting')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class IntegrationEntitySettingTiedEntityController extends CrudController<\r\n\tIntegrationEntitySettingTiedEntity\r\n> {\r\n\tconstructor(\r\n\t\tprivate integrationEntitySettingTiedEntityService: IntegrationEntitySettingTiedEntityService\r\n\t) {\r\n\t\tsuper(integrationEntitySettingTiedEntityService);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Update settings.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Update settings',\r\n\t\ttype: IntegrationEntitySettingTiedEntity\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Put(':integrationId')\r\n\tasync editSettings(\r\n\t\t@Param('integrationId') integrationId,\r\n\t\t@Body() editSettingsDto\r\n\t): Promise<IntegrationEntitySettingTiedEntity> {\r\n\t\treturn await this.integrationEntitySettingTiedEntityService.create(\r\n\t\t\teditSettingsDto\r\n\t\t);\r\n\t}\r\n}\r\n","import { ApiProperty } from '@nestjs/swagger';\r\nimport { Column, Entity, JoinColumn, RelationId, ManyToOne } from 'typeorm';\r\nimport {\r\n\tIIntegrationEntitySetting,\r\n\tIIntegrationEntitySettingTied\r\n} from '@gauzy/models';\r\nimport { IntegrationEntitySetting } from '../integration-entity-setting/integration-entity-setting.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n@Entity('integration_entity_setting_tied_entity')\r\nexport class IntegrationEntitySettingTiedEntity\r\n\textends TenantOrganizationBase\r\n\timplements IIntegrationEntitySettingTied {\r\n\t@ApiProperty({ type: IntegrationEntitySetting })\r\n\t@ManyToOne(\r\n\t\t(type) => IntegrationEntitySetting,\r\n\t\t(integrationEntitySetting) => integrationEntitySetting.tiedEntities\r\n\t)\r\n\t@JoinColumn()\r\n\tintegrationEntitySetting?: IIntegrationEntitySetting;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@RelationId(\r\n\t\t(integrationEntityTiedSetting: IntegrationEntitySettingTiedEntity) =>\r\n\t\t\tintegrationEntityTiedSetting.integrationEntitySetting\r\n\t)\r\n\treadonly integrationEntitySettingId?: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column({ nullable: false })\r\n\tentity: string;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@Column({ nullable: false })\r\n\tsync: boolean;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { IntegrationEntitySettingTiedEntity } from './integration-entity-setting-tied-entity.entity';\r\nimport { IntegrationEntitySettingTiedEntityController } from './integration-entity-setting-tied-entity.controller';\r\nimport { IntegrationEntitySettingTiedEntityService } from './integration-entity-setting-tied-entity.service';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([IntegrationEntitySettingTiedEntity]),\r\n\t\tTenantModule\r\n\t],\r\n\tcontrollers: [IntegrationEntitySettingTiedEntityController],\r\n\tproviders: [IntegrationEntitySettingTiedEntityService]\r\n})\r\nexport class IntegrationEntitySettingTiedEntityModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport * as faker from 'faker';\r\nimport { IntegrationTenant } from '../integration-tenant/integration-tenant.entity';\r\nimport { IntegrationEntitySetting } from '../integration-entity-setting/integration-entity-setting.entity';\r\nimport { IntegrationEntitySettingTiedEntity } from './integration-entity-setting-tied-entity.entity';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { IntegrationEntity } from '@gauzy/models';\r\nimport { PROJECT_TIED_ENTITIES } from '@gauzy/integration-hubstaff';\r\n\r\nexport const createRandomIntegrationEntitySettingTiedEntity = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[]\r\n): Promise<IntegrationEntitySettingTiedEntity[]> => {\r\n\tif (!tenants) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: tenants not found, Integration Entity Setting  will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst randomIntegrationEntitySettingsTiedEntity: IntegrationEntitySettingTiedEntity[] = [];\r\n\r\n\tfor (const tenant of tenants) {\r\n\t\tconst organizations = await connection.manager.find(Organization, {\r\n\t\t\twhere: [{ tenant: tenant }]\r\n\t\t});\r\n\t\tconst integrationTenants = await connection.manager.find(\r\n\t\t\tIntegrationTenant,\r\n\t\t\t{\r\n\t\t\t\twhere: [{ tenant: tenant }]\r\n\t\t\t}\r\n\t\t);\r\n\t\tfor (const integrationTenant of integrationTenants) {\r\n\t\t\tconst integrationEntitySettings = await connection.manager.find(\r\n\t\t\t\tIntegrationEntitySetting,\r\n\t\t\t\t{\r\n\t\t\t\t\twhere: [{ integration: integrationTenant }]\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\tfor (const integrationEntitySetting of integrationEntitySettings) {\r\n\t\t\t\tconst integrationEntitySettingTiedEntity = new IntegrationEntitySettingTiedEntity();\r\n\r\n\t\t\t\tintegrationEntitySettingTiedEntity.integrationEntitySetting = integrationEntitySetting;\r\n\t\t\t\tintegrationEntitySettingTiedEntity.sync = faker.random.boolean();\r\n\t\t\t\tintegrationEntitySettingTiedEntity.organization = faker.random.arrayElement(\r\n\t\t\t\t\torganizations\r\n\t\t\t\t);\r\n\t\t\t\tintegrationEntitySettingTiedEntity.tenant = tenant;\r\n\t\t\t\t//todo: need to understand real values here\r\n\t\t\t\tif (\r\n\t\t\t\t\tintegrationEntitySetting['entity'] ===\r\n\t\t\t\t\tIntegrationEntity.PROJECT\r\n\t\t\t\t) {\r\n\t\t\t\t\tintegrationEntitySettingTiedEntity.entity = faker.random.arrayElement(\r\n\t\t\t\t\t\tPROJECT_TIED_ENTITIES\r\n\t\t\t\t\t)['entity'];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tintegrationEntitySettingTiedEntity.entity = faker.random.arrayElement(\r\n\t\t\t\t\t\tObject.values(IntegrationEntity)\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\trandomIntegrationEntitySettingsTiedEntity.push(\r\n\t\t\t\t\tintegrationEntitySettingTiedEntity\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tawait connection.manager.save(randomIntegrationEntitySettingsTiedEntity);\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { Repository } from 'typeorm';\r\nimport { CrudService } from '../core';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { IntegrationEntitySettingTiedEntity } from './integration-entity-setting-tied-entity.entity';\r\n\r\n@Injectable()\r\nexport class IntegrationEntitySettingTiedEntityService extends CrudService<\r\n\tIntegrationEntitySettingTiedEntity\r\n> {\r\n\tconstructor(\r\n\t\t@InjectRepository(IntegrationEntitySettingTiedEntity)\r\n\t\treadonly repository: Repository<IntegrationEntitySettingTiedEntity>\r\n\t) {\r\n\t\tsuper(repository);\r\n\t}\r\n}\r\n","import {\r\n\tController,\r\n\tHttpStatus,\r\n\tGet,\r\n\tParam,\r\n\tPut,\r\n\tBody,\r\n\tUseGuards\r\n} from '@nestjs/common';\r\nimport { CrudController, IPagination } from '../core';\r\nimport { IntegrationEntitySetting } from './integration-entity-setting.entity';\r\nimport { IntegrationEntitySettingService } from './integration-entity-setting.service';\r\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('IntegrationsEntitySetting')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class IntegrationEntitySettingController extends CrudController<\r\n\tIntegrationEntitySetting\r\n> {\r\n\tconstructor(\r\n\t\tprivate integrationEntitySettingService: IntegrationEntitySettingService\r\n\t) {\r\n\t\tsuper(integrationEntitySettingService);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Get settings.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found settings',\r\n\t\ttype: IntegrationEntitySetting\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get(':integrationId')\r\n\tasync getSettingsForIntegration(\r\n\t\t@Param('integrationId') integrationId\r\n\t): Promise<IPagination<IntegrationEntitySetting>> {\r\n\t\treturn await this.integrationEntitySettingService.findAll({\r\n\t\t\trelations: ['integration', 'tiedEntities'],\r\n\t\t\twhere: {\r\n\t\t\t\tintegration: { id: integrationId }\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Update settings.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Update settings',\r\n\t\ttype: IntegrationEntitySetting\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Put(':integrationId')\r\n\tasync editSettings(\r\n\t\t@Param('integrationId') integrationId,\r\n\t\t@Body() editSettingsDto\r\n\t): Promise<IntegrationEntitySetting> {\r\n\t\treturn await this.integrationEntitySettingService.create(\r\n\t\t\teditSettingsDto\r\n\t\t);\r\n\t}\r\n}\r\n","import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\r\nimport {\r\n\tColumn,\r\n\tEntity,\r\n\tJoinColumn,\r\n\tRelationId,\r\n\tManyToOne,\r\n\tOneToMany\r\n} from 'typeorm';\r\nimport {\r\n\tIIntegrationEntitySetting,\r\n\tIIntegrationEntitySettingTied,\r\n\tIIntegrationTenant\r\n} from '@gauzy/models';\r\nimport { IntegrationTenant } from '../integration-tenant/integration-tenant.entity';\r\nimport { IntegrationEntitySettingTiedEntity } from '../integration-entity-setting-tied-entity/integration-entity-setting-tied-entity.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('integration_entity_setting')\r\nexport class IntegrationEntitySetting\r\n\textends TenantOrganizationBase\r\n\timplements IIntegrationEntitySetting {\r\n\t@ApiPropertyOptional({ type: IntegrationTenant })\r\n\t@ManyToOne(\r\n\t\t(type) => IntegrationTenant,\r\n\t\t(integration) => integration.entitySettings\r\n\t)\r\n\t@JoinColumn()\r\n\tintegration?: IIntegrationTenant;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@RelationId(\r\n\t\t(integrationEntity: IntegrationEntitySetting) =>\r\n\t\t\tintegrationEntity.integration\r\n\t)\r\n\treadonly integrationId?: string;\r\n\r\n\t@ApiPropertyOptional({\r\n\t\ttype: IntegrationEntitySettingTiedEntity,\r\n\t\tisArray: true\r\n\t})\r\n\t@OneToMany(\r\n\t\t(type) => IntegrationEntitySettingTiedEntity,\r\n\t\t(tiedEntity) => tiedEntity.integrationEntitySetting,\r\n\t\t{ cascade: true }\r\n\t)\r\n\t@JoinColumn()\r\n\ttiedEntities?: IIntegrationEntitySettingTied[];\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column({ nullable: false })\r\n\tentity: string;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@Column({ nullable: false })\r\n\tsync: boolean;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { IntegrationEntitySetting } from './integration-entity-setting.entity';\r\nimport { IntegrationEntitySettingController } from './integration-entity-setting.controller';\r\nimport { IntegrationEntitySettingService } from './integration-entity-setting.service';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([IntegrationEntitySetting]),\r\n\t\tTenantModule\r\n\t],\r\n\tcontrollers: [IntegrationEntitySettingController],\r\n\tproviders: [IntegrationEntitySettingService]\r\n})\r\nexport class IntegrationEntitySettingModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { IntegrationEntitySetting } from './integration-entity-setting.entity';\r\nimport * as faker from 'faker';\r\nimport { IntegrationTenant } from '../integration-tenant/integration-tenant.entity';\r\nimport { IntegrationEntitySettingTiedEntity } from '../integration-entity-setting-tied-entity/integration-entity-setting-tied-entity.entity';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { DEFAULT_ENTITY_SETTINGS } from '@gauzy/integration-hubstaff';\r\n\r\nexport const createRandomIntegrationEntitySetting = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[]\r\n): Promise<IntegrationEntitySetting[]> => {\r\n\tif (!tenants) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: tenants not found, Integration Entity Setting will not be created.'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst integrationEntitySettings: IntegrationEntitySetting[] = [];\r\n\tconst integrationEntitySettingTiedEntities: IntegrationEntitySettingTiedEntity[] = [];\r\n\r\n\tfor (const tenant of tenants) {\r\n\t\tconst organizations = await connection.manager.find(Organization, {\r\n\t\t\twhere: [{ tenant: tenant }]\r\n\t\t});\r\n\t\tconst integrationTenants = await connection.manager.find(\r\n\t\t\tIntegrationTenant,\r\n\t\t\t{\r\n\t\t\t\twhere: [{ tenant: tenant }]\r\n\t\t\t}\r\n\t\t);\r\n\t\tfor (const integrationTenant of integrationTenants) {\r\n\t\t\tconst integrationEntitySetting = new IntegrationEntitySetting();\r\n\r\n\t\t\tintegrationEntitySetting.integration = integrationTenant;\r\n\t\t\tintegrationEntitySetting.tiedEntities = integrationEntitySettingTiedEntities;\r\n\t\t\tintegrationEntitySetting.sync = faker.random.boolean();\r\n\t\t\t(integrationEntitySetting.organization = faker.random.arrayElement(\r\n\t\t\t\torganizations\r\n\t\t\t)),\r\n\t\t\t\t(integrationEntitySetting.tenant = tenant);\r\n\t\t\t//todo: need to understand real values here\r\n\t\t\tintegrationEntitySetting.entity = faker.random.arrayElement(\r\n\t\t\t\tDEFAULT_ENTITY_SETTINGS\r\n\t\t\t)['entity'];\r\n\t\t\tintegrationEntitySettings.push(integrationEntitySetting);\r\n\t\t}\r\n\t}\r\n\r\n\tawait connection.manager.save(integrationEntitySettings);\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { Repository } from 'typeorm';\r\nimport { CrudService } from '../core';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { IntegrationEntitySetting } from './integration-entity-setting.entity';\r\n\r\n@Injectable()\r\nexport class IntegrationEntitySettingService extends CrudService<\r\n\tIntegrationEntitySetting\r\n> {\r\n\tconstructor(\r\n\t\t@InjectRepository(IntegrationEntitySetting)\r\n\t\treadonly repository: Repository<IntegrationEntitySetting>\r\n\t) {\r\n\t\tsuper(repository);\r\n\t}\r\n}\r\n","import { IntegrationMapSyncProjectHandler } from './integration-map.sync-project.handler';\r\nimport { IntegrationMapSyncEntityHandler } from './integration-map.sync-entity.handler';\r\n\r\nexport const CommandHandlers = [\r\n\tIntegrationMapSyncProjectHandler,\r\n\tIntegrationMapSyncEntityHandler\r\n];\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { IntegrationMapSyncEntityCommand } from '..';\r\nimport { IntegrationMapService } from '../../integration-map.service';\r\nimport { IntegrationMap } from '../../integration-map.entity';\r\n\r\n@CommandHandler(IntegrationMapSyncEntityCommand)\r\nexport class IntegrationMapSyncEntityHandler\r\n\timplements ICommandHandler<IntegrationMapSyncEntityCommand> {\r\n\tconstructor(private _ims: IntegrationMapService) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: IntegrationMapSyncEntityCommand\r\n\t): Promise<IntegrationMap> {\r\n\t\tconst { input } = command;\r\n\r\n\t\treturn await this._ims.create(input);\r\n\t}\r\n}\r\n","import { CommandHandler, ICommandHandler, CommandBus } from '@nestjs/cqrs';\r\nimport { IntegrationMapSyncProjectCommand } from '..';\r\nimport { IntegrationEntity } from '@gauzy/models';\r\nimport { IntegrationMapService } from '../../integration-map.service';\r\nimport { OrganizationProjectCreateCommand } from '../../../organization-projects/commands/organization-project.create.command';\r\nimport { IntegrationMap } from '../../integration-map.entity';\r\n\r\n@CommandHandler(IntegrationMapSyncProjectCommand)\r\nexport class IntegrationMapSyncProjectHandler\r\n\timplements ICommandHandler<IntegrationMapSyncProjectCommand> {\r\n\tconstructor(private _cb: CommandBus, private _ims: IntegrationMapService) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: IntegrationMapSyncProjectCommand\r\n\t): Promise<IntegrationMap> {\r\n\t\tconst { input } = command;\r\n\t\tconst {\r\n\t\t\torganizationProjectCreateInput,\r\n\t\t\tintegrationId,\r\n\t\t\tsourceId\r\n\t\t} = input;\r\n\r\n\t\tconst project = await this._cb.execute(\r\n\t\t\tnew OrganizationProjectCreateCommand(organizationProjectCreateInput)\r\n\t\t);\r\n\r\n\t\treturn await this._ims.create({\r\n\t\t\tgauzyId: project.id,\r\n\t\t\tintegrationId,\r\n\t\t\tsourceId,\r\n\t\t\tentity: IntegrationEntity.PROJECT\r\n\t\t});\r\n\t}\r\n}\r\n","export * from './integration-map.sync-project.command';\r\nexport * from './integration-map.sync-entity.command';\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { IIntegrationMapSyncEntityInput } from '@gauzy/models';\r\n\r\nexport class IntegrationMapSyncEntityCommand implements ICommand {\r\n\tstatic readonly type = '[Integration Map] Sync Entity';\r\n\r\n\tconstructor(public readonly input: IIntegrationMapSyncEntityInput) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { IIntegrationMapSyncProject } from '@gauzy/models';\r\n\r\nexport class IntegrationMapSyncProjectCommand implements ICommand {\r\n\tstatic readonly type = '[Integration Map] Sync Project';\r\n\r\n\tconstructor(public readonly input: IIntegrationMapSyncProject) {}\r\n}\r\n","import { Controller, UseGuards } from '@nestjs/common';\r\nimport { CrudController } from '../core';\r\nimport { IntegrationMapService } from './integration-map.service';\r\nimport { IntegrationMap } from './integration-map.entity';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class IntegrationMapController extends CrudController<IntegrationMap> {\r\n\tconstructor(private integrationMapService: IntegrationMapService) {\r\n\t\tsuper(integrationMapService);\r\n\t}\r\n}\r\n","import { ApiProperty } from '@nestjs/swagger';\r\nimport { Column, Entity, JoinColumn, RelationId, ManyToOne } from 'typeorm';\r\nimport { IIntegrationMap } from '@gauzy/models';\r\nimport { IntegrationTenant } from '../integration-tenant/integration-tenant.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('integration_map')\r\nexport class IntegrationMap\r\n\textends TenantOrganizationBase\r\n\timplements IIntegrationMap {\r\n\t@ApiProperty({ type: IntegrationTenant })\r\n\t@ManyToOne((type) => IntegrationTenant, {\r\n\t\tnullable: false\r\n\t})\r\n\t@JoinColumn()\r\n\tintegration: IntegrationTenant;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@Column()\r\n\t@RelationId(\r\n\t\t(integrationSetting: IntegrationMap) => integrationSetting.integration\r\n\t)\r\n\treadonly integrationId: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column({ nullable: false })\r\n\tentity: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column({ nullable: false })\r\n\tsourceId: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column({ nullable: false })\r\n\tgauzyId: string;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { IntegrationMapController } from './integration-map.controller';\r\nimport { IntegrationMapService } from './integration-map.service';\r\nimport { IntegrationMap } from './integration-map.entity';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { CqrsModule } from '@nestjs/cqrs';\r\nimport { CommandHandlers } from './commands/handlers';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([IntegrationMap]),\r\n\t\tCqrsModule,\r\n\t\tTenantModule\r\n\t],\r\n\tcontrollers: [IntegrationMapController],\r\n\tproviders: [IntegrationMapService, ...CommandHandlers]\r\n})\r\nexport class IntegrationMapModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { IntegrationMap } from './integration-map.entity';\r\nimport * as faker from 'faker';\r\nimport { IntegrationTenant } from '../integration-tenant/integration-tenant.entity';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { IntegrationEntity } from '@gauzy/models';\r\n\r\nexport const createRandomIntegrationMap = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[]\r\n): Promise<IntegrationMap[]> => {\r\n\tif (!tenants) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: tenants not found, Integration Map  will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst integrationMaps: IntegrationMap[] = [];\r\n\r\n\tfor (const tenant of tenants) {\r\n\t\tconst integrationTenants = await connection.manager.find(\r\n\t\t\tIntegrationTenant,\r\n\t\t\t{\r\n\t\t\t\twhere: [{ tenant: tenant }]\r\n\t\t\t}\r\n\t\t);\r\n\t\tconst organizations = await connection.manager.find(Organization, {\r\n\t\t\twhere: [{ tenant: tenant }]\r\n\t\t});\r\n\t\tfor (const integrationTenant of integrationTenants) {\r\n\t\t\tconst integrationMap = new IntegrationMap();\r\n\t\t\tintegrationMap.integration = integrationTenant;\r\n\t\t\tintegrationMap.organization = faker.random.arrayElement(\r\n\t\t\t\torganizations\r\n\t\t\t);\r\n\t\t\tintegrationMap.tenant = tenant;\r\n\t\t\t//todo: need to understand real values here\r\n\t\t\tintegrationMap.entity = faker.random.arrayElement(\r\n\t\t\t\tObject.values(IntegrationEntity)\r\n\t\t\t);\r\n\t\t\tintegrationMap.sourceId = 'sourceId-' + faker.random.number(40);\r\n\t\t\tintegrationMap.gauzyId = 'gauzyId-' + faker.random.number(40);\r\n\t\t\tintegrationMaps.push(integrationMap);\r\n\t\t}\r\n\t}\r\n\r\n\tawait connection.manager.save(integrationMaps);\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { Repository } from 'typeorm';\r\nimport { IntegrationMap } from './integration-map.entity';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { TenantAwareCrudService } from '../core/crud/tenant-aware-crud.service';\r\n\r\n@Injectable()\r\nexport class IntegrationMapService extends TenantAwareCrudService<\r\n\tIntegrationMap\r\n> {\r\n\tconstructor(\r\n\t\t@InjectRepository(IntegrationMap)\r\n\t\treadonly repository: Repository<IntegrationMap>\r\n\t) {\r\n\t\tsuper(repository);\r\n\t}\r\n}\r\n","import { IntegrationSettingGetHandler } from './integration-setting.get.handler';\r\nimport { IntegrationSettingGetManyHandler } from './integration-setting.getMany.handler';\r\nimport { IntegrationSettingCreateHandler } from './integration-setting.create.handler';\r\n\r\nexport const CommandHandlers = [\r\n\tIntegrationSettingGetHandler,\r\n\tIntegrationSettingGetManyHandler,\r\n\tIntegrationSettingCreateHandler\r\n];\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { IntegrationSettingCreateCommand } from '..';\r\nimport { IntegrationSettingService } from '../../integration-setting.service';\r\nimport { IIntegrationSetting } from '@gauzy/models';\r\nimport { RequestContext } from '../../../core/context';\r\n\r\n@CommandHandler(IntegrationSettingCreateCommand)\r\nexport class IntegrationSettingCreateHandler\r\n\timplements ICommandHandler<IntegrationSettingCreateCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly integrationSettingService: IntegrationSettingService\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: IntegrationSettingCreateCommand\r\n\t): Promise<IIntegrationSetting> {\r\n\t\tconst { input } = command;\r\n\t\tconst tenantId = RequestContext.currentTenantId();\r\n\t\treturn await this.integrationSettingService.create(\r\n\t\t\tObject.assign(input, { tenantId })\r\n\t\t);\r\n\t}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { IntegrationSettingGetCommand } from '..';\r\nimport { IntegrationSettingService } from '../../integration-setting.service';\r\nimport { IntegrationSetting } from '../../integration-setting.entity';\r\nimport { RequestContext } from '../../../core/context';\r\n\r\n@CommandHandler(IntegrationSettingGetCommand)\r\nexport class IntegrationSettingGetHandler\r\n\timplements ICommandHandler<IntegrationSettingGetCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly integrationSettingService: IntegrationSettingService\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: IntegrationSettingGetCommand\r\n\t): Promise<IntegrationSetting> {\r\n\t\tconst { input } = command;\r\n\t\tconst tenantId = RequestContext.currentTenantId();\r\n\t\tif (input.where instanceof Object) {\r\n\t\t\tinput.where = Object.assign(input.where, { tenantId });\r\n\t\t}\r\n\t\tconst { record } = await this.integrationSettingService.findOneOrFail(\r\n\t\t\tinput\r\n\t\t);\r\n\t\treturn record;\r\n\t}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { IntegrationSettingGetManyCommand } from '..';\r\nimport { IntegrationSettingService } from '../../integration-setting.service';\r\nimport { IIntegrationSetting } from '@gauzy/models';\r\nimport { RequestContext } from '../../../core/context';\r\n\r\n@CommandHandler(IntegrationSettingGetManyCommand)\r\nexport class IntegrationSettingGetManyHandler\r\n\timplements ICommandHandler<IntegrationSettingGetManyCommand> {\r\n\tconstructor(private readonly isService: IntegrationSettingService) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: IntegrationSettingGetManyCommand\r\n\t): Promise<IIntegrationSetting[]> {\r\n\t\tconst { input } = command;\r\n\t\tconst tenantId = RequestContext.currentTenantId();\r\n\t\tif (input.where instanceof Object) {\r\n\t\t\tinput.where = Object.assign(input.where, { tenantId });\r\n\t\t}\r\n\t\tconst { items } = await this.isService.findAll(input);\r\n\t\treturn items;\r\n\t}\r\n}\r\n","export * from './integration-setting.get.command';\r\nexport * from './integration-setting.getMany.command';\r\nexport * from './integration-setting.create.command';\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { IIntegrationSetting } from '@gauzy/models';\r\n\r\nexport class IntegrationSettingCreateCommand implements ICommand {\r\n\tstatic readonly type = '[Integration Setting] Create Integration Setting';\r\n\r\n\tconstructor(public readonly input: IIntegrationSetting) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { FindOneOptions } from 'typeorm';\r\n\r\nexport class IntegrationSettingGetCommand implements ICommand {\r\n\tstatic readonly type = '[Integration Setting] Get Integration Setting';\r\n\r\n\tconstructor(public readonly input: FindOneOptions) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { FindManyOptions } from 'typeorm';\r\n\r\nexport class IntegrationSettingGetManyCommand implements ICommand {\r\n\tstatic readonly type = '[Integration Setting] Get Many Integration Setting';\r\n\r\n\tconstructor(public readonly input: FindManyOptions) {}\r\n}\r\n","import { Controller, UseGuards } from '@nestjs/common';\r\nimport { ApiTags } from '@nestjs/swagger';\r\nimport { CrudController } from '../core';\r\nimport { IntegrationSettingService } from './integration-setting.service';\r\nimport { IntegrationSetting } from './integration-setting.entity';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('IntegrationSetting')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class IntegrationSettingController extends CrudController<\r\n\tIntegrationSetting\r\n> {\r\n\tconstructor(private integrationSettingService: IntegrationSettingService) {\r\n\t\tsuper(integrationSettingService);\r\n\t}\r\n}\r\n","import { ApiProperty } from '@nestjs/swagger';\r\nimport { Column, Entity, JoinColumn, RelationId, ManyToOne } from 'typeorm';\r\nimport { IIntegrationSetting } from '@gauzy/models';\r\nimport { IntegrationTenant } from '../integration-tenant/integration-tenant.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('integration_setting')\r\nexport class IntegrationSetting\r\n\textends TenantOrganizationBase\r\n\timplements IIntegrationSetting {\r\n\t@ApiProperty({ type: IntegrationTenant })\r\n\t@ManyToOne((type) => IntegrationTenant, {\r\n\t\tnullable: false\r\n\t})\r\n\t@JoinColumn()\r\n\tintegration: IntegrationTenant;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@RelationId(\r\n\t\t(integrationSetting: IntegrationSetting) =>\r\n\t\t\tintegrationSetting.integration\r\n\t)\r\n\treadonly integrationId: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column({ nullable: false })\r\n\tsettingsName: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column({ nullable: false })\r\n\tsettingsValue: string;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { IntegrationSettingController } from './integration-setting.controller';\r\nimport { IntegrationSettingService } from './integration-setting.service';\r\nimport { IntegrationSetting } from './integration-setting.entity';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { CqrsModule } from '@nestjs/cqrs';\r\nimport { CommandHandlers } from './commands/handlers';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([IntegrationSetting]),\r\n\t\tCqrsModule,\r\n\t\tTenantModule\r\n\t],\r\n\tcontrollers: [IntegrationSettingController],\r\n\tproviders: [IntegrationSettingService, ...CommandHandlers]\r\n})\r\nexport class IntegrationSettingModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { IntegrationSetting } from './integration-setting.entity';\r\nimport * as faker from 'faker';\r\nimport { IntegrationTenant } from '../integration-tenant/integration-tenant.entity';\r\nimport { Organization } from '../organization/organization.entity';\r\n\r\nexport const createRandomIntegrationSetting = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[]\r\n): Promise<IntegrationSetting[]> => {\r\n\tif (!tenants) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: tenants not found, Integration Setting  will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst integrationSettings: IntegrationSetting[] = [];\r\n\r\n\tfor (const tenant of tenants) {\r\n\t\tconst integrationTenants = await connection.manager.find(\r\n\t\t\tIntegrationTenant,\r\n\t\t\t{\r\n\t\t\t\twhere: [{ tenant: tenant }]\r\n\t\t\t}\r\n\t\t);\r\n\t\tconst organizations = await connection.manager.find(Organization, {\r\n\t\t\twhere: [{ tenant: tenant }]\r\n\t\t});\r\n\t\tfor (const integrationTenant of integrationTenants) {\r\n\t\t\tconst integrationSetting = new IntegrationSetting();\r\n\t\t\tintegrationSetting.integration = integrationTenant;\r\n\t\t\tintegrationSetting.organization = faker.random.arrayElement(\r\n\t\t\t\torganizations\r\n\t\t\t);\r\n\t\t\tintegrationSetting.tenant = tenant;\r\n\t\t\t//todo: need to understand real values here\r\n\t\t\tintegrationSetting.settingsName =\r\n\t\t\t\t'Setting-' + faker.random.number(40);\r\n\t\t\tintegrationSetting.settingsValue = faker.name.jobArea();\r\n\t\t\tintegrationSettings.push(integrationSetting);\r\n\t\t}\r\n\t}\r\n\r\n\tawait connection.manager.save(integrationSettings);\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { Repository } from 'typeorm';\r\nimport { IntegrationSetting } from './integration-setting.entity';\r\nimport { CrudService } from '../core';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\n\r\n@Injectable()\r\nexport class IntegrationSettingService extends CrudService<IntegrationSetting> {\r\n\tconstructor(\r\n\t\t@InjectRepository(IntegrationSetting)\r\n\t\treadonly repository: Repository<IntegrationSetting>\r\n\t) {\r\n\t\tsuper(repository);\r\n\t}\r\n\r\n\tasync updateIntegrationSettings(updateIntegrationSettingsDto) {}\r\n}\r\n","import { IntegrationTenantCreateHandler } from './integration-tenant.create.handler';\r\nimport { IntegrationTenantGetHandler } from './integration-tenant.get.handler';\r\n\r\nexport const CommandHandlers = [\r\n\tIntegrationTenantCreateHandler,\r\n\tIntegrationTenantGetHandler\r\n];\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { IntegrationTenantCreateCommand } from '../../../integration-tenant/commands/integration-tenant.create.command';\r\nimport { IntegrationTenantService } from '../../../integration-tenant/integration-tenant.service';\r\nimport { IntegrationTenant } from '../../../integration-tenant/integration-tenant.entity';\r\nimport { RequestContext } from '../../../core/context';\r\n\r\n@CommandHandler(IntegrationTenantCreateCommand)\r\nexport class IntegrationTenantCreateHandler\r\n\timplements ICommandHandler<IntegrationTenantCreateCommand> {\r\n\tconstructor(private _integrationTenantService: IntegrationTenantService) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: IntegrationTenantCreateCommand\r\n\t): Promise<IntegrationTenant> {\r\n\t\tconst { input } = command;\r\n\t\tconst user = RequestContext.currentUser();\r\n\t\tconst { tenantId } = user;\r\n\r\n\t\treturn await this._integrationTenantService.addIntegration({\r\n\t\t\t...input,\r\n\t\t\ttenantId\r\n\t\t});\r\n\t}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { IntegrationTenantGetCommand } from '../../../integration-tenant/commands/integration-tenant.get.command';\r\nimport { IntegrationTenantService } from '../../../integration-tenant/integration-tenant.service';\r\nimport { IntegrationTenant } from '../../../integration-tenant/integration-tenant.entity';\r\n\r\n@CommandHandler(IntegrationTenantGetCommand)\r\nexport class IntegrationTenantGetHandler\r\n\timplements ICommandHandler<IntegrationTenantGetCommand> {\r\n\tconstructor(private _integrationTenantService: IntegrationTenantService) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: IntegrationTenantGetCommand\r\n\t): Promise<IntegrationTenant> {\r\n\t\tconst { input } = command;\r\n\t\treturn await this._integrationTenantService.findOne(input);\r\n\t}\r\n}\r\n","export * from './integration-tenant.create.command';\r\nexport * from './integration-tenant.get.command';\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { IIntegrationTenantCreateDto } from '@gauzy/models';\r\n\r\nexport class IntegrationTenantCreateCommand implements ICommand {\r\n\tstatic readonly type = '[Integration] Create Integration';\r\n\r\n\tconstructor(public readonly input: IIntegrationTenantCreateDto) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { FindOneOptions } from 'typeorm';\r\n\r\nexport class IntegrationTenantGetCommand implements ICommand {\r\n\tstatic readonly type = '[Integration] Get Integration';\r\n\r\n\tconstructor(public readonly input: FindOneOptions) {}\r\n}\r\n","import {\r\n\tController,\r\n\tHttpStatus,\r\n\tGet,\r\n\tQuery,\r\n\tParam,\r\n\tUseGuards\r\n} from '@nestjs/common';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { ApiTags } from '@nestjs/swagger';\r\nimport { ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport { CrudController } from '../core';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\nimport { IntegrationTenant } from './integration-tenant.entity';\r\nimport { IntegrationTenantService } from './integration-tenant.service';\r\n\r\n@ApiTags('IntegrationTenant')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class IntegrationTenantController extends CrudController<\r\n\tIntegrationTenant\r\n> {\r\n\tconstructor(private _integrationTenantService: IntegrationTenantService) {\r\n\t\tsuper(_integrationTenantService);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find IntegrationTenant.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found policies',\r\n\t\ttype: IntegrationTenant\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get(':id')\r\n\tasync getById(\r\n\t\t@Param('id') id,\r\n\t\t@Query('data') data: string\r\n\t): Promise<IntegrationTenant> {\r\n\t\tconst { relations } = JSON.parse(data);\r\n\r\n\t\treturn this._integrationTenantService.findOne(id, {\r\n\t\t\trelations\r\n\t\t});\r\n\t}\r\n}\r\n","import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\r\nimport { Column, Entity, JoinColumn, OneToMany } from 'typeorm';\r\nimport { IIntegrationTenant } from '@gauzy/models';\r\nimport { IntegrationEntitySetting } from '../integration-entity-setting/integration-entity-setting.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('integration_tenant')\r\nexport class IntegrationTenant\r\n\textends TenantOrganizationBase\r\n\timplements IIntegrationTenant {\r\n\t@ApiPropertyOptional({ type: IntegrationEntitySetting, isArray: true })\r\n\t@OneToMany(\r\n\t\t(type) => IntegrationEntitySetting,\r\n\t\t(setting) => setting.integration\r\n\t)\r\n\t@JoinColumn()\r\n\tentitySettings?: IntegrationEntitySetting[];\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column({ nullable: false })\r\n\tname: string;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { IntegrationTenantController } from './integration-tenant.controller';\r\nimport { IntegrationTenantService } from './integration-tenant.service';\r\nimport { IntegrationTenant } from './integration-tenant.entity';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { TenantService } from '../tenant/tenant.service';\r\nimport { IntegrationSettingService } from '../integration-setting/integration-setting.service';\r\nimport { IntegrationSetting } from '../integration-setting/integration-setting.entity';\r\nimport { IntegrationEntitySettingService } from '../integration-entity-setting/integration-entity-setting.service';\r\nimport { IntegrationEntitySetting } from '../integration-entity-setting/integration-entity-setting.entity';\r\nimport { RoleModule } from '../role/role.module';\r\nimport { UserModule } from '../user/user.module';\r\nimport { RolePermissionsModule } from '../role-permissions/role-permissions.module';\r\nimport { CqrsModule } from '@nestjs/cqrs';\r\nimport { CommandHandlers } from './commands/handlers';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([\r\n\t\t\tIntegrationTenant,\r\n\t\t\tIntegrationSetting,\r\n\t\t\tTenant,\r\n\t\t\tIntegrationEntitySetting\r\n\t\t]),\r\n\t\tRoleModule,\r\n\t\tUserModule,\r\n\t\tRolePermissionsModule,\r\n\t\tCqrsModule,\r\n\t\tTenantModule\r\n\t],\r\n\texports: [\r\n\t\tIntegrationTenantService,\r\n\t\tIntegrationSettingService,\r\n\t\tTenantService,\r\n\t\tIntegrationEntitySettingService\r\n\t],\r\n\tcontrollers: [IntegrationTenantController],\r\n\tproviders: [\r\n\t\tIntegrationTenantService,\r\n\t\tIntegrationSettingService,\r\n\t\tTenantService,\r\n\t\tIntegrationEntitySettingService,\r\n\t\t...CommandHandlers\r\n\t]\r\n})\r\nexport class IntegrationTenantModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { IntegrationTenant } from './integration-tenant.entity';\r\nimport * as faker from 'faker';\r\nimport { Organization } from '../organization/organization.entity';\r\n\r\nexport const createRandomIntegrationTenant = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[]\r\n): Promise<IntegrationTenant[]> => {\r\n\tif (!tenants) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: tenants not found, Integration Tenant  will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst integrationTenants: IntegrationTenant[] = [];\r\n\r\n\tfor (const tenant of tenants) {\r\n\t\tconst organizations = await connection.manager.find(Organization, {\r\n\t\t\twhere: [{ tenant: tenant }]\r\n\t\t});\r\n\t\tconst integrationTenant = new IntegrationTenant();\r\n\t\t//todo:change name with some real values;\r\n\t\tintegrationTenant.name = faker.company.companyName();\r\n\t\tintegrationTenant.entitySettings = [];\r\n\t\tintegrationTenant.tenant = tenant;\r\n\t\tintegrationTenant.organization = faker.random.arrayElement(\r\n\t\t\torganizations\r\n\t\t);\r\n\r\n\t\tintegrationTenants.push(integrationTenant);\r\n\t}\r\n\r\n\tawait connection.manager.save(integrationTenants);\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { Repository } from 'typeorm';\r\nimport { CrudService } from '../core';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { IntegrationTenant } from './integration-tenant.entity';\r\nimport { TenantService } from '../tenant/tenant.service';\r\nimport { IntegrationSettingService } from '../integration-setting/integration-setting.service';\r\n\r\n@Injectable()\r\nexport class IntegrationTenantService extends CrudService<IntegrationTenant> {\r\n\tconstructor(\r\n\t\t@InjectRepository(IntegrationTenant)\r\n\t\treadonly repository: Repository<IntegrationTenant>,\r\n\t\tprivate _tenantService: TenantService,\r\n\t\tprivate _integrationSettingService: IntegrationSettingService\r\n\t) {\r\n\t\tsuper(repository);\r\n\t}\r\n\r\n\tasync addIntegration(createIntegrationDto): Promise<IntegrationTenant> {\r\n\t\tconst { tenantId, organizationId } = createIntegrationDto;\r\n\t\tconst { record: tenant } = await this._tenantService.findOneOrFail(\r\n\t\t\ttenantId\r\n\t\t);\r\n\t\tconst integration = await this.create({\r\n\t\t\ttenant,\r\n\t\t\torganizationId,\r\n\t\t\tname: createIntegrationDto.name,\r\n\t\t\tentitySettings: createIntegrationDto.entitySettings\r\n\t\t});\r\n\t\tconst settingsDto = createIntegrationDto.settings.map((setting) => ({\r\n\t\t\t...setting,\r\n\t\t\tintegration,\r\n\t\t\ttenantId\r\n\t\t}));\r\n\r\n\t\tawait this._integrationSettingService.create(settingsDto);\r\n\t\treturn integration;\r\n\t}\r\n\r\n\tasync updateIntegration(updateIntegrationDto) {}\r\n}\r\n","import { IntegrationTypeGetHandler } from './integration-type.get.handler';\r\nimport { IntegrationGetHandler } from './integration.get.handler';\r\n\r\nexport const CommandHandlers = [\r\n\tIntegrationTypeGetHandler,\r\n\tIntegrationGetHandler\r\n];\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { IntegrationTypeGetCommand } from '..';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { IntegrationType } from '../../integration-type.entity';\r\nimport { Repository } from 'typeorm';\r\n\r\n@CommandHandler(IntegrationTypeGetCommand)\r\nexport class IntegrationTypeGetHandler\r\n\timplements ICommandHandler<IntegrationTypeGetCommand> {\r\n\tconstructor(\r\n\t\t@InjectRepository(IntegrationType)\r\n\t\treadonly repository: Repository<IntegrationType>\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: IntegrationTypeGetCommand\r\n\t): Promise<IntegrationType[]> {\r\n\t\treturn await this.repository.find({\r\n\t\t\torder: {\r\n\t\t\t\torder: 'ASC'\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { IntegrationGetCommand } from '..';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { Integration } from '../../integration.entity';\r\n\r\n@CommandHandler(IntegrationGetCommand)\r\nexport class IntegrationGetHandler\r\n\timplements ICommandHandler<IntegrationGetCommand> {\r\n\tconstructor(\r\n\t\t@InjectRepository(Integration)\r\n\t\treadonly repository: Repository<Integration>\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: IntegrationGetCommand\r\n\t): Promise<Integration[]> {\r\n\t\tconst { input } = command;\r\n\r\n\t\tconst query = this.repository.createQueryBuilder('integration');\r\n\t\tquery\r\n\t\t\t.leftJoinAndSelect(\r\n\t\t\t\t'integration.integrationTypes',\r\n\t\t\t\t'integrationTypes'\r\n\t\t\t)\r\n\t\t\t.where('\"integrationTypes\".\"id\" = :id', {\r\n\t\t\t\tid: input.integrationTypeId\r\n\t\t\t})\r\n\t\t\t.andWhere('LOWER(integration.name) LIKE :name', {\r\n\t\t\t\tname: `${input.searchQuery.toLowerCase()}%`\r\n\t\t\t});\r\n\r\n\t\tif (input['filter'] === 'true') {\r\n\t\t\tquery.andWhere('integration.isPaid = :isPaid', {\r\n\t\t\t\tisPaid: true\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (input['filter'] === 'false') {\r\n\t\t\tquery.andWhere('integration.isPaid = :isPaid', {\r\n\t\t\t\tisPaid: false\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn await query.orderBy('integration.order', 'ASC').getMany();\r\n\t}\r\n}\r\n","export * from './integration-type.get.command';\r\nexport * from './integration.get.command';\r\n","import { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class IntegrationTypeGetCommand implements ICommand {\r\n\tstatic readonly type = '[Integration] Get Integration Types';\r\n\r\n\tconstructor() {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { IIntegrationFilter } from '@gauzy/models';\r\n\r\nexport class IntegrationGetCommand implements ICommand {\r\n\tstatic readonly type = '[Integration] Get Integrations';\r\n\r\n\tconstructor(public readonly input: IIntegrationFilter) {}\r\n}\r\n","import { ApiProperty } from '@nestjs/swagger';\r\nimport { Column, Entity } from 'typeorm';\r\nimport { IIntegrationType } from '@gauzy/models';\r\nimport { Base } from '../core/entities/base';\r\n@Entity('integration_type')\r\nexport class IntegrationType extends Base implements IIntegrationType {\r\n\t@ApiProperty({ type: String })\r\n\t@Column({ nullable: false })\r\n\tname: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column({ nullable: false })\r\n\tgroupName: string;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@Column({ nullable: false })\r\n\torder: number;\r\n}\r\n","import { Connection } from 'typeorm';\r\nimport { IntegrationType } from './integration-type.entity';\r\nimport {\r\n\tIntegrationTypeGroupEnum,\r\n\tIntegrationTypeNameEnum\r\n} from '@gauzy/models';\r\n\r\nconst DEFAULT_INTEGRATION_TYPES = [\r\n\t{\r\n\t\tname: IntegrationTypeNameEnum.ALL_INTEGRATIONS,\r\n\t\tgroupName: IntegrationTypeGroupEnum.FEATURED,\r\n\t\torder: 1\r\n\t},\r\n\t{\r\n\t\tname: IntegrationTypeNameEnum.FOR_SALES_TEAMS,\r\n\t\tgroupName: IntegrationTypeGroupEnum.FEATURED,\r\n\t\torder: 1\r\n\t},\r\n\t{\r\n\t\tname: IntegrationTypeNameEnum.FOR_ACCOUNTANTS,\r\n\t\tgroupName: IntegrationTypeGroupEnum.FEATURED,\r\n\t\torder: 1\r\n\t},\r\n\t{\r\n\t\tname: IntegrationTypeNameEnum.FOR_SUPPORT_TEAMS,\r\n\t\tgroupName: IntegrationTypeGroupEnum.FEATURED,\r\n\t\torder: 1\r\n\t},\r\n\t{\r\n\t\tname: IntegrationTypeNameEnum.CRM,\r\n\t\tgroupName: IntegrationTypeGroupEnum.CATEGORIES,\r\n\t\torder: 2\r\n\t},\r\n\t{\r\n\t\tname: IntegrationTypeNameEnum.SCHEDULING,\r\n\t\tgroupName: IntegrationTypeGroupEnum.CATEGORIES,\r\n\t\torder: 2\r\n\t},\r\n\t{\r\n\t\tname: IntegrationTypeNameEnum.TOOLS,\r\n\t\tgroupName: IntegrationTypeGroupEnum.CATEGORIES,\r\n\t\torder: 2\r\n\t}\r\n];\r\n\r\nexport const createDefaultIntegrationTypes = async (\r\n\tconnection: Connection\r\n): Promise<IntegrationType[]> => {\r\n\tconst integrationTypes = DEFAULT_INTEGRATION_TYPES.map(\r\n\t\t({ name, groupName, order }) => {\r\n\t\t\tconst entity = new IntegrationType();\r\n\t\t\tentity.name = name;\r\n\t\t\tentity.groupName = groupName;\r\n\t\t\tentity.order = order;\r\n\t\t\treturn entity;\r\n\t\t}\r\n\t);\r\n\treturn await insertIntegrationTypes(connection, integrationTypes);\r\n};\r\n\r\nconst insertIntegrationTypes = async (\r\n\tconnection: Connection,\r\n\tintegrationTypes: IntegrationType[]\r\n): Promise<IntegrationType[]> =>\r\n\tawait connection.manager.save(integrationTypes);\r\n","import {\r\n\tController,\r\n\tHttpStatus,\r\n\tGet,\r\n\tQuery,\r\n\tUseGuards,\r\n\tParam\r\n} from '@nestjs/common';\r\nimport { CrudController } from '../core';\r\nimport { Integration } from './integration.entity';\r\nimport { IntegrationService } from './integration.service';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { IntegrationType } from './integration-type.entity';\r\nimport { ApiResponse, ApiOperation, ApiTags } from '@nestjs/swagger';\r\nimport { CommandBus } from '@nestjs/cqrs';\r\nimport { IntegrationTypeGetCommand, IntegrationGetCommand } from './commands';\r\nimport { IntegrationEnum } from '@gauzy/models';\r\n\r\n@ApiTags('Integrations')\r\n@UseGuards(AuthGuard('jwt'))\r\n@Controller()\r\nexport class IntegrationController extends CrudController<Integration> {\r\n\tconstructor(\r\n\t\tprivate _integrationService: IntegrationService,\r\n\t\tprivate _commandBus: CommandBus\r\n\t) {\r\n\t\tsuper(_integrationService);\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find all integration types.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found integration types',\r\n\t\ttype: IntegrationType\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get('/types')\r\n\tasync getIntegrationTypes(): Promise<IntegrationType[]> {\r\n\t\treturn await this._commandBus.execute(new IntegrationTypeGetCommand());\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find all integrations.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found integrations',\r\n\t\ttype: IntegrationType\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get()\r\n\tasync getIntegrations(@Query('filters') filters): Promise<Integration[]> {\r\n\t\tconst integrationFilter = JSON.parse(filters);\r\n\t\treturn await this._commandBus.execute(\r\n\t\t\tnew IntegrationGetCommand(integrationFilter)\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Check integration remember state for tenant user.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Checked state'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription: 'Invalid request'\r\n\t})\r\n\t@Get('check/state/:integration/:organizationId')\r\n\tasync checkRememberState(\r\n\t\t@Param('integration') integration: IntegrationEnum,\r\n\t\t@Param('organizationId') organizationId: string\r\n\t): Promise<any> {\r\n\t\treturn await this._integrationService.checkIntegrationRemeberState(\r\n\t\t\tintegration,\r\n\t\t\torganizationId\r\n\t\t);\r\n\t}\r\n}\r\n","import { ApiProperty } from '@nestjs/swagger';\r\nimport { Column, Entity, ManyToMany, JoinTable } from 'typeorm';\r\nimport { IIntegration, IIntegrationType, ITag } from '@gauzy/models';\r\nimport { IntegrationType } from './integration-type.entity';\r\nimport { IsNumber } from 'class-validator';\r\nimport { Tag } from '../tags/tag.entity';\r\nimport { Base } from '../core/entities/base';\r\n\r\n@Entity('integration')\r\nexport class Integration extends Base implements IIntegration {\r\n\t@ApiProperty({ type: String })\r\n\t@Column({ nullable: false })\r\n\tname: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column({ nullable: true })\r\n\timgSrc: string;\r\n\r\n\t@ApiProperty({ type: Boolean, default: false })\r\n\t@Column({ default: false })\r\n\tisComingSoon?: boolean;\r\n\r\n\t@ApiProperty({ type: Boolean, default: false })\r\n\t@Column({ default: false })\r\n\tisPaid?: boolean;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column({ nullable: true })\r\n\tversion?: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column({ nullable: true })\r\n\tdocUrl?: string;\r\n\r\n\t@ApiProperty({ type: Boolean, default: false })\r\n\t@Column({ default: false })\r\n\tisFreeTrial?: boolean;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@IsNumber()\r\n\t@Column({ default: 0, type: 'numeric' })\r\n\tfreeTrialPeriod?: number;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@Column({ nullable: true })\r\n\torder?: number;\r\n\r\n\t@ManyToMany((type) => IntegrationType)\r\n\t@JoinTable({\r\n\t\tname: 'integration_integration_type'\r\n\t})\r\n\tintegrationTypes?: IIntegrationType[];\r\n\r\n\t@ManyToMany(() => Tag)\r\n\t@JoinTable({\r\n\t\tname: 'tag_integration'\r\n\t})\r\n\ttags?: ITag[];\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { IntegrationType } from './integration-type.entity';\r\nimport { Integration } from './integration.entity';\r\nimport { IntegrationService } from './integration.service';\r\nimport { IntegrationController } from './integration.controller';\r\nimport { CqrsModule } from '@nestjs/cqrs';\r\nimport { CommandHandlers } from './commands/handlers';\r\nimport { IntegrationTenantModule } from '../integration-tenant/integration-tenant.module';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([Integration, IntegrationType]),\r\n\t\tCqrsModule,\r\n\t\tIntegrationTenantModule\r\n\t],\r\n\tcontrollers: [IntegrationController],\r\n\tproviders: [IntegrationService, ...CommandHandlers]\r\n})\r\nexport class IntegrationModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { IIntegration, DEFAULT_INTEGRATIONS } from '@gauzy/models';\r\nimport { IntegrationType } from './integration-type.entity';\r\nimport { Integration } from './integration.entity';\r\n\r\nexport const createDefaultIntegrations = async (\r\n\tconnection: Connection,\r\n\tintegrationTypes: IntegrationType[] | void\r\n): Promise<IIntegration[]> => {\r\n\tif (!integrationTypes) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: integrationTypes not found, DefaultIntegrations will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst integrations: IIntegration[] = [];\r\n\tDEFAULT_INTEGRATIONS.forEach(\r\n\t\t({ name, imgSrc, isComingSoon, integrationTypesMap, order }) => {\r\n\t\t\tconst entity = new Integration();\r\n\t\t\tentity.name = name;\r\n\t\t\tentity.imgSrc = imgSrc;\r\n\t\t\tentity.isComingSoon = isComingSoon;\r\n\t\t\tentity.order = order;\r\n\t\t\tentity.integrationTypes = integrationTypes.filter((it) =>\r\n\t\t\t\tintegrationTypesMap.includes(it.name)\r\n\t\t\t);\r\n\r\n\t\t\tintegrations.push(entity);\r\n\t\t}\r\n\t);\r\n\r\n\treturn insertIntegrations(connection, integrations);\r\n};\r\n\r\nconst insertIntegrations = async (\r\n\tconnection: Connection,\r\n\tintegrations: IIntegration[]\r\n) => await connection.manager.save(integrations);\r\n","import { BadRequestException, Injectable } from '@nestjs/common';\r\nimport { Repository } from 'typeorm';\r\nimport { CrudService } from '../core';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Integration } from './integration.entity';\r\nimport { RequestContext } from '../core/context';\r\nimport { IntegrationTenantService } from '../integration-tenant/integration-tenant.service';\r\nimport { TenantService } from '../tenant/tenant.service';\r\nimport { IntegrationEnum } from '@gauzy/models';\r\n\r\n@Injectable()\r\nexport class IntegrationService extends CrudService<Integration> {\r\n\tconstructor(\r\n\t\t@InjectRepository(Integration)\r\n\t\treadonly repository: Repository<Integration>,\r\n\r\n\t\tprivate readonly _integrationTenantService: IntegrationTenantService,\r\n\t\tprivate readonly _tenantService: TenantService\r\n\t) {\r\n\t\tsuper(repository);\r\n\t}\r\n\r\n\t/*\r\n\t * Check upwork remember state for logged in user\r\n\t */\r\n\tpublic async checkIntegrationRemeberState(\r\n\t\tintegration: IntegrationEnum,\r\n\t\torganizationId: string\r\n\t) {\r\n\t\ttry {\r\n\t\t\tconst user = RequestContext.currentUser();\r\n\t\t\tconst { tenantId } = user;\r\n\t\t\tconst { record: tenant } = await this._tenantService.findOneOrFail(\r\n\t\t\t\ttenantId\r\n\t\t\t);\r\n\t\t\treturn await this._integrationTenantService.findOneOrFail({\r\n\t\t\t\twhere: {\r\n\t\t\t\t\ttenant: tenant,\r\n\t\t\t\t\tname: integration,\r\n\t\t\t\t\torganizationId\r\n\t\t\t\t},\r\n\t\t\t\torder: {\r\n\t\t\t\t\tupdatedAt: 'DESC'\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tthrow new BadRequestException(error);\r\n\t\t}\r\n\t}\r\n}\r\n","import { InviteAcceptEmployeeHandler } from './invite.accept-employee.handler';\r\nimport { InviteAcceptUserHandler } from './invite.accept-user.handler';\r\nimport { InviteResendHandler } from './invite.resend.handler';\r\nimport { InviteOrganizationContactHandler } from './invite.organization-contact.handler';\r\nimport { InviteAcceptOrganizationContactHandler } from './invite.accept-organization-contact.handler';\r\n\r\nexport const CommandHandlers = [\r\n\tInviteAcceptEmployeeHandler,\r\n\tInviteAcceptUserHandler,\r\n\tInviteAcceptOrganizationContactHandler,\r\n\tInviteResendHandler,\r\n\tInviteOrganizationContactHandler\r\n];\r\n","import { IInvite, InviteStatusEnum } from '@gauzy/models';\r\nimport { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { UpdateResult } from 'typeorm';\r\nimport { AuthService } from '../../../auth/auth.service';\r\nimport { getUserDummyImage } from '../../../core';\r\nimport { Employee } from '../../../employee/employee.entity';\r\nimport { EmployeeService } from '../../../employee/employee.service';\r\nimport { OrganizationService } from '../../../organization/organization.service';\r\nimport { OrganizationContactService } from '../../../organization-contact/organization-contact.service';\r\nimport { OrganizationDepartmentService } from '../../../organization-department/organization-department.service';\r\nimport { OrganizationProjectsService } from '../../../organization-projects/organization-projects.service';\r\nimport { InviteService } from '../../invite.service';\r\nimport { InviteAcceptEmployeeCommand } from '../invite.accept-employee.command';\r\n\r\n/**\r\n * Use this command for registering employees.\r\n * This command first registers a user, then creates an employee entry for the organization.\r\n * If the above two steps are successful, it finally sets the invitation status to accepted\r\n */\r\n@CommandHandler(InviteAcceptEmployeeCommand)\r\nexport class InviteAcceptEmployeeHandler\r\n\timplements ICommandHandler<InviteAcceptEmployeeCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly inviteService: InviteService,\r\n\t\tprivate readonly employeeService: EmployeeService,\r\n\t\tprivate readonly organizationService: OrganizationService,\r\n\t\tprivate readonly organizationProjectService: OrganizationProjectsService,\r\n\t\tprivate readonly organizationContactService: OrganizationContactService,\r\n\t\tprivate readonly organizationDepartmentsService: OrganizationDepartmentService,\r\n\t\tprivate readonly authService: AuthService\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: InviteAcceptEmployeeCommand\r\n\t): Promise<UpdateResult | IInvite> {\r\n\t\tconst { input, languageCode } = command;\r\n\r\n\t\tconst invite = await this.inviteService.findOne({\r\n\t\t\twhere: { id: input.inviteId },\r\n\t\t\trelations: [\r\n\t\t\t\t'projects',\r\n\t\t\t\t'organizationContact',\r\n\t\t\t\t'departments',\r\n\t\t\t\t'projects.members',\r\n\t\t\t\t'organizationContact.members',\r\n\t\t\t\t'departments.members'\r\n\t\t\t]\r\n\t\t});\r\n\r\n\t\tif (!invite) {\r\n\t\t\tthrow Error('Invite does not exist');\r\n\t\t}\r\n\t\tconst organization = await this.organizationService.findOne(\r\n\t\t\tinput.organization.id\r\n\t\t);\r\n\t\tif (!organization.invitesAllowed) {\r\n\t\t\tthrow Error('Organization no longer allows invites');\r\n\t\t}\r\n\r\n\t\tif (!input.user.imageUrl) {\r\n\t\t\tinput.user.imageUrl = getUserDummyImage(input.user);\r\n\t\t}\r\n\r\n\t\tconst user = await this.authService.register(\r\n\t\t\t{\r\n\t\t\t\t...input,\r\n\t\t\t\tuser: {\r\n\t\t\t\t\t...input.user,\r\n\t\t\t\t\ttenant: {\r\n\t\t\t\t\t\tid: organization.tenantId\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\torganizationId: input.organization.id\r\n\t\t\t},\r\n\t\t\tlanguageCode\r\n\t\t);\r\n\r\n\t\tconst employee = await this.employeeService.create({\r\n\t\t\tuser,\r\n\t\t\torganization: input.organization,\r\n\t\t\ttenant: {\r\n\t\t\t\tid: organization.tenantId\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.updateEmployeeMemberships(invite, employee);\r\n\r\n\t\treturn await this.inviteService.update(input.inviteId, {\r\n\t\t\tstatus: InviteStatusEnum.ACCEPTED\r\n\t\t});\r\n\t}\r\n\r\n\tupdateEmployeeMemberships = (invite: IInvite, employee: Employee) => {\r\n\t\t//Update project members\r\n\t\tif (invite.projects)\r\n\t\t\tinvite.projects.forEach((project) => {\r\n\t\t\t\tlet members = project.members || [];\r\n\t\t\t\tmembers = [...members, employee];\r\n\t\t\t\t//This will call save() on the project (and not really create a new organization project)\r\n\t\t\t\tthis.organizationProjectService.create({\r\n\t\t\t\t\t...project,\r\n\t\t\t\t\tmembers\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t//Update organization Contacts members\r\n\t\tinvite.organizationContacts.forEach((organizationContact) => {\r\n\t\t\tlet members = organizationContact.members || [];\r\n\t\t\tmembers = [...members, employee];\r\n\t\t\t//This will call save() on the organizationContacts (and not really create a new organization Contacts)\r\n\t\t\tthis.organizationContactService.create({\r\n\t\t\t\t...organizationContact,\r\n\t\t\t\tmembers\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\t//Update department members\r\n\t\tinvite.departments.forEach((department) => {\r\n\t\t\tlet members = department.members || [];\r\n\t\t\tmembers = [...members, employee];\r\n\t\t\t//This will call save() on the department (and not really create a new organization department)\r\n\t\t\tthis.organizationDepartmentsService.create({\r\n\t\t\t\t...department,\r\n\t\t\t\tmembers\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n}\r\n","import {\r\n\tInviteStatusEnum,\r\n\tIOrganization,\r\n\tIRole,\r\n\tRolesEnum\r\n} from '@gauzy/models';\r\nimport { CommandBus, CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { UpdateResult } from 'typeorm';\r\nimport { AuthService } from '../../../auth/auth.service';\r\nimport { OrganizationContactService } from '../../../organization-contact/organization-contact.service';\r\nimport { OrganizationService } from '../../../organization/organization.service';\r\nimport { RolePermissionsService } from '../../../role-permissions/role-permissions.service';\r\nimport { TenantRoleBulkCreateCommand } from '../../../role/commands/tenant-role-bulk-create.command';\r\nimport { RoleService } from '../../../role/role.service';\r\nimport { Tenant } from '../../../tenant/tenant.entity';\r\nimport { TenantService } from '../../../tenant/tenant.service';\r\nimport { Invite } from '../../invite.entity';\r\nimport { InviteService } from '../../invite.service';\r\nimport { InviteAcceptOrganizationContactCommand } from '../invite.accept-organization-contact.command';\r\n\r\n@CommandHandler(InviteAcceptOrganizationContactCommand)\r\nexport class InviteAcceptOrganizationContactHandler\r\n\timplements ICommandHandler<InviteAcceptOrganizationContactCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly inviteService: InviteService,\r\n\t\tprivate readonly authService: AuthService,\r\n\t\tprivate readonly organizationService: OrganizationService,\r\n\t\tprivate readonly organizationContactService: OrganizationContactService,\r\n\t\tprivate readonly tenantService: TenantService,\r\n\t\tprivate readonly roleService: RoleService,\r\n\t\tprivate readonly rolePermissionService: RolePermissionsService,\r\n\t\tprivate readonly commandBus: CommandBus\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: InviteAcceptOrganizationContactCommand\r\n\t): Promise<Invite | UpdateResult> {\r\n\t\tconst {\r\n\t\t\tinput: {\r\n\t\t\t\tuser,\r\n\t\t\t\tpassword,\r\n\t\t\t\tcontactOrganization,\r\n\t\t\t\tinviteId,\r\n\t\t\t\toriginalUrl\r\n\t\t\t},\r\n\t\t\tlanguageCode\r\n\t\t} = command;\r\n\r\n\t\t// 1. Create new tenant for the contact\r\n\t\tconst tenant: Tenant = await this.tenantService.create({\r\n\t\t\tname: contactOrganization.name\r\n\t\t});\r\n\r\n\t\t// 2. Create Organization for the contact\r\n\t\tconst contactOrg: IOrganization = await this.organizationService.create(\r\n\t\t\t{\r\n\t\t\t\t...contactOrganization,\r\n\t\t\t\ttenant\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\t// 3. Create Role and Role Permissions for contact\r\n\t\tconst roles = await this.commandBus.execute(\r\n\t\t\tnew TenantRoleBulkCreateCommand([tenant])\r\n\t\t);\r\n\r\n\t\tconst role = await roles.find(\r\n\t\t\t(defaultRole: IRole) => defaultRole.name === RolesEnum.SUPER_ADMIN\r\n\t\t);\r\n\r\n\t\t// 4. Create user account for contact and link role, tenant and organization\r\n\t\tawait this.authService.register(\r\n\t\t\t{\r\n\t\t\t\tuser: { ...user, tenant, role },\r\n\t\t\t\tpassword,\r\n\t\t\t\toriginalUrl,\r\n\t\t\t\torganizationId: contactOrg.id\r\n\t\t\t},\r\n\t\t\tlanguageCode\r\n\t\t);\r\n\r\n\t\t//4. Link newly created contact organization to organization contact invite\r\n\t\tconst { organizationContact } = await this.inviteService.findOne(\r\n\t\t\tinviteId,\r\n\t\t\t{\r\n\t\t\t\trelations: ['organizationContact']\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\t// TODO Make invite and contact as one to one, since an invite is not shared by multiple contacts\r\n\t\tconst organizationContactId = organizationContact[0].id;\r\n\r\n\t\tawait this.organizationContactService.update(organizationContactId, {\r\n\t\t\ttenant: tenant,\r\n\t\t\torganizationId: contactOrg.id,\r\n\t\t\tinviteStatus: InviteStatusEnum.ACCEPTED\r\n\t\t});\r\n\r\n\t\treturn this.inviteService.update(inviteId, {\r\n\t\t\tstatus: InviteStatusEnum.ACCEPTED\r\n\t\t});\r\n\t}\r\n}\r\n","import { IInvite, InviteStatusEnum } from '@gauzy/models';\r\nimport { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { UpdateResult } from 'typeorm';\r\nimport { AuthService } from '../../../auth/auth.service';\r\nimport { InviteService } from '../../invite.service';\r\nimport { InviteAcceptUserCommand } from '../invite.accept-user.command';\r\nimport { getUserDummyImage } from '../../../core';\r\nimport { OrganizationService } from '../../../organization/organization.service';\r\n\r\n/**\r\n * Use this command for registering all non-employee users.\r\n * This command first registers a user, then creates a user_organization relation.\r\n * If the above two steps are successful, it finally sets the invitation status to accepted\r\n */\r\n@CommandHandler(InviteAcceptUserCommand)\r\nexport class InviteAcceptUserHandler\r\n\timplements ICommandHandler<InviteAcceptUserCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly inviteService: InviteService,\r\n\t\tprivate readonly authService: AuthService,\r\n\t\tprivate readonly organizationService: OrganizationService\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: InviteAcceptUserCommand\r\n\t): Promise<UpdateResult | IInvite> {\r\n\t\tconst { input, languageCode } = command;\r\n\r\n\t\tconst organization = await this.organizationService.findOne(\r\n\t\t\tinput.organization.id,\r\n\t\t\t{ relations: ['tenant'] }\r\n\t\t);\r\n\r\n\t\tif (!input.user.imageUrl) {\r\n\t\t\tinput.user.imageUrl = getUserDummyImage(input.user);\r\n\t\t}\r\n\r\n\t\tawait this.authService.register(\r\n\t\t\t{\r\n\t\t\t\t...input,\r\n\t\t\t\tuser: {\r\n\t\t\t\t\t...input.user,\r\n\t\t\t\t\ttenant: organization.tenant\r\n\t\t\t\t},\r\n\t\t\t\torganizationId: organization.id\r\n\t\t\t},\r\n\t\t\tlanguageCode\r\n\t\t);\r\n\r\n\t\treturn await this.inviteService.update(input.inviteId, {\r\n\t\t\tstatus: InviteStatusEnum.ACCEPTED\r\n\t\t});\r\n\t}\r\n}\r\n","import {\r\n\tIOrganizationContact,\r\n\tContactOrganizationInviteStatus,\r\n\tRolesEnum\r\n} from '@gauzy/models';\r\nimport { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { User } from '../../../user/user.entity';\r\nimport { UserService } from '../../../user/user.service';\r\nimport { InternalServerErrorException } from '@nestjs/common';\r\nimport { InviteOrganizationContactCommand } from '../invite.organization-contact.command';\r\nimport { OrganizationContactService } from '../../../organization-contact/organization-contact.service';\r\nimport { InviteService } from '../../invite.service';\r\nimport { RoleService } from '../../../role/role.service';\r\nimport { RequestContext } from '../../../core/context';\r\n\r\n/**\r\n * Sends an invitation email to the organization organizationContact's primaryEmail\r\n */\r\n@CommandHandler(InviteOrganizationContactCommand)\r\nexport class InviteOrganizationContactHandler\r\n\timplements ICommandHandler<InviteOrganizationContactCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly organizationContactService: OrganizationContactService,\r\n\t\tprivate readonly inviteService: InviteService,\r\n\t\tprivate readonly userService: UserService,\r\n\t\tprivate readonly roleService: RoleService\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: InviteOrganizationContactCommand\r\n\t): Promise<IOrganizationContact> {\r\n\t\tconst {\r\n\t\t\tinput: { id, originalUrl, inviterUser, languageCode }\r\n\t\t} = command;\r\n\r\n\t\tconst organizationContact: IOrganizationContact = await this.organizationContactService.findOne(\r\n\t\t\tid\r\n\t\t);\r\n\r\n\t\tif (!organizationContact.primaryEmail) {\r\n\t\t\tthrow new InternalServerErrorException('No Primary Email');\r\n\t\t}\r\n\r\n\t\tconst alreadyExists = await this.userExistsForSameTenant(\r\n\t\t\torganizationContact.primaryEmail,\r\n\t\t\tinviterUser.tenantId\r\n\t\t);\r\n\r\n\t\tif (alreadyExists) {\r\n\t\t\tthrow new InternalServerErrorException(\r\n\t\t\t\t'Contact email already exists in the account as a user'\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tconst { id: roleId } = await this.roleService.findOne({\r\n\t\t\twhere: { name: RolesEnum.VIEWER }\r\n\t\t});\r\n\r\n\t\tthis.inviteService.createOrganizationContactInvite({\r\n\t\t\temailId: organizationContact.primaryEmail,\r\n\t\t\troleId,\r\n\t\t\torganizationContactId: organizationContact.id,\r\n\t\t\torganizationId: organizationContact.organizationId,\r\n\t\t\ttenantId: RequestContext.currentTenantId(),\r\n\t\t\tinvitedById: inviterUser.id,\r\n\t\t\toriginalUrl,\r\n\t\t\tlanguageCode\r\n\t\t});\r\n\r\n\t\tawait this.organizationContactService.update(id, {\r\n\t\t\tinviteStatus: ContactOrganizationInviteStatus.INVITED\r\n\t\t});\r\n\r\n\t\treturn {\r\n\t\t\t...organizationContact,\r\n\t\t\tinviteStatus: ContactOrganizationInviteStatus.INVITED\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * This function is used to make sure we are not sending an invitation email to a user that\r\n\t * exists for the same tenant.\r\n\t *\r\n\t * @param email Email address of the user to check\r\n\t * @param tenantId Tenant id of the contact organization\r\n\t */\r\n\tprivate async userExistsForSameTenant(email, tenantId) {\r\n\t\tlet user: User;\r\n\t\ttry {\r\n\t\t\tuser = await this.userService.getUserByEmail(email);\r\n\t\t} catch (error) {}\r\n\r\n\t\tif (!user) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// TODO: Once tenantId is stored in user properly\r\n\t\t// return user.tenantId === tenantId;\r\n\t\treturn true;\r\n\t}\r\n}\r\n","import { IInvite, InviteStatusEnum } from '@gauzy/models';\r\nimport { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { UpdateResult } from 'typeorm';\r\nimport { InviteService } from '../../invite.service';\r\nimport { InviteResendCommand } from '../invite.resend.command';\r\n\r\n@CommandHandler(InviteResendCommand)\r\nexport class InviteResendHandler\r\n\timplements ICommandHandler<InviteResendCommand> {\r\n\tconstructor(private readonly inviteService: InviteService) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: InviteResendCommand\r\n\t): Promise<UpdateResult | IInvite> {\r\n\t\tconst { input } = command;\r\n\r\n\t\tconst expireDate = new Date();\r\n\t\texpireDate.setDate(expireDate.getDate() + 7);\r\n\r\n\t\treturn await this.inviteService.update(input.id, {\r\n\t\t\tstatus: InviteStatusEnum.INVITED,\r\n\t\t\texpireDate,\r\n\t\t\tinvitedById: input.invitedById\r\n\t\t});\r\n\t}\r\n}\r\n","import { IInviteAcceptInput, LanguagesEnum } from '@gauzy/models';\r\nimport { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class InviteAcceptEmployeeCommand implements ICommand {\r\n\tstatic readonly type = '[Invite] Accept Employee';\r\n\r\n\tconstructor(\r\n\t\tpublic readonly input: IInviteAcceptInput,\r\n\t\tpublic readonly languageCode: LanguagesEnum\r\n\t) {}\r\n}\r\n","import {\r\n\tLanguagesEnum,\r\n\tIOrganizationContactAcceptInviteInput\r\n} from '@gauzy/models';\r\nimport { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class InviteAcceptOrganizationContactCommand implements ICommand {\r\n\tstatic readonly type = '[Invite] Accept Organization Contact';\r\n\r\n\tconstructor(\r\n\t\tpublic readonly input: IOrganizationContactAcceptInviteInput,\r\n\t\tpublic readonly languageCode: LanguagesEnum\r\n\t) {}\r\n}\r\n","import { IInviteAcceptInput, LanguagesEnum } from '@gauzy/models';\r\nimport { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class InviteAcceptUserCommand implements ICommand {\r\n\tstatic readonly type = '[Invite] Accept User';\r\n\r\n\tconstructor(\r\n\t\tpublic readonly input: IInviteAcceptInput,\r\n\t\tpublic readonly languageCode: LanguagesEnum\r\n\t) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { IOrganizationContactInviteInput } from '@gauzy/models';\r\n\r\nexport class InviteOrganizationContactCommand implements ICommand {\r\n\tstatic readonly type = '[OrganizationContact] Invite';\r\n\r\n\tconstructor(public readonly input: IOrganizationContactInviteInput) {}\r\n}\r\n","import { IInviteResendInput } from '@gauzy/models';\r\nimport { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class InviteResendCommand implements ICommand {\r\n\tstatic readonly type = '[Invite] Resend';\r\n\r\n\tconstructor(public readonly input: IInviteResendInput) {}\r\n}\r\n","import { AuthGuard } from '@nestjs/passport';\r\nimport {\r\n\tICreateEmailInvitesInput,\r\n\tICreateEmailInvitesOutput,\r\n\tIInviteAcceptInput,\r\n\tIInviteResendInput,\r\n\tPermissionsEnum,\r\n\tLanguagesEnum,\r\n\tIOrganizationContactAcceptInviteInput\r\n} from '@gauzy/models';\r\nimport {\r\n\tBadRequestException,\r\n\tBody,\r\n\tController,\r\n\tGet,\r\n\tHttpCode,\r\n\tHttpStatus,\r\n\tPost,\r\n\tQuery,\r\n\tUseGuards,\r\n\tDelete,\r\n\tParam,\r\n\tPut,\r\n\tReq\r\n} from '@nestjs/common';\r\nimport { CommandBus } from '@nestjs/cqrs';\r\nimport {\r\n\tApiOperation,\r\n\tApiResponse,\r\n\tApiTags,\r\n\tApiExcludeEndpoint\r\n} from '@nestjs/swagger';\r\nimport { UpdateResult } from 'typeorm';\r\nimport { IPagination } from '../core';\r\nimport { InviteAcceptEmployeeCommand } from './commands/invite.accept-employee.command';\r\nimport { InviteAcceptUserCommand } from './commands/invite.accept-user.command';\r\nimport { InviteOrganizationContactCommand } from './commands/invite.organization-contact.command';\r\nimport { Invite } from './invite.entity';\r\nimport { InviteService } from './invite.service';\r\nimport { InviteResendCommand } from './commands/invite.resend.command';\r\nimport { Permissions } from './../shared/decorators/permissions';\r\nimport { PermissionGuard } from './../shared/guards/auth/permission.guard';\r\nimport { OrganizationContact } from '../organization-contact/organization-contact.entity';\r\nimport { Request } from 'express';\r\nimport { I18nLang } from 'nestjs-i18n';\r\nimport { InviteAcceptOrganizationContactCommand } from './commands/invite.accept-organization-contact.command';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('Invite')\r\n@Controller()\r\nexport class InviteController {\r\n\tconstructor(\r\n\t\tprivate readonly inviteService: InviteService,\r\n\t\tprivate readonly commandBus: CommandBus\r\n\t) {}\r\n\r\n\t@ApiOperation({ summary: 'Create email invites' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully created.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.CREATED)\r\n\t@UseGuards(AuthGuard('jwt'), TenantPermissionGuard, PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_INVITE_EDIT)\r\n\t@Post('/emails')\r\n\tasync createManyWithEmailsId(\r\n\t\t@Body() entity: ICreateEmailInvitesInput,\r\n\t\t@Req() request: Request,\r\n\t\t@I18nLang() languageCode: LanguagesEnum\r\n\t): Promise<ICreateEmailInvitesOutput> {\r\n\t\treturn this.inviteService.createBulk(\r\n\t\t\tentity,\r\n\t\t\trequest.get('Origin'),\r\n\t\t\tlanguageCode\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Get invite.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found invite',\r\n\t\ttype: Invite\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get('validate')\r\n\tasync validateInvite(@Query('data') data: string): Promise<Invite> {\r\n\t\tconst {\r\n\t\t\trelations,\r\n\t\t\tfindInput: { email, token }\r\n\t\t} = JSON.parse(data);\r\n\r\n\t\tif (!email && !token) {\r\n\t\t\tthrow new BadRequestException('Email & Token Mandatory');\r\n\t\t}\r\n\r\n\t\treturn this.inviteService.validate(relations, email, token);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find all invites.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found invites',\r\n\t\ttype: Invite\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@UseGuards(AuthGuard('jwt'), TenantPermissionGuard, PermissionGuard)\r\n\t@Permissions(\r\n\t\tPermissionsEnum.ORG_INVITE_VIEW,\r\n\t\tPermissionsEnum.ORG_INVITE_EDIT\r\n\t)\r\n\t@Get('all')\r\n\tasync findAllInvites(\r\n\t\t@Query('data') data: string\r\n\t): Promise<IPagination<Invite>> {\r\n\t\tconst { relations, findInput } = JSON.parse(data);\r\n\r\n\t\treturn this.inviteService.findAll({\r\n\t\t\twhere: findInput,\r\n\t\t\trelations\r\n\t\t});\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Accept employee invite.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully created.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@Post('employee')\r\n\tasync acceptEmployeeInvite(\r\n\t\t@Body() entity: IInviteAcceptInput,\r\n\t\t@Req() request: Request,\r\n\t\t@I18nLang() languageCode: LanguagesEnum\r\n\t): Promise<UpdateResult | Invite> {\r\n\t\tentity.originalUrl = request.get('Origin');\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew InviteAcceptEmployeeCommand(entity, languageCode)\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Accept user invite.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully created.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@Post('user')\r\n\tasync acceptUserInvite(\r\n\t\t@Body() entity: IInviteAcceptInput,\r\n\t\t@Req() request: Request,\r\n\t\t@I18nLang() languageCode: LanguagesEnum\r\n\t): Promise<UpdateResult | Invite> {\r\n\t\tentity.originalUrl = request.get('Origin');\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew InviteAcceptUserCommand(entity, languageCode)\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Accept organization contact invite.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully created.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@Post('contact')\r\n\tasync acceptOrganizationContactInvite(\r\n\t\t@Body() input: IOrganizationContactAcceptInviteInput,\r\n\t\t@Req() request: Request,\r\n\t\t@I18nLang() languageCode: LanguagesEnum\r\n\t): Promise<any> {\r\n\t\tinput.originalUrl = request.get('Origin');\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew InviteAcceptOrganizationContactCommand(input, languageCode)\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Resend invite.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully created.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@UseGuards(AuthGuard('jwt'), TenantPermissionGuard, PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_INVITE_EDIT)\r\n\t@Post('resend')\r\n\tasync resendInvite(\r\n\t\t@Body() entity: IInviteResendInput\r\n\t): Promise<UpdateResult | Invite> {\r\n\t\treturn this.commandBus.execute(new InviteResendCommand(entity));\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Delete record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NO_CONTENT,\r\n\t\tdescription: 'The record has been successfully deleted'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@UseGuards(AuthGuard('jwt'), TenantPermissionGuard, PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_INVITE_EDIT)\r\n\t@Delete(':id')\r\n\tasync delete(@Param('id') id: string, ...options: any[]): Promise<any> {\r\n\t\treturn this.inviteService.delete(id);\r\n\t}\r\n\r\n\t@ApiExcludeEndpoint()\r\n\t@Put()\r\n\tasync update(@Param('id') id: string, ...options: any[]): Promise<any> {\r\n\t\tthrow new BadRequestException('Invalid route');\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Update an existing record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully edited.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@UseGuards(AuthGuard('jwt'), TenantPermissionGuard, PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_INVITE_EDIT)\r\n\t@Put('organization-contact/:id')\r\n\tasync inviteOrganizationContact(\r\n\t\t@Param('id') id: string,\r\n\t\t@Req() request,\r\n\t\t@I18nLang() languageCode: LanguagesEnum\r\n\t): Promise<OrganizationContact> {\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew InviteOrganizationContactCommand({\r\n\t\t\t\tid,\r\n\t\t\t\toriginalUrl: request.get('Origin'),\r\n\t\t\t\tinviterUser: request.user,\r\n\t\t\t\tlanguageCode\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n}\r\n","import {\r\n\tIInvite,\r\n\tInviteStatusEnum,\r\n\tIOrganizationDepartment,\r\n\tIOrganizationContact,\r\n\tIOrganizationProject,\r\n\tIUser,\r\n\tIRole\r\n} from '@gauzy/models';\r\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\r\nimport { IsDate, IsEmail, IsEnum, IsNotEmpty, IsString } from 'class-validator';\r\nimport {\r\n\tColumn,\r\n\tEntity,\r\n\tIndex,\r\n\tJoinColumn,\r\n\tJoinTable,\r\n\tManyToMany,\r\n\tManyToOne,\r\n\tRelationId\r\n} from 'typeorm';\r\nimport { OrganizationProject } from '../organization-projects/organization-projects.entity';\r\nimport { Role } from '../role/role.entity';\r\nimport { User } from '../user/user.entity';\r\nimport { OrganizationContact } from '../organization-contact/organization-contact.entity';\r\nimport { OrganizationDepartment } from '../organization-department/organization-department.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('invite')\r\nexport class Invite extends TenantOrganizationBase implements IInvite {\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@IsString()\r\n\t@Index({ unique: true })\r\n\t@Column()\r\n\ttoken: string;\r\n\r\n\t@ApiProperty({ type: String, minLength: 3, maxLength: 100 })\r\n\t@IsEmail()\r\n\t@IsNotEmpty()\r\n\t@Index({ unique: true })\r\n\t@Column()\r\n\temail: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@RelationId((invite: Invite) => invite.role)\r\n\t@Column()\r\n\troleId: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@RelationId((invite: Invite) => invite.invitedBy)\r\n\t@Column()\r\n\tinvitedById: string;\r\n\r\n\t@ApiProperty({ type: String, enum: InviteStatusEnum })\r\n\t@IsEnum(InviteStatusEnum)\r\n\t@IsNotEmpty()\r\n\t@Column()\r\n\tstatus: string;\r\n\r\n\t@ApiPropertyOptional({ type: Date })\r\n\t@IsDate()\r\n\t@Column()\r\n\texpireDate: Date;\r\n\r\n\t@ApiPropertyOptional({ type: Role })\r\n\t@ManyToOne((type) => Role, { nullable: true, onDelete: 'CASCADE' })\r\n\t@JoinColumn()\r\n\trole?: IRole;\r\n\r\n\t@ApiPropertyOptional({ type: User })\r\n\t@ManyToOne((type) => User, { nullable: true, onDelete: 'CASCADE' })\r\n\t@JoinColumn()\r\n\tinvitedBy?: IUser;\r\n\r\n\t@ManyToMany((type) => OrganizationProject)\r\n\t@JoinTable({\r\n\t\tname: 'invite_organization_project'\r\n\t})\r\n\tprojects?: IOrganizationProject[];\r\n\r\n\t@ManyToMany((type) => OrganizationContact)\r\n\t@JoinTable({\r\n\t\tname: 'invite_organization_contact'\r\n\t})\r\n\torganizationContact?: IOrganizationContact[];\r\n\r\n\t@ManyToMany((type) => OrganizationDepartment)\r\n\t@JoinTable({\r\n\t\tname: 'invite_organization_department'\r\n\t})\r\n\tdepartments?: IOrganizationDepartment[];\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { CqrsModule } from '@nestjs/cqrs';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { EmailModule } from '../email/email.module';\r\nimport { EmailService } from '../email/email.service';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { EmployeeService } from '../employee/employee.service';\r\nimport { OrganizationContact } from '../organization-contact/organization-contact.entity';\r\nimport { OrganizationContactService } from '../organization-contact/organization-contact.service';\r\nimport { OrganizationDepartment } from '../organization-department/organization-department.entity';\r\nimport { OrganizationDepartmentService } from '../organization-department/organization-department.service';\r\nimport { OrganizationProject } from '../organization-projects/organization-projects.entity';\r\nimport { OrganizationProjectsService } from '../organization-projects/organization-projects.service';\r\nimport { SharedModule } from '../shared';\r\nimport { User } from '../user/user.entity';\r\nimport { UserService } from '../user/user.service';\r\nimport { UserOrganization } from '../user-organization/user-organization.entity';\r\nimport { UserOrganizationService } from '../user-organization/user-organization.services';\r\nimport { CommandHandlers } from './commands/handlers';\r\nimport { InviteController } from './invite.controller';\r\nimport { Invite } from './invite.entity';\r\nimport { InviteService } from './invite.service';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { OrganizationService } from '../organization/organization.service';\r\nimport { Role } from '../role/role.entity';\r\nimport { RoleService } from '../role/role.service';\r\nimport { TenantService } from '../tenant/tenant.service';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { RolePermissionsService } from '../role-permissions/role-permissions.service';\r\nimport { RolePermissions } from '../role-permissions/role-permissions.entity';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([\r\n\t\t\tRole,\r\n\t\t\tInvite,\r\n\t\t\tEmployee,\r\n\t\t\tUser,\r\n\t\t\tUserOrganization,\r\n\t\t\tOrganizationProject,\r\n\t\t\tOrganizationContact,\r\n\t\t\tOrganizationDepartment,\r\n\t\t\tOrganization,\r\n\t\t\tTenant,\r\n\t\t\tRolePermissions\r\n\t\t]),\r\n\t\tSharedModule,\r\n\t\tCqrsModule,\r\n\t\tEmailModule,\r\n\t\tTenantModule\r\n\t],\r\n\tcontrollers: [InviteController],\r\n\tproviders: [\r\n\t\tInviteService,\r\n\t\t...CommandHandlers,\r\n\t\tEmployeeService,\r\n\t\tRoleService,\r\n\t\tUserService,\r\n\t\tAuthService,\r\n\t\tUserOrganizationService,\r\n\t\tEmailService,\r\n\t\tOrganizationProjectsService,\r\n\t\tOrganizationContactService,\r\n\t\tOrganizationDepartmentService,\r\n\t\tOrganizationService,\r\n\t\tTenantService,\r\n\t\tRolePermissionsService\r\n\t],\r\n\texports: [InviteService]\r\n})\r\nexport class InviteModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { Invite } from './invite.entity';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport * as faker from 'faker';\r\nimport { InviteStatusEnum, RolesEnum } from '@gauzy/models';\r\nimport { Role } from '../role/role.entity';\r\nimport { sign } from 'jsonwebtoken';\r\nimport { environment as env } from '@env-api/environment';\r\nimport { User } from '../user/user.entity';\r\nimport * as moment from 'moment';\r\n\r\nexport const createDefaultEmployeeInviteSent = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\torganizations: Organization[],\r\n\tSuperAdmin: User[]\r\n): Promise<any> => {\r\n\tconst totalInvites: Invite[] = [];\r\n\tconst invitationStatus = Object.values(InviteStatusEnum);\r\n\r\n\tconst employeeRole = await connection.getRepository(Role).find({\r\n\t\twhere: [{ tenant: tenant, name: RolesEnum.EMPLOYEE }]\r\n\t});\r\n\tconst candidateRole = await connection.getRepository(Role).find({\r\n\t\twhere: [{ tenant: tenant, name: RolesEnum.CANDIDATE }]\r\n\t});\r\n\torganizations.forEach((org) => {\r\n\t\tfor (let i = 0; i < 10; i++) {\r\n\t\t\tconst invitee = new Invite();\r\n\t\t\tinvitee.email = faker.internet.email();\r\n\t\t\tinvitee.expireDate = faker.date.between(\r\n\t\t\t\tnew Date(),\r\n\t\t\t\tmoment(new Date()).add(30, 'days').toDate()\r\n\t\t\t);\r\n\t\t\tinvitee.invitedBy = faker.random.arrayElement(SuperAdmin);\r\n\t\t\tinvitee.organizationId = org.id;\r\n\t\t\tinvitee.organization = org;\r\n\t\t\tinvitee.role = faker.random.arrayElement([\r\n\t\t\t\temployeeRole[0],\r\n\t\t\t\tcandidateRole[0]\r\n\t\t\t]);\r\n\t\t\tinvitee.status = faker.random.arrayElement(invitationStatus);\r\n\t\t\tinvitee.token = createToken(invitee.email);\r\n\t\t\tinvitee.tenant = tenant;\r\n\t\t\ttotalInvites.push(invitee);\r\n\t\t}\r\n\t});\r\n\tawait connection.manager.save(totalInvites);\r\n};\r\n\r\nexport const createRandomEmployeeInviteSent = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantOrganizationsMap: Map<Tenant, Organization[]>,\r\n\ttenantSuperAdminMap: Map<Tenant, User[]>,\r\n\tnoOfInvitesPerOrganization: number\r\n): Promise<any> => {\r\n\tconst totalInvites: Invite[] = [];\r\n\tconst invitationStatus = Object.values(InviteStatusEnum);\r\n\r\n\tfor (const tenant of tenants) {\r\n\t\tconst employeeRole = await connection.getRepository(Role).find({\r\n\t\t\twhere: [{ tenant: tenant, name: RolesEnum.EMPLOYEE }]\r\n\t\t});\r\n\t\tconst candidateRole = await connection.getRepository(Role).find({\r\n\t\t\twhere: [{ tenant: tenant, name: RolesEnum.CANDIDATE }]\r\n\t\t});\r\n\t\tconst orgs = tenantOrganizationsMap.get(tenant);\r\n\t\tconst admins = tenantSuperAdminMap.get(tenant);\r\n\t\torgs.forEach((org) => {\r\n\t\t\tfor (let i = 0; i < noOfInvitesPerOrganization; i++) {\r\n\t\t\t\tconst invitee = new Invite();\r\n\t\t\t\tinvitee.email = faker.internet.email();\r\n\t\t\t\tinvitee.expireDate = faker.date.between(\r\n\t\t\t\t\tnew Date(),\r\n\t\t\t\t\tmoment(new Date()).add(30, 'days').toDate()\r\n\t\t\t\t);\r\n\t\t\t\tinvitee.invitedBy = faker.random.arrayElement(admins);\r\n\t\t\t\tinvitee.organizationId = org.id;\r\n\t\t\t\tinvitee.organization = org;\r\n\t\t\t\tinvitee.role = faker.random.arrayElement([\r\n\t\t\t\t\temployeeRole[0],\r\n\t\t\t\t\tcandidateRole[0]\r\n\t\t\t\t]);\r\n\t\t\t\tinvitee.status = faker.random.arrayElement(invitationStatus);\r\n\t\t\t\tinvitee.token = createToken(invitee.email);\r\n\t\t\t\tinvitee.tenant = tenant;\r\n\t\t\t\ttotalInvites.push(invitee);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\tawait connection.manager.save(totalInvites);\r\n};\r\n\r\nfunction createToken(email): string {\r\n\tconst token: string = sign({ email }, env.JWT_SECRET, {});\r\n\treturn token;\r\n}\r\n","import { environment as env } from '@env-api/environment';\r\nimport {\r\n\tICreateEmailInvitesInput,\r\n\tICreateEmailInvitesOutput,\r\n\tInviteStatusEnum,\r\n\tIOrganizationProject,\r\n\tIOrganizationContact,\r\n\tIOrganizationDepartment,\r\n\tIUser,\r\n\tICreateOrganizationContactInviteInput,\r\n\tRolesEnum,\r\n\tLanguagesEnum\r\n} from '@gauzy/models';\r\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { sign } from 'jsonwebtoken';\r\nimport { MoreThanOrEqual, Repository } from 'typeorm';\r\nimport { CrudService } from '../core/crud/crud.service';\r\nimport { OrganizationProject } from '../organization-projects/organization-projects.entity';\r\nimport { Invite } from './invite.entity';\r\nimport { OrganizationContact } from '../organization-contact/organization-contact.entity';\r\nimport { OrganizationDepartment } from '../organization-department/organization-department.entity';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { EmailService } from '../email/email.service';\r\nimport { Role } from '../role/role.entity';\r\nimport { addDays } from 'date-fns';\r\nimport { UserService } from '../user/user.service';\r\n\r\n@Injectable()\r\nexport class InviteService extends CrudService<Invite> {\r\n\tconstructor(\r\n\t\t@InjectRepository(Invite) inviteRepository: Repository<Invite>,\r\n\t\t@InjectRepository(OrganizationProject)\r\n\t\tprivate readonly organizationProjectsRepository: Repository<\r\n\t\t\tOrganizationProject\r\n\t\t>,\r\n\r\n\t\t@InjectRepository(OrganizationContact)\r\n\t\tprivate readonly organizationContactRepository: Repository<\r\n\t\t\tOrganizationContact\r\n\t\t>,\r\n\r\n\t\t@InjectRepository(OrganizationDepartment)\r\n\t\tprivate readonly organizationDepartmentRepository: Repository<\r\n\t\t\tOrganizationDepartment\r\n\t\t>,\r\n\t\t@InjectRepository(Organization)\r\n\t\tprivate readonly organizationRepository: Repository<Organization>,\r\n\t\t@InjectRepository(Role)\r\n\t\tprivate readonly roleRepository: Repository<Role>,\r\n\t\tprivate readonly emailService: EmailService,\r\n\t\tprivate readonly userService: UserService\r\n\t) {\r\n\t\tsuper(inviteRepository);\r\n\t}\r\n\r\n\t// async sendInvitationMail(email: string, token: string): Promise<any> {\r\n\t// \tconst url = `${env.host}:4200/#/auth/accept-invite?email=${email}&token=${token}`;\r\n\r\n\t// \tconst testAccount = await nodemailer.createTestAccount();\r\n\r\n\t// \tconst transporter = nodemailer.createTransport({\r\n\t// \t\thost: 'smtp.ethereal.email',\r\n\t// \t\tport: 587,\r\n\t// \t\tsecure: false, // true for 465, false for other ports\r\n\t// \t\tauth: {\r\n\t// \t\t\tuser: testAccount.user,\r\n\t// \t\t\tpass: testAccount.pass\r\n\t// \t\t}\r\n\t// \t});\r\n\r\n\t// \tconst info = await transporter.sendMail({\r\n\t// \t\tfrom: 'Gauzy',\r\n\t// \t\tto: email,\r\n\t// \t\tsubject: 'Invitation',\r\n\t// \t\ttext: 'Invitation to Gauzy',\r\n\t// \t\thtml:\r\n\t// \t\t\t'Hello! <br><br> You have been invited to Gauzy<br><br>To accept your invitation & create your account<br><br>' +\r\n\t// \t\t\t'<a href=' +\r\n\t// \t\t\turl +\r\n\t// \t\t\t'>Click here</a>'\r\n\t// \t});\r\n\r\n\t// \tconsole.log('Message sent: %s', info.messageId);\r\n\t// \tconsole.log('Preview URL: %s', nodemailer.getTestMessageUrl(info));\r\n\t// }\r\n\r\n\t/**\r\n\t * Creates all invites. If an email Id already exists, this function will first delete\r\n\t * the existing invite and then create a new row with the email address.\r\n\t * @param emailInvites Emails Ids to send invite\r\n\t */\r\n\tasync createBulk(\r\n\t\temailInvites: ICreateEmailInvitesInput,\r\n\t\toriginUrl: string,\r\n\t\tlanguageCode: LanguagesEnum\r\n\t): Promise<ICreateEmailInvitesOutput> {\r\n\t\tconst invites: Invite[] = [];\r\n\r\n\t\tconst {\r\n\t\t\temailIds,\r\n\t\t\troleId,\r\n\t\t\tprojectIds,\r\n\t\t\torganizationContactIds,\r\n\t\t\tdepartmentIds,\r\n\t\t\torganizationId,\r\n\t\t\ttenantId,\r\n\t\t\tinvitedById\r\n\t\t} = emailInvites;\r\n\r\n\t\tconst projects: IOrganizationProject[] = await this.organizationProjectsRepository.findByIds(\r\n\t\t\tprojectIds || []\r\n\t\t);\r\n\r\n\t\tconst departments: IOrganizationDepartment[] = await this.organizationDepartmentRepository.findByIds(\r\n\t\t\tdepartmentIds || []\r\n\t\t);\r\n\r\n\t\tconst organizationContacts: IOrganizationContact[] = await this.organizationContactRepository.findByIds(\r\n\t\t\torganizationContactIds || []\r\n\t\t);\r\n\r\n\t\tconst organization: Organization = await this.organizationRepository.findOne(\r\n\t\t\torganizationId\r\n\t\t);\r\n\r\n\t\tconst role: Role = await this.roleRepository.findOne(roleId);\r\n\r\n\t\tconst user = await this.userService.findOne(invitedById, {\r\n\t\t\trelations: ['role']\r\n\t\t});\r\n\r\n\t\tif (role.name === RolesEnum.SUPER_ADMIN) {\r\n\t\t\tconst { role: inviterRole } = user;\r\n\r\n\t\t\tif (inviterRole.name !== RolesEnum.SUPER_ADMIN)\r\n\t\t\t\tthrow new UnauthorizedException();\r\n\t\t}\r\n\r\n\t\tconst inviteExpiryPeriod =\r\n\t\t\torganization && organization.inviteExpiryPeriod\r\n\t\t\t\t? organization.inviteExpiryPeriod\r\n\t\t\t\t: 7;\r\n\r\n\t\tconst expireDate = addDays(new Date(), inviteExpiryPeriod);\r\n\r\n\t\tconst existingInvites = (\r\n\t\t\tawait this.repository\r\n\t\t\t\t.createQueryBuilder('invite')\r\n\t\t\t\t.select('invite.email')\r\n\t\t\t\t.where('invite.email IN (:...emails)', { emails: emailIds })\r\n\t\t\t\t.getMany()\r\n\t\t).map((invite) => invite.email);\r\n\r\n\t\tconst invitesToCreate = emailIds.filter(\r\n\t\t\t(email) => existingInvites.indexOf(email) < 0\r\n\t\t);\r\n\r\n\t\tfor (let i = 0; i < invitesToCreate.length; i++) {\r\n\t\t\tconst email = invitesToCreate[i];\r\n\t\t\tconst token = this.createToken(email);\r\n\r\n\t\t\tconst invite = new Invite();\r\n\t\t\tinvite.token = token;\r\n\t\t\tinvite.email = email;\r\n\t\t\tinvite.roleId = roleId;\r\n\t\t\tinvite.organizationId = organizationId;\r\n\t\t\tinvite.tenantId = tenantId;\r\n\t\t\tinvite.invitedById = invitedById;\r\n\t\t\tinvite.status = InviteStatusEnum.INVITED;\r\n\t\t\tinvite.expireDate = expireDate;\r\n\t\t\tinvite.projects = projects;\r\n\t\t\tinvite.departments = departments;\r\n\t\t\tinvite.organizationContact = organizationContacts;\r\n\r\n\t\t\tinvites.push(invite);\r\n\t\t}\r\n\r\n\t\tconst items = await this.repository.save(invites);\r\n\t\titems.forEach((item) => {\r\n\t\t\tconst registerUrl = `${\r\n\t\t\t\toriginUrl || env.host\r\n\t\t\t}/#/auth/accept-invite?email=${item.email}&token=${item.token}`;\r\n\r\n\t\t\tif (emailInvites.inviteType.indexOf('/pages/users') > -1) {\r\n\t\t\t\tthis.emailService.inviteUser({\r\n\t\t\t\t\temail: item.email,\r\n\t\t\t\t\trole: role.name,\r\n\t\t\t\t\torganization: organization,\r\n\t\t\t\t\tregisterUrl,\r\n\t\t\t\t\toriginUrl,\r\n\t\t\t\t\tlanguageCode,\r\n\t\t\t\t\tinvitedBy: user\r\n\t\t\t\t});\r\n\t\t\t} else if (\r\n\t\t\t\temailInvites.inviteType.indexOf('/pages/employees') > -1\r\n\t\t\t) {\r\n\t\t\t\tthis.emailService.inviteEmployee({\r\n\t\t\t\t\temail: item.email,\r\n\t\t\t\t\tregisterUrl,\r\n\t\t\t\t\torganizationContacts,\r\n\t\t\t\t\tdepartments,\r\n\t\t\t\t\toriginUrl,\r\n\t\t\t\t\torganization: organization,\r\n\t\t\t\t\tlanguageCode,\r\n\t\t\t\t\tinvitedBy: user\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn { items, total: items.length, ignored: existingInvites.length };\r\n\t}\r\n\r\n\tasync createOrganizationContactInvite(\r\n\t\tinviteInput: ICreateOrganizationContactInviteInput\r\n\t): Promise<Invite> {\r\n\t\tconst {\r\n\t\t\temailId,\r\n\t\t\troleId,\r\n\t\t\torganizationContactId,\r\n\t\t\torganizationId,\r\n\t\t\tinvitedById,\r\n\t\t\toriginalUrl,\r\n\t\t\tlanguageCode\r\n\t\t} = inviteInput;\r\n\r\n\t\tconst organizationContact: IOrganizationContact = await this.organizationContactRepository.findOne(\r\n\t\t\torganizationContactId\r\n\t\t);\r\n\r\n\t\tconst organization: Organization = await this.organizationRepository.findOne(\r\n\t\t\torganizationId\r\n\t\t);\r\n\r\n\t\tconst inviterUser: IUser = await this.userService.findOne(invitedById);\r\n\r\n\t\tconst inviteExpiryPeriod =\r\n\t\t\torganization && organization.inviteExpiryPeriod\r\n\t\t\t\t? organization.inviteExpiryPeriod\r\n\t\t\t\t: 7;\r\n\r\n\t\tconst expireDate = addDays(new Date(), inviteExpiryPeriod);\r\n\r\n\t\tconst invite = new Invite();\r\n\t\tinvite.token = this.createToken(emailId);\r\n\t\tinvite.email = emailId;\r\n\t\tinvite.roleId = roleId;\r\n\t\tinvite.organizationId = organizationId;\r\n\t\tinvite.invitedById = invitedById;\r\n\t\tinvite.status = InviteStatusEnum.INVITED;\r\n\t\tinvite.expireDate = expireDate;\r\n\t\tinvite.organizationContact = [organizationContact];\r\n\r\n\t\tconst createdInvite = await this.repository.save(invite);\r\n\r\n\t\tthis.emailService.inviteOrganizationContact(\r\n\t\t\torganizationContact,\r\n\t\t\tinviterUser,\r\n\t\t\torganization,\r\n\t\t\tcreatedInvite,\r\n\t\t\tlanguageCode,\r\n\t\t\toriginalUrl\r\n\t\t);\r\n\r\n\t\treturn createdInvite;\r\n\t}\r\n\r\n\tasync validate(relations, email, token): Promise<Invite> {\r\n\t\treturn this.findOne({\r\n\t\t\trelations,\r\n\t\t\twhere: {\r\n\t\t\t\temail,\r\n\t\t\t\ttoken,\r\n\t\t\t\texpireDate: MoreThanOrEqual(new Date()),\r\n\t\t\t\tstatus: InviteStatusEnum.INVITED\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tcreateToken(email): string {\r\n\t\tconst token: string = sign({ email }, env.JWT_SECRET, {});\r\n\t\treturn token;\r\n\t}\r\n}\r\n","import { CrudController, IPagination } from '../core';\r\nimport { InvoiceEstimateHistory } from './invoice-estimate-history.entity';\r\nimport { ApiTags } from '@nestjs/swagger';\r\nimport { Controller, UseGuards, Query, Get } from '@nestjs/common';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { Permissions } from '../shared/decorators/permissions';\r\nimport { PermissionGuard } from '../shared/guards/auth/permission.guard';\r\nimport { PermissionsEnum, IInvoiceEstimateHistory } from '@gauzy/models';\r\nimport { ParseJsonPipe } from '../shared';\r\nimport { InvoiceEstimateHistoryService } from './invoice-estimate-history.service';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('InvoiceEstimateHistory')\r\n@Controller()\r\nexport class InvoiceEstimateHistoryController extends CrudController<\r\n\tInvoiceEstimateHistory\r\n> {\r\n\tconstructor(\r\n\t\tprivate invoiceEstimateHistoryService: InvoiceEstimateHistoryService\r\n\t) {\r\n\t\tsuper(invoiceEstimateHistoryService);\r\n\t}\r\n\r\n\t@UseGuards(AuthGuard('jwt'), TenantPermissionGuard, PermissionGuard)\r\n\t@Permissions(PermissionsEnum.INVOICES_VIEW)\r\n\t@Get()\r\n\tasync findAllHistories(\r\n\t\t@Query('data', ParseJsonPipe) data: any\r\n\t): Promise<IPagination<IInvoiceEstimateHistory>> {\r\n\t\tconst { relations = [], findInput = null } = data;\r\n\r\n\t\treturn this.invoiceEstimateHistoryService.findAll({\r\n\t\t\twhere: findInput,\r\n\t\t\trelations\r\n\t\t});\r\n\t}\r\n}\r\n","import { IInvoiceEstimateHistory } from '@gauzy/models';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsString } from 'class-validator';\r\nimport { Entity, Column, JoinColumn, ManyToOne } from 'typeorm';\r\nimport { User } from '../user/user.entity';\r\nimport { Invoice } from '../invoice/invoice.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('invoice_estimate_history')\r\nexport class InvoiceEstimateHistory extends TenantOrganizationBase\r\n\timplements IInvoiceEstimateHistory {\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@Column()\r\n\taction: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\tuserId: string;\r\n\r\n\t@ApiProperty({ type: User })\r\n\t@ManyToOne((type) => User)\r\n\t@JoinColumn()\r\n\tuser: User;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\tinvoiceId: string;\r\n\r\n\t@ApiProperty({ type: Invoice })\r\n\t@ManyToOne((type) => Invoice, (invoice) => invoice.invoiceItems, {\r\n\t\tonDelete: 'SET NULL'\r\n\t})\r\n\t@JoinColumn()\r\n\tinvoice: Invoice;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { InvoiceEstimateHistoryController } from './invoice-estimate-history.controller';\r\nimport { InvoiceEstimateHistoryService } from './invoice-estimate-history.service';\r\nimport { InvoiceEstimateHistory } from './invoice-estimate-history.entity';\r\nimport { User } from '../user/user.entity';\r\nimport { UserService } from '../user/user.service';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([User, InvoiceEstimateHistory]),\r\n\t\tTenantModule\r\n\t],\r\n\tcontrollers: [InvoiceEstimateHistoryController],\r\n\tproviders: [InvoiceEstimateHistoryService, UserService],\r\n\texports: [InvoiceEstimateHistoryService, UserService]\r\n})\r\nexport class InvoiceEstimateHistoryModule {}\r\n","import { CrudService } from '../core';\r\nimport { InvoiceEstimateHistory } from './invoice-estimate-history.entity';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { Injectable } from '@nestjs/common';\r\n\r\n@Injectable()\r\nexport class InvoiceEstimateHistoryService extends CrudService<\r\n\tInvoiceEstimateHistory\r\n> {\r\n\tconstructor(\r\n\t\t@InjectRepository(InvoiceEstimateHistory)\r\n\t\tprivate readonly invoiceEstimateHistoryRepository: Repository<\r\n\t\t\tInvoiceEstimateHistory\r\n\t\t>\r\n\t) {\r\n\t\tsuper(invoiceEstimateHistoryRepository);\r\n\t}\r\n}\r\n","import { InvoiceItemBulkCreateHandler } from './invoice-item.bulk.create.handler';\r\n\r\nexport const CommandHandlers = [InvoiceItemBulkCreateHandler];\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { InvoiceItemBulkCreateCommand } from '../invoice-item.bulk.create.command';\r\nimport { InvoiceItemService } from '../../invoice-item.service';\r\nimport { InvoiceItem } from '../../invoice-item.entity';\r\n\r\n@CommandHandler(InvoiceItemBulkCreateCommand)\r\nexport class InvoiceItemBulkCreateHandler\r\n\timplements ICommandHandler<InvoiceItemBulkCreateCommand> {\r\n\tconstructor(private readonly invoiceItemService: InvoiceItemService) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: InvoiceItemBulkCreateCommand\r\n\t): Promise<InvoiceItem[]> {\r\n\t\tconst { invoiceId, input } = command;\r\n\t\treturn await this.invoiceItemService.createBulk(invoiceId, input);\r\n\t}\r\n}\r\n","export { InvoiceItemBulkCreateCommand } from './invoice-item.bulk.create.command';\r\n","import { IInvoiceItemCreateInput } from '@gauzy/models';\r\nimport { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class InvoiceItemBulkCreateCommand implements ICommand {\r\n\tstatic readonly type = '[InvoiceItem] Create';\r\n\r\n\tconstructor(\r\n\t\tpublic readonly invoiceId: string,\r\n\t\tpublic readonly input: IInvoiceItemCreateInput[]\r\n\t) {}\r\n}\r\n","import { CrudController, IPagination } from '../core';\r\nimport { InvoiceItem } from './invoice-item.entity';\r\nimport { InvoiceItemService } from './invoice-item.service';\r\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\r\nimport {\r\n\tController,\r\n\tUseGuards,\r\n\tGet,\r\n\tQuery,\r\n\tHttpStatus,\r\n\tPost,\r\n\tBody,\r\n\tParam\r\n} from '@nestjs/common';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { IInvoiceItem, IInvoiceItemCreateInput } from '@gauzy/models';\r\nimport { ParseJsonPipe } from '../shared';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\nimport { PermissionGuard } from '../shared/guards/auth/permission.guard';\r\nimport { CommandBus } from '@nestjs/cqrs';\r\nimport { InvoiceItemBulkCreateCommand } from './commands';\r\n\r\n@ApiTags('InvoiceItem')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class InvoiceItemController extends CrudController<InvoiceItem> {\r\n\tconstructor(\r\n\t\tprivate invoiceItemService: InvoiceItemService,\r\n\t\tprivate readonly commandBus: CommandBus\r\n\t) {\r\n\t\tsuper(invoiceItemService);\r\n\t}\r\n\r\n\t@Get()\r\n\tasync findAllInvoiceItems(\r\n\t\t@Query('data', ParseJsonPipe) data: any\r\n\t): Promise<IPagination<IInvoiceItem>> {\r\n\t\tconst { relations = [], findInput = null } = data;\r\n\r\n\t\treturn this.invoiceItemService.findAll({\r\n\t\t\twhere: findInput,\r\n\t\t\trelations\r\n\t\t});\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Create invoice item in Bulk' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'Invoice item have been successfully created.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@UseGuards(PermissionGuard)\r\n\t@Post('/createBulk/:invoiceId')\r\n\tasync createBulk(\r\n\t\t@Param('invoiceId') invoiceId: string,\r\n\t\t@Body() input: IInvoiceItemCreateInput[]\r\n\t): Promise<any> {\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew InvoiceItemBulkCreateCommand(invoiceId, input)\r\n\t\t);\r\n\t}\r\n}\r\n","import { Entity, Column, JoinColumn, ManyToOne } from 'typeorm';\r\nimport {\r\n\tIEmployee,\r\n\tIExpense,\r\n\tIInvoice,\r\n\tIInvoiceItem,\r\n\tIOrganizationProject,\r\n\tIProduct,\r\n\tITask\r\n} from '@gauzy/models';\r\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\r\nimport { IsNumber, IsString, IsOptional, IsBoolean } from 'class-validator';\r\nimport { Invoice } from '../invoice/invoice.entity';\r\nimport { Task } from '../tasks/task.entity';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { OrganizationProject } from '../organization-projects/organization-projects.entity';\r\nimport { Product } from '../product/product.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\nimport { Expense } from '../expense/expense.entity';\r\n\r\n@Entity('invoice_item')\r\nexport class InvoiceItem\r\n\textends TenantOrganizationBase\r\n\timplements IInvoiceItem {\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@IsString()\r\n\t@IsOptional()\r\n\tname?: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@Column()\r\n\tdescription: string;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@IsNumber()\r\n\t@Column({ type: 'numeric' })\r\n\tprice: number;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@IsNumber()\r\n\t@Column({ type: 'numeric' })\r\n\tquantity: number;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@IsNumber()\r\n\t@Column({ type: 'numeric' })\r\n\ttotalValue: number;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@IsString()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tinvoiceId?: string;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@IsString()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\ttaskId?: string;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@IsString()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\temployeeId?: string;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@IsString()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tprojectId?: string;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@IsString()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tproductId?: string;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@IsString()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\texpenseId?: string;\r\n\r\n\t@ApiPropertyOptional({ type: Expense })\r\n\t@ManyToOne((type) => Expense, (expense) => expense.invoiceItems, {\r\n\t\tonDelete: 'SET NULL'\r\n\t})\r\n\t@JoinColumn()\r\n\texpense?: IExpense;\r\n\r\n\t@ApiPropertyOptional({ type: Invoice })\r\n\t@ManyToOne((type) => Invoice, (invoice) => invoice.invoiceItems, {\r\n\t\tonDelete: 'SET NULL'\r\n\t})\r\n\t@JoinColumn()\r\n\tinvoice?: IInvoice;\r\n\r\n\t@ApiPropertyOptional({ type: Task })\r\n\t@ManyToOne((type) => Task, (task) => task.invoiceItems)\r\n\t@JoinColumn()\r\n\ttask?: ITask;\r\n\r\n\t@ApiPropertyOptional({ type: Employee })\r\n\t@ManyToOne((type) => Employee, (employee) => employee.invoiceItems)\r\n\t@JoinColumn()\r\n\temployee?: IEmployee;\r\n\r\n\t@ApiPropertyOptional({ type: OrganizationProject })\r\n\t@ManyToOne((type) => OrganizationProject, (project) => project.invoiceItems)\r\n\t@JoinColumn()\r\n\tproject?: IOrganizationProject;\r\n\r\n\t@ApiPropertyOptional({ type: Product })\r\n\t@ManyToOne((type) => Product, (product) => product.invoiceItems)\r\n\t@JoinColumn()\r\n\tproduct?: IProduct;\r\n\r\n\t@ApiPropertyOptional({ type: Boolean })\r\n\t@IsBoolean()\r\n\t@Column({ nullable: true })\r\n\tapplyTax?: boolean;\r\n\r\n\t@ApiPropertyOptional({ type: Boolean })\r\n\t@IsBoolean()\r\n\t@Column({ nullable: true })\r\n\tapplyDiscount?: boolean;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { InvoiceItem } from './invoice-item.entity';\r\nimport { InvoiceItemController } from './invoice-item.controller';\r\nimport { InvoiceItemService } from './invoice-item.service';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\nimport { UserService } from '../user/user.service';\r\nimport { User } from '../user/user.entity';\r\nimport { CommandHandlers } from './commands/handlers';\r\nimport { CqrsModule } from '@nestjs/cqrs';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([InvoiceItem, User]),\r\n\t\tCqrsModule,\r\n\t\tTenantModule\r\n\t],\r\n\tcontrollers: [InvoiceItemController],\r\n\tproviders: [InvoiceItemService, UserService, ...CommandHandlers],\r\n\texports: [InvoiceItemService]\r\n})\r\nexport class InvoiceItemModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { InvoiceItem } from './invoice-item.entity';\r\nimport * as faker from 'faker';\r\nimport { Task } from '../tasks/task.entity';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { OrganizationProject } from '../organization-projects/organization-projects.entity';\r\nimport { Invoice } from '../invoice/invoice.entity';\r\nimport { InvoiceTypeEnum } from '@gauzy/models';\r\nimport { Expense } from '../expense/expense.entity';\r\nimport { Product } from '../product/product.entity';\r\n\r\nconst invoiceItems: InvoiceItem[] = [];\r\n\r\nexport const createDefaultInvoiceItem = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\torganizations: Organization[],\r\n\tnumberOfInvoiceItemPerInvoice: number\r\n) => {\r\n\tfor (const organization of organizations) {\r\n\t\tawait invoiceItemForInvoiceType(\r\n\t\t\tconnection,\r\n\t\t\ttenant,\r\n\t\t\torganization,\r\n\t\t\tnumberOfInvoiceItemPerInvoice\r\n\t\t);\r\n\t}\r\n\tawait connection.manager.save(invoiceItems);\r\n};\r\n\r\nexport const createRandomInvoiceItem = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantOrganizationsMap: Map<Tenant, Organization[]>,\r\n\tnumberOfInvoiceItemPerInvoice: number\r\n) => {\r\n\tfor (const tenant of tenants) {\r\n\t\tconst organizations = tenantOrganizationsMap.get(tenant);\r\n\t\tfor (const organization of organizations) {\r\n\t\t\tawait invoiceItemForInvoiceType(\r\n\t\t\t\tconnection,\r\n\t\t\t\ttenant,\r\n\t\t\t\torganization,\r\n\t\t\t\tnumberOfInvoiceItemPerInvoice\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\tawait connection.manager.save(invoiceItems);\r\n};\r\n\r\nasync function invoiceItemForInvoiceType(\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\torganization: Organization,\r\n\tnumberOfInvoiceItemPerInvoice: number\r\n) {\r\n\tconst where = {\r\n\t\torganizationId: organization.id,\r\n\t\ttenantId: tenant.id\r\n\t};\r\n\tconst invoices: Invoice[] = await connection.manager.find(Invoice, {\r\n\t\twhere\r\n\t});\r\n\tconst employees: Employee[] = await connection.manager.find(Employee, {\r\n\t\twhere\r\n\t});\r\n\tconst tasks: Task[] = await connection.manager.find(Task, { where });\r\n\tconst expenses: Expense[] = await connection.manager.find(Expense, {\r\n\t\twhere\r\n\t});\r\n\tconst projects: OrganizationProject[] = await connection.manager.find(\r\n\t\tOrganizationProject,\r\n\t\t{ where }\r\n\t);\r\n\tconst products: Product[] = await connection.manager.find(Product, {\r\n\t\twhere\r\n\t});\r\n\r\n\tfor (let i = 0; i < numberOfInvoiceItemPerInvoice; i++) {\r\n\t\tconst invoiceItem = new InvoiceItem();\r\n\t\tinvoiceItem.name = faker.company.companyName();\r\n\t\tinvoiceItem.description = faker.random.words();\r\n\t\tinvoiceItem.price = faker.random.number({ min: 1000, max: 10000 });\r\n\t\tinvoiceItem.quantity = faker.random.number({ min: 10, max: 150 });\r\n\t\tinvoiceItem.totalValue = faker.random.number({\r\n\t\t\tmin: 10000,\r\n\t\t\tmax: 100000\r\n\t\t});\r\n\r\n\t\tconst invoice = faker.random.arrayElement(invoices);\r\n\t\tinvoiceItem.invoiceId = invoice.id;\r\n\r\n\t\tswitch (invoice.invoiceType) {\r\n\t\t\tcase InvoiceTypeEnum.BY_EMPLOYEE_HOURS:\r\n\t\t\t\tinvoiceItem.employee = faker.random.arrayElement(employees);\r\n\t\t\t\tbreak;\r\n\t\t\tcase InvoiceTypeEnum.BY_PROJECT_HOURS:\r\n\t\t\t\tinvoiceItem.project = faker.random.arrayElement(projects);\r\n\t\t\t\tbreak;\r\n\t\t\tcase InvoiceTypeEnum.BY_TASK_HOURS:\r\n\t\t\t\tinvoiceItem.task = faker.random.arrayElement(tasks);\r\n\t\t\t\tbreak;\r\n\t\t\tcase InvoiceTypeEnum.BY_PRODUCTS:\r\n\t\t\t\tinvoiceItem.product = faker.random.arrayElement(products);\r\n\t\t\t\tbreak;\r\n\t\t\tcase InvoiceTypeEnum.BY_EXPENSES:\r\n\t\t\t\tinvoiceItem.expense = faker.random.arrayElement(expenses);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tinvoiceItem.applyDiscount = faker.random.boolean();\r\n\t\tinvoiceItem.applyTax = faker.random.boolean();\r\n\t\tinvoiceItem.tenant = tenant;\r\n\t\tinvoiceItem.organization = organization;\r\n\r\n\t\tinvoiceItems.push(invoiceItem);\r\n\t}\r\n}\r\n","import { CrudService } from '../core';\r\nimport { InvoiceItem } from './invoice-item.entity';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { IInvoiceItemCreateInput } from '@gauzy/models';\r\n\r\n@Injectable()\r\nexport class InvoiceItemService extends CrudService<InvoiceItem> {\r\n\tconstructor(\r\n\t\t@InjectRepository(InvoiceItem)\r\n\t\tprivate readonly invoiceItemRepository: Repository<InvoiceItem>\r\n\t) {\r\n\t\tsuper(invoiceItemRepository);\r\n\t}\r\n\r\n\tasync createBulk(\r\n\t\tinvoiceId: string,\r\n\t\tcreateInput: IInvoiceItemCreateInput[]\r\n\t) {\r\n\t\tawait this.repository.delete({ invoiceId: invoiceId });\r\n\t\treturn await this.repository.save(createInput);\r\n\t}\r\n}\r\n","import { IInvoice } from '@gauzy/models';\r\nimport { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { InvoiceService } from '../../invoice.service';\r\nimport { InvoiceCreateCommand } from '../invoice.create.command';\r\n\r\n@CommandHandler(InvoiceCreateCommand)\r\nexport class InvoiceCreateHandler\r\n\timplements ICommandHandler<InvoiceCreateCommand> {\r\n\tconstructor(private readonly invoiceService: InvoiceService) {}\r\n\r\n\tpublic async execute(command: InvoiceCreateCommand): Promise<IInvoice> {\r\n\t\tconst { input } = command;\r\n\t\treturn this.invoiceService.create(input);\r\n\t}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { DeleteResult } from 'typeorm';\r\nimport { InvoiceService } from '../../invoice.service';\r\nimport { InvoiceDeleteCommand } from '../invoice.delete.command';\r\n\r\n@CommandHandler(InvoiceDeleteCommand)\r\nexport class InvoiceDeleteHandler\r\n\timplements ICommandHandler<InvoiceDeleteCommand> {\r\n\tconstructor(private readonly invoiceService: InvoiceService) {}\r\n\r\n\tpublic async execute(command: InvoiceDeleteCommand): Promise<DeleteResult> {\r\n\t\tconst { invoiceId } = command;\r\n\t\treturn this.invoiceService.delete(invoiceId);\r\n\t}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { InvoiceService } from '../../invoice.service';\r\nimport { InvoiceSendEmailCommand } from '../invoice.send.email.command';\r\n\r\n@CommandHandler(InvoiceSendEmailCommand)\r\nexport class InvoiceSendEmailHandler\r\n\timplements ICommandHandler<InvoiceSendEmailCommand> {\r\n\tconstructor(private readonly invoiceService: InvoiceService) {}\r\n\r\n\tpublic async execute(command: InvoiceSendEmailCommand): Promise<any> {\r\n\t\tconst { languageCode, email, params, origin } = command;\r\n\t\treturn this.invoiceService.sendEmail(\r\n\t\t\tlanguageCode,\r\n\t\t\temail,\r\n\t\t\tparams.base64,\r\n\t\t\tparams.invoiceNumber,\r\n\t\t\tparams.invoiceId,\r\n\t\t\tparams.isEstimate,\r\n\t\t\torigin,\r\n\t\t\tparams.tenantId,\r\n\t\t\tparams.organizationId\r\n\t\t);\r\n\t}\r\n}\r\n","import { IInvoice } from '@gauzy/models';\r\nimport { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { InvoiceService } from '../../invoice.service';\r\nimport { InvoiceUpdateCommand } from '../invoice.update.command';\r\n\r\n@CommandHandler(InvoiceUpdateCommand)\r\nexport class InvoiceUpdateHandler\r\n\timplements ICommandHandler<InvoiceUpdateCommand> {\r\n\tconstructor(private readonly invoiceService: InvoiceService) {}\r\n\r\n\tpublic async execute(command: InvoiceUpdateCommand): Promise<IInvoice> {\r\n\t\tconst { input } = command;\r\n\t\tconst { id } = input;\r\n\t\treturn this.invoiceService.create({ id, ...input });\r\n\t}\r\n}\r\n","import { InvoiceCreateHandler } from './handlers/invoice.create.handler';\r\nimport { InvoiceDeleteHandler } from './handlers/invoice.delete.handler';\r\nimport { InvoiceSendEmailHandler } from './handlers/invoice.send.email.handler';\r\nimport { InvoiceUpdateHandler } from './handlers/invoice.update.handler';\r\n\r\nexport { InvoiceCreateCommand } from './invoice.create.command';\r\nexport { InvoiceDeleteCommand } from './invoice.delete.command';\r\nexport { InvoiceSendEmailCommand } from './invoice.send.email.command';\r\nexport { InvoiceUpdateCommand } from './invoice.update.command';\r\n\r\nexport const CommandHandlers = [\r\n\tInvoiceCreateHandler,\r\n\tInvoiceUpdateHandler,\r\n\tInvoiceSendEmailHandler,\r\n\tInvoiceDeleteHandler\r\n];\r\n","import { IInvoiceCreateInput } from '@gauzy/models';\r\nimport { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class InvoiceCreateCommand implements ICommand {\r\n\tstatic readonly type = '[Invoice] Create';\r\n\r\n\tconstructor(public readonly input: IInvoiceCreateInput) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class InvoiceDeleteCommand implements ICommand {\r\n\tstatic readonly type = '[Invoice] Delete';\r\n\r\n\tconstructor(public readonly invoiceId: string) {}\r\n}\r\n","import { LanguagesEnum } from '@gauzy/models';\r\nimport { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class InvoiceSendEmailCommand implements ICommand {\r\n\tstatic readonly type = '[Invoice] Send Email';\r\n\r\n\tconstructor(\r\n\t\tpublic readonly languageCode: LanguagesEnum,\r\n\t\tpublic readonly email: string,\r\n\t\tpublic readonly params: any,\r\n\t\tpublic readonly origin: string\r\n\t) {}\r\n}\r\n","import { IInvoiceUpdateInput } from '@gauzy/models';\r\nimport { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class InvoiceUpdateCommand implements ICommand {\r\n\tstatic readonly type = '[Invoice] Update';\r\n\r\n\tconstructor(public readonly input: IInvoiceUpdateInput) {}\r\n}\r\n","import { CrudController, IPagination } from '../core';\r\nimport { Invoice } from './invoice.entity';\r\nimport { InvoiceService } from './invoice.service';\r\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\r\nimport {\r\n\tController,\r\n\tUseGuards,\r\n\tHttpCode,\r\n\tHttpStatus,\r\n\tPut,\r\n\tParam,\r\n\tBody,\r\n\tQuery,\r\n\tGet,\r\n\tReq,\r\n\tPost,\r\n\tDelete\r\n} from '@nestjs/common';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { Permissions } from '../shared/decorators/permissions';\r\nimport { PermissionGuard } from '../shared/guards/auth/permission.guard';\r\nimport {\r\n\tPermissionsEnum,\r\n\tIInvoice,\r\n\tLanguagesEnum,\r\n\tIInvoiceCreateInput,\r\n\tIInvoiceUpdateInput\r\n} from '@gauzy/models';\r\nimport { ParseJsonPipe, UUIDValidationPipe } from '../shared';\r\nimport { I18nLang } from 'nestjs-i18n';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\nimport { CommandBus } from '@nestjs/cqrs';\r\nimport {\r\n\tInvoiceCreateCommand,\r\n\tInvoiceDeleteCommand,\r\n\tInvoiceUpdateCommand\r\n} from './commands';\r\nimport { DeleteResult } from 'typeorm';\r\nimport { InvoiceSendEmailCommand } from './commands/invoice.send.email.command';\r\n\r\n@ApiTags('Invoice')\r\n@Controller()\r\nexport class InvoiceController extends CrudController<Invoice> {\r\n\tconstructor(\r\n\t\tprivate readonly invoiceService: InvoiceService,\r\n\t\tprivate readonly commandBus: CommandBus\r\n\t) {\r\n\t\tsuper(invoiceService);\r\n\t}\r\n\r\n\t@UseGuards(AuthGuard('jwt'), TenantPermissionGuard, PermissionGuard)\r\n\t@Permissions(PermissionsEnum.INVOICES_VIEW)\r\n\t@Get()\r\n\tasync findAllInvoices(\r\n\t\t@Query('data', ParseJsonPipe) data: any\r\n\t): Promise<IPagination<IInvoice>> {\r\n\t\tconst { relations = [], findInput = null } = data;\r\n\t\treturn this.invoiceService.findAll({\r\n\t\t\twhere: findInput,\r\n\t\t\trelations\r\n\t\t});\r\n\t}\r\n\r\n\t@UseGuards(AuthGuard('jwt'), TenantPermissionGuard, PermissionGuard)\r\n\t@Permissions(PermissionsEnum.INVOICES_VIEW)\r\n\t@Get('highest')\r\n\tasync findHighestInvoiceNumber(): Promise<IPagination<IInvoice>> {\r\n\t\treturn this.invoiceService.getHighestInvoiceNumber();\r\n\t}\r\n\r\n\t@UseGuards(AuthGuard('jwt'), TenantPermissionGuard, PermissionGuard)\r\n\t@Permissions(PermissionsEnum.INVOICES_VIEW)\r\n\t@Get(':id')\r\n\tasync findByIdWithRelations(\r\n\t\t@Param('id') id: string,\r\n\t\t@Query('data', ParseJsonPipe) data: any\r\n\t): Promise<IInvoice> {\r\n\t\tconst { relations = [], findInput = null } = data;\r\n\t\treturn this.invoiceService.findOne(id, {\r\n\t\t\twhere: findInput,\r\n\t\t\trelations\r\n\t\t});\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Create new record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully created.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@UseGuards(AuthGuard('jwt'), TenantPermissionGuard, PermissionGuard)\r\n\t@Permissions(PermissionsEnum.INVOICES_EDIT)\r\n\t@Post()\r\n\tasync createInvoice(@Body() entity: IInvoiceCreateInput): Promise<Invoice> {\r\n\t\treturn this.commandBus.execute(new InvoiceCreateCommand(entity));\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Update record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully edited.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@UseGuards(AuthGuard('jwt'), TenantPermissionGuard, PermissionGuard)\r\n\t@Permissions(PermissionsEnum.INVOICES_EDIT)\r\n\t@Put(':id')\r\n\tasync updateInvoice(\r\n\t\t@Param('id', UUIDValidationPipe) id: string,\r\n\t\t@Body() entity: IInvoiceUpdateInput\r\n\t): Promise<Invoice> {\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew InvoiceUpdateCommand({ id, ...entity })\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Update record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully edited.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Put('estimate/:id')\r\n\tasync updateWithoutGuard(\r\n\t\t@Param('id', UUIDValidationPipe) id: string,\r\n\t\t@Body() entity: IInvoice\r\n\t): Promise<Invoice> {\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew InvoiceUpdateCommand({ id, ...entity })\r\n\t\t);\r\n\t}\r\n\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@UseGuards(AuthGuard('jwt'))\r\n\t@Put('email/:email')\r\n\tasync emailInvoice(\r\n\t\t@Param('email') email: string,\r\n\t\t@Req() request,\r\n\t\t@I18nLang() languageCode: LanguagesEnum\r\n\t): Promise<any> {\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew InvoiceSendEmailCommand(\r\n\t\t\t\tlanguageCode,\r\n\t\t\t\temail,\r\n\t\t\t\trequest.body.params,\r\n\t\t\t\trequest.get('Origin')\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Delete record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NO_CONTENT,\r\n\t\tdescription: 'The record has been successfully deleted'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Delete(':id')\r\n\tasync delete(\r\n\t\t@Param('id', UUIDValidationPipe) id: string\r\n\t): Promise<DeleteResult> {\r\n\t\treturn this.commandBus.execute(new InvoiceDeleteCommand(id));\r\n\t}\r\n}\r\n","import {\r\n\tIInvoice,\r\n\tCurrenciesEnum,\r\n\tInvoiceTypeEnum,\r\n\tDiscountTaxTypeEnum\r\n} from '@gauzy/models';\r\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\r\nimport {\r\n\tIsString,\r\n\tIsNumber,\r\n\tIsBoolean,\r\n\tIsDate,\r\n\tIsOptional,\r\n\tIsEnum\r\n} from 'class-validator';\r\nimport {\r\n\tEntity,\r\n\tColumn,\r\n\tJoinColumn,\r\n\tOneToMany,\r\n\tManyToOne,\r\n\tUnique,\r\n\tManyToMany,\r\n\tJoinTable\r\n} from 'typeorm';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { OrganizationContact } from '../organization-contact/organization-contact.entity';\r\nimport { InvoiceItem } from '../invoice-item/invoice-item.entity';\r\nimport { Tag } from '../tags/tag.entity';\r\nimport { Payment } from '../payment/payment.entity';\r\nimport { InvoiceEstimateHistory } from '../invoice-estimate-history/invoice-estimate-history.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('invoice')\r\n@Unique(['invoiceNumber'])\r\nexport class Invoice extends TenantOrganizationBase implements IInvoice {\r\n\t@ApiProperty({ type: Tag })\r\n\t@ManyToMany((type) => Tag, (tag) => tag.invoice)\r\n\t@JoinTable({\r\n\t\tname: 'tag_invoice'\r\n\t})\r\n\ttags?: Tag[];\r\n\r\n\t@ApiProperty({ type: Date })\r\n\t@IsDate()\r\n\t@Column({ nullable: true })\r\n\tinvoiceDate: Date;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@IsNumber()\r\n\t@Column({ name: 'invoiceNumber', nullable: true, type: 'numeric' })\r\n\tinvoiceNumber: number;\r\n\r\n\t@ApiProperty({ type: Date })\r\n\t@IsDate()\r\n\t@Column({ nullable: true })\r\n\tdueDate: Date;\r\n\r\n\t@ApiProperty({ type: String, enum: CurrenciesEnum })\r\n\t@IsEnum(CurrenciesEnum)\r\n\t@Column()\r\n\tcurrency: string;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@IsNumber()\r\n\t@Column({ type: 'numeric' })\r\n\tdiscountValue: number;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@IsBoolean()\r\n\t@Column({ nullable: true })\r\n\tpaid: boolean;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@IsNumber()\r\n\t@Column({ nullable: true, type: 'numeric' })\r\n\ttax: number;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@IsNumber()\r\n\t@Column({ nullable: true, type: 'numeric' })\r\n\ttax2: number;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@IsString()\r\n\t@IsOptional()\r\n\t@Column()\r\n\tterms?: string;\r\n\r\n\t@ApiPropertyOptional({ type: Number })\r\n\t@IsNumber()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true, type: 'numeric' })\r\n\ttotalValue?: number;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@IsString()\r\n\t@IsOptional()\r\n\t@Column()\r\n\tstatus?: string;\r\n\r\n\t@ApiPropertyOptional({ type: Boolean })\r\n\t@IsBoolean()\r\n\t@Column({ nullable: true })\r\n\tisEstimate?: boolean;\r\n\r\n\t@ApiPropertyOptional({ type: Boolean })\r\n\t@IsBoolean()\r\n\t@Column({ nullable: true })\r\n\tisAccepted?: boolean;\r\n\r\n\t@ApiProperty({ type: String, enum: DiscountTaxTypeEnum })\r\n\t@IsEnum(DiscountTaxTypeEnum)\r\n\t@Column({ nullable: true })\r\n\tdiscountType: string;\r\n\r\n\t@ApiProperty({ type: String, enum: DiscountTaxTypeEnum })\r\n\t@IsEnum(DiscountTaxTypeEnum)\r\n\t@Column({ nullable: true })\r\n\ttaxType: string;\r\n\r\n\t@ApiProperty({ type: String, enum: DiscountTaxTypeEnum })\r\n\t@IsEnum(DiscountTaxTypeEnum)\r\n\t@Column({ nullable: true })\r\n\ttax2Type: string;\r\n\r\n\t@ApiPropertyOptional({ type: String, enum: InvoiceTypeEnum })\r\n\t@IsEnum(InvoiceTypeEnum)\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tinvoiceType?: string;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@IsString()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tsentTo?: string;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@IsString()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\torganizationContactId?: string;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@IsString()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tinternalNote?: string;\r\n\r\n\t@ApiPropertyOptional({ type: Organization })\r\n\t@ManyToOne((type) => Organization)\r\n\t@JoinColumn()\r\n\tfromOrganization?: Organization;\r\n\r\n\t@ApiPropertyOptional({ type: OrganizationContact })\r\n\t@ManyToOne((type) => OrganizationContact)\r\n\t@JoinColumn()\r\n\ttoContact?: OrganizationContact;\r\n\r\n\t@ApiPropertyOptional({ type: InvoiceItem, isArray: true })\r\n\t@OneToMany((type) => InvoiceItem, (invoiceItem) => invoiceItem.invoice, {\r\n\t\tonDelete: 'SET NULL'\r\n\t})\r\n\t@JoinColumn()\r\n\tinvoiceItems?: InvoiceItem[];\r\n\r\n\t@ApiPropertyOptional({ type: Payment, isArray: true })\r\n\t@OneToMany((type) => Payment, (payment) => payment.invoice, {\r\n\t\tonDelete: 'SET NULL'\r\n\t})\r\n\t@JoinColumn()\r\n\tpayments?: Payment[];\r\n\r\n\t@ApiPropertyOptional({ type: InvoiceEstimateHistory, isArray: true })\r\n\t@OneToMany(\r\n\t\t(type) => InvoiceEstimateHistory,\r\n\t\t(invoiceEstimateHistory) => invoiceEstimateHistory.invoice,\r\n\t\t{\r\n\t\t\tonDelete: 'SET NULL'\r\n\t\t}\r\n\t)\r\n\t@JoinColumn()\r\n\thistoryRecords?: InvoiceEstimateHistory[];\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { InvoiceController } from './invoice.controller';\r\nimport { InvoiceService } from './invoice.service';\r\nimport { Invoice } from './invoice.entity';\r\nimport { User } from '../user/user.entity';\r\nimport { UserService } from '../user/user.service';\r\nimport { EmailService, EmailModule } from '../email';\r\nimport { EstimateEmailService } from '../estimate-email/estimate-email.service';\r\nimport { EstimateEmailModule } from '../estimate-email/estimate-email.module';\r\nimport { EstimateEmailController } from '../estimate-email/estimate-email.controller';\r\nimport { EstimateEmail } from '../estimate-email/estimate-email.entity';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\nimport { CommandHandlers } from './commands';\r\nimport { CqrsModule } from '@nestjs/cqrs';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([User, Invoice, EstimateEmail]),\r\n\t\tEmailModule,\r\n\t\tEstimateEmailModule,\r\n\t\tTenantModule,\r\n\t\tCqrsModule\r\n\t],\r\n\tcontrollers: [InvoiceController, EstimateEmailController],\r\n\tproviders: [\r\n\t\tInvoiceService,\r\n\t\tUserService,\r\n\t\tEmailService,\r\n\t\tEstimateEmailService,\r\n\t\t...CommandHandlers\r\n\t],\r\n\texports: [InvoiceService, UserService, EstimateEmailService]\r\n})\r\nexport class InvoiceModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { Invoice } from './invoice.entity';\r\nimport * as faker from 'faker';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { Tag } from '../tags/tag.entity';\r\nimport { DiscountTaxTypeEnum, InvoiceTypeEnum } from '@gauzy/models';\r\nimport { OrganizationContact } from '../organization-contact/organization-contact.entity';\r\nimport * as _ from 'underscore';\r\n\r\nexport const createDefaultInvoice = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\tdefaultOrganizations: Organization[],\r\n\tnoOfInvoicePerOrganization: number\r\n) => {\r\n\tfor (const organization of defaultOrganizations) {\r\n\t\tconst invoices: Invoice[] = [];\r\n\t\tconst tags = await connection.manager.find(Tag, {\r\n\t\t\twhere: { organization: organization }\r\n\t\t});\r\n\t\tconst organizationContacts = await connection.manager.find(\r\n\t\t\tOrganizationContact,\r\n\t\t\t{ where: { organizationId: organization.id } }\r\n\t\t);\r\n\t\tfor (let i = 0; i < noOfInvoicePerOrganization; i++) {\r\n\t\t\tconst invoice = new Invoice();\r\n\t\t\tinvoice.tags = _.chain(tags)\r\n\t\t\t\t.shuffle()\r\n\t\t\t\t.take(faker.random.number({ min: 1, max: 3 }))\r\n\t\t\t\t.values()\r\n\t\t\t\t.value();\r\n\t\t\tinvoice.invoiceDate = faker.date.past(0.2);\r\n\t\t\tinvoice.invoiceNumber = faker.random.number({\r\n\t\t\t\tmin: 1,\r\n\t\t\t\tmax: 9999999\r\n\t\t\t});\r\n\t\t\tinvoice.dueDate = faker.date.recent(50);\r\n\t\t\tif (organizationContacts.length) {\r\n\t\t\t\tinvoice.organizationContactId = faker.random.arrayElement(\r\n\t\t\t\t\torganizationContacts\r\n\t\t\t\t).id;\r\n\t\t\t}\r\n\t\t\tinvoice.sentTo = organization.id;\r\n\t\t\tinvoice.fromOrganization = organization;\r\n\t\t\tinvoice.toContact = faker.random.arrayElement(organizationContacts);\r\n\t\t\tinvoice.currency = organization.currency;\r\n\t\t\tinvoice.discountValue = faker.random.number({\r\n\t\t\t\tmin: 1,\r\n\t\t\t\tmax: 10\r\n\t\t\t});\r\n\t\t\tinvoice.paid = faker.random.boolean();\r\n\t\t\tinvoice.tax = faker.random.number({ min: 1, max: 10 });\r\n\t\t\tinvoice.tax2 = faker.random.number({ min: 1, max: 10 });\r\n\t\t\tinvoice.terms = 'Term and Setting Applied';\r\n\t\t\tinvoice.isEstimate = faker.random.boolean();\r\n\t\t\tif (invoice.isEstimate) {\r\n\t\t\t\tinvoice.isAccepted = faker.random.boolean();\r\n\t\t\t}\r\n\t\t\tinvoice.discountType = faker.random.arrayElement(\r\n\t\t\t\tObject.values(DiscountTaxTypeEnum)\r\n\t\t\t);\r\n\t\t\tinvoice.taxType = faker.random.arrayElement(\r\n\t\t\t\tObject.values(DiscountTaxTypeEnum)\r\n\t\t\t);\r\n\t\t\tinvoice.tax2Type = faker.random.arrayElement(\r\n\t\t\t\tObject.values(DiscountTaxTypeEnum)\r\n\t\t\t);\r\n\t\t\tinvoice.invoiceType = faker.random.arrayElement(\r\n\t\t\t\tObject.values(InvoiceTypeEnum)\r\n\t\t\t);\r\n\t\t\tinvoice.organizationId = organization.id;\r\n\t\t\tinvoice.status = 'ACTIVE';\r\n\t\t\tinvoice.totalValue = faker.random.number(99999);\r\n\t\t\tinvoice.tenant = tenant;\r\n\t\t\tinvoices.push(invoice);\r\n\t\t}\r\n\t\tawait connection.manager.save(invoices);\r\n\t}\r\n};\r\n\r\nexport const createRandomInvoice = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantOrganizationsMap: Map<Tenant, Organization[]>,\r\n\tnoOfInvoicePerOrganization: number\r\n) => {\r\n\tfor (const tenant of tenants) {\r\n\t\tconst organizations = tenantOrganizationsMap.get(tenant);\r\n\t\tfor (const organization of organizations) {\r\n\t\t\tconst invoices: Invoice[] = [];\r\n\t\t\tconst tags = await connection.manager.find(Tag, {\r\n\t\t\t\twhere: { organization: organization }\r\n\t\t\t});\r\n\t\t\tconst organizationContacts = await connection.manager.find(\r\n\t\t\t\tOrganizationContact,\r\n\t\t\t\t{ where: { organizationId: organization.id } }\r\n\t\t\t);\r\n\t\t\tfor (let i = 0; i < noOfInvoicePerOrganization; i++) {\r\n\t\t\t\tconst invoice = new Invoice();\r\n\t\t\t\t// let invoiceItem = faker.random.arrayElement(invoiceItems);\r\n\t\t\t\tinvoice.tags = _.chain(tags)\r\n\t\t\t\t\t.shuffle()\r\n\t\t\t\t\t.take(faker.random.number({ min: 1, max: 3 }))\r\n\t\t\t\t\t.values()\r\n\t\t\t\t\t.value();\r\n\t\t\t\tinvoice.invoiceDate = faker.date.past(0.2);\r\n\t\t\t\tinvoice.invoiceNumber = faker.random.number({\r\n\t\t\t\t\tmin: 1,\r\n\t\t\t\t\tmax: 9999999\r\n\t\t\t\t});\r\n\t\t\t\tinvoice.dueDate = faker.date.recent(50);\r\n\t\t\t\tif (organizationContacts.length) {\r\n\t\t\t\t\tinvoice.organizationContactId = faker.random.arrayElement(\r\n\t\t\t\t\t\torganizationContacts\r\n\t\t\t\t\t).id;\r\n\t\t\t\t}\r\n\t\t\t\tinvoice.sentTo = organization.id;\r\n\t\t\t\tinvoice.fromOrganization = organization;\r\n\t\t\t\tinvoice.toContact = faker.random.arrayElement(\r\n\t\t\t\t\torganizationContacts\r\n\t\t\t\t);\r\n\t\t\t\tinvoice.currency = organization.currency;\r\n\t\t\t\tinvoice.discountValue = faker.random.number({\r\n\t\t\t\t\tmin: 1,\r\n\t\t\t\t\tmax: 10\r\n\t\t\t\t});\r\n\t\t\t\tinvoice.paid = faker.random.boolean();\r\n\t\t\t\tinvoice.tax = faker.random.number({ min: 1, max: 10 });\r\n\t\t\t\tinvoice.tax2 = faker.random.number({ min: 1, max: 10 });\r\n\t\t\t\tinvoice.terms = 'Term and Setting Applied';\r\n\t\t\t\tinvoice.isEstimate = faker.random.boolean();\r\n\t\t\t\tif (invoice.isEstimate) {\r\n\t\t\t\t\tinvoice.isAccepted = faker.random.boolean();\r\n\t\t\t\t}\r\n\t\t\t\tinvoice.discountType = faker.random.arrayElement(\r\n\t\t\t\t\tObject.values(DiscountTaxTypeEnum)\r\n\t\t\t\t);\r\n\t\t\t\tinvoice.taxType = faker.random.arrayElement(\r\n\t\t\t\t\tObject.values(DiscountTaxTypeEnum)\r\n\t\t\t\t);\r\n\t\t\t\tinvoice.tax2Type = faker.random.arrayElement(\r\n\t\t\t\t\tObject.values(DiscountTaxTypeEnum)\r\n\t\t\t\t);\r\n\t\t\t\tinvoice.invoiceType = faker.random.arrayElement(\r\n\t\t\t\t\tObject.values(InvoiceTypeEnum)\r\n\t\t\t\t);\r\n\t\t\t\tinvoice.organizationId = organization.id;\r\n\t\t\t\tinvoice.status = 'ACTIVE';\r\n\t\t\t\tinvoice.totalValue = faker.random.number(99999);\r\n\t\t\t\tinvoice.tenant = tenant;\r\n\t\t\t\tinvoices.push(invoice);\r\n\t\t\t}\r\n\t\t\tawait connection.manager.save(invoices);\r\n\t\t}\r\n\t}\r\n};\r\n","import { CrudService } from '../core';\r\nimport { Invoice } from './invoice.entity';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { getConnection } from 'typeorm';\r\nimport { EmailService } from '../email';\r\nimport { LanguagesEnum } from '@gauzy/models';\r\nimport { sign } from 'jsonwebtoken';\r\nimport { environment as env } from '@env-api/environment';\r\nimport { EstimateEmailService } from '../estimate-email/estimate-email.service';\r\n\r\n@Injectable()\r\nexport class InvoiceService extends CrudService<Invoice> {\r\n\tconstructor(\r\n\t\t@InjectRepository(Invoice)\r\n\t\tprivate readonly invoiceRepository: Repository<Invoice>,\r\n\t\tprivate readonly emailService: EmailService,\r\n\t\tprivate readonly estimateEmailService: EstimateEmailService\r\n\t) {\r\n\t\tsuper(invoiceRepository);\r\n\t}\r\n\r\n\tasync getHighestInvoiceNumber() {\r\n\t\tconst invoice = await getConnection()\r\n\t\t\t.createQueryBuilder(Invoice, 'invoice')\r\n\t\t\t.select('MAX(invoice.invoiceNumber)', 'max')\r\n\t\t\t.getRawOne();\r\n\r\n\t\treturn invoice;\r\n\t}\r\n\r\n\tasync sendEmail(\r\n\t\tlanguageCode: LanguagesEnum,\r\n\t\temail: string,\r\n\t\tbase64: string,\r\n\t\tinvoiceNumber: number,\r\n\t\tinvoiceId: string,\r\n\t\tisEstimate: boolean,\r\n\t\toriginUrl: string,\r\n\t\ttenantId: string,\r\n\t\torganizationId: string\r\n\t) {\r\n\t\tconst token = this.createToken(email);\r\n\t\tawait this.estimateEmailService.createEstimateEmail(\r\n\t\t\tinvoiceId,\r\n\t\t\temail,\r\n\t\t\ttoken\r\n\t\t);\r\n\t\tthis.emailService.emailInvoice(\r\n\t\t\tlanguageCode,\r\n\t\t\temail,\r\n\t\t\tbase64,\r\n\t\t\tinvoiceNumber,\r\n\t\t\tinvoiceId,\r\n\t\t\tisEstimate,\r\n\t\t\ttoken,\r\n\t\t\toriginUrl,\r\n\t\t\ttenantId,\r\n\t\t\torganizationId\r\n\t\t);\r\n\t}\r\n\r\n\tcreateToken(email): string {\r\n\t\tconst token: string = sign({ email }, env.JWT_SECRET, {});\r\n\t\treturn token;\r\n\t}\r\n}\r\n","export const DEFAULT_KEY_RESULT_TEMPLATES = [\r\n\t{\r\n\t\tname: 'Improve product performance',\r\n\t\tlevel: 'Organization',\r\n\t\tkeyResults: [\r\n\t\t\t{\r\n\t\t\t\tname: 'Get over 10000 new signups',\r\n\t\t\t\ttype: 'Numerical',\r\n\t\t\t\ttargetValue: 10000,\r\n\t\t\t\tinitialValue: 0,\r\n\t\t\t\tunit: 'signups',\r\n\t\t\t\tdeadline: 'No Custom Deadline',\r\n\t\t\t\thardDeadline: null,\r\n\t\t\t\tsoftDeadline: null\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Publish product reviews in over 50 publications',\r\n\t\t\t\ttype: 'Numerical',\r\n\t\t\t\ttargetValue: 50,\r\n\t\t\t\tinitialValue: 0,\r\n\t\t\t\tunit: 'publications',\r\n\t\t\t\tdeadline: 'No Custom Deadline',\r\n\t\t\t\thardDeadline: null,\r\n\t\t\t\tsoftDeadline: null\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tname: 'Successfully launch version 2 of our main product',\r\n\t\tlevel: 'Organization',\r\n\t\tkeyResults: [\r\n\t\t\t{\r\n\t\t\t\tname:\r\n\t\t\t\t\t'Reduce the average response time on the app to less than 500ms',\r\n\t\t\t\ttype: 'KPI',\r\n\t\t\t\ttargetValue: 500,\r\n\t\t\t\tinitialValue: 1000,\r\n\t\t\t\tunit: '',\r\n\t\t\t\tdeadline: 'No Custom Deadline',\r\n\t\t\t\thardDeadline: null,\r\n\t\t\t\tsoftDeadline: null\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tname: 'Redesign and launch our new landing page',\r\n\t\tlevel: 'Team',\r\n\t\tkeyResults: [\r\n\t\t\t{\r\n\t\t\t\tname:\r\n\t\t\t\t\t'Design new version of our site structure, navigation and all pages',\r\n\t\t\t\ttype: 'True/False',\r\n\t\t\t\ttargetValue: 1,\r\n\t\t\t\tinitialValue: 0,\r\n\t\t\t\tunit: '',\r\n\t\t\t\tdeadline: 'No Custom Deadline',\r\n\t\t\t\thardDeadline: null,\r\n\t\t\t\tsoftDeadline: null\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname:\r\n\t\t\t\t\t'Conduct stakeholder interviews with 10 people from sales and marketing',\r\n\t\t\t\ttype: 'Numerical',\r\n\t\t\t\ttargetValue: 10,\r\n\t\t\t\tinitialValue: 0,\r\n\t\t\t\tunit: 'interviews',\r\n\t\t\t\tdeadline: 'No Custom Deadline',\r\n\t\t\t\thardDeadline: null,\r\n\t\t\t\tsoftDeadline: null\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'With development and marketing, launch by September 1st',\r\n\t\t\t\ttype: 'True/False',\r\n\t\t\t\ttargetValue: 1,\r\n\t\t\t\tinitialValue: 0,\r\n\t\t\t\tunit: '',\r\n\t\t\t\tdeadline: 'Hard Deadline',\r\n\t\t\t\thardDeadline: '2020-08-31T18:30:00.000Z',\r\n\t\t\t\tsoftDeadline: null\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'User-test page prototypes on 10 people',\r\n\t\t\t\ttype: 'Numerical',\r\n\t\t\t\ttargetValue: 10,\r\n\t\t\t\tinitialValue: 0,\r\n\t\t\t\tunit: 'people',\r\n\t\t\t\tdeadline: 'No Custom Deadline',\r\n\t\t\t\thardDeadline: null,\r\n\t\t\t\tsoftDeadline: null\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname:\r\n\t\t\t\t\t'Test existing landing page and sub-pages on external users for understanding issues',\r\n\t\t\t\ttype: 'True/False',\r\n\t\t\t\ttargetValue: 1,\r\n\t\t\t\tinitialValue: 0,\r\n\t\t\t\tunit: '',\r\n\t\t\t\tdeadline: 'No Custom Deadline',\r\n\t\t\t\thardDeadline: null,\r\n\t\t\t\tsoftDeadline: null\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tname: 'Increase quality of releases and make sure they are timely',\r\n\t\tlevel: 'Team',\r\n\t\tkeyResults: [\r\n\t\t\t{\r\n\t\t\t\tname:\r\n\t\t\t\t\t'Reduce the number of priority bugs found in production to be less than 2',\r\n\t\t\t\ttype: 'KPI',\r\n\t\t\t\ttargetValue: 2,\r\n\t\t\t\tinitialValue: 15,\r\n\t\t\t\tunit: '',\r\n\t\t\t\tdeadline: 'No Custom Deadline',\r\n\t\t\t\thardDeadline: null,\r\n\t\t\t\tsoftDeadline: null\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Increase unit test coverage to 75% from current 45%',\r\n\t\t\t\ttype: 'Numerical',\r\n\t\t\t\ttargetValue: 45,\r\n\t\t\t\tinitialValue: 75,\r\n\t\t\t\tunit: '%',\r\n\t\t\t\tdeadline: 'No Custom Deadline',\r\n\t\t\t\thardDeadline: null,\r\n\t\t\t\tsoftDeadline: null\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tname: 'Identify problems with current user interface',\r\n\t\tlevel: 'Employee',\r\n\t\tkeyResults: [\r\n\t\t\t{\r\n\t\t\t\tname: 'Learn new skills to enhance creativity',\r\n\t\t\t\ttype: 'True/False',\r\n\t\t\t\ttargetValue: 1,\r\n\t\t\t\tinitialValue: 0,\r\n\t\t\t\tunit: '',\r\n\t\t\t\tdeadline: 'No Custom Deadline',\r\n\t\t\t\thardDeadline: null,\r\n\t\t\t\tsoftDeadline: null\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Provide solution to reduce time Lag by 85%',\r\n\t\t\t\ttype: 'True/False',\r\n\t\t\t\ttargetValue: 1,\r\n\t\t\t\tinitialValue: 0,\r\n\t\t\t\tunit: '',\r\n\t\t\t\tdeadline: 'No Custom Deadline',\r\n\t\t\t\thardDeadline: null,\r\n\t\t\t\tsoftDeadline: null\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname:\r\n\t\t\t\t\t'Identify areas where the product lags in more than 20% cases',\r\n\t\t\t\ttype: 'True/False',\r\n\t\t\t\ttargetValue: 1,\r\n\t\t\t\tinitialValue: 0,\r\n\t\t\t\tunit: '',\r\n\t\t\t\tdeadline: 'No Custom Deadline',\r\n\t\t\t\thardDeadline: null,\r\n\t\t\t\tsoftDeadline: null\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Test all features in real time',\r\n\t\t\t\tdescription: '',\r\n\t\t\t\ttype: 'True/False',\r\n\t\t\t\ttargetValue: 1,\r\n\t\t\t\tinitialValue: 0,\r\n\t\t\t\tunit: '',\r\n\t\t\t\tdeadline: 'No Custom Deadline',\r\n\t\t\t\thardDeadline: null,\r\n\t\t\t\tsoftDeadline: null\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n];\r\n","import {\r\n\tController,\r\n\tUseGuards,\r\n\tHttpStatus,\r\n\tPost,\r\n\tBody,\r\n\tGet\r\n} from '@nestjs/common';\r\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport { CrudController } from '../core';\r\nimport { KeyResultTemplate } from './keyresult-template.entity';\r\nimport { KeyresultTemplateService } from './keyresult-template.service';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('keyResultTemplate')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class KeyresultTemplateController extends CrudController<\r\n\tKeyResultTemplate\r\n> {\r\n\tconstructor(\r\n\t\tprivate readonly keyResultTemplateService: KeyresultTemplateService\r\n\t) {\r\n\t\tsuper(keyResultTemplateService);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Create KeyResult Template' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'KeyResult Template Created successfully',\r\n\t\ttype: KeyResultTemplate\r\n\t})\r\n\t@Post('/create')\r\n\tasync createGoal(@Body() entity: KeyResultTemplate): Promise<any> {\r\n\t\treturn this.keyResultTemplateService.create(entity);\r\n\t}\r\n\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get('all')\r\n\tasync getAll() {\r\n\t\treturn this.keyResultTemplateService.findAll();\r\n\t}\r\n}\r\n","import { Entity, Column, ManyToOne, RelationId, JoinColumn } from 'typeorm';\r\nimport {\r\n\tIKeyResultTemplate,\r\n\tKeyResultTypeEnum,\r\n\tKeyResultDeadlineEnum\r\n} from '@gauzy/models';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsOptional, IsEnum } from 'class-validator';\r\nimport { GoalTemplate } from '../goal-template/goal-template.entity';\r\nimport { GoalKPITemplate } from '../goal-kpi-template/goal-kpi-template.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('key_result_template')\r\nexport class KeyResultTemplate extends TenantOrganizationBase\r\n\timplements IKeyResultTemplate {\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\tname: string;\r\n\r\n\t@ApiProperty({ type: String, enum: KeyResultTypeEnum })\r\n\t@IsEnum(KeyResultTypeEnum)\r\n\t@Column()\r\n\ttype: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column({ nullable: true })\r\n\t@IsOptional()\r\n\tunit?: string;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@Column({ nullable: true })\r\n\t@IsOptional()\r\n\ttargetValue?: number;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@Column({ nullable: true })\r\n\t@IsOptional()\r\n\tinitialValue: number;\r\n\r\n\t@ApiProperty({ type: String, enum: KeyResultDeadlineEnum })\r\n\t@IsEnum(KeyResultDeadlineEnum)\r\n\t@Column()\r\n\tdeadline: string;\r\n\r\n\t@ApiProperty({ type: GoalKPITemplate })\r\n\t@ManyToOne((type) => GoalKPITemplate, { nullable: true })\r\n\t@JoinColumn({ name: 'kpiId' })\r\n\t@IsOptional()\r\n\tkpi?: GoalKPITemplate;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@RelationId((keyResult: KeyResultTemplate) => keyResult.kpi)\r\n\t@Column({ nullable: true })\r\n\tkpiId?: string;\r\n\r\n\t@ApiProperty({ type: GoalTemplate })\r\n\t@ManyToOne(\r\n\t\t(type) => GoalTemplate,\r\n\t\t(goalTemplate) => goalTemplate.keyResults,\r\n\t\t{\r\n\t\t\tonDelete: 'CASCADE'\r\n\t\t}\r\n\t)\r\n\t@JoinColumn({ name: 'goalId' })\r\n\tgoal: GoalTemplate;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@RelationId((keyResult: KeyResultTemplate) => keyResult.goal)\r\n\t@Column({ nullable: true })\r\n\treadonly goalId?: string;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { KeyresultTemplateController } from './keyresult-template.controller';\r\nimport { KeyresultTemplateService } from './keyresult-template.service';\r\nimport { KeyResultTemplate } from './keyresult-template.entity';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [TypeOrmModule.forFeature([KeyResultTemplate]), TenantModule],\r\n\tcontrollers: [KeyresultTemplateController],\r\n\tproviders: [KeyresultTemplateService],\r\n\texports: [KeyresultTemplateService]\r\n})\r\nexport class KeyresultTemplateModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { KeyResultTypeEnum } from '@gauzy/models';\r\nimport { KeyResultTemplate } from './keyresult-template.entity';\r\nimport { GoalTemplate } from '../goal-template/goal-template.entity';\r\nimport { GoalKPITemplate } from '../goal-kpi-template/goal-kpi-template.entity';\r\nimport * as faker from 'faker';\r\nimport { DEFAULT_KEY_RESULT_TEMPLATES } from './default-keyresult-templates';\r\n\r\nexport const createDefaultKeyResultTemplates = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant\r\n): Promise<KeyResultTemplate[]> => {\r\n\tconst defaultKeyResultTemplates = [];\r\n\tconst goalTemplates: GoalTemplate[] = await connection.manager.find(\r\n\t\tGoalTemplate\r\n\t);\r\n\tconst goalKPITemplates: GoalKPITemplate[] = await connection.manager.find(\r\n\t\tGoalKPITemplate\r\n\t);\r\n\tif (goalTemplates && goalTemplates.length > 0) {\r\n\t\tgoalTemplates.forEach((goal) => {\r\n\t\t\tconst keyResultsOfGoal = DEFAULT_KEY_RESULT_TEMPLATES.find(\r\n\t\t\t\t(goalData) => goalData.name === goal.name\r\n\t\t\t);\r\n\t\t\tkeyResultsOfGoal.keyResults.forEach(async (keyResultData) => {\r\n\t\t\t\tconst keyResult = new KeyResultTemplate();\r\n\t\t\t\tkeyResult.type = keyResultData.type;\r\n\r\n\t\t\t\tif (keyResult.type === KeyResultTypeEnum.TRUE_OR_FALSE) {\r\n\t\t\t\t\tkeyResult.initialValue = 0;\r\n\t\t\t\t\tkeyResult.targetValue = 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (keyResult.type === KeyResultTypeEnum.KPI) {\r\n\t\t\t\t\t\tkeyResult.kpi = faker.random.arrayElement(\r\n\t\t\t\t\t\t\tgoalKPITemplates\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tkeyResult.initialValue = keyResultData.initialValue;\r\n\t\t\t\t\tkeyResult.targetValue = keyResultData.targetValue;\r\n\t\t\t\t}\r\n\t\t\t\tkeyResult.unit = keyResultData.unit;\r\n\t\t\t\tkeyResult.name = keyResultData.name;\r\n\t\t\t\tkeyResult.deadline = keyResultData.deadline;\r\n\t\t\t\tkeyResult.goal = goal;\r\n\t\t\t\tkeyResult.organizationId = goal.organizationId;\r\n\t\t\t\tkeyResult.tenant = tenant;\r\n\t\t\t\tdefaultKeyResultTemplates.push(keyResult);\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\treturn await insertDefaultKeyResults(\r\n\t\t\tconnection,\r\n\t\t\tdefaultKeyResultTemplates\r\n\t\t);\r\n\t}\r\n};\r\n\r\nconst insertDefaultKeyResults = async (\r\n\tconnection: Connection,\r\n\tdefaultKeyResults: KeyResultTemplate[]\r\n): Promise<KeyResultTemplate[]> => {\r\n\treturn await connection.manager.save(defaultKeyResults);\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { TenantAwareCrudService } from '../core/crud/tenant-aware-crud.service';\r\nimport { KeyResultTemplate } from './keyresult-template.entity';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\n\r\n@Injectable()\r\nexport class KeyresultTemplateService extends TenantAwareCrudService<\r\n\tKeyResultTemplate\r\n> {\r\n\tconstructor(\r\n\t\t@InjectRepository(KeyResultTemplate)\r\n\t\tprivate readonly keyResultTemplateRepository: Repository<\r\n\t\t\tKeyResultTemplate\r\n\t\t>\r\n\t) {\r\n\t\tsuper(keyResultTemplateRepository);\r\n\t}\r\n}\r\n","import { KeyResultUpdateBulKDeleteHandler } from './keyresult-update.bulk.delete.handler';\r\n\r\nexport const CommandHandlers = [KeyResultUpdateBulKDeleteHandler];\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { KeyResultUpdateBulkDeleteCommand } from '..';\r\nimport { KeyResultUpdateService } from '../../keyresult-update.service';\r\n\r\n@CommandHandler(KeyResultUpdateBulkDeleteCommand)\r\nexport class KeyResultUpdateBulKDeleteHandler\r\n\timplements ICommandHandler<KeyResultUpdateBulkDeleteCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly keyResultUpdateService: KeyResultUpdateService\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: KeyResultUpdateBulkDeleteCommand\r\n\t): Promise<any> {\r\n\t\tconst { id } = command;\r\n\t\tconst updates = await this.keyResultUpdateService.findByKeyResultId(id);\r\n\t\tawait this.keyResultUpdateService.deleteBulkByKeyResultId(\r\n\t\t\tupdates.map((item) => item.id)\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n}\r\n","export { KeyResultUpdateBulkDeleteCommand } from './keyresult-update.bulk.delete.command';\r\n","import { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class KeyResultUpdateBulkDeleteCommand implements ICommand {\r\n\tstatic readonly type = '[KeyResultUpdate] Delete';\r\n\r\n\tconstructor(public readonly id: string) {}\r\n}\r\n","import {\r\n\tController,\r\n\tHttpStatus,\r\n\tGet,\r\n\tPost,\r\n\tBody,\r\n\tHttpCode,\r\n\tPut,\r\n\tParam,\r\n\tUseGuards,\r\n\tQuery,\r\n\tDelete\r\n} from '@nestjs/common';\r\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport { CrudController } from '../core';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { KeyResultUpdate } from './keyresult-update.entity';\r\nimport { KeyResultUpdateService } from './keyresult-update.service';\r\nimport { IKeyResultUpdate } from '@gauzy/models';\r\nimport { ParseJsonPipe } from '../shared';\r\nimport { CommandBus } from '@nestjs/cqrs';\r\nimport { KeyResultUpdateBulkDeleteCommand } from './commands';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('KeyResultsUpdate')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class KeyResultUpdateController extends CrudController<\r\n\tIKeyResultUpdate\r\n> {\r\n\tconstructor(\r\n\t\tprivate readonly commandBus: CommandBus,\r\n\t\tprivate readonly keyResultUpdateService: KeyResultUpdateService\r\n\t) {\r\n\t\tsuper(keyResultUpdateService);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Create an update' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Update created',\r\n\t\ttype: KeyResultUpdate\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@Post('/create')\r\n\tasync createKeyResult(@Body() entity: IKeyResultUpdate): Promise<any> {\r\n\t\treturn this.keyResultUpdateService.create(entity);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Get all updates of keyresult' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found updates',\r\n\t\ttype: KeyResultUpdate\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Updates not found'\r\n\t})\r\n\t@Get(':id')\r\n\tasync getAll(@Param('id') findInput: string) {\r\n\t\treturn this.keyResultUpdateService.findAll({\r\n\t\t\twhere: { key_result_id: findInput },\r\n\t\t\trelations: ['keyResult']\r\n\t\t});\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Update an existing keyresult update' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The update has been successfully edited.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Update not found'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Put(':id')\r\n\tasync update(\r\n\t\t@Param('id') id: string,\r\n\t\t@Body() entity: IKeyResultUpdate\r\n\t): Promise<IKeyResultUpdate> {\r\n\t\t//We are using create here because create calls the method save()\r\n\t\t//We need save() to save ManyToMany relations\r\n\t\ttry {\r\n\t\t\treturn await this.keyResultUpdateService.create({\r\n\t\t\t\tid,\r\n\t\t\t\t...entity\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Delete updates by Key Result Id'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: \"Found key result's updates\",\r\n\t\ttype: KeyResultUpdate\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'updates not found'\r\n\t})\r\n\t@Delete('deleteBulkByKeyResultId')\r\n\tasync deleteBulkByKeyResultId(\r\n\t\t@Query('data', ParseJsonPipe) data: any\r\n\t): Promise<any> {\r\n\t\tconst { id = null } = data;\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew KeyResultUpdateBulkDeleteCommand(id)\r\n\t\t);\r\n\t}\r\n}\r\n","import { Entity, Column, ManyToOne, RelationId, JoinColumn } from 'typeorm';\r\nimport { IKeyResultUpdate, KeyResultUpdateStatusEnum } from '@gauzy/models';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsEnum } from 'class-validator';\r\nimport { KeyResult } from '../keyresult/keyresult.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('key_result_update')\r\nexport class KeyResultUpdate extends TenantOrganizationBase\r\n\timplements IKeyResultUpdate {\r\n\t@ApiProperty({ type: Number })\r\n\t@Column()\r\n\tupdate: number;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@Column()\r\n\tprogress: number;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\towner: string;\r\n\r\n\t@ApiProperty({ type: String, enum: KeyResultUpdateStatusEnum })\r\n\t@IsEnum(KeyResultUpdateStatusEnum)\r\n\t@Column()\r\n\tstatus: string;\r\n\r\n\t@ApiProperty({ type: KeyResult })\r\n\t@ManyToOne((type) => KeyResult, (keyResult) => keyResult.update, {\r\n\t\tonDelete: 'CASCADE'\r\n\t})\r\n\t@JoinColumn({ name: 'keyResultId' })\r\n\tkeyResult: KeyResult;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@RelationId((keyResult: KeyResultUpdate) => keyResult.keyResult)\r\n\t@Column({ nullable: true })\r\n\tkeyResultId?: string;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { KeyResultUpdateService } from './keyresult-update.service';\r\nimport { KeyResultUpdateController } from './keyresult-update.controller';\r\nimport { KeyResultUpdate } from './keyresult-update.entity';\r\nimport { CqrsModule } from '@nestjs/cqrs';\r\nimport { CommandHandlers } from './commands/handlers';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([KeyResultUpdate]),\r\n\t\tCqrsModule,\r\n\t\tTenantModule\r\n\t],\r\n\tcontrollers: [KeyResultUpdateController],\r\n\tproviders: [KeyResultUpdateService, ...CommandHandlers],\r\n\texports: [KeyResultUpdateService]\r\n})\r\nexport class KeyResultUpdateModule {}\r\n","import { KeyResultUpdate } from './keyresult-update.entity';\r\nimport { Connection } from 'typeorm';\r\nimport { KeyResult } from '../keyresult/keyresult.entity';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport * as faker from 'faker';\r\nimport {\r\n\tKeyResultUpdateStatusEnum,\r\n\tKeyResultTypeEnum,\r\n\tKeyResultDeadlineEnum\r\n} from '@gauzy/models';\r\nimport * as moment from 'moment';\r\nimport { GoalTimeFrame } from '../goal-time-frame/goal-time-frame.entity';\r\nimport { Organization } from '../organization/organization.entity';\r\n\r\nexport const createDefaultKeyResultUpdates = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\torganization: Organization,\r\n\tkeyResults: KeyResult[] | void\r\n): Promise<KeyResultUpdate[]> => {\r\n\tconst defaultKeyResultUpdates = [];\r\n\tconst goalTimeFrames: GoalTimeFrame[] = await connection.manager.find(\r\n\t\tGoalTimeFrame\r\n\t);\r\n\r\n\tif (!keyResults) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: keyResults not found, DefaultKeyResultUpdates will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\tkeyResults.forEach(async (keyResult) => {\r\n\t\tconst numberOfUpdates = faker.random.number({ min: 2, max: 10 });\r\n\t\tfor (let i = 0; i < numberOfUpdates; i++) {\r\n\t\t\tconst startDate = goalTimeFrames.find(\r\n\t\t\t\t(element) => element.name === keyResult.goal.deadline\r\n\t\t\t).startDate;\r\n\t\t\tconst endDate = goalTimeFrames.find(\r\n\t\t\t\t(element) => element.name === keyResult.goal.deadline\r\n\t\t\t).endDate;\r\n\t\t\tif (moment().isAfter(startDate)) {\r\n\t\t\t\tconst keyResultUpdate = new KeyResultUpdate();\r\n\t\t\t\tkeyResultUpdate.owner = keyResult.owner.id;\r\n\t\t\t\tkeyResultUpdate.keyResult = keyResult;\r\n\t\t\t\tkeyResultUpdate.tenant = tenant;\r\n\t\t\t\tkeyResultUpdate.organization = organization;\r\n\t\t\t\tkeyResultUpdate.status = faker.random.arrayElement(\r\n\t\t\t\t\tObject.values(KeyResultUpdateStatusEnum)\r\n\t\t\t\t);\r\n\t\t\t\tkeyResultUpdate.update = faker.random.number({\r\n\t\t\t\t\tmin: keyResult.initialValue + 1,\r\n\t\t\t\t\tmax: keyResult.targetValue\r\n\t\t\t\t});\r\n\t\t\t\tif (\r\n\t\t\t\t\tkeyResult.deadline ===\r\n\t\t\t\t\tKeyResultDeadlineEnum.NO_CUSTOM_DEADLINE\r\n\t\t\t\t) {\r\n\t\t\t\t\tkeyResultUpdate.createdAt = faker.date.between(\r\n\t\t\t\t\t\tstartDate,\r\n\t\t\t\t\t\tendDate\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tkeyResultUpdate.createdAt = faker.date.between(\r\n\t\t\t\t\t\tstartDate,\r\n\t\t\t\t\t\tkeyResult.hardDeadline\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (keyResult.type !== KeyResultTypeEnum.TRUE_OR_FALSE) {\r\n\t\t\t\t\tconst diff = keyResult.targetValue - keyResult.initialValue;\r\n\t\t\t\t\tconst updateDiff =\r\n\t\t\t\t\t\tkeyResultUpdate.update - keyResult.initialValue;\r\n\r\n\t\t\t\t\tkeyResultUpdate.progress = Math.round(\r\n\t\t\t\t\t\t(Math.abs(updateDiff) / Math.abs(diff)) * 100\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tkeyResultUpdate.progress =\r\n\t\t\t\t\t\tkeyResultUpdate.update === 1 ? 100 : 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdefaultKeyResultUpdates.push(keyResultUpdate);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\treturn await insertDefaultKeyResultUpdates(\r\n\t\tconnection,\r\n\t\tdefaultKeyResultUpdates\r\n\t);\r\n};\r\n\r\nconst insertDefaultKeyResultUpdates = async (\r\n\tconnection: Connection,\r\n\tdefaultKeyResultUpdates: KeyResultUpdate[]\r\n): Promise<KeyResultUpdate[]> => {\r\n\treturn await connection.manager.save(defaultKeyResultUpdates);\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { KeyResultUpdate } from './keyresult-update.entity';\r\nimport { TenantAwareCrudService } from '../core/crud/tenant-aware-crud.service';\r\n\r\n@Injectable()\r\nexport class KeyResultUpdateService extends TenantAwareCrudService<\r\n\tKeyResultUpdate\r\n> {\r\n\tconstructor(\r\n\t\t@InjectRepository(KeyResultUpdate)\r\n\t\tprivate readonly keyResultUpdateRepository: Repository<KeyResultUpdate>\r\n\t) {\r\n\t\tsuper(keyResultUpdateRepository);\r\n\t}\r\n\r\n\tasync findByKeyResultId(keyResultId: string): Promise<KeyResultUpdate[]> {\r\n\t\treturn await this.repository\r\n\t\t\t.createQueryBuilder('key_result_update')\r\n\t\t\t.where('key_result_update.keyResultId = :keyResultId', {\r\n\t\t\t\tkeyResultId\r\n\t\t\t})\r\n\t\t\t.getMany();\r\n\t}\r\n\r\n\tasync deleteBulkByKeyResultId(ids: string[]) {\r\n\t\treturn await this.repository.delete(ids);\r\n\t}\r\n}\r\n","export const DEFAULT_KEY_RESULTS = [\r\n\t{\r\n\t\tname: 'Improve product performance',\r\n\t\tlevel: 'Organization',\r\n\t\tkeyResults: [\r\n\t\t\t{\r\n\t\t\t\tname: 'Get over 10000 new signups',\r\n\t\t\t\ttype: 'Numerical',\r\n\t\t\t\ttargetValue: 10000,\r\n\t\t\t\tinitialValue: 0,\r\n\t\t\t\tunit: 'signups',\r\n\t\t\t\tdeadline: 'No Custom Deadline',\r\n\t\t\t\thardDeadline: null,\r\n\t\t\t\tsoftDeadline: null\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Publish product reviews in over 50 publications',\r\n\t\t\t\ttype: 'Numerical',\r\n\t\t\t\ttargetValue: 50,\r\n\t\t\t\tinitialValue: 0,\r\n\t\t\t\tunit: 'publications',\r\n\t\t\t\tdeadline: 'No Custom Deadline',\r\n\t\t\t\thardDeadline: null,\r\n\t\t\t\tsoftDeadline: null\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tname: 'Successfully launch version 2 of our main product',\r\n\t\tlevel: 'Organization',\r\n\t\tkeyResults: [\r\n\t\t\t{\r\n\t\t\t\tname:\r\n\t\t\t\t\t'Reduce the average response time on the app to less than 500ms',\r\n\t\t\t\ttype: 'KPI',\r\n\t\t\t\ttargetValue: 500,\r\n\t\t\t\tinitialValue: 1000,\r\n\t\t\t\tunit: '',\r\n\t\t\t\tdeadline: 'No Custom Deadline',\r\n\t\t\t\thardDeadline: null,\r\n\t\t\t\tsoftDeadline: null\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tname: 'Redesign and launch our new landing page',\r\n\t\tlevel: 'Team',\r\n\t\tkeyResults: [\r\n\t\t\t{\r\n\t\t\t\tname:\r\n\t\t\t\t\t'Design new version of our site structure, navigation and all pages',\r\n\t\t\t\ttype: 'True/False',\r\n\t\t\t\ttargetValue: 1,\r\n\t\t\t\tinitialValue: 0,\r\n\t\t\t\tunit: '',\r\n\t\t\t\tdeadline: 'No Custom Deadline',\r\n\t\t\t\thardDeadline: null,\r\n\t\t\t\tsoftDeadline: null\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname:\r\n\t\t\t\t\t'Conduct stakeholder interviews with 10 people from sales and marketing',\r\n\t\t\t\ttype: 'Numerical',\r\n\t\t\t\ttargetValue: 10,\r\n\t\t\t\tinitialValue: 0,\r\n\t\t\t\tunit: 'interviews',\r\n\t\t\t\tdeadline: 'No Custom Deadline',\r\n\t\t\t\thardDeadline: null,\r\n\t\t\t\tsoftDeadline: null\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'With development and marketing, launch by September 1st',\r\n\t\t\t\ttype: 'True/False',\r\n\t\t\t\ttargetValue: 1,\r\n\t\t\t\tinitialValue: 0,\r\n\t\t\t\tunit: '',\r\n\t\t\t\tdeadline: 'Hard Deadline',\r\n\t\t\t\thardDeadline: '2020-08-31T18:30:00.000Z',\r\n\t\t\t\tsoftDeadline: null\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'User-test page prototypes on 10 people',\r\n\t\t\t\ttype: 'Numerical',\r\n\t\t\t\ttargetValue: 10,\r\n\t\t\t\tinitialValue: 0,\r\n\t\t\t\tunit: 'people',\r\n\t\t\t\tdeadline: 'No Custom Deadline',\r\n\t\t\t\thardDeadline: null,\r\n\t\t\t\tsoftDeadline: null\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname:\r\n\t\t\t\t\t'Test existing landing page and sub-pages on external users for understanding issues',\r\n\t\t\t\ttype: 'True/False',\r\n\t\t\t\ttargetValue: 1,\r\n\t\t\t\tinitialValue: 0,\r\n\t\t\t\tunit: '',\r\n\t\t\t\tdeadline: 'No Custom Deadline',\r\n\t\t\t\thardDeadline: null,\r\n\t\t\t\tsoftDeadline: null\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tname: 'Increase quality of releases and make sure they are timely',\r\n\t\tlevel: 'Team',\r\n\t\tkeyResults: [\r\n\t\t\t{\r\n\t\t\t\tname:\r\n\t\t\t\t\t'Reduce the number of priority bugs found in production to be less than 2',\r\n\t\t\t\ttype: 'KPI',\r\n\t\t\t\ttargetValue: 2,\r\n\t\t\t\tinitialValue: 15,\r\n\t\t\t\tunit: '',\r\n\t\t\t\tdeadline: 'No Custom Deadline',\r\n\t\t\t\thardDeadline: null,\r\n\t\t\t\tsoftDeadline: null\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Increase unit test coverage to 75% from current 45%',\r\n\t\t\t\ttype: 'Numerical',\r\n\t\t\t\ttargetValue: 45,\r\n\t\t\t\tinitialValue: 75,\r\n\t\t\t\tunit: '%',\r\n\t\t\t\tdeadline: 'No Custom Deadline',\r\n\t\t\t\thardDeadline: null,\r\n\t\t\t\tsoftDeadline: null\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tname: 'Identify problems with current user interface',\r\n\t\tlevel: 'Employee',\r\n\t\tkeyResults: [\r\n\t\t\t{\r\n\t\t\t\tname: 'Learn new skills to enhance creativity',\r\n\t\t\t\ttype: 'True/False',\r\n\t\t\t\ttargetValue: 1,\r\n\t\t\t\tinitialValue: 0,\r\n\t\t\t\tunit: '',\r\n\t\t\t\tdeadline: 'No Custom Deadline',\r\n\t\t\t\thardDeadline: null,\r\n\t\t\t\tsoftDeadline: null\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Provide solution to reduce time Lag by 85%',\r\n\t\t\t\ttype: 'True/False',\r\n\t\t\t\ttargetValue: 1,\r\n\t\t\t\tinitialValue: 0,\r\n\t\t\t\tunit: '',\r\n\t\t\t\tdeadline: 'No Custom Deadline',\r\n\t\t\t\thardDeadline: null,\r\n\t\t\t\tsoftDeadline: null\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname:\r\n\t\t\t\t\t'Identify areas where the product lags in more than 20% cases',\r\n\t\t\t\ttype: 'True/False',\r\n\t\t\t\ttargetValue: 1,\r\n\t\t\t\tinitialValue: 0,\r\n\t\t\t\tunit: '',\r\n\t\t\t\tdeadline: 'No Custom Deadline',\r\n\t\t\t\thardDeadline: null,\r\n\t\t\t\tsoftDeadline: null\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Test all features in real time',\r\n\t\t\t\tdescription: '',\r\n\t\t\t\ttype: 'True/False',\r\n\t\t\t\ttargetValue: 1,\r\n\t\t\t\tinitialValue: 0,\r\n\t\t\t\tunit: '',\r\n\t\t\t\tdeadline: 'No Custom Deadline',\r\n\t\t\t\thardDeadline: null,\r\n\t\t\t\tsoftDeadline: null\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n];\r\n","import {\r\n\tController,\r\n\tHttpStatus,\r\n\tGet,\r\n\tPost,\r\n\tBody,\r\n\tHttpCode,\r\n\tPut,\r\n\tParam,\r\n\tUseGuards,\r\n\tDelete\r\n} from '@nestjs/common';\r\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport { KeyResult } from './keyresult.entity';\r\nimport { CrudController } from '../core';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { KeyResultService } from './keyresult.service';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('KeyResults')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class KeyResultController extends CrudController<KeyResult> {\r\n\tconstructor(private readonly keyResultService: KeyResultService) {\r\n\t\tsuper(keyResultService);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Create a key result' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Key Result Created',\r\n\t\ttype: KeyResult\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Key Result not found'\r\n\t})\r\n\t@Post('/create')\r\n\tasync createKeyResult(@Body() entity: KeyResult): Promise<any> {\r\n\t\treturn this.keyResultService.create(entity);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Create Bulk key result' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Key Results Created',\r\n\t\ttype: KeyResult\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Key Result not found'\r\n\t})\r\n\t@Post('/createBulk')\r\n\tasync createBulkKeyResults(@Body() entity: KeyResult[]): Promise<any> {\r\n\t\treturn this.keyResultService.createBulk(entity);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Get key result by ID' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found Key Result',\r\n\t\ttype: KeyResult\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Key Result not found'\r\n\t})\r\n\t@Get(':id')\r\n\tasync getAll(@Param('id') findInput: string) {\r\n\t\treturn this.keyResultService.findAll({\r\n\t\t\twhere: { id: findInput },\r\n\t\t\trelations: ['updates', 'goal', 'lead', 'owner']\r\n\t\t});\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Update an existing keyresult' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The keyresult has been successfully edited.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Key Result not found'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Put(':id')\r\n\tasync update(\r\n\t\t@Param('id') id: string,\r\n\t\t@Body() entity: KeyResult\r\n\t): Promise<KeyResult> {\r\n\t\t//We are using create here because create calls the method save()\r\n\t\t//We need save() to save ManyToMany relations\r\n\t\ttry {\r\n\t\t\treturn await this.keyResultService.create({\r\n\t\t\t\tid,\r\n\t\t\t\t...entity\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Delete(':id')\r\n\tasync deleteKeyResult(@Param('id') id: string): Promise<any> {\r\n\t\treturn this.keyResultService.delete(id);\r\n\t}\r\n}\r\n","import {\r\n\tEntity,\r\n\tColumn,\r\n\tManyToOne,\r\n\tRelationId,\r\n\tJoinColumn,\r\n\tOneToMany\r\n} from 'typeorm';\r\nimport {\r\n\tIKeyResult,\r\n\tKeyResultTypeEnum,\r\n\tKeyResultDeadlineEnum\r\n} from '@gauzy/models';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsOptional, IsEnum } from 'class-validator';\r\nimport { Goal } from '../goal/goal.entity';\r\nimport { KeyResultUpdate } from '../keyresult-update/keyresult-update.entity';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { OrganizationProject } from '../organization-projects/organization-projects.entity';\r\nimport { Task } from '../tasks/task.entity';\r\nimport { GoalKPI } from '../goal-kpi/goal-kpi.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('key_result')\r\nexport class KeyResult extends TenantOrganizationBase implements IKeyResult {\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\tname: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\t@IsOptional()\r\n\tdescription?: string;\r\n\r\n\t@ApiProperty({ type: String, enum: KeyResultTypeEnum })\r\n\t@IsEnum(KeyResultTypeEnum)\r\n\t@Column()\r\n\ttype: string;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@Column({ nullable: true })\r\n\t@IsOptional()\r\n\ttargetValue?: number;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@Column({ nullable: true })\r\n\t@IsOptional()\r\n\tinitialValue: number;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column({ nullable: true })\r\n\t@IsOptional()\r\n\tunit?: string;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@Column()\r\n\tupdate: number;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@Column()\r\n\tprogress: number;\r\n\r\n\t@ApiProperty({ type: Employee })\r\n\t@ManyToOne((type) => Employee)\r\n\t@JoinColumn()\r\n\towner: Employee;\r\n\r\n\t@ApiProperty({ type: Employee })\r\n\t@ManyToOne((type) => Employee, { nullable: true })\r\n\t@JoinColumn()\r\n\t@IsOptional()\r\n\tlead?: Employee;\r\n\r\n\t@ApiProperty({ type: OrganizationProject })\r\n\t@ManyToOne((type) => OrganizationProject, { nullable: true })\r\n\t@JoinColumn({ name: 'projectId' })\r\n\t@IsOptional()\r\n\tproject?: OrganizationProject;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@RelationId((keyResult: KeyResult) => keyResult.project)\r\n\t@Column({ nullable: true })\r\n\treadonly projectId?: string;\r\n\r\n\t@ApiProperty({ type: Task })\r\n\t@ManyToOne((type) => Task, { nullable: true })\r\n\t@JoinColumn({ name: 'taskId' })\r\n\t@IsOptional()\r\n\ttask?: Task;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@RelationId((keyResult: KeyResult) => keyResult.task)\r\n\t@Column({ nullable: true })\r\n\treadonly taskId?: string;\r\n\r\n\t@ApiProperty({ type: GoalKPI })\r\n\t@ManyToOne((type) => GoalKPI, { nullable: true })\r\n\t@JoinColumn({ name: 'kpiId' })\r\n\t@IsOptional()\r\n\tkpi?: GoalKPI;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@RelationId((keyResult: KeyResult) => keyResult.kpi)\r\n\t@Column({ nullable: true })\r\n\tkpiId?: string;\r\n\r\n\t@ApiProperty({ type: String, enum: KeyResultDeadlineEnum })\r\n\t@IsEnum(KeyResultDeadlineEnum)\r\n\t@Column()\r\n\tdeadline: string;\r\n\r\n\t@ApiProperty({ type: Date })\r\n\t@Column({ nullable: true })\r\n\t@IsOptional()\r\n\thardDeadline?: Date;\r\n\r\n\t@ApiProperty({ type: Date })\r\n\t@Column({ nullable: true })\r\n\t@IsOptional()\r\n\tsoftDeadline?: Date;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\t@IsOptional()\r\n\tstatus?: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column({ nullable: true })\r\n\t@IsOptional()\r\n\tweight?: string;\r\n\r\n\t@ApiProperty({ type: Goal })\r\n\t@ManyToOne((type) => Goal, (goal) => goal.keyResults, {\r\n\t\tonDelete: 'CASCADE'\r\n\t})\r\n\t@JoinColumn({ name: 'goalId' })\r\n\tgoal: Goal;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@RelationId((keyResult: KeyResult) => keyResult.goal)\r\n\t@Column({ nullable: true })\r\n\treadonly goalId?: string;\r\n\r\n\t@ApiProperty({ type: KeyResultUpdate })\r\n\t@OneToMany(\r\n\t\t(type) => KeyResultUpdate,\r\n\t\t(keyResultUpdate) => keyResultUpdate.keyResult\r\n\t)\r\n\t@IsOptional()\r\n\tupdates?: KeyResultUpdate[];\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { KeyResult } from './keyresult.entity';\r\nimport { KeyResultService } from './keyresult.service';\r\nimport { KeyResultController } from './keyresult.controller';\r\nimport { CqrsModule } from '@nestjs/cqrs';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [TypeOrmModule.forFeature([KeyResult]), CqrsModule, TenantModule],\r\n\tcontrollers: [KeyResultController],\r\n\tproviders: [KeyResultService],\r\n\texports: [KeyResultService]\r\n})\r\nexport class KeyResultModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport * as faker from 'faker';\r\nimport { KeyResult } from './keyresult.entity';\r\nimport {\r\n\tKeyResultDeadlineEnum,\r\n\tKeyResultTypeEnum,\r\n\tKeyResultWeightEnum\r\n} from '@gauzy/models';\r\nimport { KeyResultUpdate } from '../keyresult-update/keyresult-update.entity';\r\nimport { compareAsc } from 'date-fns';\r\nimport * as moment from 'moment';\r\nimport { GoalKPI } from '../goal-kpi/goal-kpi.entity';\r\nimport { DEFAULT_KEY_RESULTS } from './default-keyresults';\r\n\r\nexport const createDefaultKeyResults = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\temployees: Employee[],\r\n\tgoals\r\n): Promise<KeyResult[]> => {\r\n\tconst defaultKeyResults = [];\r\n\tconst goalKPIs: GoalKPI[] = await connection.manager.find(GoalKPI);\r\n\tif (goals && goals.length > 0) {\r\n\t\tgoals.forEach((goal) => {\r\n\t\t\tconst keyResultsOfGoal = DEFAULT_KEY_RESULTS.find(\r\n\t\t\t\t(goalData) => goalData.name === goal.name\r\n\t\t\t);\r\n\t\t\tkeyResultsOfGoal.keyResults.forEach((keyResultData) => {\r\n\t\t\t\tconst keyResult = new KeyResult();\r\n\t\t\t\tkeyResult.deadline = keyResultData.deadline;\r\n\t\t\t\tif (\r\n\t\t\t\t\tkeyResult.deadline !==\r\n\t\t\t\t\tKeyResultDeadlineEnum.NO_CUSTOM_DEADLINE\r\n\t\t\t\t) {\r\n\t\t\t\t\tkeyResult.hardDeadline = keyResultData.hardDeadline;\r\n\t\t\t\t\tkeyResult.softDeadline = null;\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tkeyResult.deadline ===\r\n\t\t\t\t\t\tKeyResultDeadlineEnum.HARD_AND_SOFT_DEADLINE\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tkeyResult.softDeadline = keyResultData.softDeadline;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tkeyResult.hardDeadline = null;\r\n\t\t\t\t\tkeyResult.softDeadline = null;\r\n\t\t\t\t}\r\n\t\t\t\tkeyResult.owner = faker.random.arrayElement(employees);\r\n\t\t\t\tkeyResult.lead = faker.random.arrayElement(employees);\r\n\t\t\t\tkeyResult.type = keyResultData.type;\r\n\r\n\t\t\t\tif (keyResult.type === KeyResultTypeEnum.TRUE_OR_FALSE) {\r\n\t\t\t\t\tkeyResult.initialValue = 0;\r\n\t\t\t\t\tkeyResult.targetValue = 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (keyResultData.type === KeyResultTypeEnum.KPI) {\r\n\t\t\t\t\t\tkeyResult.kpi = faker.random.arrayElement(goalKPIs);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tkeyResult.initialValue = keyResultData.initialValue;\r\n\t\t\t\t\tkeyResult.targetValue = keyResultData.targetValue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tkeyResult.unit = keyResultData.unit;\r\n\r\n\t\t\t\tkeyResult.progress = 0;\r\n\t\t\t\tkeyResult.name = keyResultData.name;\r\n\t\t\t\tkeyResult.goal = goal;\r\n\t\t\t\tkeyResult.organizationId = goal.organizationId;\r\n\t\t\t\tkeyResult.tenant = tenant;\r\n\t\t\t\tkeyResult.update = keyResult.initialValue;\r\n\t\t\t\tkeyResult.status = 'none';\r\n\t\t\t\tkeyResult.description = ' ';\r\n\t\t\t\tkeyResult.weight = faker.random.arrayElement([\r\n\t\t\t\t\tKeyResultWeightEnum.DEFAULT,\r\n\t\t\t\t\tKeyResultWeightEnum.INCREASE_BY_2X,\r\n\t\t\t\t\tKeyResultWeightEnum.INCREASE_BY_4X\r\n\t\t\t\t]);\r\n\t\t\t\tdefaultKeyResults.push(keyResult);\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tawait insertDefaultKeyResults(connection, defaultKeyResults);\r\n\r\n\t\treturn defaultKeyResults;\r\n\t}\r\n};\r\n\r\nexport const updateDefaultKeyResultProgress = async (\r\n\tconnection: Connection\r\n): Promise<KeyResult[]> => {\r\n\tconst keyResults: KeyResult[] = await connection.manager.find(KeyResult, {\r\n\t\trelations: ['updates']\r\n\t});\r\n\tkeyResults.forEach(async (keyResult) => {\r\n\t\tconst sortedUpdates: KeyResultUpdate[] = [...keyResult.updates].sort(\r\n\t\t\t(a, b) => {\r\n\t\t\t\treturn compareAsc(new Date(a.createdAt), new Date(b.createdAt));\r\n\t\t\t}\r\n\t\t);\r\n\t\tconst recentUpdate = sortedUpdates[sortedUpdates.length - 1];\r\n\t\tif (recentUpdate) {\r\n\t\t\tawait connection.manager.update(\r\n\t\t\t\tKeyResult,\r\n\t\t\t\t{ id: keyResult.id },\r\n\t\t\t\t{\r\n\t\t\t\t\tprogress: recentUpdate.progress,\r\n\t\t\t\t\tupdate: recentUpdate.update\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\t});\r\n\treturn keyResults;\r\n};\r\n\r\nconst insertDefaultKeyResults = async (\r\n\tconnection: Connection,\r\n\tdefaultKeyResults: KeyResult[]\r\n) => {\r\n\tawait connection\r\n\t\t.createQueryBuilder()\r\n\t\t.insert()\r\n\t\t.into(KeyResult)\r\n\t\t.values(defaultKeyResults)\r\n\t\t.execute();\r\n};\r\n\r\nexport const createRandomKeyResult = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantEmployeeMap: Map<Tenant, Employee[]>,\r\n\tgoals\r\n): Promise<KeyResult[]> => {\r\n\tif (!tenantEmployeeMap) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: tenantEmployeeMap not found, Random KeyResult will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst keyResults: KeyResult[] = [];\r\n\r\n\tfor (const tenant of tenants) {\r\n\t\tconst tenantEmployees = tenantEmployeeMap.get(tenant);\r\n\t\tfor (const goal of goals) {\r\n\t\t\tconst keyResult = new KeyResult();\r\n\r\n\t\t\tkeyResult.deadline = faker.random.arrayElement(\r\n\t\t\t\tObject.keys(KeyResultDeadlineEnum)\r\n\t\t\t);\r\n\t\t\tif (\r\n\t\t\t\tkeyResult.deadline !== KeyResultDeadlineEnum.NO_CUSTOM_DEADLINE\r\n\t\t\t) {\r\n\t\t\t\tkeyResult.hardDeadline = moment(new Date())\r\n\t\t\t\t\t.add(1, 'days')\r\n\t\t\t\t\t.toDate();\r\n\t\t\t\tkeyResult.softDeadline = null;\r\n\t\t\t\tif (\r\n\t\t\t\t\tkeyResult.deadline ===\r\n\t\t\t\t\tKeyResultDeadlineEnum.HARD_AND_SOFT_DEADLINE\r\n\t\t\t\t) {\r\n\t\t\t\t\tkeyResult.softDeadline = moment(new Date())\r\n\t\t\t\t\t\t.add(3, 'days')\r\n\t\t\t\t\t\t.toDate();\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tkeyResult.hardDeadline = null;\r\n\t\t\t\tkeyResult.softDeadline = null;\r\n\t\t\t}\r\n\t\t\tkeyResult.owner = faker.random.arrayElement(tenantEmployees);\r\n\t\t\tkeyResult.lead = faker.random.arrayElement(tenantEmployees);\r\n\t\t\tkeyResult.type = faker.random.arrayElement(\r\n\t\t\t\tObject.keys(KeyResultTypeEnum)\r\n\t\t\t);\r\n\r\n\t\t\tif (keyResult.type === KeyResultTypeEnum.TRUE_OR_FALSE) {\r\n\t\t\t\tkeyResult.initialValue = 0;\r\n\t\t\t\tkeyResult.targetValue = 1;\r\n\t\t\t} else {\r\n\t\t\t\tkeyResult.targetValue = faker.random.number(5000);\r\n\t\t\t\tkeyResult.initialValue = faker.random.number(\r\n\t\t\t\t\tkeyResult.targetValue\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tkeyResult.unit = faker.random.arrayElement([\r\n\t\t\t\t'signups',\r\n\t\t\t\t'publications',\r\n\t\t\t\t'interviews',\r\n\t\t\t\t'people',\r\n\t\t\t\t'%'\r\n\t\t\t]);\r\n\r\n\t\t\tkeyResult.progress = 0;\r\n\t\t\tkeyResult.name = faker.name.jobTitle();\r\n\t\t\tkeyResult.goal = goal;\r\n\t\t\tkeyResult.organizationId = goal.organizationId;\r\n\t\t\tkeyResult.tenant = tenant;\r\n\t\t\tkeyResult.update = keyResult.initialValue;\r\n\t\t\tkeyResult.status = 'none';\r\n\t\t\tkeyResult.description = ' ';\r\n\t\t\tkeyResult.weight = faker.random.arrayElement([\r\n\t\t\t\tKeyResultWeightEnum.DEFAULT,\r\n\t\t\t\tKeyResultWeightEnum.INCREASE_BY_2X,\r\n\t\t\t\tKeyResultWeightEnum.INCREASE_BY_4X\r\n\t\t\t]);\r\n\r\n\t\t\tkeyResults.push(keyResult);\r\n\t\t}\r\n\t}\r\n\tawait connection.manager.save(keyResults);\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { KeyResult } from './keyresult.entity';\r\nimport { TenantAwareCrudService } from '../core/crud/tenant-aware-crud.service';\r\n\r\n@Injectable()\r\nexport class KeyResultService extends TenantAwareCrudService<KeyResult> {\r\n\tconstructor(\r\n\t\t@InjectRepository(KeyResult)\r\n\t\tprivate readonly keyResultRepository: Repository<KeyResult>\r\n\t) {\r\n\t\tsuper(keyResultRepository);\r\n\t}\r\n\r\n\tasync createBulk(input: KeyResult[]) {\r\n\t\treturn await this.repository.save(input);\r\n\t}\r\n}\r\n","import { Controller, Get, Param, Post, Body, UseGuards } from '@nestjs/common';\r\nimport { ApiTags } from '@nestjs/swagger';\r\nimport { CrudController } from '../core';\r\nimport { Language } from './language.entity';\r\nimport { LanguageService } from './language.service';\r\nimport { PermissionGuard } from '../shared/guards/auth/permission.guard';\r\nimport { PermissionsEnum } from '@gauzy/models';\r\nimport { Permissions } from '../shared/decorators/permissions';\r\n@ApiTags('Languages')\r\n@Controller()\r\nexport class LanguageController extends CrudController<Language> {\r\n\tconstructor(private readonly languageService: LanguageService) {\r\n\t\tsuper(languageService);\r\n\t}\r\n\r\n\t@Get('getByName/:name')\r\n\tasync findByName(@Param('name') name: string): Promise<Language> {\r\n\t\treturn this.languageService.findOneByName(name);\r\n\t}\r\n\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_TAGS_EDIT)\r\n\t@Post()\r\n\tasync createRecord(@Body() entity: Language): Promise<any> {\r\n\t\treturn this.languageService.create(entity);\r\n\t}\r\n}\r\n","import { Base } from '../core/entities/base';\r\nimport { Entity, Column, Unique } from 'typeorm';\r\nimport { ILanguage } from '@gauzy/models';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsOptional } from 'class-validator';\r\n\r\n@Entity('language')\r\n@Unique(['name'])\r\nexport class Language extends Base implements ILanguage {\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\tname?: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column({ nullable: true })\r\n\t@IsOptional()\r\n\tcode?: string;\r\n\r\n\t@ApiProperty({ type: Boolean, default: false })\r\n\t@Column({ default: true, nullable: true })\r\n\t@IsOptional()\r\n\tis_system?: boolean;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\tdescription?: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\tcolor?: string;\r\n}\r\n","import { LanguageService } from './language.service';\r\nimport { LanguageController } from './language.controller';\r\nimport { Language } from './language.entity';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { Module } from '@nestjs/common';\r\nimport { UserModule } from '../user/user.module';\r\n\r\n@Module({\r\n\timports: [TypeOrmModule.forFeature([Language]), UserModule],\r\n\tcontrollers: [LanguageController],\r\n\tproviders: [LanguageService],\r\n\texports: [LanguageService]\r\n})\r\nexport class LanguageModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { Language } from './language.entity';\r\n\r\nexport const createLanguages = async (\r\n\tconnection: Connection\r\n): Promise<Language[]> => {\r\n\tconst languages: Language[] = [];\r\n\tconst languageItems = [\r\n\t\t{ name: 'English', code: 'en', is_system: true },\r\n\t\t{ name: 'Bulgarian', code: 'bg', is_system: true },\r\n\t\t{ name: 'Hebrew', code: 'he', is_system: true },\r\n\t\t{ name: 'Russian', code: 'ru', is_system: true }\r\n\t];\r\n\r\n\tfor (const item of languageItems) {\r\n\t\tconst language = new Language();\r\n\t\tlanguage.name = item.name;\r\n\t\tlanguage.code = item.code;\r\n\t\tlanguage.is_system = item.is_system || false;\r\n\t\tlanguage.description = '';\r\n\t\tlanguage.color = '#479bfa';\r\n\t\tlanguages.push(language);\r\n\t}\r\n\r\n\tawait connection\r\n\t\t.createQueryBuilder()\r\n\t\t.insert()\r\n\t\t.into(Language)\r\n\t\t.values(languages)\r\n\t\t.execute();\r\n\r\n\treturn languages;\r\n};\r\n","import { Repository } from 'typeorm';\r\nimport { Language } from './language.entity';\r\nimport { CrudService } from '../core';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\n\r\n@Injectable()\r\nexport class LanguageService extends CrudService<Language> {\r\n\tconstructor(\r\n\t\t@InjectRepository(Language)\r\n\t\tprivate readonly tagRepository: Repository<Language>\r\n\t) {\r\n\t\tsuper(tagRepository);\r\n\t}\r\n\r\n\tasync findOneByName(name: string): Promise<Language> {\r\n\t\tconst query = this.repository\r\n\t\t\t.createQueryBuilder('tag')\r\n\t\t\t.where('\"tag\".\"name\" = :name', {\r\n\t\t\t\tname\r\n\t\t\t});\r\n\t\tconst item = await query.getOne();\r\n\t\treturn item;\r\n\t}\r\n}\r\n","export const DEFAULT_ORGANIZATION_AWARDS = {\r\n\t'Top Software Development Company': 2015,\r\n\t'Upwork Top Rated Development Company 2019': 2019,\r\n\t'Upwork Top Rated Development Company 2018': 2018,\r\n\t'Upwork Top Rated Development Company 2017': 2017\r\n};\r\n","import {\r\n\tController,\r\n\tUseGuards,\r\n\tHttpStatus,\r\n\tHttpCode,\r\n\tPost,\r\n\tBody,\r\n\tDelete,\r\n\tParam,\r\n\tPut,\r\n\tGet,\r\n\tQuery\r\n} from '@nestjs/common';\r\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport { CrudController } from '../core/crud/crud.controller';\r\nimport { OrganizationAwardsService } from './organization-awards.service';\r\nimport { OrganizationAwards } from './organization-awards.entity';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { DeepPartial } from 'typeorm';\r\nimport { QueryDeepPartialEntity } from 'typeorm/query-builder/QueryPartialEntity';\r\nimport { IPagination } from '../core/crud';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('OrganizationAwards')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class OrganizationAwardsController extends CrudController<\r\n\tOrganizationAwards\r\n> {\r\n\tconstructor(\r\n\t\tprivate readonly organizationAwardsService: OrganizationAwardsService\r\n\t) {\r\n\t\tsuper(organizationAwardsService);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Create new record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully created.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.CREATED)\r\n\t@Post()\r\n\tasync create(\r\n\t\t@Body() entity: DeepPartial<OrganizationAwards>\r\n\t): Promise<OrganizationAwards> {\r\n\t\treturn this.organizationAwardsService.create(entity);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Update an existing record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully edited.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Put(':id')\r\n\tasync update(\r\n\t\t@Param('id') id: string,\r\n\t\t@Body() entity: QueryDeepPartialEntity<OrganizationAwards>\r\n\t): Promise<any> {\r\n\t\treturn this.organizationAwardsService.update(id, entity);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Delete record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NO_CONTENT,\r\n\t\tdescription: 'The record has been successfully deleted'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Delete(':id')\r\n\tasync delete(@Param('id') id: string): Promise<any> {\r\n\t\treturn this.organizationAwardsService.delete(id);\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find Organization Awards.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found Organization Awards',\r\n\t\ttype: OrganizationAwards\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get()\r\n\tasync findAwardsByOrgId(\r\n\t\t@Query('data') data: string\r\n\t): Promise<IPagination<OrganizationAwards>> {\r\n\t\tconst { findInput } = JSON.parse(data);\r\n\t\treturn this.organizationAwardsService.findAll({\r\n\t\t\twhere: findInput\r\n\t\t});\r\n\t}\r\n}\r\n","import { Column, Entity, Index } from 'typeorm';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsNotEmpty, IsString } from 'class-validator';\r\nimport { IOrganizationAwards } from '@gauzy/models';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('organization_award')\r\nexport class OrganizationAwards extends TenantOrganizationBase\r\n\timplements IOrganizationAwards {\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Index()\r\n\t@Column()\r\n\tname: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Column()\r\n\tyear: string;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { OrganizationAwards } from './organization-awards.entity';\r\nimport { OrganizationAwardsController } from './organization-awards.controller';\r\nimport { OrganizationAwardsService } from './organization-awards.service';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [TypeOrmModule.forFeature([OrganizationAwards]), TenantModule],\r\n\tcontrollers: [OrganizationAwardsController],\r\n\tproviders: [OrganizationAwardsService],\r\n\texports: [OrganizationAwardsService]\r\n})\r\nexport class OrganizationAwardsModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { OrganizationAwards } from './organization-awards.entity';\r\nimport * as faker from 'faker';\r\nimport { DEFAULT_ORGANIZATION_AWARDS } from './default-organization-awards';\r\n\r\nexport const createDefaultAwards = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\torganizations: Organization[]\r\n): Promise<OrganizationAwards[]> => {\r\n\tconst awards: OrganizationAwards[] = [];\r\n\tconst awardsNames = Object.keys(DEFAULT_ORGANIZATION_AWARDS);\r\n\tfor (const org of organizations) {\r\n\t\tfor (const awardsName of awardsNames) {\r\n\t\t\tconst award = new OrganizationAwards();\r\n\t\t\taward.name = awardsName;\r\n\t\t\taward.year = DEFAULT_ORGANIZATION_AWARDS[awardsName];\r\n\t\t\taward.organization = org;\r\n\t\t\taward.tenant = tenant;\r\n\t\t\tawards.push(award);\r\n\t\t}\r\n\t}\r\n\treturn await connection.manager.save(awards);\r\n};\r\n\r\nexport const createRandomAwards = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantOrganizationsMap: Map<Tenant, Organization[]>\r\n): Promise<OrganizationAwards[]> => {\r\n\tconst awards: OrganizationAwards[] = [];\r\n\tfor (const tenant of tenants) {\r\n\t\tconst organizations = tenantOrganizationsMap.get(tenant);\r\n\t\tconst awardsData = [\r\n\t\t\t'Best Product',\r\n\t\t\t'Best Revenue',\r\n\t\t\t'Best Idea',\r\n\t\t\t'Rising Star Product'\r\n\t\t];\r\n\r\n\t\tfor (const org of organizations) {\r\n\t\t\tfor (let i = 0; i < awardsData.length; i++) {\r\n\t\t\t\tconst award = new OrganizationAwards();\r\n\t\t\t\taward.name = awardsData[i];\r\n\t\t\t\taward.year = faker.random\r\n\t\t\t\t\t.number({ min: 1990, max: 2020 })\r\n\t\t\t\t\t.toString();\r\n\t\t\t\taward.organization = org;\r\n\t\t\t\taward.tenant = tenant;\r\n\t\t\t\tawards.push(award);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn await connection.manager.save(awards);\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { CrudService } from '../core/crud/crud.service';\r\nimport { OrganizationAwards } from './organization-awards.entity';\r\n\r\n@Injectable()\r\nexport class OrganizationAwardsService extends CrudService<OrganizationAwards> {\r\n\tconstructor(\r\n\t\t@InjectRepository(OrganizationAwards)\r\n\t\tprivate readonly organizationAwardsRepository: Repository<\r\n\t\t\tOrganizationAwards\r\n\t\t>\r\n\t) {\r\n\t\tsuper(organizationAwardsRepository);\r\n\t}\r\n}\r\n","import { OrganizationContactEditByEmployeeHandler } from './organization-contact.edit-by-employee.handler';\r\nimport { OrganizationContactCreateHandler } from './organization-contact-create.handler';\r\n\r\nexport const CommandHandlers = [\r\n\tOrganizationContactEditByEmployeeHandler,\r\n\tOrganizationContactCreateHandler\r\n];\r\n","import { IOrganizationContact } from '@gauzy/models';\r\nimport { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { OrganizationContactCreateCommand } from '../organization-contact-create.command';\r\nimport { OrganizationContactService } from '../../organization-contact.service';\r\n\r\n@CommandHandler(OrganizationContactCreateCommand)\r\nexport class OrganizationContactCreateHandler\r\n\timplements ICommandHandler<OrganizationContactCreateCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly organizationContactService: OrganizationContactService\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: OrganizationContactCreateCommand\r\n\t): Promise<IOrganizationContact> {\r\n\t\tconst { input } = command;\r\n\r\n\t\treturn await this.organizationContactService.create(input);\r\n\t}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { UpdateEntityByMembersHandler } from '../../../shared';\r\nimport { OrganizationContactService } from '../../organization-contact.service';\r\nimport { OrganizationContactEditByEmployeeCommand } from '../organization-contact.edit-by-employee.command';\r\n\r\n@CommandHandler(OrganizationContactEditByEmployeeCommand)\r\nexport class OrganizationContactEditByEmployeeHandler\r\n\textends UpdateEntityByMembersHandler\r\n\timplements ICommandHandler<OrganizationContactEditByEmployeeCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly organizationContactService: OrganizationContactService\r\n\t) {\r\n\t\tsuper(organizationContactService);\r\n\t}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: OrganizationContactEditByEmployeeCommand\r\n\t): Promise<any> {\r\n\t\treturn this.executeCommand(command.input);\r\n\t}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { IOrganizationContactCreateInput } from '@gauzy/models';\r\n\r\nexport class OrganizationContactCreateCommand implements ICommand {\r\n\tstatic readonly type = '[OrganizationContact] Create Organization Contact';\r\n\r\n\tconstructor(public readonly input: IOrganizationContactCreateInput) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { IEditEntityByMemberInput as IOrganizationDepartmentEditByEmployeeInput } from '@gauzy/models';\r\n\r\nexport class OrganizationContactEditByEmployeeCommand implements ICommand {\r\n\tstatic readonly type = '[OrganizationContact] Edit By Employee';\r\n\r\n\tconstructor(\r\n\t\tpublic readonly input: IOrganizationDepartmentEditByEmployeeInput\r\n\t) {}\r\n}\r\n","import { IEditEntityByMemberInput, PermissionsEnum } from '@gauzy/models';\r\nimport {\r\n\tBody,\r\n\tController,\r\n\tGet,\r\n\tHttpCode,\r\n\tHttpStatus,\r\n\tParam,\r\n\tPut,\r\n\tQuery,\r\n\tUseGuards\r\n} from '@nestjs/common';\r\nimport { CommandBus } from '@nestjs/cqrs';\r\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\r\nimport { IPagination } from '../core';\r\nimport { CrudController } from '../core/crud/crud.controller';\r\nimport { OrganizationContactEditByEmployeeCommand } from './commands/organization-contact.edit-by-employee.command';\r\nimport { OrganizationContact } from './organization-contact.entity';\r\nimport { OrganizationContactService } from './organization-contact.service';\r\nimport { PermissionGuard } from '../shared/guards/auth/permission.guard';\r\nimport { Permissions } from '../shared/decorators/permissions';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\nimport { ParseJsonPipe } from '../shared/pipes/parse-json.pipe';\r\n\r\n@ApiTags('OrganizationContact')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class OrganizationContactController extends CrudController<\r\n\tOrganizationContact\r\n> {\r\n\tconstructor(\r\n\t\tprivate readonly organizationContactService: OrganizationContactService,\r\n\t\tprivate readonly commandBus: CommandBus\r\n\t) {\r\n\t\tsuper(organizationContactService);\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find all organization projects by Employee.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found projects',\r\n\t\ttype: OrganizationContact\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get('employee/:id')\r\n\tasync findByEmployee(\r\n\t\t@Param('id') id: string,\r\n\t\t@Query('data', ParseJsonPipe) data: any\r\n\t): Promise<IPagination<OrganizationContact>> {\r\n\t\treturn this.organizationContactService.findByEmployee(id, data);\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find all organization contacts recurring expense.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found contacts recurring expense',\r\n\t\ttype: OrganizationContact\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get()\r\n\tasync findAllOrganizationContacts(\r\n\t\t@Query('data', ParseJsonPipe) data: any\r\n\t): Promise<IPagination<OrganizationContact>> {\r\n\t\treturn this.organizationContactService.findAllOrganizationContacts(\r\n\t\t\tdata\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Update an existing record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully edited.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_EMPLOYEES_EDIT)\r\n\t@Put('employee')\r\n\tasync updateEmployee(\r\n\t\t@Body() entity: IEditEntityByMemberInput\r\n\t): Promise<any> {\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew OrganizationContactEditByEmployeeCommand(entity)\r\n\t\t);\r\n\t}\r\n}\r\n","import {\r\n\tColumn,\r\n\tEntity,\r\n\tIndex,\r\n\tJoinColumn,\r\n\tManyToMany,\r\n\tOneToMany,\r\n\tJoinTable,\r\n\tRelationId,\r\n\tManyToOne\r\n} from 'typeorm';\r\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\r\nimport {\r\n\tIsNotEmpty,\r\n\tIsString,\r\n\tIsEmail,\r\n\tIsOptional,\r\n\tIsEnum\r\n} from 'class-validator';\r\nimport {\r\n\tIOrganizationContact,\r\n\tContactOrganizationInviteStatus,\r\n\tContactType,\r\n\tITag,\r\n\tIContact,\r\n\tIOrganizationProject,\r\n\tIInvoice,\r\n\tIEmployee,\r\n\tIPayment,\r\n\tOrganizationContactBudgetTypeEnum\r\n} from '@gauzy/models';\r\nimport { OrganizationProject } from '../organization-projects/organization-projects.entity';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { Invoice } from '../invoice/invoice.entity';\r\nimport { Tag } from '../tags/tag.entity';\r\nimport { Contact } from '../contact/contact.entity';\r\nimport { Payment } from '../payment/payment.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\nimport { Proposal } from '../proposal/proposal.entity';\r\n\r\n@Entity('organization_contact')\r\nexport class OrganizationContact\r\n\textends TenantOrganizationBase\r\n\timplements IOrganizationContact {\r\n\t@ApiProperty()\r\n\t@ManyToMany((type) => Tag, (tag) => tag.organizationContact)\r\n\t@JoinTable({\r\n\t\tname: 'tag_organization_contact'\r\n\t})\r\n\ttags: ITag[];\r\n\r\n\t@ApiProperty({ type: Contact })\r\n\t@ManyToOne(() => Contact, (contact) => contact.organization_contacts, {\r\n\t\tcascade: true,\r\n\t\tonDelete: 'SET NULL'\r\n\t})\r\n\t@JoinColumn()\r\n\tcontact: IContact;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@RelationId(\r\n\t\t(organizationContact: OrganizationContact) =>\r\n\t\t\torganizationContact.contact\r\n\t)\r\n\treadonly contactId?: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Index()\r\n\t@Column()\r\n\tname: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsEmail()\r\n\t@IsNotEmpty()\r\n\t@Column({ nullable: true })\r\n\tprimaryEmail: string;\r\n\r\n\t@ApiPropertyOptional({ type: String, isArray: true })\r\n\temailAddresses?: string[];\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Column({ nullable: true })\r\n\tprimaryPhone: string;\r\n\r\n\t@ApiPropertyOptional({ type: String, isArray: true })\r\n\tphones?: string[];\r\n\r\n\t@ApiProperty({ type: String, enum: ContactOrganizationInviteStatus })\r\n\t@IsEnum(ContactOrganizationInviteStatus)\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tinviteStatus?: string;\r\n\r\n\t@ApiPropertyOptional({ type: OrganizationProject, isArray: true })\r\n\t@OneToMany(\r\n\t\t(type) => OrganizationProject,\r\n\t\t(project) => project.organizationContact\r\n\t)\r\n\t@JoinColumn()\r\n\tprojects?: IOrganizationProject[];\r\n\r\n\t@ApiPropertyOptional({ type: Invoice, isArray: true })\r\n\t@OneToMany((type) => Invoice, (invoices) => invoices.toContact)\r\n\t@JoinColumn()\r\n\tinvoices?: IInvoice[];\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@IsString()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tnotes?: string;\r\n\r\n\t@ManyToMany((type) => Employee, { cascade: ['update'] })\r\n\t@JoinTable({\r\n\t\tname: 'organization_contact_employee'\r\n\t})\r\n\tmembers?: IEmployee[];\r\n\r\n\t@ApiProperty({ type: String, enum: ContactType })\r\n\t@IsEnum(ContactType)\r\n\t@IsOptional()\r\n\t@Column({ nullable: false })\r\n\tcontactType: string;\r\n\r\n\t@ApiPropertyOptional({ type: String, maxLength: 500 })\r\n\t@IsOptional()\r\n\t@Column({ length: 500, nullable: true })\r\n\timageUrl?: string;\r\n\r\n\t@ApiPropertyOptional({ type: Payment, isArray: true })\r\n\t@OneToMany((type) => Payment, (payment) => payment.contact, {\r\n\t\tonDelete: 'SET NULL'\r\n\t})\r\n\t@JoinColumn()\r\n\tpayments?: IPayment[];\r\n\r\n\t@ApiPropertyOptional({ type: Proposal, isArray: true })\r\n\t@OneToMany((type) => Proposal, (proposal) => proposal.organizationContact)\r\n\t@JoinColumn()\r\n\tproposals?: IOrganizationProject[];\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@IsString()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tbudget?: number;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@IsString()\r\n\t@IsOptional()\r\n\t@Column({\r\n\t\ttype: 'text',\r\n\t\tnullable: true,\r\n\t\tdefault: OrganizationContactBudgetTypeEnum.COST\r\n\t})\r\n\tbudgetType?: OrganizationContactBudgetTypeEnum;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tcreatedBy?: string;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { OrganizationContact } from './organization-contact.entity';\r\nimport { OrganizationContactController } from './organization-contact.controller';\r\nimport { OrganizationContactService } from './organization-contact.service';\r\nimport { CqrsModule } from '@nestjs/cqrs';\r\nimport { CommandHandlers } from './commands/handlers';\r\nimport { User } from '../user/user.entity';\r\nimport { UserService } from '../user/user.service';\r\nimport { EmailService, Email } from '../email';\r\nimport { EmailTemplate } from '../email-template';\r\nimport { OrganizationService } from '../organization/organization.service';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([\r\n\t\t\tOrganizationContact,\r\n\t\t\tOrganization,\r\n\t\t\tUser,\r\n\t\t\tEmail,\r\n\t\t\tEmailTemplate\r\n\t\t]),\r\n\t\tCqrsModule,\r\n\t\tTenantModule\r\n\t],\r\n\tcontrollers: [OrganizationContactController],\r\n\tproviders: [\r\n\t\tOrganizationContactService,\r\n\t\tUserService,\r\n\t\tEmailService,\r\n\t\tOrganizationService,\r\n\t\t...CommandHandlers\r\n\t],\r\n\texports: [OrganizationContactService]\r\n})\r\nexport class OrganizationContactModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { OrganizationContact } from './organization-contact.entity';\r\nimport { Contact } from '../contact/contact.entity';\r\nimport * as faker from 'faker';\r\nimport { ContactOrganizationInviteStatus, ContactType } from '@gauzy/models';\r\nimport { Tag } from '../tags/tag.entity';\r\nimport * as _ from 'underscore';\r\nimport { getDummyImage } from '../core';\r\n\r\nexport const createDefaultOrganizationContact = async (\r\n\tconnection: Connection\r\n) => {\r\n\tconst tenants = await connection.getRepository(Tenant).find();\r\n\tconst organizationContacts: OrganizationContact[] = [];\r\n\tconst contactTypes = Object.values(ContactType);\r\n\tconst contactInvitationTypes = Object.values(\r\n\t\tContactOrganizationInviteStatus\r\n\t);\r\n\tconst contacts = await connection.manager.find(Contact);\r\n\r\n\tfor (const tenant of tenants) {\r\n\t\tconst organizations = await connection\r\n\t\t\t.getRepository(Organization)\r\n\t\t\t.find({\r\n\t\t\t\twhere: { tenant: tenant },\r\n\t\t\t\trelations: ['employees', 'tags']\r\n\t\t\t});\r\n\t\tfor (const org of organizations) {\r\n\t\t\tconst employees = org.employees;\r\n\r\n\t\t\tconst tags = org.tags;\r\n\r\n\t\t\tfor (let i = 0; i < faker.random.number({ min: 5, max: 6 }); i++) {\r\n\t\t\t\tconst orgContact = new OrganizationContact();\r\n\r\n\t\t\t\tconst contact = faker.random.arrayElement(contacts);\r\n\r\n\t\t\t\torgContact.contact = contact;\r\n\r\n\t\t\t\torgContact.organizationId = org.id;\r\n\t\t\t\torgContact.organization = org;\r\n\r\n\t\t\t\torgContact.contactType = faker.random.arrayElement(\r\n\t\t\t\t\tcontactTypes\r\n\t\t\t\t);\r\n\r\n\t\t\t\torgContact.emailAddresses = [\r\n\t\t\t\t\tfaker.internet.email(contact.firstName, contact.lastName)\r\n\t\t\t\t];\r\n\r\n\t\t\t\torgContact.inviteStatus = faker.random.arrayElement(\r\n\t\t\t\t\tcontactInvitationTypes\r\n\t\t\t\t);\r\n\r\n\t\t\t\torgContact.members = _.chain(employees)\r\n\t\t\t\t\t.shuffle()\r\n\t\t\t\t\t.take(faker.random.number({ min: 1, max: 3 }))\r\n\t\t\t\t\t.values()\r\n\t\t\t\t\t.value();\r\n\r\n\t\t\t\torgContact.name = contact.name;\r\n\t\t\t\torgContact.phones = [faker.phone.phoneNumber()];\r\n\t\t\t\torgContact.primaryEmail = orgContact.emailAddresses[0];\r\n\t\t\t\torgContact.primaryPhone = orgContact.phones[0];\r\n\t\t\t\torgContact.tenant = tenant;\r\n\r\n\t\t\t\torgContact.imageUrl = getDummyImage(\r\n\t\t\t\t\t330,\r\n\t\t\t\t\t300,\r\n\t\t\t\t\torgContact.name.charAt(0).toUpperCase()\r\n\t\t\t\t);\r\n\r\n\t\t\t\torgContact.tags = _.chain(tags)\r\n\t\t\t\t\t.shuffle()\r\n\t\t\t\t\t.take(faker.random.number({ min: 1, max: 2 }))\r\n\t\t\t\t\t.values()\r\n\t\t\t\t\t.value();\r\n\r\n\t\t\t\torganizationContacts.push(orgContact);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn await connection.manager.save(organizationContacts);\r\n};\r\n\r\nexport const createRandomOrganizationContact = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantEmployeeMap: Map<Tenant, Employee[]>,\r\n\ttenantOrganizationsMap: Map<Tenant, Organization[]>,\r\n\tnoOfContactsPerOrganization: number\r\n): Promise<OrganizationContact[]> => {\r\n\tconst organizationContacts: OrganizationContact[] = [];\r\n\r\n\tconst contactTypes = Object.values(ContactType);\r\n\r\n\tconst contactInvitationTypes = Object.values(\r\n\t\tContactOrganizationInviteStatus\r\n\t);\r\n\r\n\tconst contacts = await connection.manager.find(Contact);\r\n\r\n\tfor (const tenant of tenants) {\r\n\t\tconst organizations = tenantOrganizationsMap.get(tenant);\r\n\r\n\t\tconst employees = tenantEmployeeMap.get(tenant);\r\n\r\n\t\tfor (const org of organizations) {\r\n\t\t\tconst tags = await connection.manager.find(Tag, {\r\n\t\t\t\twhere: [{ organization: org }]\r\n\t\t\t});\r\n\r\n\t\t\tfor (let i = 0; i < noOfContactsPerOrganization; i++) {\r\n\t\t\t\tconst orgContact = new OrganizationContact();\r\n\r\n\t\t\t\torgContact.contact = faker.random.arrayElement(contacts);\r\n\t\t\t\torgContact.organization = org;\r\n\t\t\t\torgContact.contactType = faker.random.arrayElement(\r\n\t\t\t\t\tcontactTypes\r\n\t\t\t\t);\r\n\t\t\t\torgContact.emailAddresses = [\r\n\t\t\t\t\tfaker.internet.email(\r\n\t\t\t\t\t\torgContact.contact.firstName,\r\n\t\t\t\t\t\torgContact.contact.lastName\r\n\t\t\t\t\t)\r\n\t\t\t\t];\r\n\t\t\t\torgContact.inviteStatus = faker.random.arrayElement(\r\n\t\t\t\t\tcontactInvitationTypes\r\n\t\t\t\t);\r\n\r\n\t\t\t\torgContact.members = _.chain(employees)\r\n\t\t\t\t\t.shuffle()\r\n\t\t\t\t\t.take(faker.random.number({ min: 1, max: 3 }))\r\n\t\t\t\t\t.values()\r\n\t\t\t\t\t.value();\r\n\r\n\t\t\t\torgContact.name = orgContact.contact.name;\r\n\t\t\t\torgContact.phones = [faker.phone.phoneNumber()];\r\n\t\t\t\torgContact.primaryEmail = orgContact.emailAddresses[0];\r\n\t\t\t\torgContact.primaryPhone = orgContact.phones[0];\r\n\t\t\t\torgContact.tenant = tenant;\r\n\r\n\t\t\t\torgContact.imageUrl = getDummyImage(\r\n\t\t\t\t\t330,\r\n\t\t\t\t\t300,\r\n\t\t\t\t\torgContact.name.charAt(0).toUpperCase()\r\n\t\t\t\t);\r\n\r\n\t\t\t\torgContact.tags = _.chain(tags)\r\n\t\t\t\t\t.shuffle()\r\n\t\t\t\t\t.take(faker.random.number({ min: 1, max: 2 }))\r\n\t\t\t\t\t.values()\r\n\t\t\t\t\t.value();\r\n\r\n\t\t\t\torganizationContacts.push(orgContact);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tawait connection.manager.save(organizationContacts);\r\n\r\n\treturn organizationContacts;\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Brackets, Repository } from 'typeorm';\r\nimport { RequestContext } from '../core/context';\r\nimport { TenantAwareCrudService } from '../core/crud/tenant-aware-crud.service';\r\nimport { OrganizationContact } from './organization-contact.entity';\r\n\r\n@Injectable()\r\nexport class OrganizationContactService extends TenantAwareCrudService<OrganizationContact> {\r\n\tconstructor(\r\n\t\t@InjectRepository(OrganizationContact)\r\n\t\tprivate readonly organizationContactRepository: Repository<OrganizationContact>\r\n\t) {\r\n\t\tsuper(organizationContactRepository);\r\n\t}\r\n\r\n\tasync findByEmployee(id: string, data: any): Promise<any> {\r\n\t\tconst { findInput = null } = data;\r\n\t\tconst query = this.organizationContactRepository\r\n\t\t\t.createQueryBuilder('organization_contact')\r\n\t\t\t.leftJoin('organization_contact.members', 'member')\r\n\t\t\t.where('member.id = :id', { id });\r\n\r\n\t\tif (findInput) {\r\n\t\t\tconst { organizationId, tenantId } = findInput;\r\n\t\t\tquery\r\n\t\t\t\t.andWhere(`${query.alias}.organizationId = :organizationId`, {\r\n\t\t\t\t\torganizationId\r\n\t\t\t\t})\r\n\t\t\t\t.andWhere(`${query.alias}.tenantId = :tenantId`, {\r\n\t\t\t\t\ttenantId\r\n\t\t\t\t});\r\n\t\t}\r\n\t\treturn await query.getMany();\r\n\t}\r\n\r\n\t/*\r\n\t * Get All Organization Contact\r\n\t */\r\n\tasync findAllOrganizationContacts(data: any) {\r\n\t\tconst { relations, findInput } = data;\r\n\t\tif (findInput && findInput['employeeId']) {\r\n\t\t\treturn await this.getOrganizationContactByEmployee(data);\r\n\t\t}\r\n\r\n\t\treturn this.findAll({\r\n\t\t\twhere: findInput,\r\n\t\t\trelations\r\n\t\t});\r\n\t}\r\n\r\n\t/*\r\n\t * Get All Organization By Employee\r\n\t */\r\n\tasync getOrganizationContactByEmployee(data: any) {\r\n\t\tconst { relations, findInput } = data;\r\n\t\tconst { employeeId, organizationId, contactType } = findInput;\r\n\t\tconst { tenantId, id: createdBy } = RequestContext.currentUser();\r\n\r\n\t\tconst query = this.organizationContactRepository.createQueryBuilder(\r\n\t\t\t'organization_contact'\r\n\t\t);\r\n\t\tif (relations.length > 0) {\r\n\t\t\trelations.forEach((relation: string) => {\r\n\t\t\t\tif (relation.indexOf('.') !== -1) {\r\n\t\t\t\t\tconst alias = relation.split('.').slice(-1)[0];\r\n\t\t\t\t\tquery.leftJoinAndSelect(`${relation}`, alias);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst alias = relation;\r\n\t\t\t\t\tquery.leftJoinAndSelect(\r\n\t\t\t\t\t\t`${query.alias}.${relation}`,\r\n\t\t\t\t\t\talias\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tquery.where(\r\n\t\t\tnew Brackets((subQuery) => {\r\n\t\t\t\tsubQuery\r\n\t\t\t\t\t.where('members.id =:employeeId', { employeeId })\r\n\t\t\t\t\t.orWhere(`${query.alias}.createdBy = :createdBy`, {\r\n\t\t\t\t\t\tcreatedBy\r\n\t\t\t\t\t});\r\n\t\t\t})\r\n\t\t);\r\n\t\tquery.andWhere(`${query.alias}.contactType = :contactType`, {\r\n\t\t\tcontactType\r\n\t\t});\r\n\t\tif (organizationId) {\r\n\t\t\tquery.andWhere(`${query.alias}.organizationId = :organizationId`, {\r\n\t\t\t\torganizationId\r\n\t\t\t});\r\n\t\t}\r\n\t\tquery.andWhere(`${query.alias}.tenantId = :tenantId`, {\r\n\t\t\ttenantId\r\n\t\t});\r\n\r\n\t\tconst [items, total] = await query.getManyAndCount();\r\n\t\treturn { items, total };\r\n\t}\r\n}\r\n","import { OrganizationDepartmentEditByEmployeeHandler } from './organization-department.edit-by-employee.handler';\r\nimport { OrganizationDepartmentUpdateHandler } from './organization-department.update.handler';\r\n\r\nexport const CommandHandlers = [\r\n\tOrganizationDepartmentEditByEmployeeHandler,\r\n\tOrganizationDepartmentUpdateHandler\r\n];\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { OrganizationDepartmentEditByEmployeeCommand } from '../organization-department.edit-by-employee.command';\r\nimport { OrganizationDepartmentService } from '../../organization-department.service';\r\nimport { UpdateEntityByMembersHandler } from '../../../shared';\r\n\r\n@CommandHandler(OrganizationDepartmentEditByEmployeeCommand)\r\nexport class OrganizationDepartmentEditByEmployeeHandler\r\n\textends UpdateEntityByMembersHandler\r\n\timplements ICommandHandler<OrganizationDepartmentEditByEmployeeCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly organizationDepartmentService: OrganizationDepartmentService\r\n\t) {\r\n\t\tsuper(organizationDepartmentService);\r\n\t}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: OrganizationDepartmentEditByEmployeeCommand\r\n\t): Promise<any> {\r\n\t\treturn this.executeCommand(command.input);\r\n\t}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { OrganizationDepartmentService } from '../../organization-department.service';\r\nimport { OrganizationDepartmentUpdateCommand } from '../organization-department.update.command';\r\n\r\n@CommandHandler(OrganizationDepartmentUpdateCommand)\r\nexport class OrganizationDepartmentUpdateHandler\r\n\timplements ICommandHandler<OrganizationDepartmentUpdateCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly organizationDepartmentService: OrganizationDepartmentService\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: OrganizationDepartmentUpdateCommand\r\n\t): Promise<any> {\r\n\t\tconst { id, input } = command;\r\n\r\n\t\t//This will call save() with the id so that members[] also get saved accordingly\r\n\t\treturn this.organizationDepartmentService.create({\r\n\t\t\tid,\r\n\t\t\t...input\r\n\t\t});\r\n\t}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { IEditEntityByMemberInput as IOrganizationDepartmentEditByEmployeeInput } from '@gauzy/models';\r\n\r\nexport class OrganizationDepartmentEditByEmployeeCommand implements ICommand {\r\n\tstatic readonly type = '[OrganizationDepartment] Edit By Employee';\r\n\r\n\tconstructor(\r\n\t\tpublic readonly input: IOrganizationDepartmentEditByEmployeeInput\r\n\t) {}\r\n}\r\n","import { IOrganizationDepartmentCreateInput } from '@gauzy/models';\r\nimport { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class OrganizationDepartmentUpdateCommand implements ICommand {\r\n\tstatic readonly type = '[OrganizationDepartment] Update';\r\n\r\n\tconstructor(\r\n\t\tpublic readonly id: string,\r\n\t\tpublic readonly input: IOrganizationDepartmentCreateInput\r\n\t) {}\r\n}\r\n","export const DEFAULT_ORGANIZATION_DEPARTMENTS: string[] = [\r\n\t'Designers',\r\n\t'QA',\r\n\t'Engineering',\r\n\t'Management',\r\n\t'Sales',\r\n\t'Marketing',\r\n\t'Frontend Developers',\r\n\t'Backend Developers'\r\n];\r\n","import {\r\n\tIEditEntityByMemberInput,\r\n\tIOrganizationDepartmentCreateInput,\r\n\tPermissionsEnum\r\n} from '@gauzy/models';\r\nimport {\r\n\tBody,\r\n\tController,\r\n\tGet,\r\n\tHttpCode,\r\n\tHttpStatus,\r\n\tParam,\r\n\tPut,\r\n\tQuery,\r\n\tUseGuards\r\n} from '@nestjs/common';\r\nimport { CommandBus } from '@nestjs/cqrs';\r\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\r\nimport { IPagination } from '../core';\r\nimport { CrudController } from '../core/crud/crud.controller';\r\nimport { OrganizationDepartmentEditByEmployeeCommand } from './commands/organization-department.edit-by-employee.command';\r\nimport { OrganizationDepartmentUpdateCommand } from './commands/organization-department.update.command';\r\nimport { OrganizationDepartment } from './organization-department.entity';\r\nimport { OrganizationDepartmentService } from './organization-department.service';\r\nimport { PermissionGuard } from '../shared/guards/auth/permission.guard';\r\nimport { Permissions } from '../shared/decorators/permissions';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('OrganizationDepartment')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class OrganizationDepartmentController extends CrudController<\r\n\tOrganizationDepartment\r\n> {\r\n\tconstructor(\r\n\t\tprivate readonly organizationDepartmentService: OrganizationDepartmentService,\r\n\t\tprivate readonly commandBus: CommandBus\r\n\t) {\r\n\t\tsuper(organizationDepartmentService);\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find all organization departments.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found departments',\r\n\t\ttype: OrganizationDepartment\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get('employee/:id')\r\n\tasync findByEmployee(\r\n\t\t@Param('id') id: string\r\n\t): Promise<IPagination<OrganizationDepartment>> {\r\n\t\treturn this.organizationDepartmentService.findByEmployee(id);\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find all organization departments.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found departments',\r\n\t\ttype: OrganizationDepartment\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get()\r\n\tasync findAllOrganizationDepartments(\r\n\t\t@Query('data') data: string\r\n\t): Promise<IPagination<OrganizationDepartment>> {\r\n\t\tconst { findInput, relations } = JSON.parse(data);\r\n\r\n\t\treturn this.organizationDepartmentService.findAll({\r\n\t\t\twhere: findInput,\r\n\t\t\trelations\r\n\t\t});\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Update an existing record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully edited.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_EMPLOYEES_EDIT)\r\n\t@Put('employee')\r\n\tasync updateEmployee(\r\n\t\t@Body() entity: IEditEntityByMemberInput\r\n\t): Promise<any> {\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew OrganizationDepartmentEditByEmployeeCommand(entity)\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Update an existing record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully edited.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Put(':id')\r\n\tasync update(\r\n\t\t@Param('id') id: string,\r\n\t\t@Body() entity: IOrganizationDepartmentCreateInput\r\n\t): Promise<any> {\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew OrganizationDepartmentUpdateCommand(id, entity)\r\n\t\t);\r\n\t}\r\n}\r\n","import {\r\n\tIOrganizationDepartment,\r\n\tITag,\r\n\tIEmployee,\r\n\tIOrganization,\r\n\tICandidate\r\n} from '@gauzy/models';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsNotEmpty, IsString } from 'class-validator';\r\nimport {\r\n\tColumn,\r\n\tEntity,\r\n\tIndex,\r\n\tJoinTable,\r\n\tManyToMany,\r\n\tManyToOne\r\n} from 'typeorm';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { Tag } from '../tags/tag.entity';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\nimport { Candidate } from '../candidate/candidate.entity';\r\n\r\n@Entity('organization_department')\r\nexport class OrganizationDepartment\r\n\textends TenantOrganizationBase\r\n\timplements IOrganizationDepartment {\r\n\t@ApiProperty()\r\n\t@ManyToMany((type) => Tag, (tag) => tag.organizationDepartment)\r\n\t@JoinTable({\r\n\t\tname: 'tag_organization_department'\r\n\t})\r\n\ttags: ITag[];\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Index()\r\n\t@Column()\r\n\tname: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Column()\r\n\torganizationId: string;\r\n\r\n\t@ManyToMany(\r\n\t\t(type) => Employee,\r\n\t\t(employee) => employee.organizationDepartments,\r\n\t\t{ cascade: ['update'] }\r\n\t)\r\n\t@JoinTable({\r\n\t\tname: 'organization_department_employee'\r\n\t})\r\n\tmembers?: IEmployee[];\r\n\r\n\t@ManyToOne((type) => Organization, (organization) => organization.id)\r\n\torganization?: IOrganization;\r\n\r\n\t@ManyToMany(\r\n\t\t(type) => Candidate,\r\n\t\t(candidate) => candidate.organizationDepartments,\r\n\t\t{ cascade: ['update'] }\r\n\t)\r\n\t@JoinTable({\r\n\t\tname: 'candidate_department'\r\n\t})\r\n\tcandidates?: ICandidate[];\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { OrganizationDepartment } from './organization-department.entity';\r\nimport { OrganizationDepartmentController } from './organization-department.controller';\r\nimport { OrganizationDepartmentService } from './organization-department.service';\r\nimport { CqrsModule } from '@nestjs/cqrs';\r\nimport { CommandHandlers } from './commands/handlers';\r\nimport { User } from '../user/user.entity';\r\nimport { UserService } from '../user/user.service';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([OrganizationDepartment, User]),\r\n\t\tCqrsModule,\r\n\t\tTenantModule\r\n\t],\r\n\tcontrollers: [OrganizationDepartmentController],\r\n\tproviders: [OrganizationDepartmentService, UserService, ...CommandHandlers],\r\n\texports: [OrganizationDepartmentService]\r\n})\r\nexport class OrganizationDepartmentModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { OrganizationDepartment } from './organization-department.entity';\r\nimport * as faker from 'faker';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { Tag } from '../tags/tag.entity';\r\nimport { DEFAULT_ORGANIZATION_DEPARTMENTS } from './default-organization-departments';\r\n\r\nexport const createDefaultOrganizationDepartments = async (\r\n\tconnection: Connection,\r\n\tdefaultOrganizations: Organization[]\r\n) => {\r\n\tconst tag = await connection.getRepository(Tag).create({\r\n\t\tname: 'API',\r\n\t\tdescription: '',\r\n\t\tcolor: faker.commerce.color()\r\n\t});\r\n\tconst departments: OrganizationDepartment[] = [];\r\n\r\n\tfor (const defaultOrganization of defaultOrganizations) {\r\n\t\tDEFAULT_ORGANIZATION_DEPARTMENTS.forEach((name) => {\r\n\t\t\tconst department = new OrganizationDepartment();\r\n\t\t\tdepartment.tags = [tag];\r\n\t\t\tdepartment.name = name;\r\n\t\t\tdepartment.organizationId = defaultOrganization.id;\r\n\t\t\tdepartment.tenant = defaultOrganization.tenant;\r\n\t\t\tdepartments.push(department);\r\n\t\t});\r\n\t}\r\n\treturn await connection.manager.save(departments);\r\n};\r\n\r\nexport const seedRandomOrganizationDepartments = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantOrganizationsMap: Map<Tenant, Organization[]>\r\n): Promise<void> => {\r\n\tlet departments: OrganizationDepartment[] = [];\r\n\r\n\tfor (const tenant of tenants) {\r\n\t\tconst organizations = tenantOrganizationsMap.get(tenant);\r\n\t\torganizations.forEach(({ id: organizationId }) => {\r\n\t\t\tconst organizationDepartments: OrganizationDepartment[] = DEFAULT_ORGANIZATION_DEPARTMENTS.map(\r\n\t\t\t\t(name) => {\r\n\t\t\t\t\tconst employmentDepartment = new OrganizationDepartment();\r\n\t\t\t\t\temploymentDepartment.name = name;\r\n\t\t\t\t\temploymentDepartment.organizationId = organizationId;\r\n\t\t\t\t\temploymentDepartment.tenant = tenant;\r\n\t\t\t\t\treturn employmentDepartment;\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\tdepartments = [...departments, ...organizationDepartments];\r\n\t\t});\r\n\t\tawait insertEmploymentDepartment(connection, departments);\r\n\t}\r\n};\r\n\r\nconst insertEmploymentDepartment = async (\r\n\tconnection: Connection,\r\n\temploymentDepartment: OrganizationDepartment[]\r\n): Promise<void> => {\r\n\tawait connection.manager.save(employmentDepartment);\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { OrganizationDepartment } from './organization-department.entity';\r\nimport { TenantAwareCrudService } from '../core/crud/tenant-aware-crud.service';\r\n\r\n@Injectable()\r\nexport class OrganizationDepartmentService extends TenantAwareCrudService<\r\n\tOrganizationDepartment\r\n> {\r\n\tconstructor(\r\n\t\t@InjectRepository(OrganizationDepartment)\r\n\t\tprivate readonly organizationDepartmentRepository: Repository<\r\n\t\t\tOrganizationDepartment\r\n\t\t>\r\n\t) {\r\n\t\tsuper(organizationDepartmentRepository);\r\n\t}\r\n\r\n\tasync findByEmployee(id: string): Promise<any> {\r\n\t\treturn await this.organizationDepartmentRepository\r\n\t\t\t.createQueryBuilder('organization_department')\r\n\t\t\t.leftJoin('organization_department.members', 'member')\r\n\t\t\t.where('member.id = :id', { id })\r\n\t\t\t.getMany();\r\n\t}\r\n}\r\n","import { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport { Controller, UseGuards, HttpStatus, Get, Query } from '@nestjs/common';\r\nimport { CrudController, IPagination } from '../core';\r\nimport { OrganizationDocuments } from './organization-documents.entity';\r\nimport { OrganizationDocumentsService } from './organization-documents.service';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('OrganizationDocuments')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class OrganizationDocumentsController extends CrudController<\r\n\tOrganizationDocuments\r\n> {\r\n\tconstructor(\r\n\t\tprivate readonly organizationDocumentsService: OrganizationDocumentsService\r\n\t) {\r\n\t\tsuper(organizationDocumentsService);\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find all organization documents.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found candidate document',\r\n\t\ttype: OrganizationDocuments\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get()\r\n\tasync findDocument(\r\n\t\t@Query('data') data\r\n\t): Promise<IPagination<OrganizationDocuments>> {\r\n\t\tconst { findInput } = JSON.parse(data);\r\n\t\treturn this.organizationDocumentsService.findAll({ where: findInput });\r\n\t}\r\n}\r\n","import { Column, Entity } from 'typeorm';\r\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\r\nimport { IOrganizationDocument } from '@gauzy/models';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('organization_document')\r\nexport class OrganizationDocuments extends TenantOrganizationBase\r\n\timplements IOrganizationDocument {\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\tname: string;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@Column()\r\n\tdocumentUrl: string;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { OrganizationDocuments } from './organization-documents.entity';\r\nimport { OrganizationDocumentsService } from './organization-documents.service';\r\nimport { OrganizationDocumentsController } from './organization-documents.controler';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [TypeOrmModule.forFeature([OrganizationDocuments]), TenantModule],\r\n\tproviders: [OrganizationDocumentsService],\r\n\tcontrollers: [OrganizationDocumentsController],\r\n\texports: [TypeOrmModule]\r\n})\r\nexport class OrganizationDocumentsModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { OrganizationDocuments } from './organization-documents.entity';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport * as faker from 'faker';\r\n\r\nexport const createOrganizationDocuments = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\torganizations: Organization[]\r\n): Promise<OrganizationDocuments[]> => {\r\n\tconst documents: OrganizationDocuments[] = [];\r\n\r\n\tfor (const organization of organizations) {\r\n\t\tconst requestPaidDaysOff = new OrganizationDocuments();\r\n\t\tconst requestUnpaidDaysOff = new OrganizationDocuments();\r\n\r\n\t\trequestPaidDaysOff.name = 'Paid Days off Request';\r\n\t\trequestPaidDaysOff.organizationId = organization.id;\r\n\t\trequestPaidDaysOff.tenant = tenant;\r\n\t\trequestPaidDaysOff.documentUrl =\r\n\t\t\t'http://res.cloudinary.com/evereq/image/upload/v1595424362/everbie-products-images/qanadywgn3gxte7kwtwu.pdf';\r\n\r\n\t\trequestUnpaidDaysOff.name = 'Unpaid Days off Request';\r\n\t\trequestUnpaidDaysOff.documentUrl =\r\n\t\t\t'http://res.cloudinary.com/evereq/image/upload/v1595506200/everbie-products-images/am3ujibzu660swicfcsw.pdf';\r\n\t\trequestUnpaidDaysOff.organizationId = organization.id;\r\n\t\trequestUnpaidDaysOff.tenant = tenant;\r\n\r\n\t\tdocuments.push(requestPaidDaysOff);\r\n\t\tdocuments.push(requestUnpaidDaysOff);\r\n\t}\r\n\r\n\treturn await connection.manager.save(documents);\r\n};\r\n\r\nexport const createRandomOrganizationDocuments = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantOrganizationsMap: Map<Tenant, Organization[]>\r\n): Promise<OrganizationDocuments[]> => {\r\n\tif (!tenantOrganizationsMap) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: tenantOrganizationsMap not found, Organization Documents will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst organizationDocuments: OrganizationDocuments[] = [];\r\n\tconst json = {\r\n\t\t'Paid Days off Request':\r\n\t\t\t'http://res.cloudinary.com/evereq/image/upload/v1595424362/everbie-products-images/qanadywgn3gxte7kwtwu.pdf',\r\n\t\t'Unpaid Days off Request':\r\n\t\t\t'http://res.cloudinary.com/evereq/image/upload/v1595506200/everbie-products-images/am3ujibzu660swicfcsw.pdf'\r\n\t};\r\n\r\n\tfor (const tenant of tenants) {\r\n\t\tconst tenantOrgs = tenantOrganizationsMap.get(tenant);\r\n\t\tfor (const tenantOrg of tenantOrgs) {\r\n\t\t\tconst organizationDocument = new OrganizationDocuments();\r\n\r\n\t\t\torganizationDocument.name = faker.random.arrayElement([\r\n\t\t\t\t'Paid Days off Request',\r\n\t\t\t\t'Unpaid Days off Request'\r\n\t\t\t]);\r\n\t\t\torganizationDocument.organizationId = tenantOrg.id;\r\n\t\t\torganizationDocument.tenant = tenant;\r\n\t\t\torganizationDocument.documentUrl = json[organizationDocument.name];\r\n\r\n\t\t\torganizationDocuments.push(organizationDocument);\r\n\t\t}\r\n\t}\r\n\r\n\tawait connection.manager.save(organizationDocuments);\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { CrudService } from '../core/crud/crud.service';\r\nimport { OrganizationDocuments } from './organization-documents.entity';\r\n\r\n@Injectable()\r\nexport class OrganizationDocumentsService extends CrudService<\r\n\tOrganizationDocuments\r\n> {\r\n\tconstructor(\r\n\t\t@InjectRepository(OrganizationDocuments)\r\n\t\tprivate readonly candidateDocumentRepository: Repository<\r\n\t\t\tOrganizationDocuments\r\n\t\t>\r\n\t) {\r\n\t\tsuper(candidateDocumentRepository);\r\n\t}\r\n}\r\n","import {\r\n\tController,\r\n\tHttpStatus,\r\n\tGet,\r\n\tQuery,\r\n\tUseGuards,\r\n\tPut,\r\n\tParam,\r\n\tBody\r\n} from '@nestjs/common';\r\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport { CrudController, IPagination } from '../core/crud';\r\nimport { OrganizationEmploymentType } from './organization-employment-type.entity';\r\nimport { OrganizationEmploymentTypeService } from './organization-employment-type.service';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('OrganizationEmploymentType')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class OrganizationEmploymentTypeController extends CrudController<\r\n\tOrganizationEmploymentType\r\n> {\r\n\tconstructor(\r\n\t\tprivate readonly organizationEmploymentTypeService: OrganizationEmploymentTypeService\r\n\t) {\r\n\t\tsuper(organizationEmploymentTypeService);\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find all organization employment types.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found employment types',\r\n\t\ttype: OrganizationEmploymentType\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get()\r\n\tasync findAllOrganizationEmploymentTypes(\r\n\t\t@Query('data') data: string\r\n\t): Promise<IPagination<OrganizationEmploymentType>> {\r\n\t\tconst { findInput, relations } = JSON.parse(data);\r\n\t\treturn this.organizationEmploymentTypeService.findAll({\r\n\t\t\twhere: findInput,\r\n\t\t\trelations\r\n\t\t});\r\n\t}\r\n\r\n\t@Put(':id')\r\n\tasync updateOrganizationExpenseCategories(\r\n\t\t@Param('id') id: string,\r\n\t\t@Body() entity: OrganizationEmploymentType,\r\n\t\t...options: any[]\r\n\t): Promise<OrganizationEmploymentType> {\r\n\t\treturn this.organizationEmploymentTypeService.create({\r\n\t\t\tid,\r\n\t\t\t...entity\r\n\t\t});\r\n\t}\r\n}\r\n","import { ICandidate, IOrganizationEmploymentType } from '@gauzy/models';\r\nimport { Column, Entity, JoinTable, ManyToMany } from 'typeorm';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { Tag } from '../tags/tag.entity';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\nimport { Candidate } from '../candidate/candidate.entity';\r\n\r\n@Entity('organization_employment_type')\r\nexport class OrganizationEmploymentType\r\n\textends TenantOrganizationBase\r\n\timplements IOrganizationEmploymentType {\r\n\t@ApiProperty()\r\n\t@ManyToMany((type) => Tag, (tag) => tag.organizationEmploymentType)\r\n\t@JoinTable({\r\n\t\tname: 'tag_organization_employment_type'\r\n\t})\r\n\ttags: Tag[];\r\n\r\n\t@Column()\r\n\tname: string;\r\n\r\n\t@ManyToMany(\r\n\t\t(type) => Employee,\r\n\t\t(employee) => employee.organizationEmploymentTypes,\r\n\t\t{ cascade: ['update'] }\r\n\t)\r\n\t@JoinTable({\r\n\t\tname: 'organization_employment_type_employee'\r\n\t})\r\n\tmembers?: Employee[];\r\n\r\n\t@ManyToMany(\r\n\t\t(type) => Candidate,\r\n\t\t(candidate) => candidate.organizationEmploymentTypes,\r\n\t\t{ cascade: ['update'] }\r\n\t)\r\n\t@JoinTable({\r\n\t\tname: 'candidate_employment_type'\r\n\t})\r\n\tcandidates?: ICandidate[];\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\nimport { OrganizationEmploymentTypeController } from './organization-employment-type.controller';\r\nimport { OrganizationEmploymentType } from './organization-employment-type.entity';\r\nimport { OrganizationEmploymentTypeService } from './organization-employment-type.service';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([OrganizationEmploymentType]),\r\n\t\tTenantModule\r\n\t],\r\n\tcontrollers: [OrganizationEmploymentTypeController],\r\n\tproviders: [OrganizationEmploymentTypeService],\r\n\texports: [OrganizationEmploymentTypeService]\r\n})\r\nexport class OrganizationEmploymentTypeModule {}\r\n","import { GenericEmploymentTypes } from '@gauzy/models';\r\nimport { Connection } from 'typeorm';\r\nimport { OrganizationEmploymentType } from './organization-employment-type.entity';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { DEFAULT_ORGANIZATION_TEAMS } from '../organization-team/default-organization-teams';\r\n\r\nexport const seedDefaultEmploymentTypes = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\temployees: Employee[],\r\n\tdefaultOrganization: Organization\r\n) => {\r\n\tconst defaultTeams = DEFAULT_ORGANIZATION_TEAMS;\r\n\tconst fullTimeEmployees = defaultTeams[0].defaultMembers;\r\n\tconst contractors = defaultTeams[1].defaultMembers;\r\n\tconst employmentTypes: OrganizationEmploymentType[] = Object.values(\r\n\t\tGenericEmploymentTypes\r\n\t).map((name) => {\r\n\t\tconst employmentType = new OrganizationEmploymentType();\r\n\t\temploymentType.name = name;\r\n\t\temploymentType.organizationId = defaultOrganization.id;\r\n\t\temploymentType.tenant = tenant;\r\n\t\tif (name === 'Contract') {\r\n\t\t\temploymentType.members = employees;\r\n\t\t} else if (name === 'Full-time') {\r\n\t\t\temploymentType.members = employees.filter((e) =>\r\n\t\t\t\tfullTimeEmployees.includes(e.user.email)\r\n\t\t\t);\r\n\t\t} else if (name === 'Contractor') {\r\n\t\t\temploymentType.members = employees.filter((e) =>\r\n\t\t\t\tcontractors.includes(e.user.email)\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\temploymentType.members = [];\r\n\t\t}\r\n\t\treturn employmentType;\r\n\t});\r\n\tfor (const employmentType of employmentTypes) {\r\n\t\tinsertEmploymentType(connection, [employmentType]);\r\n\t}\r\n};\r\n\r\nexport const seedRandomEmploymentTypes = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantOrganizationsMap: Map<Tenant, Organization[]>\r\n): Promise<void> => {\r\n\tlet employmentTypes: OrganizationEmploymentType[] = [];\r\n\r\n\tfor (const tenant of tenants) {\r\n\t\tconst organizations = tenantOrganizationsMap.get(tenant);\r\n\t\torganizations.forEach(({ id: organizationId }) => {\r\n\t\t\tconst organizationEmploymentTypes: OrganizationEmploymentType[] = Object.values(\r\n\t\t\t\tGenericEmploymentTypes\r\n\t\t\t).map((name) => {\r\n\t\t\t\tconst employmentType = new OrganizationEmploymentType();\r\n\t\t\t\temploymentType.name = name;\r\n\t\t\t\temploymentType.organizationId = organizationId;\r\n\t\t\t\temploymentType.tenant = tenant;\r\n\t\t\t\treturn employmentType;\r\n\t\t\t});\r\n\t\t\temploymentTypes = [\r\n\t\t\t\t...employmentTypes,\r\n\t\t\t\t...organizationEmploymentTypes\r\n\t\t\t];\r\n\t\t});\r\n\t\tawait insertEmploymentType(connection, employmentTypes);\r\n\t}\r\n};\r\n\r\nconst insertEmploymentType = async (\r\n\tconnection: Connection,\r\n\temploymentType: OrganizationEmploymentType[]\r\n): Promise<void> => {\r\n\tawait connection.manager.save(employmentType);\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { CrudService } from '../core';\r\nimport { OrganizationEmploymentType } from './organization-employment-type.entity';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\n\r\n@Injectable()\r\nexport class OrganizationEmploymentTypeService extends CrudService<\r\n\tOrganizationEmploymentType\r\n> {\r\n\tconstructor(\r\n\t\t@InjectRepository(OrganizationEmploymentType)\r\n\t\tprivate readonly employmentTypesRepo: Repository<\r\n\t\t\tOrganizationEmploymentType\r\n\t\t>\r\n\t) {\r\n\t\tsuper(employmentTypesRepo);\r\n\t}\r\n}\r\n","export const DEFAULT_ORGANIZATION_LANGUAGES = {\r\n\tBulgarian: 'Native or Bilingual',\r\n\tRussian: 'Native or Bilingual',\r\n\tUkrainian: 'Native or Bilingual',\r\n\tEnglish: 'Fluent',\r\n\tHebrew: 'Conversational'\r\n};\r\n","import {\r\n\tController,\r\n\tUseGuards,\r\n\tHttpStatus,\r\n\tHttpCode,\r\n\tPost,\r\n\tBody,\r\n\tPut,\r\n\tParam,\r\n\tDelete,\r\n\tGet,\r\n\tQuery\r\n} from '@nestjs/common';\r\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport { CrudController } from '../core/crud/crud.controller';\r\nimport { OrganizationLanguagesService } from './organization-languages.service';\r\nimport { OrganizationLanguages } from './organization-languages.entity';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { DeepPartial } from 'typeorm';\r\nimport { QueryDeepPartialEntity } from 'typeorm/query-builder/QueryPartialEntity';\r\nimport { IPagination } from '../core/crud';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('OrganizationLanguages')\r\n@Controller()\r\nexport class OrganizationLanguagesController extends CrudController<\r\n\tOrganizationLanguages\r\n> {\r\n\tconstructor(\r\n\t\tprivate readonly organizationLanguagesService: OrganizationLanguagesService\r\n\t) {\r\n\t\tsuper(organizationLanguagesService);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Create new record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully created.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.CREATED)\r\n\t@Post()\r\n\t@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n\tasync create(\r\n\t\t@Body() entity: DeepPartial<OrganizationLanguages>\r\n\t): Promise<OrganizationLanguages> {\r\n\t\treturn this.organizationLanguagesService.create(entity);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Update an existing record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully edited.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Put(':id')\r\n\t@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n\tasync update(\r\n\t\t@Param('id') id: string,\r\n\t\t@Body() entity: QueryDeepPartialEntity<OrganizationLanguages>\r\n\t): Promise<any> {\r\n\t\treturn this.organizationLanguagesService.update(id, entity);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Delete record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NO_CONTENT,\r\n\t\tdescription: 'The record has been successfully deleted'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Delete(':id')\r\n\t@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n\tasync delete(@Param('id') id: string): Promise<any> {\r\n\t\treturn this.organizationLanguagesService.delete(id);\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find Organization Language.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found Organization Language',\r\n\t\ttype: OrganizationLanguages\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get()\r\n\tasync findLanguageByOrgId(\r\n\t\t@Query('data') data: string\r\n\t): Promise<IPagination<OrganizationLanguages>> {\r\n\t\tconst { relations, findInput } = JSON.parse(data);\r\n\t\treturn this.organizationLanguagesService.findAll({\r\n\t\t\twhere: findInput,\r\n\t\t\trelations\r\n\t\t});\r\n\t}\r\n}\r\n","import { Column, Entity, JoinColumn, ManyToOne, RelationId } from 'typeorm';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsNotEmpty, IsString } from 'class-validator';\r\nimport { IOrganizationLanguages } from '@gauzy/models';\r\nimport { Language } from '../language/language.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('organization_language')\r\nexport class OrganizationLanguages extends TenantOrganizationBase\r\n\timplements IOrganizationLanguages {\r\n\t@ApiProperty({ type: Language })\r\n\t@ManyToOne((type) => Language, { nullable: false, onDelete: 'CASCADE' })\r\n\t@JoinColumn()\r\n\tlanguage: Language;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@RelationId(\r\n\t\t(organization_language: OrganizationLanguages) =>\r\n\t\t\torganization_language.language\r\n\t)\r\n\treadonly languageId: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Column()\r\n\tname: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Column()\r\n\tlevel: string;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { OrganizationLanguages } from './organization-languages.entity';\r\nimport { OrganizationLanguagesController } from './organization-languages.controller';\r\nimport { OrganizationLanguagesService } from './organization-languages.service';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [TypeOrmModule.forFeature([OrganizationLanguages]), TenantModule],\r\n\tcontrollers: [OrganizationLanguagesController],\r\n\tproviders: [OrganizationLanguagesService],\r\n\texports: [OrganizationLanguagesService]\r\n})\r\nexport class OrganizationLanguagesModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { OrganizationLanguages } from './organization-languages.entity';\r\nimport * as faker from 'faker';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { IOrganization } from '@gauzy/models';\r\nimport { Language } from '../language/language.entity';\r\nimport { DEFAULT_ORGANIZATION_LANGUAGES } from './default-organization-languages';\r\n\r\nexport const createDefaultOrganizationLanguage = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\tdefaultOrganizations: IOrganization[]\r\n): Promise<OrganizationLanguages[]> => {\r\n\tconst mapOrganizationLanguage: OrganizationLanguages[] = [];\r\n\tconst allLanguage = await connection.manager.find(Language, {});\r\n\r\n\tfor (const defaultOrganization of defaultOrganizations) {\r\n\t\tfor (const language of allLanguage) {\r\n\t\t\tconst organization = new OrganizationLanguages();\r\n\r\n\t\t\torganization.organization = defaultOrganization;\r\n\t\t\torganization.tenant = tenant;\r\n\t\t\torganization.language = language;\r\n\t\t\torganization.name = language.name;\r\n\t\t\torganization.level = DEFAULT_ORGANIZATION_LANGUAGES[language.name]\r\n\t\t\t\t? DEFAULT_ORGANIZATION_LANGUAGES[language.name]\r\n\t\t\t\t: 'intermediate';\r\n\r\n\t\t\tmapOrganizationLanguage.push(organization);\r\n\t\t}\r\n\t}\r\n\r\n\tawait insertRandomOrganizationLanguage(connection, mapOrganizationLanguage);\r\n\treturn mapOrganizationLanguage;\r\n};\r\n\r\nexport const createRandomOrganizationLanguage = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantOrganizationsMap: Map<Tenant, IOrganization[]>\r\n): Promise<OrganizationLanguages[]> => {\r\n\tif (!tenantOrganizationsMap) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: tenantOrganizationsMap not found, organization language not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst mapOrganizationLanguage: OrganizationLanguages[] = [];\r\n\tconst allLanguage = await connection.manager.find(Language, {});\r\n\r\n\tfor (const tenant of tenants) {\r\n\t\tconst tenantOrganization = tenantOrganizationsMap.get(tenant);\r\n\t\tfor (const tenantOrg of tenantOrganization) {\r\n\t\t\tconst language = faker.random.arrayElement(allLanguage);\r\n\r\n\t\t\tconst organization = new OrganizationLanguages();\r\n\r\n\t\t\torganization.organization = tenantOrg;\r\n\t\t\torganization.tenant = tenant;\r\n\t\t\torganization.language = language;\r\n\t\t\torganization.name = language.name;\r\n\t\t\torganization.level = DEFAULT_ORGANIZATION_LANGUAGES[language.name]\r\n\t\t\t\t? DEFAULT_ORGANIZATION_LANGUAGES[language.name]\r\n\t\t\t\t: 'intermediate';\r\n\r\n\t\t\tmapOrganizationLanguage.push(organization);\r\n\t\t}\r\n\t}\r\n\r\n\tawait insertRandomOrganizationLanguage(connection, mapOrganizationLanguage);\r\n\treturn mapOrganizationLanguage;\r\n};\r\n\r\nconst insertRandomOrganizationLanguage = async (\r\n\tconnection: Connection,\r\n\tdata: OrganizationLanguages[]\r\n) => {\r\n\tawait connection\r\n\t\t.createQueryBuilder()\r\n\t\t.insert()\r\n\t\t.into(OrganizationLanguages)\r\n\t\t.values(data)\r\n\t\t.execute();\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { CrudService } from '../core/crud/crud.service';\r\nimport { OrganizationLanguages } from './organization-languages.entity';\r\n\r\n@Injectable()\r\nexport class OrganizationLanguagesService extends CrudService<\r\n\tOrganizationLanguages\r\n> {\r\n\tconstructor(\r\n\t\t@InjectRepository(OrganizationLanguages)\r\n\t\tprivate readonly organizationLanguagesRepository: Repository<\r\n\t\t\tOrganizationLanguages\r\n\t\t>\r\n\t) {\r\n\t\tsuper(organizationLanguagesRepository);\r\n\t}\r\n}\r\n","export const DEFAULT_ORGANIZATION_POSITIONS: string[] = [\r\n\t'Web Software Developer',\r\n\t'CEO',\r\n\t'Team Lead',\r\n\t'Staff Engineer',\r\n\t'Junior Software Developer',\r\n\t'Senior Software Developer',\r\n\t'CTO',\r\n\t'COO',\r\n\t'Mobile Application Developer',\r\n\t'Associate Engineer',\r\n\t'Project Manager',\r\n\t'Tester'\r\n];\r\n","import { Connection } from 'typeorm';\r\nimport { OrganizationPositions } from './organization-positions.entity';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { DEFAULT_ORGANIZATION_POSITIONS } from './default-organization-positions';\r\n\r\nexport const seedDefaultOrganizationPosition = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\torganizations\r\n): Promise<void> => {\r\n\tlet positions: OrganizationPositions[] = [];\r\n\r\n\tconst organizationPositions: OrganizationPositions[] = DEFAULT_ORGANIZATION_POSITIONS.map(\r\n\t\t(name) => {\r\n\t\t\tconst employmentPosition = new OrganizationPositions();\r\n\t\t\temploymentPosition.name = name;\r\n\t\t\temploymentPosition.organizationId = organizations.id;\r\n\t\t\temploymentPosition.tenant = tenant;\r\n\t\t\treturn employmentPosition;\r\n\t\t}\r\n\t);\r\n\tpositions = [...positions, ...organizationPositions];\r\n\tawait insertEmploymentPosition(connection, positions);\r\n};\r\n\r\nexport const seedRandomOrganizationPosition = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantOrganizationsMap: Map<Tenant, Organization[]>\r\n): Promise<void> => {\r\n\tlet positions: OrganizationPositions[] = [];\r\n\r\n\tfor (const tenant of tenants) {\r\n\t\tconst organizations = tenantOrganizationsMap.get(tenant);\r\n\t\torganizations.forEach(({ id: organizationId }) => {\r\n\t\t\tconst organizationPositions: OrganizationPositions[] = DEFAULT_ORGANIZATION_POSITIONS.map(\r\n\t\t\t\t(name) => {\r\n\t\t\t\t\tconst employmentPosition = new OrganizationPositions();\r\n\t\t\t\t\temploymentPosition.name = name;\r\n\t\t\t\t\temploymentPosition.organizationId = organizationId;\r\n\t\t\t\t\temploymentPosition.tenant = tenant;\r\n\t\t\t\t\treturn employmentPosition;\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\tpositions = [...positions, ...organizationPositions];\r\n\t\t});\r\n\t\tawait insertEmploymentPosition(connection, positions);\r\n\t}\r\n};\r\n\r\nconst insertEmploymentPosition = async (\r\n\tconnection: Connection,\r\n\temploymentPosition: OrganizationPositions[]\r\n): Promise<void> => {\r\n\tawait connection.manager.save(employmentPosition);\r\n};\r\n","import {\r\n\tController,\r\n\tGet,\r\n\tHttpStatus,\r\n\tQuery,\r\n\tUseGuards,\r\n\tPut,\r\n\tParam,\r\n\tBody\r\n} from '@nestjs/common';\r\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport { CrudController } from '../core/crud/crud.controller';\r\nimport { OrganizationPositionsService } from './organization-positions.service';\r\nimport { OrganizationPositions } from './organization-positions.entity';\r\nimport { IPagination } from '../core';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\nimport { ParseJsonPipe } from '../shared/pipes/parse-json.pipe';\r\n\r\n@ApiTags('OrganizationPositions')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class OrganizationPositionsController extends CrudController<\r\n\tOrganizationPositions\r\n> {\r\n\tconstructor(\r\n\t\tprivate readonly organizationPositionsService: OrganizationPositionsService\r\n\t) {\r\n\t\tsuper(organizationPositionsService);\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find all organization positions recurring expense.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found positions recurring expense',\r\n\t\ttype: OrganizationPositions\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get()\r\n\tasync findAllOrganizationPositions(\r\n\t\t@Query('data', ParseJsonPipe) data: any\r\n\t): Promise<IPagination<OrganizationPositions>> {\r\n\t\tconst { relations = [], findInput } = data;\r\n\t\treturn this.organizationPositionsService.findAll({\r\n\t\t\twhere: findInput,\r\n\t\t\trelations\r\n\t\t});\r\n\t}\r\n\r\n\t@Put(':id')\r\n\tasync updateOrganizationTeam(\r\n\t\t@Param('id') id: string,\r\n\t\t@Body() entity: OrganizationPositions,\r\n\t\t...options: any[]\r\n\t): Promise<OrganizationPositions> {\r\n\t\treturn this.organizationPositionsService.create({\r\n\t\t\tid,\r\n\t\t\t...entity\r\n\t\t});\r\n\t}\r\n}\r\n","import { Column, Entity, Index, ManyToMany, JoinTable } from 'typeorm';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsNotEmpty, IsString } from 'class-validator';\r\nimport { IOrganizationPosition } from '@gauzy/models';\r\nimport { Tag } from '../tags/tag.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('organization_position')\r\nexport class OrganizationPositions extends TenantOrganizationBase\r\n\timplements IOrganizationPosition {\r\n\t@ApiProperty()\r\n\t@ManyToMany((type) => Tag, (tag) => tag.organizationPosition)\r\n\t@JoinTable({\r\n\t\tname: 'tag_organization_position'\r\n\t})\r\n\ttags: Tag[];\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Index()\r\n\t@Column()\r\n\tname: string;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { OrganizationPositions } from './organization-positions.entity';\r\nimport { OrganizationPositionsController } from './organization-positions.controller';\r\nimport { OrganizationPositionsService } from './organization-positions.service';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [TypeOrmModule.forFeature([OrganizationPositions]), TenantModule],\r\n\tcontrollers: [OrganizationPositionsController],\r\n\tproviders: [OrganizationPositionsService],\r\n\texports: [OrganizationPositionsService]\r\n})\r\nexport class OrganizationPositionsModule {}\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { CrudService } from '../core/crud/crud.service';\r\nimport { OrganizationPositions } from './organization-positions.entity';\r\n\r\n@Injectable()\r\nexport class OrganizationPositionsService extends CrudService<OrganizationPositions> {\r\n    constructor(\r\n        @InjectRepository(OrganizationPositions) private readonly organizationPositionsRepository: Repository<OrganizationPositions>\r\n    ) {\r\n        super(organizationPositionsRepository);\r\n    }\r\n}\r\n","import { OrganizationProjectEditByEmployeeHandler } from './organization-project.edit-by-employee.handler';\r\nimport { OrganizationProjectCreateHandler } from './organization-project.create.handler';\r\nimport { OrganizationProjectUpdateHandler } from './organization-project.update.handler';\r\n\r\nexport const CommandHandlers = [\r\n\tOrganizationProjectEditByEmployeeHandler,\r\n\tOrganizationProjectCreateHandler,\r\n\tOrganizationProjectUpdateHandler\r\n];\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { OrganizationProjectCreateCommand } from '../organization-project.create.command';\r\nimport { OrganizationProjectsService } from '../../organization-projects.service';\r\nimport { IOrganizationProject } from '@gauzy/models';\r\n\r\n@CommandHandler(OrganizationProjectCreateCommand)\r\nexport class OrganizationProjectCreateHandler\r\n\timplements ICommandHandler<OrganizationProjectCreateCommand> {\r\n\tconstructor(private readonly ops: OrganizationProjectsService) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: OrganizationProjectCreateCommand\r\n\t): Promise<IOrganizationProject> {\r\n\t\treturn this.ops.create(command.input);\r\n\t}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { UpdateEntityByMembersHandler } from '../../../shared';\r\nimport { OrganizationProjectsService } from '../../organization-projects.service';\r\nimport { OrganizationProjectEditByEmployeeCommand } from '../organization-project.edit-by-employee.command';\r\n\r\n@CommandHandler(OrganizationProjectEditByEmployeeCommand)\r\nexport class OrganizationProjectEditByEmployeeHandler\r\n\textends UpdateEntityByMembersHandler\r\n\timplements ICommandHandler<OrganizationProjectEditByEmployeeCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly organizationDepartmentService: OrganizationProjectsService\r\n\t) {\r\n\t\tsuper(organizationDepartmentService);\r\n\t}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: OrganizationProjectEditByEmployeeCommand\r\n\t): Promise<any> {\r\n\t\treturn this.executeCommand(command.input);\r\n\t}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { OrganizationProjectUpdateCommand } from '../organization-project.update.command';\r\nimport { OrganizationProjectsService } from '../../organization-projects.service';\r\nimport {\r\n\tIOrganizationProject,\r\n\tIOrganizationProjectsUpdateInput\r\n} from '@gauzy/models';\r\n\r\n@CommandHandler(OrganizationProjectUpdateCommand)\r\nexport class OrganizationProjectUpdateHandler\r\n\timplements ICommandHandler<OrganizationProjectUpdateCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly _organizationProjectsService: OrganizationProjectsService\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: OrganizationProjectUpdateCommand\r\n\t): Promise<IOrganizationProject> {\r\n\t\tconst { input } = command;\r\n\t\tconst { id } = input;\r\n\r\n\t\treturn this.updateProject(id, input);\r\n\t}\r\n\r\n\tprivate async updateProject(\r\n\t\tid: string,\r\n\t\trequest: IOrganizationProjectsUpdateInput\r\n\t): Promise<IOrganizationProject> {\r\n\t\tconst project = await this._organizationProjectsService.findOne(id);\r\n\t\tif (project) {\r\n\t\t\tdelete request.id;\r\n\t\t\tawait this._organizationProjectsService.update(id, request);\r\n\t\t\treturn await this._organizationProjectsService.findOne(id);\r\n\t\t}\r\n\r\n\t\treturn project;\r\n\t}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { IOrganizationProjectsCreateInput } from '@gauzy/models';\r\n\r\nexport class OrganizationProjectCreateCommand implements ICommand {\r\n\tstatic readonly type = '[OrganizationProject] Create Project';\r\n\r\n\tconstructor(public readonly input: IOrganizationProjectsCreateInput) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { IEditEntityByMemberInput as IOrganizationProjectEditByEmployeeInput } from '@gauzy/models';\r\n\r\nexport class OrganizationProjectEditByEmployeeCommand implements ICommand {\r\n\tstatic readonly type = '[OrganizationProject] Edit By Employee';\r\n\r\n\tconstructor(\r\n\t\tpublic readonly input: IOrganizationProjectEditByEmployeeInput\r\n\t) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { IOrganizationProjectsUpdateInput } from '@gauzy/models';\r\n\r\nexport class OrganizationProjectUpdateCommand implements ICommand {\r\n\tstatic readonly type = '[OrganizationProject] Update Project';\r\n\r\n\tconstructor(public readonly input: IOrganizationProjectsUpdateInput) {}\r\n}\r\n","export const DEFAULT_ORGANIZATION_PROJECTS: string[] = [\r\n\t'Gauzy Platform (Open-Source)',\r\n\t'Gauzy Web Site',\r\n\t'Gauzy Platform SaaS',\r\n\t'Gauzy Platform DevOps'\r\n];\r\n","import {\r\n\tIEditEntityByMemberInput,\r\n\tPermissionsEnum,\r\n\tTaskListTypeEnum\r\n} from '@gauzy/models';\r\nimport {\r\n\tBody,\r\n\tController,\r\n\tGet,\r\n\tHttpCode,\r\n\tHttpStatus,\r\n\tParam,\r\n\tPut,\r\n\tQuery,\r\n\tUseGuards,\r\n\tRequest\r\n} from '@nestjs/common';\r\nimport { CommandBus } from '@nestjs/cqrs';\r\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\r\nimport { IPagination } from '../core';\r\nimport { CrudController } from '../core/crud/crud.controller';\r\nimport { OrganizationProjectEditByEmployeeCommand } from './commands/organization-project.edit-by-employee.command';\r\nimport { OrganizationProject } from './organization-projects.entity';\r\nimport { OrganizationProjectsService } from './organization-projects.service';\r\nimport { PermissionGuard } from '../shared/guards/auth/permission.guard';\r\nimport { Permissions } from '../shared/decorators/permissions';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\nimport { ParseJsonPipe } from '../shared/pipes/parse-json.pipe';\r\n\r\n@ApiTags('OrganizationProjects')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class OrganizationProjectsController extends CrudController<\r\n\tOrganizationProject\r\n> {\r\n\tconstructor(\r\n\t\tprivate readonly organizationProjectsService: OrganizationProjectsService,\r\n\t\tprivate readonly commandBus: CommandBus\r\n\t) {\r\n\t\tsuper(organizationProjectsService);\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find all organization projects by Employee.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found projects',\r\n\t\ttype: OrganizationProject\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get('employee/:id')\r\n\tasync findByEmployee(\r\n\t\t@Param('id') id: string,\r\n\t\t@Query('data', ParseJsonPipe) data?: any\r\n\t): Promise<IPagination<OrganizationProject>> {\r\n\t\tconst { findInput = null } = data;\r\n\t\treturn this.organizationProjectsService.findByEmployee(id, findInput);\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find all organization projects.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found projects',\r\n\t\ttype: OrganizationProject\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get()\r\n\tasync findAllEmployees(\r\n\t\t@Query('data', ParseJsonPipe) data: any,\r\n\t\t@Request() req\r\n\t): Promise<IPagination<OrganizationProject>> {\r\n\t\tconst { relations, findInput } = data;\r\n\t\treturn this.organizationProjectsService.findAll({\r\n\t\t\twhere: findInput,\r\n\t\t\trelations\r\n\t\t});\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find organization projects count.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found count',\r\n\t\ttype: OrganizationProject\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get('count')\r\n\tasync findProjectsCount(\r\n\t\t@Query('data', ParseJsonPipe) data: any,\r\n\t\t@Request() req\r\n\t): Promise<any> {\r\n\t\tconst { relations, findInput } = data;\r\n\t\treturn this.organizationProjectsService.count({\r\n\t\t\twhere: findInput,\r\n\t\t\trelations\r\n\t\t});\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Update an existing record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully edited.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@UseGuards(AuthGuard('jwt'))\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_EMPLOYEES_EDIT)\r\n\t@Put('employee')\r\n\tasync updateEmployee(\r\n\t\t@Body() entity: IEditEntityByMemberInput\r\n\t): Promise<any> {\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew OrganizationProjectEditByEmployeeCommand(entity)\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Update an existing record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully edited.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@UseGuards(AuthGuard('jwt'))\r\n\t// @UseGuards(PermissionGuard)\r\n\t// @Permissions(PermissionsEnum.ORG_EMPLOYEES_EDIT)\r\n\t@Put('/task-view/:id')\r\n\tasync updateTaskViewMode(\r\n\t\t@Param('id') id: string,\r\n\t\t@Body() entity: { taskViewMode: TaskListTypeEnum }\r\n\t): Promise<any> {\r\n\t\treturn this.organizationProjectsService.updateTaskViewMode(\r\n\t\t\tid,\r\n\t\t\tentity.taskViewMode\r\n\t\t\t// new OrganizationProjectEditByEmployeeCommand(entity)\r\n\t\t);\r\n\t}\r\n\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Put(':id')\r\n\tasync updateProject(\r\n\t\t@Param('id') id: string,\r\n\t\t@Body() entity: OrganizationProject\r\n\t): Promise<OrganizationProject> {\r\n\t\t//We are using create here because create calls the method save()\r\n\t\t//We need save() to save ManyToMany relations\r\n\t\ttry {\r\n\t\t\treturn await this.organizationProjectsService.create({\r\n\t\t\t\tid,\r\n\t\t\t\t...entity\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n}\r\n","import {\r\n\tColumn,\r\n\tEntity,\r\n\tIndex,\r\n\tJoinColumn,\r\n\tManyToOne,\r\n\tManyToMany,\r\n\tJoinTable,\r\n\tOneToMany,\r\n\tRelationId\r\n} from 'typeorm';\r\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\r\nimport {\r\n\tIsNotEmpty,\r\n\tIsString,\r\n\tIsOptional,\r\n\tIsDate,\r\n\tIsEnum,\r\n\tIsBoolean\r\n} from 'class-validator';\r\nimport {\r\n\tIOrganizationProject,\r\n\tCurrenciesEnum,\r\n\tTaskListTypeEnum,\r\n\tIOrganizationContact,\r\n\tIInvoiceItem,\r\n\tITag,\r\n\tITask,\r\n\tITimeLog,\r\n\tIEmployee,\r\n\tIOrganizationSprint,\r\n\tIPayment,\r\n\tOrganizationProjectBudgetTypeEnum\r\n} from '@gauzy/models';\r\nimport { OrganizationContact } from '../organization-contact/organization-contact.entity';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { InvoiceItem } from '../invoice-item/invoice-item.entity';\r\nimport { Tag } from '../tags/tag.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\nimport { Task } from '../tasks/task.entity';\r\nimport { OrganizationSprint } from '../organization-sprint/organization-sprint.entity';\r\nimport { Payment } from '../payment/payment.entity';\r\nimport { TimeLog } from '../timesheet/time-log.entity';\r\n\r\n@Entity('organization_project')\r\nexport class OrganizationProject\r\n\textends TenantOrganizationBase\r\n\timplements IOrganizationProject {\r\n\t@ApiProperty()\r\n\t@ManyToMany((type) => Tag, (tag) => tag.organizationProject)\r\n\t@JoinTable({\r\n\t\tname: 'tag_organization_project'\r\n\t})\r\n\ttags: ITag[];\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Index()\r\n\t@Column()\r\n\tname: string;\r\n\r\n\t@ApiPropertyOptional({ type: OrganizationContact })\r\n\t@ManyToOne(\r\n\t\t(type) => OrganizationContact,\r\n\t\t(organizationContact) => organizationContact.projects,\r\n\t\t{\r\n\t\t\tnullable: true,\r\n\t\t\tonDelete: 'CASCADE'\r\n\t\t}\r\n\t)\r\n\t@JoinColumn()\r\n\torganizationContact?: IOrganizationContact;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@RelationId((contact: OrganizationProject) => contact.organizationContact)\r\n\t@Column({ nullable: true })\r\n\torganizationContactId?: string;\r\n\r\n\t@ApiProperty({ type: Task })\r\n\t@OneToMany((type) => Task, (task) => task.project)\r\n\t@JoinColumn()\r\n\ttasks?: ITask[];\r\n\r\n\t@OneToMany((type) => TimeLog, (timeLog) => timeLog.project)\r\n\ttimeLogs?: ITimeLog[];\r\n\r\n\t@ApiPropertyOptional({ type: Date })\r\n\t@IsDate()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tstartDate?: Date;\r\n\r\n\t@ApiPropertyOptional({ type: Date })\r\n\t@IsDate()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tendDate?: Date;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Column({ nullable: true })\r\n\tbilling: string;\r\n\r\n\t@ApiProperty({ type: String, enum: CurrenciesEnum })\r\n\t@IsEnum(CurrenciesEnum)\r\n\t@IsNotEmpty()\r\n\t@Index()\r\n\t@Column({ nullable: true })\r\n\tcurrency: string;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@IsBoolean()\r\n\t@Column({ nullable: true })\r\n\tpublic: boolean;\r\n\r\n\t@ManyToMany((type) => Employee, { cascade: ['update'] })\r\n\t@JoinTable({\r\n\t\tname: 'organization_project_employee'\r\n\t})\r\n\tmembers?: IEmployee[];\r\n\r\n\t@ApiPropertyOptional({ type: InvoiceItem, isArray: true })\r\n\t@OneToMany((type) => InvoiceItem, (invoiceItem) => invoiceItem.project, {\r\n\t\tonDelete: 'SET NULL'\r\n\t})\r\n\t@JoinColumn()\r\n\tinvoiceItems?: IInvoiceItem[];\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Column({ nullable: true })\r\n\towner: string;\r\n\r\n\t@ApiPropertyOptional({ type: OrganizationSprint })\r\n\t@OneToMany((type) => OrganizationSprint, (sprints) => sprints.project)\r\n\t@JoinColumn()\r\n\torganizationSprints?: IOrganizationSprint[];\r\n\r\n\t@ApiProperty({ type: String, enum: TaskListTypeEnum })\r\n\t@IsEnum(TaskListTypeEnum)\r\n\t@Column({ default: TaskListTypeEnum.GRID })\r\n\ttaskListType: string;\r\n\r\n\t@ApiPropertyOptional({ type: Payment, isArray: true })\r\n\t@OneToMany((type) => Payment, (payment) => payment.project, {\r\n\t\tonDelete: 'SET NULL'\r\n\t})\r\n\t@JoinColumn()\r\n\tpayments?: IPayment[];\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@IsString()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tcode?: string;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@IsString()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tdescription?: string;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@IsString()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tcolor?: string;\r\n\r\n\t@ApiPropertyOptional({ type: Boolean })\r\n\t@IsString()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tbillable?: boolean;\r\n\r\n\t@ApiPropertyOptional({ type: Boolean })\r\n\t@IsString()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tbillingFlat?: boolean;\r\n\r\n\t@ApiPropertyOptional({ type: Boolean })\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\topenSource?: boolean;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@IsString()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tprojectUrl?: string;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@IsString()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\topenSourceProjectUrl?: string;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@IsString()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tbudget?: number;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@IsString()\r\n\t@IsOptional()\r\n\t@Column({\r\n\t\ttype: 'text',\r\n\t\tnullable: true,\r\n\t\tdefault: OrganizationProjectBudgetTypeEnum.COST\r\n\t})\r\n\tbudgetType?: OrganizationProjectBudgetTypeEnum;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { OrganizationProject } from './organization-projects.entity';\r\nimport { OrganizationProjectsController } from './organization-projects.controller';\r\nimport { OrganizationProjectsService } from './organization-projects.service';\r\nimport { CqrsModule } from '@nestjs/cqrs';\r\nimport { CommandHandlers } from './commands/handlers';\r\nimport { User } from '../user/user.entity';\r\nimport { UserService } from '../user/user.service';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([OrganizationProject, User]),\r\n\t\tCqrsModule,\r\n\t\tTenantModule\r\n\t],\r\n\tcontrollers: [OrganizationProjectsController],\r\n\tproviders: [OrganizationProjectsService, UserService, ...CommandHandlers],\r\n\texports: [OrganizationProjectsService]\r\n})\r\nexport class OrganizationProjectsModule {}\r\n","import { Connection } from 'typeorm';\r\nimport * as faker from 'faker';\r\nimport { Tag } from '../tags/tag.entity';\r\nimport { OrganizationProject } from './organization-projects.entity';\r\nimport {\r\n\tIOrganization,\r\n\tOrganizationProjectBudgetTypeEnum,\r\n\tTaskListTypeEnum\r\n} from '@gauzy/models';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { OrganizationContact } from '../organization-contact/organization-contact.entity';\r\nimport { DEFAULT_ORGANIZATION_PROJECTS } from './default-organization-projects';\r\n\r\nexport const createDefaultOrganizationProjects = async (\r\n\tconnection: Connection,\r\n\tdefaultOrganizations: IOrganization[]\r\n) => {\r\n\tconst tag = await connection.getRepository(Tag).create({\r\n\t\tname: 'Web',\r\n\t\tdescription: '',\r\n\t\tcolor: faker.commerce.color()\r\n\t});\r\n\tconst projects: OrganizationProject[] = [];\r\n\r\n\tfor (let index = 0; index < DEFAULT_ORGANIZATION_PROJECTS.length; index++) {\r\n\t\tconst name = DEFAULT_ORGANIZATION_PROJECTS[index];\r\n\r\n\t\tconst organization = faker.random.arrayElement(defaultOrganizations);\r\n\t\tconst organizationContacts = await connection\r\n\t\t\t.getRepository(OrganizationContact)\r\n\t\t\t.find({\r\n\t\t\t\twhere: {\r\n\t\t\t\t\torganizationId: organization.id,\r\n\t\t\t\t\ttenantId: organization.tenantId\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\tconst organizationContact = faker.random.arrayElement(\r\n\t\t\torganizationContacts\r\n\t\t);\r\n\r\n\t\tconst project = new OrganizationProject();\r\n\t\tproject.tags = [tag];\r\n\t\tproject.name = name;\r\n\t\tproject.organizationContact = organizationContact;\r\n\t\tproject.organizationId = organization.id;\r\n\t\tproject.tenant = organization.tenant;\r\n\t\tproject.budgetType = faker.random.arrayElement(\r\n\t\t\tObject.values(OrganizationProjectBudgetTypeEnum)\r\n\t\t);\r\n\t\tproject.budget =\r\n\t\t\tproject.budgetType == OrganizationProjectBudgetTypeEnum.COST\r\n\t\t\t\t? faker.random.number({ min: 2000, max: 40000 })\r\n\t\t\t\t: faker.random.number({ min: 20, max: 40 });\r\n\t\tproject.taskListType = faker.random.arrayElement(\r\n\t\t\tObject.values(TaskListTypeEnum)\r\n\t\t);\r\n\t\t// TODO: this seed creates default projects without tenantId.\r\n\t\tprojects.push(project);\r\n\t}\r\n\treturn await connection.manager.save(projects);\r\n};\r\n\r\nexport const createRandomOrganizationProjects = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantOrganizationsMap: Map<Tenant, IOrganization[]>,\r\n\ttags: Tag[] | void,\r\n\tmaxProjectsPerOrganization\r\n) => {\r\n\tif (!tags) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: tags not found, RandomOrganizationProjects will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst projects: OrganizationProject[] = [];\r\n\tfor (const tenant of tenants) {\r\n\t\tconst projectsPerOrganization =\r\n\t\t\tMath.floor(Math.random() * (maxProjectsPerOrganization - 5)) + 5;\r\n\t\tconst orgs = tenantOrganizationsMap.get(tenant);\r\n\r\n\t\tfor (const org of orgs) {\r\n\t\t\tconst organizationContacts = await connection\r\n\t\t\t\t.getRepository(OrganizationContact)\r\n\t\t\t\t.find({\r\n\t\t\t\t\twhere: { organizationId: org.id, tenantId: org.tenantId }\r\n\t\t\t\t});\r\n\t\t\tconst organizationContact = faker.random.arrayElement(\r\n\t\t\t\torganizationContacts\r\n\t\t\t);\r\n\t\t\tlet orgTags: Tag[] = [];\r\n\t\t\torgTags = tags.filter((x) => (x.organization = org));\r\n\t\t\tfor (let i = 0; i < projectsPerOrganization; i++) {\r\n\t\t\t\tconst project = new OrganizationProject();\r\n\t\t\t\tproject.tags = [tags[Math.floor(Math.random() * tags.length)]];\r\n\t\t\t\tproject.name = faker.company.companyName();\r\n\t\t\t\tproject.organizationContact = organizationContact;\r\n\t\t\t\tproject.organizationId = org.id;\r\n\t\t\t\tproject.tenant = tenant;\r\n\t\t\t\tproject.budgetType = faker.random.arrayElement(\r\n\t\t\t\t\tObject.values(OrganizationProjectBudgetTypeEnum)\r\n\t\t\t\t);\r\n\t\t\t\tproject.budget =\r\n\t\t\t\t\tproject.budgetType == OrganizationProjectBudgetTypeEnum.COST\r\n\t\t\t\t\t\t? faker.random.number({ min: 2000, max: 40000 })\r\n\t\t\t\t\t\t: faker.random.number({ min: 20, max: 40 });\r\n\r\n\t\t\t\tproject.startDate = faker.date.past(5);\r\n\t\t\t\tproject.endDate = faker.date.past(2);\r\n\t\t\t\tprojects.push(project);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tawait connection.manager.save(projects);\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { OrganizationProject } from './organization-projects.entity';\r\nimport { TenantAwareCrudService } from '../core/crud/tenant-aware-crud.service';\r\nimport { IOrganizationProjectsFindInput } from '@gauzy/models';\r\nimport { RequestContext } from '../core/context';\r\n\r\n@Injectable()\r\nexport class OrganizationProjectsService extends TenantAwareCrudService<OrganizationProject> {\r\n\tconstructor(\r\n\t\t@InjectRepository(OrganizationProject)\r\n\t\tprivate readonly organizationProjectsRepository: Repository<OrganizationProject>\r\n\t) {\r\n\t\tsuper(organizationProjectsRepository);\r\n\t}\r\n\r\n\tasync findByEmployee(\r\n\t\tid: string,\r\n\t\tfindInput?: IOrganizationProjectsFindInput\r\n\t): Promise<any> {\r\n\t\tconst tenantId = RequestContext.currentTenantId();\r\n\t\tconst query = this.organizationProjectsRepository.createQueryBuilder(\r\n\t\t\t'organization_project'\r\n\t\t);\r\n\t\tquery\r\n\t\t\t.leftJoin('organization_project.members', 'member')\r\n\t\t\t.where('member.id = :id', { id })\r\n\t\t\t.andWhere(`${query.alias}.tenantId = :tenantId`, {\r\n\t\t\t\ttenantId\r\n\t\t\t});\r\n\t\tif (findInput && findInput['organizationId']) {\r\n\t\t\tconst { organizationId } = findInput;\r\n\t\t\tquery.andWhere(`${query.alias}.organizationId = :organizationId`, {\r\n\t\t\t\torganizationId\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (findInput && findInput['organizationContactId']) {\r\n\t\t\tconst { organizationContactId } = findInput;\r\n\t\t\tquery.andWhere(\r\n\t\t\t\t`${query.alias}.organizationContactId = :organizationContactId`,\r\n\t\t\t\t{\r\n\t\t\t\t\torganizationContactId\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn await query.getMany();\r\n\t}\r\n\r\n\tasync updateTaskViewMode(id: string, taskViewMode: string): Promise<any> {\r\n\t\tconst project = await this.organizationProjectsRepository.findOne(id);\r\n\t\tproject.taskListType = taskViewMode;\r\n\t\treturn await this.organizationProjectsRepository.save(project);\r\n\t}\r\n}\r\n","import { OrganizationRecurringExpenseDeleteHandler } from './organization-recurring-expense.delete.handler';\r\nimport { OrganizationRecurringExpenseEditHandler } from './organization-recurring-expense.edit.handler';\r\nimport { OrganizationRecurringExpenseCreateHandler } from './organization-recurring-expense.create.handler';\r\n\r\nexport const CommandHandlers = [\r\n\tOrganizationRecurringExpenseEditHandler,\r\n\tOrganizationRecurringExpenseDeleteHandler,\r\n\tOrganizationRecurringExpenseCreateHandler\r\n];\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { OrganizationRecurringExpenseService } from '../../organization-recurring-expense.service';\r\nimport { OrganizationRecurringExpenseCreateCommand } from '../organization-recurring-expense.create.command';\r\n\r\n@CommandHandler(OrganizationRecurringExpenseCreateCommand)\r\nexport class OrganizationRecurringExpenseCreateHandler\r\n\timplements ICommandHandler<OrganizationRecurringExpenseCreateCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly organizationRecurringExpenseService: OrganizationRecurringExpenseService\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: OrganizationRecurringExpenseCreateCommand\r\n\t): Promise<any> {\r\n\t\tconst { input } = command;\r\n\t\tconst createdExpense = await this.organizationRecurringExpenseService.create(\r\n\t\t\tinput\r\n\t\t);\r\n\r\n\t\tawait this.organizationRecurringExpenseService.update(\r\n\t\t\tcreatedExpense.id,\r\n\t\t\t{\r\n\t\t\t\tparentRecurringExpenseId: createdExpense.id\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\treturn {\r\n\t\t\t...createdExpense,\r\n\t\t\tparentRecurringExpenseId: createdExpense.id\r\n\t\t};\r\n\t}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\n\r\nimport { RecurringExpenseDeleteHandler } from '../../../shared';\r\nimport { OrganizationRecurringExpense } from '../../organization-recurring-expense.entity';\r\nimport { OrganizationRecurringExpenseService } from '../../organization-recurring-expense.service';\r\nimport { OrganizationRecurringExpenseDeleteCommand } from '../organization-recurring-expense.delete.command';\r\n\r\n/**\r\n * Deletes a OrganizationRecurringExpense based on RecurringExpenseDeleteHandler\r\n */\r\n@CommandHandler(OrganizationRecurringExpenseDeleteCommand)\r\nexport class OrganizationRecurringExpenseDeleteHandler\r\n\textends RecurringExpenseDeleteHandler<OrganizationRecurringExpense>\r\n\timplements ICommandHandler<OrganizationRecurringExpenseDeleteCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly organizationRecurringExpenseService: OrganizationRecurringExpenseService\r\n\t) {\r\n\t\tsuper(organizationRecurringExpenseService);\r\n\t}\r\n\r\n\t//TODO: Fix typescript return <any>\r\n\tpublic async execute(\r\n\t\tcommand: OrganizationRecurringExpenseDeleteCommand\r\n\t): Promise<any> {\r\n\t\tconst { id, deleteInput } = command;\r\n\r\n\t\treturn await this.executeCommand(id, deleteInput);\r\n\t}\r\n}\r\n","import { IStartUpdateTypeInfo } from '@gauzy/models';\r\nimport { CommandHandler, ICommandHandler, QueryBus } from '@nestjs/cqrs';\r\nimport { RecurringExpenseEditHandler } from '../../../shared';\r\nimport { OrganizationRecurringExpense } from '../../organization-recurring-expense.entity';\r\nimport { OrganizationRecurringExpenseService } from '../../organization-recurring-expense.service';\r\nimport { OrganizationRecurringExpenseStartDateUpdateTypeQuery } from '../../queries/organization-recurring-expense.update-type.query';\r\nimport { OrganizationRecurringExpenseEditCommand } from '../organization-recurring-expense.edit.command';\r\n\r\n/**\r\n * This edits a recurring expense.\r\n * To edit a recurring expense\r\n * 1. Change the end date of the original expense so that old value is not modified for previous expense.\r\n * 2. Create a new expense to have new values for all future dates.\r\n */\r\n@CommandHandler(OrganizationRecurringExpenseEditCommand)\r\nexport class OrganizationRecurringExpenseEditHandler\r\n\textends RecurringExpenseEditHandler<OrganizationRecurringExpense>\r\n\timplements ICommandHandler<OrganizationRecurringExpenseEditCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly organizationRecurringExpenseService: OrganizationRecurringExpenseService,\r\n\t\tprivate readonly queryBus: QueryBus\r\n\t) {\r\n\t\tsuper(organizationRecurringExpenseService);\r\n\t}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: OrganizationRecurringExpenseEditCommand\r\n\t): Promise<any> {\r\n\t\tconst { id, input } = command;\r\n\r\n\t\tconst updateType: IStartUpdateTypeInfo = await this.queryBus.execute(\r\n\t\t\tnew OrganizationRecurringExpenseStartDateUpdateTypeQuery({\r\n\t\t\t\tnewStartDate: new Date(\r\n\t\t\t\t\tinput.startYear,\r\n\t\t\t\t\tinput.startMonth,\r\n\t\t\t\t\tinput.startDay\r\n\t\t\t\t),\r\n\t\t\t\trecurringExpenseId: id\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\treturn await this.executeCommand(id, {\r\n\t\t\t...input,\r\n\t\t\tstartDateUpdateType: updateType.value\r\n\t\t});\r\n\t}\r\n}\r\n","import { IOrganizationRecurringExpense } from '@gauzy/models';\r\nimport { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class OrganizationRecurringExpenseCreateCommand implements ICommand {\r\n\tstatic readonly type = '[OrganizationRecurringExpense] Create';\r\n\r\n\tconstructor(public readonly input: IOrganizationRecurringExpense) {}\r\n}\r\n","import { IRecurringExpenseDeleteInput } from '@gauzy/models';\r\nimport { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class OrganizationRecurringExpenseDeleteCommand implements ICommand {\r\n\tstatic readonly type = '[OrganizationRecurringExpense] Delete';\r\n\r\n\tconstructor(\r\n\t\tpublic readonly id: string,\r\n\t\tpublic readonly deleteInput: IRecurringExpenseDeleteInput\r\n\t) {}\r\n}\r\n","import { IRecurringExpenseEditInput as IExpenseEditInput } from '@gauzy/models';\r\nimport { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class OrganizationRecurringExpenseEditCommand implements ICommand {\r\n\tstatic readonly type = '[OrganizationRecurringExpense] Edit';\r\n\r\n\tconstructor(\r\n\t\tpublic readonly id: string,\r\n\t\tpublic readonly input: IExpenseEditInput\r\n\t) {}\r\n}\r\n","import {\r\n\tIStartUpdateTypeInfo,\r\n\tIOrganizationRecurringExpenseForEmployeeOutput,\r\n\tIRecurringExpenseEditInput\r\n} from '@gauzy/models';\r\nimport {\r\n\tBody,\r\n\tController,\r\n\tDelete,\r\n\tGet,\r\n\tHttpCode,\r\n\tHttpStatus,\r\n\tParam,\r\n\tPost,\r\n\tPut,\r\n\tQuery,\r\n\tUseGuards\r\n} from '@nestjs/common';\r\nimport { CommandBus, QueryBus } from '@nestjs/cqrs';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\r\nimport { IPagination } from '../core';\r\nimport { CrudController } from '../core/crud/crud.controller';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\nimport { OrganizationRecurringExpenseCreateCommand } from './commands/organization-recurring-expense.create.command';\r\nimport { OrganizationRecurringExpenseDeleteCommand } from './commands/organization-recurring-expense.delete.command';\r\nimport { OrganizationRecurringExpenseEditCommand } from './commands/organization-recurring-expense.edit.command';\r\nimport { OrganizationRecurringExpense } from './organization-recurring-expense.entity';\r\nimport { OrganizationRecurringExpenseService } from './organization-recurring-expense.service';\r\nimport { OrganizationRecurringExpenseByMonthQuery } from './queries/organization-recurring-expense.by-month.query';\r\nimport { OrganizationRecurringExpenseFindSplitExpenseQuery } from './queries/organization-recurring-expense.find-split-expense.query';\r\nimport { OrganizationRecurringExpenseStartDateUpdateTypeQuery } from './queries/organization-recurring-expense.update-type.query';\r\n\r\n@ApiTags('OrganizationRecurringExpense')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class OrganizationRecurringExpenseController extends CrudController<\r\n\tOrganizationRecurringExpense\r\n> {\r\n\tconstructor(\r\n\t\tprivate readonly commandBus: CommandBus,\r\n\t\tprivate readonly queryBus: QueryBus,\r\n\t\tprivate readonly organizationRecurringExpenseService: OrganizationRecurringExpenseService\r\n\t) {\r\n\t\tsuper(organizationRecurringExpenseService);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Create new expense' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The expense has been successfully created.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.CREATED)\r\n\t@Post()\r\n\tasync create(\r\n\t\t@Body() entity: OrganizationRecurringExpense\r\n\t): Promise<OrganizationRecurringExpense> {\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew OrganizationRecurringExpenseCreateCommand(entity)\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Delete record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'The record has been successfully deleted'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Delete(':id')\r\n\tasync delete(\r\n\t\t@Param('id') id: string,\r\n\t\t@Query('data') data: string\r\n\t): Promise<any> {\r\n\t\tconst { deleteInput } = JSON.parse(data);\r\n\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew OrganizationRecurringExpenseDeleteCommand(id, deleteInput)\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find all organization recurring expenses.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found organization recurring expense',\r\n\t\ttype: OrganizationRecurringExpense\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get()\r\n\tasync findAllRecurringExpenses(\r\n\t\t@Query('data') data: string\r\n\t): Promise<IPagination<OrganizationRecurringExpense>> {\r\n\t\tconst { findInput, order = {} } = JSON.parse(data);\r\n\r\n\t\treturn this.organizationRecurringExpenseService.findAll({\r\n\t\t\twhere: findInput,\r\n\t\t\torder: order\r\n\t\t});\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary:\r\n\t\t\t'Find all organization recurring expenses for given employee, also known as split recurring expenses.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found organization recurring expense'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get('/employee/:orgId')\r\n\tasync getSplitExpensesForEmployee(\r\n\t\t@Query('data') data: string,\r\n\t\t@Param('orgId') orgId: string\r\n\t): Promise<IPagination<IOrganizationRecurringExpenseForEmployeeOutput>> {\r\n\t\tconst { findInput } = JSON.parse(data);\r\n\r\n\t\treturn this.queryBus.execute(\r\n\t\t\tnew OrganizationRecurringExpenseFindSplitExpenseQuery(\r\n\t\t\t\torgId,\r\n\t\t\t\tfindInput\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Update an existing record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully edited.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Put(':id')\r\n\tasync update(\r\n\t\t@Param('id') id: string,\r\n\t\t@Body() entity: IRecurringExpenseEditInput\r\n\t): Promise<any> {\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew OrganizationRecurringExpenseEditCommand(id, entity)\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find all organization recurring expense by month.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found organization recurring expense',\r\n\t\ttype: OrganizationRecurringExpense\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get('/month')\r\n\tasync findAllExpenses(\r\n\t\t@Query('data') data: string\r\n\t): Promise<IPagination<OrganizationRecurringExpense>> {\r\n\t\tconst { findInput } = JSON.parse(data);\r\n\r\n\t\treturn this.queryBus.execute(\r\n\t\t\tnew OrganizationRecurringExpenseByMonthQuery(findInput)\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary:\r\n\t\t\t'Find start date update type & conflicting expenses for the update'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found start date update type'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get('/date-update-type')\r\n\tasync findStartDateUpdateType(\r\n\t\t@Query('data') data: string\r\n\t): Promise<IStartUpdateTypeInfo> {\r\n\t\tconst { findInput } = JSON.parse(data);\r\n\r\n\t\treturn this.queryBus.execute(\r\n\t\t\tnew OrganizationRecurringExpenseStartDateUpdateTypeQuery(findInput)\r\n\t\t);\r\n\t}\r\n}\r\n","import { CurrenciesEnum, IOrganizationRecurringExpense } from '@gauzy/models';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport {\r\n\tIsDate,\r\n\tIsEnum,\r\n\tIsNotEmpty,\r\n\tIsNumber,\r\n\tIsOptional,\r\n\tIsString,\r\n\tMax,\r\n\tMin,\r\n\tIsBoolean\r\n} from 'class-validator';\r\nimport { Column, Entity, Index } from 'typeorm';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('organization_recurring_expense')\r\nexport class OrganizationRecurringExpense extends TenantOrganizationBase\r\n\timplements IOrganizationRecurringExpense {\r\n\t@ApiProperty({ type: Number, minimum: 1, maximum: 31 })\r\n\t@IsNumber()\r\n\t@IsNotEmpty()\r\n\t@Min(1)\r\n\t@Max(31)\r\n\t@Column()\r\n\tstartDay: number;\r\n\r\n\t@ApiProperty({ type: Number, minimum: 1, maximum: 12 })\r\n\t@IsNumber()\r\n\t@IsNotEmpty()\r\n\t@Min(1)\r\n\t@Max(12)\r\n\t@Column()\r\n\tstartMonth: number;\r\n\r\n\t@ApiProperty({ type: Number, minimum: 1 })\r\n\t@IsNumber()\r\n\t@IsNotEmpty()\r\n\t@Min(0)\r\n\t@Column()\r\n\tstartYear: number;\r\n\r\n\t@ApiProperty({ type: Date })\r\n\t@IsDate()\r\n\t@Column()\r\n\tstartDate: Date;\r\n\r\n\t@ApiProperty({ type: Number, minimum: 1, maximum: 31 })\r\n\t@IsNumber()\r\n\t@IsOptional()\r\n\t@Min(1)\r\n\t@Max(31)\r\n\t@Column({ nullable: true })\r\n\tendDay: number;\r\n\r\n\t@ApiProperty({ type: Number, minimum: 1, maximum: 12 })\r\n\t@IsNumber()\r\n\t@IsOptional()\r\n\t@Min(1)\r\n\t@Max(12)\r\n\t@Column({ nullable: true })\r\n\tendMonth: number;\r\n\r\n\t@ApiProperty({ type: Number, minimum: 1 })\r\n\t@IsNumber()\r\n\t@IsOptional()\r\n\t@Min(0)\r\n\t@Column({ nullable: true })\r\n\tendYear: number;\r\n\r\n\t@ApiProperty({ type: Date })\r\n\t@IsDate()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tendDate?: Date;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Index()\r\n\t@Column()\r\n\tcategoryName: string;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@IsNumber()\r\n\t@IsNotEmpty()\r\n\t@Column({ type: 'numeric' })\r\n\tvalue: number;\r\n\r\n\t@ApiProperty({ type: String, enum: CurrenciesEnum })\r\n\t@IsEnum(CurrenciesEnum)\r\n\t@IsNotEmpty()\r\n\t@Index()\r\n\t@Column()\r\n\tcurrency: string;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@IsBoolean()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tsplitExpense: boolean;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@Index()\r\n\t@Column({ nullable: true })\r\n\tparentRecurringExpenseId?: string;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { CqrsModule } from '@nestjs/cqrs';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { CommandHandlers } from './commands/handlers';\r\nimport { OrganizationRecurringExpenseController } from './organization-recurring-expense.controller';\r\nimport { OrganizationRecurringExpense } from './organization-recurring-expense.entity';\r\nimport { OrganizationRecurringExpenseService } from './organization-recurring-expense.service';\r\nimport { QueryHandlers } from './queries/handlers';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { EmployeeService } from '../employee/employee.service';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { OrganizationService } from '../organization/organization.service';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([\r\n\t\t\tOrganizationRecurringExpense,\r\n\t\t\tOrganization,\r\n\t\t\tEmployee\r\n\t\t]),\r\n\t\tCqrsModule,\r\n\t\tTenantModule\r\n\t],\r\n\tcontrollers: [OrganizationRecurringExpenseController],\r\n\tproviders: [\r\n\t\tOrganizationRecurringExpenseService,\r\n\t\tEmployeeService,\r\n\t\tOrganizationService,\r\n\t\t...QueryHandlers,\r\n\t\t...CommandHandlers\r\n\t],\r\n\texports: [OrganizationRecurringExpenseService]\r\n})\r\nexport class OrganizationRecurringExpenseModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { OrganizationRecurringExpense } from './organization-recurring-expense.entity';\r\nimport * as faker from 'faker';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport {\r\n\tIOrganization,\r\n\tRecurringExpenseDefaultCategoriesEnum\r\n} from '@gauzy/models';\r\nimport * as moment from 'moment';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { environment as env } from '@env-api/environment';\r\n\r\nexport const createDefaultOrganizationRecurringExpense = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\tdefaultOrganizations: Organization\r\n): Promise<OrganizationRecurringExpense[]> => {\r\n\tif (!defaultOrganizations) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: defaultOrganizations not found, default organization recurring expense not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tlet mapOrganizationRecurringExpense: OrganizationRecurringExpense[] = [];\r\n\tconst expenseCategories = Object.keys(\r\n\t\tRecurringExpenseDefaultCategoriesEnum\r\n\t);\r\n\r\n\tmapOrganizationRecurringExpense = await dataOperation(\r\n\t\tconnection,\r\n\t\ttenant,\r\n\t\tmapOrganizationRecurringExpense,\r\n\t\texpenseCategories,\r\n\t\tdefaultOrganizations\r\n\t);\r\n\treturn mapOrganizationRecurringExpense;\r\n};\r\n\r\nexport const createRandomOrganizationRecurringExpense = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantOrganizationsMap: Map<Tenant, IOrganization[]>\r\n): Promise<OrganizationRecurringExpense[]> => {\r\n\tif (!tenantOrganizationsMap) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: tenantOrganizationsMap not found, organization recurring expense not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tlet mapOrganizationRecurringExpense: OrganizationRecurringExpense[] = [];\r\n\tconst expenseCategories = Object.keys(\r\n\t\tRecurringExpenseDefaultCategoriesEnum\r\n\t);\r\n\r\n\tfor (const tenant of tenants) {\r\n\t\tconst tenantOrganization = tenantOrganizationsMap.get(tenant);\r\n\t\tfor (const tenantOrg of tenantOrganization) {\r\n\t\t\tmapOrganizationRecurringExpense = await dataOperation(\r\n\t\t\t\tconnection,\r\n\t\t\t\ttenant,\r\n\t\t\t\tmapOrganizationRecurringExpense,\r\n\t\t\t\texpenseCategories,\r\n\t\t\t\ttenantOrg\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\treturn mapOrganizationRecurringExpense;\r\n};\r\n\r\nconst dataOperation = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\tmapOrganizationRecurringExpense,\r\n\texpenseCategories,\r\n\ttenantOrg: Organization\r\n) => {\r\n\tfor (const expenseCategory of expenseCategories) {\r\n\t\tconst organization = new OrganizationRecurringExpense();\r\n\r\n\t\tconst startDate = faker.date.past();\r\n\t\tconst endDate = moment(startDate).add(1, 'months').toDate();\r\n\r\n\t\torganization.organization = tenantOrg;\r\n\t\torganization.organizationId = tenantOrg.id;\r\n\t\torganization.tenant = tenant;\r\n\r\n\t\torganization.startDay = startDate.getDate();\r\n\t\torganization.startMonth = startDate.getMonth() + 1;\r\n\t\torganization.startYear = startDate.getFullYear();\r\n\t\torganization.startDate = startDate;\r\n\r\n\t\torganization.endDay = endDate.getDate();\r\n\t\torganization.endMonth = endDate.getMonth();\r\n\t\torganization.endYear = endDate.getFullYear();\r\n\t\torganization.endDate = endDate;\r\n\r\n\t\torganization.categoryName = expenseCategory;\r\n\t\torganization.value = faker.random.number(9999);\r\n\r\n\t\torganization.currency = tenantOrg.currency || env.defaultCurrency;\r\n\r\n\t\tmapOrganizationRecurringExpense.push(organization);\r\n\t}\r\n\tawait connection.manager.save(mapOrganizationRecurringExpense);\r\n\treturn mapOrganizationRecurringExpense;\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { TenantAwareCrudService } from '../core/crud/tenant-aware-crud.service';\r\nimport { OrganizationRecurringExpense } from './organization-recurring-expense.entity';\r\n\r\n@Injectable()\r\nexport class OrganizationRecurringExpenseService extends TenantAwareCrudService<\r\n\tOrganizationRecurringExpense\r\n> {\r\n\tconstructor(\r\n\t\t@InjectRepository(OrganizationRecurringExpense)\r\n\t\tprivate readonly organizationRecurringExpenseRepository: Repository<\r\n\t\t\tOrganizationRecurringExpense\r\n\t\t>\r\n\t) {\r\n\t\tsuper(organizationRecurringExpenseRepository);\r\n\t}\r\n}\r\n","import { OrganizationRecurringExpenseByMonthHandler } from './organization-recurring-expense.by-month.handler';\r\nimport { OrganizationRecurringExpenseFindSplitExpenseHandler } from './organization-recurring-expense.find-split-expense.handler';\r\nimport { OrganizationRecurringExpenseUpdateTypeHandler } from './organization-recurring-expense.start-date-update-type.handler';\r\n\r\nexport const QueryHandlers = [\r\n\tOrganizationRecurringExpenseByMonthHandler,\r\n\tOrganizationRecurringExpenseFindSplitExpenseHandler,\r\n\tOrganizationRecurringExpenseUpdateTypeHandler\r\n];\r\n","import { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\r\n\r\nimport { IPagination } from '../../../core';\r\nimport { FindRecurringExpenseByMonthHandler } from '../../../shared';\r\nimport { OrganizationRecurringExpenseService } from '../../organization-recurring-expense.service';\r\nimport { OrganizationRecurringExpenseByMonthQuery } from '../organization-recurring-expense.by-month.query';\r\nimport { OrganizationRecurringExpense } from '../../organization-recurring-expense.entity';\r\n\r\n@QueryHandler(OrganizationRecurringExpenseByMonthQuery)\r\nexport class OrganizationRecurringExpenseByMonthHandler\r\n\textends FindRecurringExpenseByMonthHandler<OrganizationRecurringExpense>\r\n\timplements IQueryHandler<OrganizationRecurringExpenseByMonthQuery> {\r\n\tconstructor(\r\n\t\tprivate readonly organizationRecurringExpenseService: OrganizationRecurringExpenseService\r\n\t) {\r\n\t\tsuper(organizationRecurringExpenseService);\r\n\t}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: OrganizationRecurringExpenseByMonthQuery\r\n\t): Promise<IPagination<OrganizationRecurringExpense>> {\r\n\t\tconst { input } = command;\r\n\r\n\t\tconst recurringExpenses = await this.executeCommand(input);\r\n\t\treturn recurringExpenses;\r\n\t}\r\n}\r\n","import { IOrganizationRecurringExpenseForEmployeeOutput } from '@gauzy/models';\r\nimport { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\r\nimport { IPagination } from '../../../core';\r\nimport { EmployeeService } from '../../../employee/employee.service';\r\nimport { OrganizationService } from '../../../organization/organization.service';\r\nimport { OrganizationRecurringExpenseService } from '../../organization-recurring-expense.service';\r\nimport { OrganizationRecurringExpenseFindSplitExpenseQuery } from '../organization-recurring-expense.find-split-expense.query';\r\nimport { MoreThanOrEqual, IsNull, LessThanOrEqual } from 'typeorm';\r\n/**\r\n * Finds the split recurring expense for a given organization.\r\n *\r\n * 1. Find all recurring expenses for the organization which have splitExpense = true\r\n * 2. Find all employees of the organization (TODO: No. of employees CURRENTLY in the organization?)\r\n * 3. Divide the value of the expense found in 1 to the no. of employees found in 2 to 'split' the expense equally for all employees.\r\n */\r\n@QueryHandler(OrganizationRecurringExpenseFindSplitExpenseQuery)\r\nexport class OrganizationRecurringExpenseFindSplitExpenseHandler\r\n\timplements\r\n\t\tIQueryHandler<OrganizationRecurringExpenseFindSplitExpenseQuery> {\r\n\tconstructor(\r\n\t\tprivate readonly organizationRecurringExpenseService: OrganizationRecurringExpenseService,\r\n\t\tprivate readonly organizationService: OrganizationService,\r\n\t\tprivate readonly employeeService: EmployeeService\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tquery: OrganizationRecurringExpenseFindSplitExpenseQuery\r\n\t): Promise<IPagination<IOrganizationRecurringExpenseForEmployeeOutput>> {\r\n\t\tconst {\r\n\t\t\torgId,\r\n\t\t\tfindInput: { year, month }\r\n\t\t} = query;\r\n\r\n\t\tconst filterDate = new Date(year, month, 1);\r\n\r\n\t\t//1. Find all recurring expenses for the organization which have splitExpense = true\r\n\t\tconst {\r\n\t\t\titems,\r\n\t\t\ttotal\r\n\t\t} = await this.organizationRecurringExpenseService.findAll({\r\n\t\t\twhere: [\r\n\t\t\t\t{\r\n\t\t\t\t\tsplitExpense: true,\r\n\t\t\t\t\torgId,\r\n\t\t\t\t\tstartDate: LessThanOrEqual(filterDate),\r\n\t\t\t\t\tendDate: IsNull()\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tsplitExpense: true,\r\n\t\t\t\t\torgId,\r\n\t\t\t\t\tstartDate: LessThanOrEqual(filterDate),\r\n\t\t\t\t\tendDate: MoreThanOrEqual(filterDate)\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t});\r\n\r\n\t\tconst organization = await this.organizationService.findOne({\r\n\t\t\tid: orgId\r\n\t\t});\r\n\r\n\t\t//2. Find all employees of the organization\r\n\t\tconst orgEmployees = await this.employeeService.findAll({\r\n\t\t\twhere: {\r\n\t\t\t\torganization\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t//3. Divide the value of the expense found in 1 to the no. of employees found in 2 to 'split' the expense equally for all employees.\r\n\t\tconst splitItems = items.map((e) => ({\r\n\t\t\t...e,\r\n\t\t\tvalue: +(\r\n\t\t\t\te.value / (orgEmployees.total !== 0 ? orgEmployees.total : 1)\r\n\t\t\t).toFixed(2),\r\n\t\t\toriginalValue: +e.value,\r\n\t\t\temployeeCount: orgEmployees.total\r\n\t\t}));\r\n\r\n\t\treturn { items: splitItems, total };\r\n\t}\r\n}\r\n","import { IStartUpdateTypeInfo } from '@gauzy/models';\r\nimport { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\r\nimport { FindRecurringExpenseStartDateUpdateTypeHandler } from '../../../shared/handlers/recurring-expense.find-update-type.handler';\r\nimport { OrganizationRecurringExpense } from '../../organization-recurring-expense.entity';\r\nimport { OrganizationRecurringExpenseService } from '../../organization-recurring-expense.service';\r\nimport { OrganizationRecurringExpenseStartDateUpdateTypeQuery } from '../organization-recurring-expense.update-type.query';\r\n\r\n@QueryHandler(OrganizationRecurringExpenseStartDateUpdateTypeQuery)\r\nexport class OrganizationRecurringExpenseUpdateTypeHandler\r\n\textends FindRecurringExpenseStartDateUpdateTypeHandler<\r\n\t\tOrganizationRecurringExpense\r\n\t>\r\n\timplements\r\n\t\tIQueryHandler<OrganizationRecurringExpenseStartDateUpdateTypeQuery> {\r\n\tconstructor(\r\n\t\tprivate readonly organizationRecurringExpenseService: OrganizationRecurringExpenseService\r\n\t) {\r\n\t\tsuper(organizationRecurringExpenseService);\r\n\t}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: OrganizationRecurringExpenseStartDateUpdateTypeQuery\r\n\t): Promise<IStartUpdateTypeInfo> {\r\n\t\treturn await this.executeQuery(command.input);\r\n\t}\r\n}\r\n","import { IOrganizationRecurringExpenseByMonthFindInput } from '@gauzy/models';\r\nimport { IQuery } from '@nestjs/cqrs';\r\n\r\nexport class OrganizationRecurringExpenseByMonthQuery implements IQuery {\r\n\tstatic readonly type = '[OrganizationRecurringExpense] By Month';\r\n\r\n\tconstructor(\r\n\t\tpublic readonly input: IOrganizationRecurringExpenseByMonthFindInput\r\n\t) {}\r\n}\r\n","import { IQuery } from '@nestjs/cqrs';\r\nimport { IOrganizationRecurringExpenseFindInput } from '@gauzy/models';\r\n\r\nexport class OrganizationRecurringExpenseFindSplitExpenseQuery\r\n\timplements IQuery {\r\n\tstatic readonly type = '[OrganizationRecurringExpense] Find Split Expense';\r\n\r\n\tconstructor(\r\n\t\tpublic readonly orgId: string,\r\n\t\tpublic readonly findInput: IOrganizationRecurringExpenseFindInput\r\n\t) {}\r\n}\r\n","import { IFindStartDateUpdateTypeInput } from '@gauzy/models';\r\nimport { IQuery } from '@nestjs/cqrs';\r\n\r\nexport class OrganizationRecurringExpenseStartDateUpdateTypeQuery\r\n\timplements IQuery {\r\n\tstatic readonly type =\r\n\t\t'[OrganizationRecurringExpense] Start Date Update Type';\r\n\r\n\tconstructor(public readonly input: IFindStartDateUpdateTypeInput) {}\r\n}\r\n","import { OrganizationSprintUpdateHandler } from './organization-sprint.update.handler';\r\n\r\nexport const CommandHandlers = [\r\n  OrganizationSprintUpdateHandler\r\n];\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { OrganizationSprintService } from '../../organization-sprint.service';\r\nimport { OrganizationSprintUpdateCommand } from '../organization-sprint.update.command';\r\n\r\n@CommandHandler(OrganizationSprintUpdateCommand)\r\nexport class OrganizationSprintUpdateHandler\r\n\timplements ICommandHandler<OrganizationSprintUpdateCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly organizationSprintService: OrganizationSprintService\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: OrganizationSprintUpdateCommand\r\n\t): Promise<any> {\r\n\t\tconst { id, input } = command;\r\n\r\n\t\t//This will call save() with the id so that task[] also get saved accordingly\r\n\t\treturn this.organizationSprintService.create({\r\n\t\t\tid,\r\n\t\t\t...input\r\n\t\t});\r\n\t}\r\n}\r\n","import { IOrganizationSprintUpdateInput } from '@gauzy/models';\r\nimport { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class OrganizationSprintUpdateCommand implements ICommand {\r\n\tstatic readonly type = '[OrganizationSprint] Update';\r\n\r\n\tconstructor(\r\n\t\tpublic readonly id: string,\r\n\t\tpublic readonly input: IOrganizationSprintUpdateInput\r\n\t) {}\r\n}\r\n","import {\r\n\tBody,\r\n\tController,\r\n\tGet,\r\n\tHttpCode,\r\n\tHttpStatus,\r\n\tParam,\r\n\tPut,\r\n\tQuery,\r\n\tRequest,\r\n\tUseGuards,\r\n\tPost\r\n} from '@nestjs/common';\r\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\r\nimport { CrudController, IPagination } from '../core';\r\nimport { OrganizationSprint } from './organization-sprint.entity';\r\nimport { OrganizationSprintService } from './organization-sprint.service';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { OrganizationProject } from '../organization-projects/organization-projects.entity';\r\nimport { IOrganizationSprintUpdateInput } from '@gauzy/models';\r\nimport { OrganizationSprintUpdateCommand } from './commands/organization-sprint.update.command';\r\nimport { CommandBus } from '@nestjs/cqrs';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('OrganizationSprint')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class OrganizationSprintController extends CrudController<\r\n\tOrganizationSprint\r\n> {\r\n\tconstructor(\r\n\t\tprivate readonly organizationSprintService: OrganizationSprintService,\r\n\t\tprivate readonly commandBus: CommandBus\r\n\t) {\r\n\t\tsuper(organizationSprintService);\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find all organization sprint.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found projects',\r\n\t\ttype: OrganizationProject\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get()\r\n\tasync findAllSprints(\r\n\t\t@Query('data') data: string,\r\n\t\t@Request() req\r\n\t): Promise<IPagination<OrganizationSprint>> {\r\n\t\tconsole.log(data);\r\n\t\tconst { relations, findInput } = JSON.parse(data);\r\n\t\treturn this.organizationSprintService.findAll({\r\n\t\t\twhere: findInput,\r\n\t\t\trelations\r\n\t\t});\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Create new record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully created.' /*, type: T*/\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@Post()\r\n\tasync createOrganizationSprint(\r\n\t\t@Body() entity: OrganizationSprint,\r\n\t\t...options: any[]\r\n\t): Promise<any> {\r\n\t\treturn this.organizationSprintService.create(entity);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Update an existing record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully edited.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Put(':id')\r\n\tasync update(\r\n\t\t@Param('id') id: string,\r\n\t\t@Body() entity: IOrganizationSprintUpdateInput\r\n\t): Promise<any> {\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew OrganizationSprintUpdateCommand(id, entity)\r\n\t\t);\r\n\t}\r\n}\r\n","import { Entity, Column, OneToMany, JoinColumn, ManyToOne } from 'typeorm';\r\nimport { IOrganizationSprint, SprintStartDayEnum } from '@gauzy/models';\r\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\r\nimport {\r\n\tIsBoolean,\r\n\tIsDate,\r\n\tIsNotEmpty,\r\n\tIsNumber,\r\n\tIsOptional,\r\n\tIsString\r\n} from 'class-validator';\r\nimport { Task } from '../tasks/task.entity';\r\nimport { OrganizationProject } from '../organization-projects/organization-projects.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('organization_sprint')\r\nexport class OrganizationSprint extends TenantOrganizationBase\r\n\timplements IOrganizationSprint {\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Column()\r\n\tname: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Column()\r\n\tprojectId: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tgoal?: string;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@IsNumber()\r\n\t@Column({ default: 7 })\r\n\tlength: number;\r\n\r\n\t@ApiPropertyOptional({ type: Date })\r\n\t@IsDate()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tstartDate?: Date;\r\n\r\n\t@ApiPropertyOptional({ type: Date })\r\n\t@IsDate()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tendDate?: Date;\r\n\r\n\t@ApiProperty({ type: Number, enum: SprintStartDayEnum })\r\n\t@IsNumber()\r\n\t@Column({ nullable: true })\r\n\tdayStart?: number;\r\n\r\n\t@ApiProperty({ type: OrganizationProject })\r\n\t@ManyToOne(\r\n\t\t(type) => OrganizationProject,\r\n\t\t(project) => project.organizationSprints,\r\n\t\t{\r\n\t\t\tnullable: true,\r\n\t\t\tonDelete: 'CASCADE'\r\n\t\t}\r\n\t)\r\n\t@JoinColumn()\r\n\tproject?: OrganizationProject;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@IsBoolean()\r\n\t@Column({ nullable: true })\r\n\tisActive?: boolean;\r\n\r\n\t@ApiProperty({ type: Task })\r\n\t@OneToMany((type) => Task, (task) => task.organizationSprint)\r\n\t@JoinColumn()\r\n\ttasks?: Task[];\r\n}\r\n","import { OrganizationSprintService } from './organization-sprint.service';\r\nimport { OrganizationSprintController } from './organization-sprint.controller';\r\nimport { OrganizationSprint } from './organization-sprint.entity';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { Module } from '@nestjs/common';\r\nimport { User } from '../user/user.entity';\r\nimport { Task } from '../tasks/task.entity';\r\nimport { CqrsModule } from '@nestjs/cqrs';\r\nimport { UserService } from '../user/user.service';\r\nimport { CommandHandlers } from './commands/handlers';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([OrganizationSprint, User, Task]),\r\n\t\tCqrsModule,\r\n\t\tTenantModule\r\n\t],\r\n\tcontrollers: [OrganizationSprintController],\r\n\tproviders: [OrganizationSprintService, UserService, ...CommandHandlers],\r\n\texports: [OrganizationSprintService]\r\n})\r\nexport class OrganizationSprintModule {}\r\n","import { Connection } from 'typeorm';\r\nimport * as faker from 'faker';\r\nimport { OrganizationSprint } from './organization-sprint.entity';\r\nimport { IOrganization, SprintStartDayEnum } from '@gauzy/models';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { OrganizationProject } from '../organization-projects/organization-projects.entity';\r\nimport * as moment from 'moment';\r\nimport { Task } from '../tasks/task.entity';\r\n\r\nexport const createRandomOrganizationSprint = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantOrganizationsMap: Map<Tenant, IOrganization[]>\r\n) => {\r\n\tif (!tenantOrganizationsMap) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: tenantOrganizationsMap not found, Random OrganizationSprint will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst sprints: OrganizationSprint[] = [];\r\n\tfor (const tenant of tenants) {\r\n\t\tconst orgs = tenantOrganizationsMap.get(tenant);\r\n\t\tfor (const org of orgs) {\r\n\t\t\tconst orgProjects = await connection.manager.find(\r\n\t\t\t\tOrganizationProject,\r\n\t\t\t\t{\r\n\t\t\t\t\twhere: [{ organization: org }]\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\tlet project = faker.random.arrayElement(orgProjects);\r\n\r\n\t\t\tconst tasks = await connection.manager.find(Task, {\r\n\t\t\t\twhere: [{ project: project }]\r\n\t\t\t});\r\n\t\t\tfor (let i = 0; i <= faker.random.number(10); i++) {\r\n\t\t\t\tconst sprint = new OrganizationSprint();\r\n\r\n\t\t\t\tsprint.name = faker.company.companyName();\r\n\t\t\t\tsprint.projectId = project.id;\r\n\t\t\t\tsprint.length = faker.random.number({ min: 1, max: 9 });\r\n\t\t\t\tsprint.startDate = faker.date.past();\r\n\t\t\t\tsprint.endDate = moment(sprint.startDate)\r\n\t\t\t\t\t.add(1, 'months')\r\n\t\t\t\t\t.toDate();\r\n\t\t\t\tsprint.isActive = faker.random.boolean();\r\n\t\t\t\tsprint.dayStart = SprintStartDayEnum.MONDAY;\r\n\t\t\t\tsprint.organizationId = org.id;\r\n\t\t\t\tsprint.organization = org;\r\n\t\t\t\tsprint.tasks = tasks;\r\n\t\t\t\tsprint.tenant = tenant;\r\n\r\n\t\t\t\t// TODO: which goal\r\n\t\t\t\t// sprint.goal = '';\r\n\r\n\t\t\t\tsprints.push(sprint);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tawait connection.manager.save(sprints);\r\n};\r\n","import { Repository } from 'typeorm';\r\nimport { OrganizationSprint } from './organization-sprint.entity';\r\nimport { TenantAwareCrudService } from '../core/crud/tenant-aware-crud.service';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\n\r\n@Injectable()\r\nexport class OrganizationSprintService extends TenantAwareCrudService<\r\n\tOrganizationSprint\r\n> {\r\n\tconstructor(\r\n\t\t@InjectRepository(OrganizationSprint)\r\n\t\tprivate readonly sprintRepository: Repository<OrganizationSprint>\r\n\t) {\r\n\t\tsuper(sprintRepository);\r\n\t}\r\n}\r\n","import { IOrganizationTeamEmployee } from '@gauzy/models';\r\nimport { Entity, Column, ManyToOne, JoinColumn, RelationId } from 'typeorm';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsString, IsNotEmpty } from 'class-validator';\r\nimport { OrganizationTeam } from '../organization-team/organization-team.entity';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { Role } from '../role/role.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('organization_team_employee')\r\nexport class OrganizationTeamEmployee extends TenantOrganizationBase\r\n\timplements IOrganizationTeamEmployee {\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Column()\r\n\tpublic organizationTeamId!: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Column()\r\n\tpublic employeeId!: string;\r\n\r\n\t@ManyToOne(\r\n\t\t(type) => OrganizationTeam,\r\n\t\t(organizationTeam) => organizationTeam.members,\r\n\t\t{\r\n\t\t\tonDelete: 'CASCADE'\r\n\t\t}\r\n\t)\r\n\tpublic organizationTeam!: OrganizationTeam;\r\n\r\n\t@ManyToOne((type) => Employee, (employee) => employee.teams, {\r\n\t\tonDelete: 'CASCADE'\r\n\t})\r\n\tpublic employee!: Employee;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@ManyToOne((type) => Role, { nullable: true })\r\n\t@JoinColumn()\r\n\trole?: Role;\r\n\r\n\t@RelationId(\r\n\t\t(organizationTeamEmployee: OrganizationTeamEmployee) =>\r\n\t\t\torganizationTeamEmployee.role\r\n\t)\r\n\treadonly roleId?: string;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { OrganizationTeamEmployee } from './organization-team-employee.entity';\r\nimport { OrganizationTeamEmployeeService } from './organization-team-employee.service';\r\n\r\n@Module({\r\n\timports: [TypeOrmModule.forFeature([OrganizationTeamEmployee])],\r\n\tproviders: [OrganizationTeamEmployeeService],\r\n\texports: [OrganizationTeamEmployeeService]\r\n})\r\nexport class OrganizationTeamEmployeeModule {}\r\n","import { Connection } from 'typeorm';\r\nimport * as faker from 'faker';\r\nimport { OrganizationTeamEmployee } from './organization-team-employee.entity';\r\nimport { IEmployee, IOrganization } from '@gauzy/models';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { OrganizationTeam } from '../organization-team/organization-team.entity';\r\nimport { Role } from '../role/role.entity';\r\n\r\nexport const createRandomOrganizationTeamEmployee = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantEmployeeMap: Map<Tenant, IEmployee[]>,\r\n\ttenantOrganizationsMap: Map<Tenant, IOrganization[]>\r\n) => {\r\n\tif (!tenantEmployeeMap) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: tenantEmployeeMap not found, Random Organization Team Employee will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\tif (!tenantOrganizationsMap) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: tenantOrganizationsMap not found, Random Organization Team Employee will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst orgTeamEmployees: OrganizationTeamEmployee[] = [];\r\n\tfor (const tenant of tenants) {\r\n\t\tconst orgs = tenantOrganizationsMap.get(tenant);\r\n\t\tconst tenantEmployees = tenantEmployeeMap.get(tenant);\r\n\t\tfor (const org of orgs) {\r\n\t\t\tconst organizationTeams = await connection.manager.find(\r\n\t\t\t\tOrganizationTeam,\r\n\t\t\t\t{\r\n\t\t\t\t\twhere: [{ organizationId: org.id }]\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\tconst roles = await connection.manager.find(Role, {});\r\n\t\t\tconst team = faker.random.arrayElement(organizationTeams);\r\n\t\t\tconst employee = faker.random.arrayElement(tenantEmployees);\r\n\r\n\t\t\tconst orgTeamEmployee = new OrganizationTeamEmployee();\r\n\r\n\t\t\torgTeamEmployee.organizationTeamId = team.id;\r\n\t\t\torgTeamEmployee.employeeId = employee.id;\r\n\t\t\torgTeamEmployee.organizationTeam = team;\r\n\t\t\torgTeamEmployee.employee = employee;\r\n\t\t\torgTeamEmployee.organization = org;\r\n\t\t\torgTeamEmployee.tenant = tenant;\r\n\t\t\torgTeamEmployee.role = faker.random.arrayElement(roles);\r\n\r\n\t\t\torgTeamEmployees.push(orgTeamEmployee);\r\n\t\t}\r\n\t}\r\n\tawait connection.manager.save(orgTeamEmployees);\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { CrudService } from '../core';\r\nimport { OrganizationTeamEmployee } from './organization-team-employee.entity';\r\nimport { Role } from '../role/role.entity';\r\nimport { IEmployee } from '@gauzy/models';\r\n\r\n@Injectable()\r\nexport class OrganizationTeamEmployeeService extends CrudService<\r\n\tOrganizationTeamEmployee\r\n> {\r\n\tconstructor(\r\n\t\t@InjectRepository(OrganizationTeamEmployee)\r\n\t\tprivate readonly OrganizationTeamEmployeeRepository: Repository<\r\n\t\t\tOrganizationTeamEmployee\r\n\t\t>\r\n\t) {\r\n\t\tsuper(OrganizationTeamEmployeeRepository);\r\n\t}\r\n\r\n\tasync updateOrganizationTeam(\r\n\t\tteamId: string,\r\n\t\temployeesToUpdate: IEmployee[],\r\n\t\trole: Role,\r\n\t\tmanagerIds: string[],\r\n\t\tmemberIds: string[]\r\n\t) {\r\n\t\tconst members = [...managerIds, ...memberIds];\r\n\r\n\t\tconst { items: existingEmployees } = await this.findAll({\r\n\t\t\twhere: { organizationTeamId: teamId },\r\n\t\t\trelations: ['role']\r\n\t\t});\r\n\t\tif (existingEmployees) {\r\n\t\t\tconst existingMembers = existingEmployees.map(\r\n\t\t\t\t(emp) => emp.employeeId\r\n\t\t\t);\r\n\r\n\t\t\t// 1. Remove employees from the team\r\n\t\t\tconst removedMemberIds =\r\n\t\t\t\texistingEmployees\r\n\t\t\t\t\t.filter(\r\n\t\t\t\t\t\t(employee) => !members.includes(employee.employeeId)\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.map((emp) => emp.id) || [];\r\n\t\t\tthis.deleteMemberByIds(removedMemberIds);\r\n\r\n\t\t\t// 2. Update role of employees that already exist in the system\r\n\t\t\texistingEmployees\r\n\t\t\t\t.filter((employee) => members.includes(employee.employeeId))\r\n\t\t\t\t.forEach(async (employee) => {\r\n\t\t\t\t\tawait this.update(employee.id, {\r\n\t\t\t\t\t\trole: managerIds.includes(employee.employeeId)\r\n\t\t\t\t\t\t\t? role\r\n\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t\t// 3. Add new team members\r\n\t\t\temployeesToUpdate\r\n\t\t\t\t.filter((emp) => !existingMembers.includes(emp.id))\r\n\t\t\t\t.forEach(async (employee) => {\r\n\t\t\t\t\tconst teamEmployee = new OrganizationTeamEmployee();\r\n\t\t\t\t\tteamEmployee.organizationTeamId = teamId;\r\n\t\t\t\t\tteamEmployee.employee = employee;\r\n\t\t\t\t\tteamEmployee.employeeId = employee.id;\r\n\t\t\t\t\tteamEmployee.role = managerIds.includes(employee.id)\r\n\t\t\t\t\t\t? role\r\n\t\t\t\t\t\t: null;\r\n\t\t\t\t\tthis.create(teamEmployee);\r\n\t\t\t\t});\r\n\t\t}\r\n\t}\r\n\tdeleteMemberByIds(memberIds: string[]) {\r\n\t\tmemberIds.forEach(async (memberId) => {\r\n\t\t\tawait this.delete(memberId);\r\n\t\t});\r\n\t}\r\n}\r\n","export const DEFAULT_ORGANIZATION_TEAMS = [\r\n\t{\r\n\t\tname: 'Employees',\r\n\t\tdefaultMembers: [\r\n\t\t\t'admin@ever.co',\r\n\t\t\t'ruslan@ever.co',\r\n\t\t\t'alish@ever.co',\r\n\t\t\t'blagovest@ever.co',\r\n\t\t\t'elvis@ever.co',\r\n\t\t\t'hristo@ever.co',\r\n\t\t\t'alex@ever.co',\r\n\t\t\t'pavel@ever.co',\r\n\t\t\t'yavor@ever.co',\r\n\t\t\t'tsvetelina@ever.co',\r\n\t\t\t'julia@ever.co'\r\n\t\t],\r\n\t\tmanager: ['ruslan@ever.co']\r\n\t},\r\n\t{\r\n\t\tname: 'Contractors',\r\n\t\tdefaultMembers: [\r\n\t\t\t'dimana@ever.co',\r\n\t\t\t'deko898@hotmail.com',\r\n\t\t\t'muiz@smooper.xyz',\r\n\t\t\t'ckhandla94@gmail.com'\r\n\t\t],\r\n\t\tmanager: ['ruslan@ever.co', 'rachit@ever.co']\r\n\t},\r\n\t{\r\n\t\tname: 'Designers',\r\n\t\tdefaultMembers: ['julia@ever.co', 'yordan@ever.co'],\r\n\t\tmanager: []\r\n\t},\r\n\t{\r\n\t\tname: 'QA',\r\n\t\tdefaultMembers: ['julia@ever.co', 'yordan@ever.co'],\r\n\t\tmanager: []\r\n\t}\r\n];\r\n","import {\r\n\tController,\r\n\tGet,\r\n\tHttpStatus,\r\n\tQuery,\r\n\tPost,\r\n\tBody,\r\n\tHttpCode,\r\n\tPut,\r\n\tParam,\r\n\tUseGuards\r\n} from '@nestjs/common';\r\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport { CrudController } from '../core/crud/crud.controller';\r\nimport { OrganizationTeamService } from './organization-team.service';\r\nimport { IPagination } from '../core';\r\nimport {\r\n\tIOrganizationTeamCreateInput,\r\n\tIOrganizationTeam as IIOrganizationTeam\r\n} from '@gauzy/models';\r\nimport { OrganizationTeam } from './organization-team.entity';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('OrganizationTeam')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class OrganizationTeamController extends CrudController<\r\n\tOrganizationTeam\r\n> {\r\n\tconstructor(\r\n\t\tprivate readonly organizationTeamService: OrganizationTeamService\r\n\t) {\r\n\t\tsuper(organizationTeamService);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Create new record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully created.' /*, type: T*/\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@Post('/create')\r\n\tasync createOrganizationTeam(\r\n\t\t@Body() entity: IOrganizationTeamCreateInput,\r\n\t\t...options: any[]\r\n\t): Promise<OrganizationTeam> {\r\n\t\treturn this.organizationTeamService.createOrgTeam(entity);\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find all organization Teams.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found Teams',\r\n\t\ttype: OrganizationTeam\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get()\r\n\tasync findAllOrganizationTeams(\r\n\t\t@Query('data') data: string\r\n\t): Promise<IPagination<IIOrganizationTeam>> {\r\n\t\tconst { relations, findInput } = JSON.parse(data);\r\n\r\n\t\treturn this.organizationTeamService.getAllOrgTeams({\r\n\t\t\twhere: findInput,\r\n\t\t\trelations\r\n\t\t});\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Update an organization Team' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully edited.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Put(':id')\r\n\tasync updateOrganizationTeam(\r\n\t\t@Param('id') id: string,\r\n\t\t@Body() entity: IOrganizationTeamCreateInput,\r\n\t\t...options: any[]\r\n\t): Promise<OrganizationTeam> {\r\n\t\treturn this.organizationTeamService.updateOrgTeam(id, entity);\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find all organization Teams.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found Teams',\r\n\t\ttype: OrganizationTeam\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get('me')\r\n\tasync findMyTeams(\r\n\t\t@Query('data') data: string\r\n\t): Promise<IPagination<IIOrganizationTeam>> {\r\n\t\tconst { relations, findInput, employeeId } = JSON.parse(data);\r\n\t\treturn this.organizationTeamService.findMyTeams(\r\n\t\t\trelations,\r\n\t\t\tfindInput,\r\n\t\t\temployeeId\r\n\t\t);\r\n\t}\r\n}\r\n","import {\r\n\tColumn,\r\n\tEntity,\r\n\tIndex,\r\n\tOneToMany,\r\n\tManyToMany,\r\n\tJoinTable\r\n} from 'typeorm';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsNotEmpty, IsString } from 'class-validator';\r\nimport { IOrganizationTeam } from '@gauzy/models';\r\nimport { OrganizationTeamEmployee } from '../organization-team-employee/organization-team-employee.entity';\r\nimport { Tag } from '../tags/tag.entity';\r\nimport { RequestApprovalTeam } from '../request-approval-team/request-approval-team.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('organization_team')\r\nexport class OrganizationTeam extends TenantOrganizationBase\r\n\timplements IOrganizationTeam {\r\n\t@ApiProperty()\r\n\t@ManyToMany((type) => Tag, (tag) => tag.organizationTeam)\r\n\t@JoinTable({\r\n\t\tname: 'tag_organization_team'\r\n\t})\r\n\ttags?: Tag[];\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Index()\r\n\t@Column()\r\n\tname: string;\r\n\r\n\t@OneToMany(\r\n\t\t(type) => OrganizationTeamEmployee,\r\n\t\t(organizationTeamEmployee) => organizationTeamEmployee.organizationTeam,\r\n\t\t{\r\n\t\t\tcascade: true\r\n\t\t}\r\n\t)\r\n\tmembers?: OrganizationTeamEmployee[];\r\n\r\n\t@OneToMany(\r\n\t\t(type) => RequestApprovalTeam,\r\n\t\t(requestApprovals) => requestApprovals.team\r\n\t)\r\n\trequestApprovals?: RequestApprovalTeam[];\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { EmployeeService } from '../employee/employee.service';\r\nimport { OrganizationTeamEmployeeModule } from '../organization-team-employee/organization-team-employee.module';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { OrganizationService } from '../organization/organization.service';\r\nimport { Role } from '../role/role.entity';\r\nimport { RoleService } from '../role/role.service';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\nimport { User } from '../user/user.entity';\r\nimport { UserService } from '../user/user.service';\r\nimport { OrganizationTeamController } from './organization-team.controller';\r\nimport { OrganizationTeam } from './organization-team.entity';\r\nimport { OrganizationTeamService } from './organization-team.service';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([\r\n\t\t\tOrganizationTeam,\r\n\t\t\tEmployee,\r\n\t\t\tUser,\r\n\t\t\tRole,\r\n\t\t\tOrganization\r\n\t\t]),\r\n\t\tOrganizationTeamEmployeeModule,\r\n\t\tTenantModule\r\n\t],\r\n\tcontrollers: [OrganizationTeamController],\r\n\tproviders: [\r\n\t\tOrganizationTeamService,\r\n\t\tUserService,\r\n\t\tEmployeeService,\r\n\t\tRoleService,\r\n\t\tOrganizationService\r\n\t],\r\n\texports: [OrganizationTeamService]\r\n})\r\nexport class OrganizationTeamModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { OrganizationTeam } from './organization-team.entity';\r\nimport { OrganizationTeamEmployee } from '../organization-team-employee/organization-team-employee.entity';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { Role } from '../role/role.entity';\r\nimport { RolesEnum } from '@gauzy/models';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport * as _ from 'underscore';\r\nimport * as faker from 'faker';\r\nimport { DEFAULT_ORGANIZATION_TEAMS } from './default-organization-teams';\r\n\r\nexport const createDefaultTeams = async (\r\n\tconnection: Connection,\r\n\torganization: Organization,\r\n\temployees: Employee[],\r\n\troles: Role[]\r\n): Promise<OrganizationTeam[]> => {\r\n\tconst teams = DEFAULT_ORGANIZATION_TEAMS;\r\n\r\n\tconst organizationTeams: OrganizationTeam[] = [];\r\n\tfor (let i = 0; i < teams.length; i++) {\r\n\t\tconst team = new OrganizationTeam();\r\n\t\tteam.name = teams[i].name;\r\n\t\tteam.organizationId = organization.id;\r\n\t\tteam.tenant = organization.tenant;\r\n\r\n\t\tconst filteredEmployees = employees.filter(\r\n\t\t\t(e) => (teams[i].defaultMembers || []).indexOf(e.user.email) > -1\r\n\t\t);\r\n\r\n\t\tconst teamEmployees: OrganizationTeamEmployee[] = [];\r\n\r\n\t\tfilteredEmployees.forEach((emp) => {\r\n\t\t\tconst teamEmployee = new OrganizationTeamEmployee();\r\n\t\t\tteamEmployee.employeeId = emp.id;\r\n\t\t\tteamEmployees.push(teamEmployee);\r\n\t\t});\r\n\r\n\t\tconst managers = employees.filter(\r\n\t\t\t(e) => (teams[i].manager || []).indexOf(e.user.email) > -1\r\n\t\t);\r\n\r\n\t\tmanagers.forEach((emp) => {\r\n\t\t\tconst teamEmployee = new OrganizationTeamEmployee();\r\n\t\t\tteamEmployee.employeeId = emp.id;\r\n\t\t\tteamEmployee.role = roles.filter(\r\n\t\t\t\t(x) => x.name === RolesEnum.MANAGER\r\n\t\t\t)[0];\r\n\t\t\tteamEmployees.push(teamEmployee);\r\n\t\t});\r\n\r\n\t\tteam.members = teamEmployees;\r\n\r\n\t\torganizationTeams.push(team);\r\n\t}\r\n\r\n\tawait insertOrganizationTeam(connection, organizationTeams);\r\n\r\n\treturn organizationTeams;\r\n};\r\n\r\nexport const createRandomTeam = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantOrganizationsMap: Map<Tenant, Organization[]>,\r\n\troles: Role[]\r\n): Promise<OrganizationTeam[]> => {\r\n\tconst teamNames = ['QA', 'Designers', 'Developers', 'Employees'];\r\n\tconst organizationTeams: OrganizationTeam[] = [];\r\n\r\n\tfor (const tenant of tenants) {\r\n\t\tconst organizations = tenantOrganizationsMap.get(tenant);\r\n\t\tconst employees = tenantOrganizationsMap.get(tenant);\r\n\r\n\t\tfor (const organization of organizations) {\r\n\t\t\tfor (const name of teamNames) {\r\n\t\t\t\tconst team = new OrganizationTeam();\r\n\t\t\t\tteam.name = name;\r\n\t\t\t\tteam.organizationId = organization.id;\r\n\t\t\t\tteam.tenant = organization.tenant;\r\n\r\n\t\t\t\tconst emps = _.chain(employees)\r\n\t\t\t\t\t.shuffle()\r\n\t\t\t\t\t.take(faker.random.number({ min: 1, max: 5 }))\r\n\t\t\t\t\t.values()\r\n\t\t\t\t\t.value();\r\n\r\n\t\t\t\tconst teamEmployees: OrganizationTeamEmployee[] = [];\r\n\r\n\t\t\t\temps.forEach((emp) => {\r\n\t\t\t\t\tconst teamEmployee = new OrganizationTeamEmployee();\r\n\t\t\t\t\tteamEmployee.employeeId = emp.id;\r\n\t\t\t\t\tteamEmployees.push(teamEmployee);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tconst managers = _.chain(employees)\r\n\t\t\t\t\t.shuffle()\r\n\t\t\t\t\t.take(faker.random.number({ min: 1, max: 2 }))\r\n\t\t\t\t\t.values()\r\n\t\t\t\t\t.value();\r\n\r\n\t\t\t\tmanagers.forEach((emp) => {\r\n\t\t\t\t\tconst teamEmployee = new OrganizationTeamEmployee();\r\n\t\t\t\t\tteamEmployee.employeeId = emp.id;\r\n\t\t\t\t\tteamEmployee.role = roles.filter(\r\n\t\t\t\t\t\t(x) => x.name === RolesEnum.MANAGER\r\n\t\t\t\t\t)[0];\r\n\t\t\t\t\tteamEmployees.push(teamEmployee);\r\n\t\t\t\t});\r\n\r\n\t\t\t\torganizationTeams.push(team);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst uniqueTeams = organizationTeams.filter(function (elem, index, self) {\r\n\t\treturn index === self.indexOf(elem);\r\n\t});\r\n\r\n\tawait insertOrganizationTeam(connection, uniqueTeams);\r\n\r\n\treturn uniqueTeams;\r\n};\r\n\r\nconst insertOrganizationTeam = async (\r\n\tconnection: Connection,\r\n\tteams: OrganizationTeam[]\r\n): Promise<void> => {\r\n\tawait connection.manager.save(teams);\r\n};\r\n","import {\r\n\tInjectable,\r\n\tBadRequestException,\r\n\tHttpException,\r\n\tHttpStatus\r\n} from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository, FindManyOptions } from 'typeorm';\r\nimport { CrudService } from '../core/crud/crud.service';\r\nimport {\r\n\tIOrganizationTeamCreateInput,\r\n\tIOrganizationTeam,\r\n\tRolesEnum\r\n} from '@gauzy/models';\r\nimport { IPagination } from '../core';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { User } from '../user/user.entity';\r\nimport { OrganizationTeam } from './organization-team.entity';\r\nimport { OrganizationTeamEmployee } from '../organization-team-employee/organization-team-employee.entity';\r\nimport { RequestContext } from '../core/context';\r\nimport { RoleService } from '../role/role.service';\r\nimport { EmployeeService } from '../employee/employee.service';\r\nimport { OrganizationService } from '../organization/organization.service';\r\nimport { OrganizationTeamEmployeeService } from '../organization-team-employee/organization-team-employee.service';\r\n\r\n@Injectable()\r\nexport class OrganizationTeamService extends CrudService<OrganizationTeam> {\r\n\tconstructor(\r\n\t\t@InjectRepository(OrganizationTeam)\r\n\t\tprivate readonly organizationTeamRepository: Repository<\r\n\t\t\tOrganizationTeam\r\n\t\t>,\r\n\t\t@InjectRepository(Employee)\r\n\t\tprivate readonly employeeRepository: Repository<Employee>,\r\n\t\t@InjectRepository(User)\r\n\t\tprivate readonly userRepository: Repository<User>,\r\n\t\tprivate readonly employeeService: EmployeeService,\r\n\t\tprivate readonly roleService: RoleService,\r\n\t\tprivate readonly organizationService: OrganizationService,\r\n\t\tprivate readonly organizationTeamEmployeeService: OrganizationTeamEmployeeService\r\n\t) {\r\n\t\tsuper(organizationTeamRepository);\r\n\t}\r\n\r\n\tasync createOrgTeam(\r\n\t\tentity: IOrganizationTeamCreateInput\r\n\t): Promise<OrganizationTeam> {\r\n\t\tconst {\r\n\t\t\ttags,\r\n\t\t\tname,\r\n\t\t\torganizationId,\r\n\t\t\tmembers: memberIds,\r\n\t\t\tmanagers: managerIds\r\n\t\t} = entity;\r\n\t\ttry {\r\n\t\t\tconst { tenantId } = await this.organizationService.findOne(\r\n\t\t\t\torganizationId\r\n\t\t\t);\r\n\r\n\t\t\tconst role = await this.roleService.findOne({\r\n\t\t\t\twhere: { tenant: { id: tenantId }, name: RolesEnum.MANAGER }\r\n\t\t\t});\r\n\t\t\tconst employees = await this.employeeRepository.findByIds(\r\n\t\t\t\t[...memberIds, ...managerIds],\r\n\t\t\t\t{\r\n\t\t\t\t\trelations: ['user']\r\n\t\t\t\t}\r\n\t\t\t);\r\n\r\n\t\t\tconst teamEmployees: OrganizationTeamEmployee[] = [];\r\n\t\t\temployees.forEach((employee) => {\r\n\t\t\t\tconst teamEmployee = new OrganizationTeamEmployee();\r\n\t\t\t\tteamEmployee.employee = employee;\r\n\t\t\t\tteamEmployee.employeeId = employee.id;\r\n\t\t\t\tteamEmployee.role = managerIds.includes(employee.id)\r\n\t\t\t\t\t? role\r\n\t\t\t\t\t: null;\r\n\t\t\t\tteamEmployees.push(teamEmployee);\r\n\t\t\t});\r\n\t\t\treturn this.create({\r\n\t\t\t\ttags,\r\n\t\t\t\torganizationId,\r\n\t\t\t\ttenantId,\r\n\t\t\t\tname,\r\n\t\t\t\tmembers: teamEmployees\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t\tthrow new BadRequestException('Failed to create a team');\r\n\t\t}\r\n\t}\r\n\r\n\tasync updateOrgTeam(\r\n\t\tid: string,\r\n\t\tentity: IOrganizationTeamCreateInput\r\n\t): Promise<OrganizationTeam> {\r\n\t\tconst {\r\n\t\t\ttags,\r\n\t\t\tname,\r\n\t\t\torganizationId,\r\n\t\t\tmembers: memberIds,\r\n\t\t\tmanagers: managerIds\r\n\t\t} = entity;\r\n\t\ttry {\r\n\t\t\tconst { tenantId } = await this.organizationService.findOne(\r\n\t\t\t\torganizationId\r\n\t\t\t);\r\n\r\n\t\t\tconst role = await this.roleService.findOne({\r\n\t\t\t\twhere: { tenant: { id: tenantId }, name: RolesEnum.MANAGER }\r\n\t\t\t});\r\n\t\t\tconst employees = await this.employeeRepository.findByIds(\r\n\t\t\t\t[...memberIds, ...managerIds],\r\n\t\t\t\t{\r\n\t\t\t\t\trelations: ['user']\r\n\t\t\t\t}\r\n\t\t\t);\r\n\r\n\t\t\t// Update nested entity\r\n\t\t\tawait this.organizationTeamEmployeeService.updateOrganizationTeam(\r\n\t\t\t\tid,\r\n\t\t\t\temployees,\r\n\t\t\t\trole,\r\n\t\t\t\tmanagerIds,\r\n\t\t\t\tmemberIds\r\n\t\t\t);\r\n\r\n\t\t\tconst organizationTeam = await this.findOne(id);\r\n\t\t\tthis.repository.merge(organizationTeam, { name, tags });\r\n\r\n\t\t\treturn this.repository.save(organizationTeam);\r\n\t\t} catch (err /*: WriteError*/) {\r\n\t\t\tthrow new BadRequestException(err);\r\n\t\t}\r\n\t}\r\n\r\n\tasync getAllOrgTeams(\r\n\t\tfilter: FindManyOptions<OrganizationTeam>\r\n\t): Promise<IPagination<IOrganizationTeam>> {\r\n\t\tconst total = await this.organizationTeamRepository.count(filter);\r\n\r\n\t\tconst items = await this.organizationTeamRepository.find(filter);\r\n\r\n\t\tfor (const orgTeams of items) {\r\n\t\t\tfor (const teamEmp of orgTeams.members) {\r\n\t\t\t\tconst emp = await this.employeeRepository.findOne(\r\n\t\t\t\t\tteamEmp.employeeId\r\n\t\t\t\t);\r\n\t\t\t\temp.user = await this.userRepository.findOne(emp.userId);\r\n\t\t\t\tteamEmp.employee = emp;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn { items, total };\r\n\t}\r\n\r\n\tasync getMyOrgTeams(\r\n\t\tfilter: FindManyOptions<OrganizationTeam>,\r\n\t\temployeeId\r\n\t): Promise<IPagination<IOrganizationTeam>> {\r\n\t\tconst teams: OrganizationTeam[] = [];\r\n\t\tconst items = await this.organizationTeamRepository.find(filter);\r\n\r\n\t\tfor (const orgTeams of items) {\r\n\t\t\tfor (const teamEmp of orgTeams.members) {\r\n\t\t\t\tif (employeeId === teamEmp.employeeId) {\r\n\t\t\t\t\tteams.push(orgTeams);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn { items: teams, total: teams.length };\r\n\t}\r\n\r\n\tasync findMyTeams(relations, findInput, employeeId) {\r\n\t\t// If user is not an employee, then this will return 404\r\n\t\tlet employee: any = { id: undefined };\r\n\t\tlet role;\r\n\t\ttry {\r\n\t\t\temployee = await this.employeeService.findOne({\r\n\t\t\t\twhere: {\r\n\t\t\t\t\tuser: { id: RequestContext.currentUser().id }\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} catch (e) {}\r\n\r\n\t\ttry {\r\n\t\t\tconst roleId = RequestContext.currentUser().roleId;\r\n\t\t\tif (roleId) {\r\n\t\t\t\trole = await this.roleService.findOne(roleId);\r\n\t\t\t}\r\n\t\t} catch (e) {}\r\n\r\n\t\t// selected user not passed\r\n\t\tif (employeeId) {\r\n\t\t\tif (role.name === 'ADMIN' || role.name === 'SUPER_ADMIN') {\r\n\t\t\t\treturn this.getAllOrgTeams({\r\n\t\t\t\t\twhere: findInput,\r\n\t\t\t\t\trelations\r\n\t\t\t\t});\r\n\t\t\t} else if (employeeId === employee.id) {\r\n\t\t\t\treturn this.getMyOrgTeams(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\twhere: findInput,\r\n\t\t\t\t\t\trelations\r\n\t\t\t\t\t},\r\n\t\t\t\t\temployee.id\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tthrow new HttpException(\r\n\t\t\t\t\t'Unauthorized',\r\n\t\t\t\t\tHttpStatus.UNAUTHORIZED\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (role.name === 'ADMIN' || role.name === 'SUPER_ADMIN') {\r\n\t\t\t\treturn this.getAllOrgTeams({\r\n\t\t\t\t\twhere: findInput,\r\n\t\t\t\t\trelations\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\treturn this.getMyOrgTeams(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\twhere: findInput,\r\n\t\t\t\t\t\trelations\r\n\t\t\t\t\t},\r\n\t\t\t\t\temployee.id\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","import {\r\n\tController,\r\n\tGet,\r\n\tHttpStatus,\r\n\tQuery,\r\n\tUseGuards,\r\n\tHttpCode,\r\n\tDelete,\r\n\tParam,\r\n\tPut,\r\n\tBody\r\n} from '@nestjs/common';\r\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport { CrudController } from '../core/crud/crud.controller';\r\nimport { OrganizationVendorsService } from './organization-vendors.service';\r\nimport { OrganizationVendor } from './organization-vendors.entity';\r\nimport { IPagination } from '../core';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('OrganizationVendors')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class OrganizationVendorsController extends CrudController<\r\n\tOrganizationVendor\r\n> {\r\n\tconstructor(\r\n\t\tprivate readonly organizationVendorsService: OrganizationVendorsService\r\n\t) {\r\n\t\tsuper(organizationVendorsService);\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find all organization vendors recurring expense.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found vendors recurring expense',\r\n\t\ttype: OrganizationVendor\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get()\r\n\tasync findAllOrganizations(\r\n\t\t@Query('data') data: string\r\n\t): Promise<IPagination<OrganizationVendor>> {\r\n\t\tconst { relations, findInput } = JSON.parse(data);\r\n\r\n\t\treturn this.organizationVendorsService.findAll({\r\n\t\t\twhere: findInput,\r\n\t\t\trelations\r\n\t\t});\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Delete record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NO_CONTENT,\r\n\t\tdescription: 'The record has been successfully deleted'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t\"This Vendor can't be deleted because it is used in expense records\"\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Delete(':id')\r\n\tasync delete(@Param('id') id: string, ...options: any[]): Promise<any> {\r\n\t\treturn this.organizationVendorsService.deleteVendor(id);\r\n\t}\r\n\t@Put(':id')\r\n\tasync updateOrganizationTeam(\r\n\t\t@Param('id') id: string,\r\n\t\t@Body() entity: OrganizationVendor,\r\n\t\t...options: any[]\r\n\t): Promise<OrganizationVendor> {\r\n\t\treturn this.organizationVendorsService.create({\r\n\t\t\tid,\r\n\t\t\t...entity\r\n\t\t});\r\n\t}\r\n}\r\n","import { Column, Entity, Index, ManyToMany, JoinTable } from 'typeorm';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsNotEmpty, IsString, IsOptional } from 'class-validator';\r\nimport { IOrganizationVendor, ITag } from '@gauzy/models';\r\nimport { Tag } from '../tags/tag.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('organization_vendor')\r\nexport class OrganizationVendor extends TenantOrganizationBase\r\n\timplements IOrganizationVendor {\r\n\t@ApiProperty()\r\n\t@ManyToMany((type) => Tag, (tag) => tag.organizationVendor)\r\n\t@JoinTable({\r\n\t\tname: 'tag_organization_vendor'\r\n\t})\r\n\ttags?: ITag[];\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Index()\r\n\t@Column()\r\n\tname: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\temail?: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tphone?: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\twebsite?: string;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { OrganizationVendor } from './organization-vendors.entity';\r\nimport { OrganizationVendorsController } from './organization-vendors.controller';\r\nimport { OrganizationVendorsService } from './organization-vendors.service';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [TypeOrmModule.forFeature([OrganizationVendor]), TenantModule],\r\n\tcontrollers: [OrganizationVendorsController],\r\n\tproviders: [OrganizationVendorsService],\r\n\texports: [OrganizationVendorsService]\r\n})\r\nexport class OrganizationVendorsModule {}\r\n","import { OrganizationVendorEnum, IOrganization } from '@gauzy/models';\r\nimport { Connection } from 'typeorm';\r\nimport { OrganizationVendor } from './organization-vendors.entity';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\n\r\nexport const createOrganizationVendors = async (\r\n\tconnection: Connection,\r\n\torganizations: IOrganization[]\r\n): Promise<OrganizationVendor[]> => {\r\n\tlet defaultOrganizationVendors: OrganizationVendor[] = [];\r\n\r\n\torganizations.forEach((organization) => {\r\n\t\tconst vendors = Object.values(OrganizationVendorEnum).map((name) => ({\r\n\t\t\tname,\r\n\t\t\torganizationId: organization.id,\r\n\t\t\torganization,\r\n\t\t\ttenant: organization.tenant\r\n\t\t}));\r\n\r\n\t\tdefaultOrganizationVendors = [\r\n\t\t\t...defaultOrganizationVendors,\r\n\t\t\t...vendors\r\n\t\t];\r\n\t});\r\n\r\n\tinsertOrganizationVendors(connection, defaultOrganizationVendors);\r\n\r\n\treturn defaultOrganizationVendors;\r\n};\r\n\r\nexport const createRandomOrganizationVendors = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantOrganizationsMap: Map<Tenant, IOrganization[]>\r\n): Promise<Map<IOrganization, OrganizationVendor[]>> => {\r\n\tlet organizationVendors: OrganizationVendor[] = [];\r\n\tconst organizationVendorsMap: Map<\r\n\t\tIOrganization,\r\n\t\tOrganizationVendor[]\r\n\t> = new Map();\r\n\r\n\t(tenants || []).forEach((tenant) => {\r\n\t\tconst organizations = tenantOrganizationsMap.get(tenant);\r\n\r\n\t\t(organizations || []).forEach((organization) => {\r\n\t\t\tconst vendors = Object.values(OrganizationVendorEnum).map(\r\n\t\t\t\t(name) => ({\r\n\t\t\t\t\tname,\r\n\t\t\t\t\torganization,\r\n\t\t\t\t\torganizationId: organization.id,\r\n\t\t\t\t\ttenant: organization.tenant\r\n\t\t\t\t})\r\n\t\t\t);\r\n\r\n\t\t\torganizationVendorsMap.set(organization, vendors);\r\n\t\t\torganizationVendors = [...organizationVendors, ...vendors];\r\n\t\t});\r\n\t});\r\n\r\n\tawait insertOrganizationVendors(connection, organizationVendors);\r\n\r\n\treturn organizationVendorsMap;\r\n};\r\n\r\nconst insertOrganizationVendors = async (\r\n\tconnection: Connection,\r\n\torganizationVendors: OrganizationVendor[]\r\n) => {\r\n\tawait connection\r\n\t\t.createQueryBuilder()\r\n\t\t.insert()\r\n\t\t.into(OrganizationVendor)\r\n\t\t.values(organizationVendors)\r\n\t\t.execute();\r\n};\r\n","import { Injectable, BadRequestException } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { OrganizationVendor } from './organization-vendors.entity';\r\nimport { Expense } from '../expense/expense.entity';\r\nimport { TenantAwareCrudService } from '../core/crud/tenant-aware-crud.service';\r\n\r\n@Injectable()\r\nexport class OrganizationVendorsService extends TenantAwareCrudService<\r\n\tOrganizationVendor\r\n> {\r\n\tconstructor(\r\n\t\t@InjectRepository(OrganizationVendor)\r\n\t\tprivate readonly organizationVendorsRepository: Repository<\r\n\t\t\tOrganizationVendor\r\n\t\t>\r\n\t) {\r\n\t\tsuper(organizationVendorsRepository);\r\n\t}\r\n\r\n\tasync deleteVendor(vendorId) {\r\n\t\tconst vendor = await this.organizationVendorsRepository\r\n\t\t\t.createQueryBuilder('vendor')\r\n\t\t\t.leftJoin(Expense, 'expense', 'vendor.id = expense.\"vendorId\"')\r\n\t\t\t.where('expense.\"vendorId\" = :vendorId', { vendorId: vendorId })\r\n\t\t\t.getOne();\r\n\r\n\t\tif (vendor) {\r\n\t\t\tthrow new BadRequestException(\r\n\t\t\t\t\"This Vendor can't be deleted because it is used in expense records\"\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn await this.delete(vendorId);\r\n\t}\r\n}\r\n","import { OrganizationCreateHandler } from './organization.create.handler';\r\nimport { OrganizationUpdateHandler } from './organization.update.handler';\r\n\r\nexport const CommandHandlers = [\r\n\tOrganizationCreateHandler,\r\n\tOrganizationUpdateHandler\r\n];\r\n","import { IOrganization, RolesEnum } from '@gauzy/models';\r\nimport { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { RoleService } from '../../../role/role.service';\r\nimport { UserService } from '../../../user/user.service';\r\nimport { UserOrganization } from '../../../user-organization/user-organization.entity';\r\nimport { UserOrganizationService } from '../../../user-organization/user-organization.services';\r\nimport { OrganizationService } from '../../organization.service';\r\nimport { OrganizationCreateCommand } from '../organization.create.command';\r\nimport { RequestContext } from '../../../core/context';\r\n\r\n@CommandHandler(OrganizationCreateCommand)\r\nexport class OrganizationCreateHandler\r\n\timplements ICommandHandler<OrganizationCreateCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly organizationService: OrganizationService,\r\n\t\tprivate readonly userOrganizationService: UserOrganizationService,\r\n\t\tprivate readonly userService: UserService,\r\n\t\tprivate readonly roleService: RoleService\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: OrganizationCreateCommand\r\n\t): Promise<IOrganization> {\r\n\t\tconst { input } = command;\r\n\r\n\t\t//1. Get roleId for Super Admin user of the Tenant\r\n\t\tconst { id: roleId } = await this.roleService.findOne({\r\n\t\t\tname: RolesEnum.SUPER_ADMIN\r\n\t\t});\r\n\r\n\t\t// 2. Get all Super Admin Users of the Tenant\r\n\t\t// have to get user from context, as user service is not tenant-aware\r\n\t\tconst user = RequestContext.currentUser();\r\n\t\tconst { tenantId } = user;\r\n\r\n\t\tconst { items: superAdminUsers } = await this.userService.findAll({\r\n\t\t\trelations: ['role'],\r\n\t\t\twhere: {\r\n\t\t\t\ttenant: { id: tenantId },\r\n\t\t\t\trole: { id: roleId }\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tlet { contact = {} } = input;\r\n\t\tdelete input['contact'];\r\n\r\n\t\t// 3. Create organization\r\n\t\tconst createdOrganization: IOrganization = await this.organizationService.create(\r\n\t\t\t{\r\n\t\t\t\t...input,\r\n\t\t\t\tshow_profits: false,\r\n\t\t\t\tshow_bonuses_paid: false,\r\n\t\t\t\tshow_income: false,\r\n\t\t\t\tshow_total_hours: false,\r\n\t\t\t\tshow_projects_count: true,\r\n\t\t\t\tshow_minimum_project_size: true,\r\n\t\t\t\tshow_clients_count: true,\r\n\t\t\t\tshow_clients: true,\r\n\t\t\t\tshow_employees_count: true\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\t// 4. Take each super admin user and add him/her to created organization\r\n\t\tsuperAdminUsers.forEach((superAdmin) => {\r\n\t\t\tconst userOrganization = new UserOrganization();\r\n\t\t\tuserOrganization.organizationId = createdOrganization.id;\r\n\t\t\tuserOrganization.tenantId = tenantId;\r\n\t\t\tuserOrganization.userId = superAdmin.id;\r\n\t\t\tthis.userOrganizationService.create(userOrganization);\r\n\t\t});\r\n\r\n\t\t//5. Create contact details of created organization\r\n\t\tconst { id } = createdOrganization;\r\n\t\tcontact = Object.assign({}, contact, {\r\n\t\t\torganizationId: id,\r\n\t\t\ttenantId\r\n\t\t});\r\n\r\n\t\tawait this.organizationService.create({\r\n\t\t\tcontact,\r\n\t\t\t...createdOrganization\r\n\t\t});\r\n\r\n\t\treturn await this.organizationService.findOne(id);\r\n\t}\r\n}\r\n","import { IOrganization, IOrganizationUpdateInput } from '@gauzy/models';\r\nimport { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { OrganizationService } from '../../organization.service';\r\nimport { OrganizationUpdateCommand } from '../organization.update.command';\r\n\r\n@CommandHandler(OrganizationUpdateCommand)\r\nexport class OrganizationUpdateHandler\r\n\timplements ICommandHandler<OrganizationUpdateCommand> {\r\n\tconstructor(private readonly organizationService: OrganizationService) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: OrganizationUpdateCommand\r\n\t): Promise<IOrganization> {\r\n\t\tconst { input } = command;\r\n\t\tconst { gauzyId } = input;\r\n\r\n\t\treturn this.updateOrganization(gauzyId, input);\r\n\t}\r\n\r\n\tprivate async updateOrganization(\r\n\t\tid: string,\r\n\t\tinput: IOrganizationUpdateInput\r\n\t): Promise<IOrganization> {\r\n\t\tconst organization: IOrganization = await this.organizationService.findOne(\r\n\t\t\tid\r\n\t\t);\r\n\t\tif (organization) {\r\n\t\t\tdelete input.gauzyId;\r\n\r\n\t\t\tconst request = {\r\n\t\t\t\t...input,\r\n\t\t\t\tshow_profits: false,\r\n\t\t\t\tshow_bonuses_paid: false,\r\n\t\t\t\tshow_income: false,\r\n\t\t\t\tshow_total_hours: false,\r\n\t\t\t\tshow_projects_count: true,\r\n\t\t\t\tshow_minimum_project_size: true,\r\n\t\t\t\tshow_clients_count: true,\r\n\t\t\t\tshow_clients: true,\r\n\t\t\t\tshow_employees_count: true\r\n\t\t\t};\r\n\r\n\t\t\tawait this.organizationService.update(id, request);\r\n\t\t\treturn await this.organizationService.findOne(id);\r\n\t\t}\r\n\t}\r\n}\r\n","export { OrganizationCreateCommand } from './organization.create.command';\r\nexport { OrganizationUpdateCommand } from './organization.update.command';\r\n","import { IOrganizationCreateInput } from '@gauzy/models';\r\nimport { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class OrganizationCreateCommand implements ICommand {\r\n\tstatic readonly type = '[Organization] Register';\r\n\r\n\tconstructor(public readonly input: IOrganizationCreateInput) {}\r\n}\r\n","import { IOrganizationUpdateInput } from '@gauzy/models';\r\nimport { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class OrganizationUpdateCommand implements ICommand {\r\n\tstatic readonly type = '[Organization] Update';\r\n\r\n\tconstructor(public readonly input: IOrganizationUpdateInput) {}\r\n}\r\n","import { CurrenciesEnum, DefaultValueDateTypeEnum } from '@gauzy/models';\r\n\r\nexport const DEFAULT_ORGANIZATIONS = [\r\n\t{\r\n\t\tname: 'Ever Technologies LTD',\r\n\t\tcurrency: CurrenciesEnum.BGN,\r\n\t\tdefaultValueDateType: DefaultValueDateTypeEnum.TODAY,\r\n\t\timageUrl: 'assets/images/logos/ever-large.jpg'\r\n\t},\r\n\t{\r\n\t\tname: 'Ever Co. Ltd',\r\n\t\tcurrency: CurrenciesEnum.ILS,\r\n\t\tdefaultValueDateType: DefaultValueDateTypeEnum.TODAY,\r\n\t\timageUrl: 'assets/images/logos/ever-large.jpg'\r\n\t}\r\n];\r\n","import { IOrganizationCreateInput, PermissionsEnum } from '@gauzy/models';\r\nimport {\r\n\tBody,\r\n\tController,\r\n\tGet,\r\n\tHttpCode,\r\n\tHttpStatus,\r\n\tParam,\r\n\tPost,\r\n\tUseGuards,\r\n\tPut,\r\n\tQuery\r\n} from '@nestjs/common';\r\nimport { CommandBus } from '@nestjs/cqrs';\r\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\r\nimport { IPagination } from '../core';\r\nimport { CrudController } from '../core/crud/crud.controller';\r\nimport { UUIDValidationPipe } from '../shared';\r\nimport { Permissions } from '../shared/decorators/permissions';\r\nimport { PermissionGuard } from '../shared/guards/auth/permission.guard';\r\nimport { OrganizationCreateCommand } from './commands';\r\nimport { Organization } from './organization.entity';\r\nimport { OrganizationService } from './organization.service';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('Organization')\r\n@Controller()\r\nexport class OrganizationController extends CrudController<Organization> {\r\n\tconstructor(\r\n\t\tprivate readonly organizationService: OrganizationService,\r\n\t\tprivate readonly commandBus: CommandBus\r\n\t) {\r\n\t\tsuper(organizationService);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find all organizations within the tenant.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found organizations',\r\n\t\ttype: Organization\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@UseGuards(AuthGuard('jwt'), TenantPermissionGuard, PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ALL_ORG_VIEW)\r\n\t@Get()\r\n\tasync findAllOrganizations(\r\n\t\t@Query('data') data: string\r\n\t): Promise<IPagination<Organization>> {\r\n\t\tconst { relations, findInput } = JSON.parse(data);\r\n\t\treturn this.organizationService.findAll({\r\n\t\t\twhere: findInput,\r\n\t\t\trelations\r\n\t\t});\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find Organization by id within the tenant.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found one record',\r\n\t\ttype: Organization\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@UseGuards(AuthGuard('jwt'))\r\n\t@Get(':id/:select')\r\n\tasync findOneById(\r\n\t\t@Param('id', UUIDValidationPipe) id: string,\r\n\t\t@Param('select') select: string,\r\n\t\t@Query('data') data: string\r\n\t): Promise<Organization> {\r\n\t\tconst findObj = {};\r\n\t\tconst { relations } = JSON.parse(data);\r\n\t\tif (select) {\r\n\t\t\tfindObj['select'] = JSON.parse(select);\r\n\t\t}\r\n\t\tif (relations) {\r\n\t\t\tfindObj['relations'] = relations;\r\n\t\t}\r\n\t\treturn this.organizationService.findOne(id, findObj);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find Organization by profile link.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found one record',\r\n\t\ttype: Organization\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get('profile/:profile_link/:select/:relations')\r\n\tasync findOneByProfileLink(\r\n\t\t@Param('profile_link') profile_link: string,\r\n\t\t@Param('select') select: string,\r\n\t\t@Param('relations') relations: string\r\n\t): Promise<Organization> {\r\n\t\treturn await this.organizationService.findByPublicLink(\r\n\t\t\tprofile_link,\r\n\t\t\tselect,\r\n\t\t\trelations\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Create new Organization' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The Organization has been successfully created.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.CREATED)\r\n\t@UseGuards(AuthGuard('jwt'), TenantPermissionGuard, PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ALL_ORG_EDIT)\r\n\t@Post()\r\n\tasync create(\r\n\t\t@Body() entity: IOrganizationCreateInput\r\n\t): Promise<Organization> {\r\n\t\treturn this.commandBus.execute(new OrganizationCreateCommand(entity));\r\n\t}\r\n\r\n\t@Put(':id')\r\n\tasync update(\r\n\t\t@Param('id') id: string,\r\n\t\t@Body() entity: IOrganizationCreateInput,\r\n\t\t...options: any[]\r\n\t): Promise<Organization> {\r\n\t\tawait this.organizationService.create({\r\n\t\t\tid,\r\n\t\t\t...entity\r\n\t\t});\r\n\t\treturn await this.organizationService.findOne(id);\r\n\t}\r\n}\r\n","import {\r\n\tColumn,\r\n\tEntity,\r\n\tIndex,\r\n\tJoinColumn,\r\n\tJoinTable,\r\n\tManyToMany,\r\n\tManyToOne,\r\n\tOneToMany,\r\n\tRelationId\r\n} from 'typeorm';\r\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\r\nimport {\r\n\tIsBoolean,\r\n\tIsDate,\r\n\tIsEnum,\r\n\tIsNotEmpty,\r\n\tIsNumber,\r\n\tIsOptional,\r\n\tIsString,\r\n\tMax,\r\n\tMin\r\n} from 'class-validator';\r\nimport {\r\n\tBonusTypeEnum,\r\n\tCurrenciesEnum,\r\n\tDefaultValueDateTypeEnum,\r\n\tIOrganization,\r\n\tWeekDaysEnum,\r\n\tMinimumProjectSizeEnum,\r\n\tCurrencyPosition,\r\n\tIContact,\r\n\tITag,\r\n\tIInvoice,\r\n\tIEmployee,\r\n\tIDeal,\r\n\tISkill,\r\n\tIPayment,\r\n\tIOrganizationSprint,\r\n\tIInvoiceEstimateHistory,\r\n\tIOrganizationAwards,\r\n\tIOrganizationLanguages,\r\n\tIFeatureOrganization\r\n} from '@gauzy/models';\r\nimport { Tag } from '../tags/tag.entity';\r\nimport { Skill } from '../skills/skill.entity';\r\nimport { Invoice } from '../invoice/invoice.entity';\r\nimport { Payment } from '../payment/payment.entity';\r\nimport { Contact } from '../contact/contact.entity';\r\nimport { TenantBase } from '../core/entities/tenant-base';\r\nimport { OrganizationSprint } from '../organization-sprint/organization-sprint.entity';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { InvoiceEstimateHistory } from '../invoice-estimate-history/invoice-estimate-history.entity';\r\nimport { Deal } from '../deal/deal.entity';\r\nimport { OrganizationAwards } from '../organization-awards/organization-awards.entity';\r\nimport { OrganizationLanguages } from '../organization-languages/organization-languages.entity';\r\nimport { FeatureOrganization } from '../feature/feature_organization.entity';\r\n\r\n@Entity('organization')\r\nexport class Organization extends TenantBase implements IOrganization {\r\n\t@ApiProperty()\r\n\t@ManyToMany((type) => Tag)\r\n\t@JoinTable({\r\n\t\tname: 'tag_organization'\r\n\t})\r\n\ttags: ITag[];\r\n\r\n\t@ApiProperty({ type: Contact })\r\n\t@ManyToOne(() => Contact, (contact) => contact.organization, {\r\n\t\tnullable: true,\r\n\t\tcascade: true,\r\n\t\tonDelete: 'SET NULL'\r\n\t})\r\n\t@JoinColumn()\r\n\tcontact: IContact;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@RelationId((organization: Organization) => organization.contact)\r\n\treadonly contactId?: string;\r\n\r\n\t@ApiPropertyOptional({ type: Invoice, isArray: true })\r\n\t@OneToMany((type) => Invoice, (invoices) => invoices.fromOrganization)\r\n\t@JoinColumn()\r\n\tinvoices?: IInvoice[];\r\n\r\n\t@ApiProperty({ type: Employee })\r\n\t@OneToMany(() => Employee, (employee) => employee.organization)\r\n\t@JoinColumn()\r\n\temployees?: IEmployee[];\r\n\r\n\t@ApiProperty({ type: Deal })\r\n\t@OneToMany(() => Deal, (deal) => deal.organization)\r\n\t@JoinColumn()\r\n\tdeals?: IDeal[];\r\n\r\n\t@ApiProperty({ type: OrganizationAwards })\r\n\t@OneToMany(() => OrganizationAwards, (award) => award.organization)\r\n\t@JoinColumn()\r\n\tawards?: IOrganizationAwards[];\r\n\r\n\t@ApiProperty({ type: OrganizationLanguages })\r\n\t@OneToMany(() => OrganizationLanguages, (language) => language.organization)\r\n\t@JoinColumn()\r\n\tlanguages?: IOrganizationLanguages[];\r\n\r\n\t@ApiProperty({ type: FeatureOrganization })\r\n\t@OneToMany(() => FeatureOrganization, (feature) => feature.organization)\r\n\tfeatureOrganizations?: IFeatureOrganization[];\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Index()\r\n\t@Column()\r\n\tname: string;\r\n\r\n\t@ApiProperty({ type: String, minLength: 3, maxLength: 100 })\r\n\t@IsString()\r\n\t@Index({ unique: true })\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tprofile_link: string;\r\n\r\n\t@ApiProperty({ type: String, maxLength: 300 })\r\n\t@IsString()\r\n\t@Index()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tbanner: string;\r\n\r\n\t@ApiProperty({ type: Number, maxLength: 4 })\r\n\t@IsString()\r\n\t@Index()\r\n\t@Column({ nullable: true })\r\n\ttotalEmployees: number;\r\n\r\n\t@ApiProperty({ type: String, maxLength: 600 })\r\n\t@IsString()\r\n\t@Index()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tshort_description: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@Index()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tclient_focus: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@Index()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\toverview: string;\r\n\r\n\t@ApiPropertyOptional({ type: String, maxLength: 500 })\r\n\t@IsOptional()\r\n\t@Column({ length: 500, nullable: true })\r\n\timageUrl?: string;\r\n\r\n\t@ApiProperty({ type: String, enum: CurrenciesEnum })\r\n\t@IsEnum(CurrenciesEnum)\r\n\t@IsNotEmpty()\r\n\t@Index()\r\n\t@Column()\r\n\tcurrency: string;\r\n\r\n\t@ApiPropertyOptional({ type: Date })\r\n\t@IsDate()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tvalueDate?: Date;\r\n\r\n\t@ApiProperty({ type: String, enum: DefaultValueDateTypeEnum })\r\n\t@IsEnum(DefaultValueDateTypeEnum)\r\n\t@IsNotEmpty()\r\n\t@Index()\r\n\t@Column()\r\n\tdefaultValueDateType: string;\r\n\r\n\t@ApiProperty({ type: Boolean, default: true })\r\n\t@Column({ default: true })\r\n\tisActive: boolean;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tdefaultAlignmentType?: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\ttimeZone?: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tregionCode?: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tbrandColor?: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tdateFormat?: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tofficialName?: string;\r\n\r\n\t@ApiProperty({ type: String, enum: WeekDaysEnum })\r\n\t@Column()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tstartWeekOn?: string;\r\n\r\n\t@ApiProperty({ type: String, maxLength: 256 })\r\n\t@Column()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\ttaxId?: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tnumberFormat?: string;\r\n\r\n\t@ApiProperty({ type: String, enum: MinimumProjectSizeEnum })\r\n\t@IsEnum(BonusTypeEnum)\r\n\t@Column({ nullable: true })\r\n\tminimumProjectSize?: string;\r\n\r\n\t@ApiProperty({ type: String, enum: BonusTypeEnum })\r\n\t@IsEnum(BonusTypeEnum)\r\n\t@Column({ nullable: true })\r\n\tbonusType?: string;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@IsNumber()\r\n\t@Min(0)\r\n\t@Max(100)\r\n\t@Column({ nullable: true })\r\n\tbonusPercentage?: number;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@IsBoolean()\r\n\t@Column({ nullable: true })\r\n\tinvitesAllowed?: boolean;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@IsBoolean()\r\n\t@Column({ nullable: true })\r\n\tshow_income?: boolean;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@IsBoolean()\r\n\t@Column({ nullable: true })\r\n\tshow_profits?: boolean;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@IsBoolean()\r\n\t@Column({ nullable: true })\r\n\tshow_bonuses_paid?: boolean;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@IsBoolean()\r\n\t@Column({ nullable: true })\r\n\tshow_total_hours?: boolean;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@IsBoolean()\r\n\t@Column({ nullable: true })\r\n\tshow_minimum_project_size?: boolean;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@IsBoolean()\r\n\t@Column({ nullable: true })\r\n\tshow_projects_count?: boolean;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@IsBoolean()\r\n\t@Column({ nullable: true })\r\n\tshow_clients_count?: boolean;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@IsBoolean()\r\n\t@Column({ nullable: true })\r\n\tshow_clients?: boolean;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@IsBoolean()\r\n\t@Column({ nullable: true })\r\n\tshow_employees_count?: boolean;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@IsNumber()\r\n\t@Column({ nullable: true })\r\n\tinviteExpiryPeriod?: number;\r\n\r\n\t@ApiProperty({ type: Date })\r\n\t@Column({ nullable: true })\r\n\t@IsOptional()\r\n\t@IsDate()\r\n\tfiscalStartDate?: Date;\r\n\r\n\t@ApiProperty({ type: Date })\r\n\t@Column({ nullable: true })\r\n\t@IsOptional()\r\n\t@IsDate()\r\n\tfiscalEndDate?: Date;\r\n\r\n\t@ApiProperty({ type: Date })\r\n\t@Column({ nullable: true })\r\n\t@IsOptional()\r\n\t@IsDate()\r\n\tregistrationDate?: Date;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@IsBoolean()\r\n\t@Column({ nullable: true })\r\n\tfutureDateAllowed?: boolean;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@IsBoolean()\r\n\t@Column({ default: true })\r\n\tallowManualTime?: boolean;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@IsBoolean()\r\n\t@Column({ default: true })\r\n\tallowModifyTime?: boolean;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@IsBoolean()\r\n\t@Column({ default: true })\r\n\tallowDeleteTime?: boolean;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@IsBoolean()\r\n\t@Column({ default: false })\r\n\trequireReason?: boolean;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@IsBoolean()\r\n\t@Column({ default: false })\r\n\trequireDescription?: boolean;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@IsBoolean()\r\n\t@Column({ default: false })\r\n\trequireProject?: boolean;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@IsBoolean()\r\n\t@Column({ default: false })\r\n\trequireTask?: boolean;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@IsBoolean()\r\n\t@Column({ default: false })\r\n\trequireClient?: boolean;\r\n\r\n\t@ApiProperty({ enum: [12, 24] })\r\n\t@IsBoolean()\r\n\t@Column({ default: 12 })\r\n\ttimeFormat?: 12 | 24;\r\n\r\n\t@ApiProperty({ type: Skill })\r\n\t@ManyToMany((type) => Skill, (skill) => skill.organization)\r\n\t@JoinTable({\r\n\t\tname: 'skill_organization'\r\n\t})\r\n\tskills: ISkill[];\r\n\r\n\t@ApiPropertyOptional({ type: Payment, isArray: true })\r\n\t@OneToMany((type) => Payment, (payment) => payment.organization, {\r\n\t\tonDelete: 'SET NULL'\r\n\t})\r\n\t@JoinColumn()\r\n\tpayments?: IPayment[];\r\n\r\n\t@ApiPropertyOptional({ type: Boolean })\r\n\t@IsBoolean()\r\n\t@Column({ nullable: true })\r\n\tseparateInvoiceItemTaxAndDiscount?: boolean;\r\n\r\n\t@ApiPropertyOptional({ type: OrganizationSprint, isArray: true })\r\n\t@OneToMany((type) => OrganizationSprint, (sprints) => sprints.organization)\r\n\t@JoinColumn()\r\n\torganizationSprints?: IOrganizationSprint[];\r\n\r\n\t@ApiPropertyOptional({ type: InvoiceEstimateHistory, isArray: true })\r\n\t@OneToMany(\r\n\t\t(type) => InvoiceEstimateHistory,\r\n\t\t(invoiceEstimateHistory) => invoiceEstimateHistory.organization,\r\n\t\t{\r\n\t\t\tonDelete: 'SET NULL'\r\n\t\t}\r\n\t)\r\n\t@JoinColumn()\r\n\tinvoiceEstimateHistories?: IInvoiceEstimateHistory[];\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\twebsite?: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tfiscalInformation?: string;\r\n\r\n\t@ApiPropertyOptional({ type: String, enum: CurrencyPosition })\r\n\t@IsEnum(CurrencyPosition)\r\n\t@IsOptional()\r\n\t@Column({ default: 'LEFT' })\r\n\tcurrencyPosition?: string;\r\n\r\n\t@ApiPropertyOptional({ type: Boolean })\r\n\t@IsBoolean()\r\n\t@Column({ nullable: true })\r\n\tdiscountAfterTax?: boolean;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@Column({ nullable: true })\r\n\tdefaultStartTime?: string;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@Column({ nullable: true })\r\n\tdefaultEndTime?: string;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { CqrsModule } from '@nestjs/cqrs';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { Role } from '../role/role.entity';\r\nimport { RoleService } from '../role/role.service';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\nimport { UserOrganization } from '../user-organization/user-organization.entity';\r\nimport { UserOrganizationService } from '../user-organization/user-organization.services';\r\nimport { User } from '../user/user.entity';\r\nimport { UserService } from '../user/user.service';\r\nimport { CommandHandlers } from './commands/handlers';\r\nimport { OrganizationController } from './organization.controller';\r\nimport { Organization } from './organization.entity';\r\nimport { OrganizationService } from './organization.service';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([Organization, User, UserOrganization, Role]),\r\n\t\tCqrsModule,\r\n\t\tTenantModule\r\n\t],\r\n\tcontrollers: [OrganizationController],\r\n\tproviders: [\r\n\t\tOrganizationService,\r\n\t\tUserService,\r\n\t\tUserOrganizationService,\r\n\t\tRoleService,\r\n\t\t...CommandHandlers\r\n\t],\r\n\texports: [OrganizationService]\r\n})\r\nexport class OrganizationModule {}\r\n","import * as _ from 'underscore';\r\nimport * as moment from 'moment';\r\nimport * as timezone from 'moment-timezone';\r\nimport { Connection } from 'typeorm';\r\nimport { Organization } from './organization.entity';\r\nimport * as faker from 'faker';\r\nimport { getDummyImage } from '../core';\r\nimport {\r\n\tDefaultValueDateTypeEnum,\r\n\tBonusTypeEnum,\r\n\tWeekDaysEnum,\r\n\tAlignmentOptions,\r\n\tIOrganizationCreateInput\r\n} from '@gauzy/models';\r\nimport { Tenant } from './../tenant/tenant.entity';\r\nimport { Skill } from '../skills/skill.entity';\r\nimport { Contact } from '../contact/contact.entity';\r\nimport { DEFAULT_ORGANIZATIONS } from './default-organizations';\r\nimport { environment as env } from '@env-api/environment';\r\n\r\nexport const getDefaultBulgarianOrganization = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant\r\n): Promise<Organization> => {\r\n\tconst repo = connection.getRepository(Organization);\r\n\tconst existedOrganization = await repo.findOne({\r\n\t\twhere: { tenantId: tenant.id, name: 'Ever Technologies LTD' }\r\n\t});\r\n\treturn existedOrganization;\r\n};\r\n\r\nlet defaultOrganizationsInserted = [];\r\n\r\nexport const createDefaultOrganizations = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant\r\n): Promise<Organization[]> => {\r\n\tconst defaultOrganizations: Organization[] = [];\r\n\tconst skills = await getSkills(connection);\r\n\tconst contacts = await getContacts(connection);\r\n\r\n\tDEFAULT_ORGANIZATIONS.forEach((organization: IOrganizationCreateInput) => {\r\n\t\tconst organizationSkills = _.chain(skills)\r\n\t\t\t.shuffle()\r\n\t\t\t.take(faker.random.number({ min: 1, max: 4 }))\r\n\t\t\t.values()\r\n\t\t\t.value();\r\n\t\tconst defaultOrganization: Organization = new Organization();\r\n\t\tconst { name, currency, defaultValueDateType, imageUrl } = organization;\r\n\t\tdefaultOrganization.name = name;\r\n\t\tdefaultOrganization.profile_link = generateLink(name);\r\n\t\tdefaultOrganization.currency = currency;\r\n\t\tdefaultOrganization.defaultValueDateType = defaultValueDateType;\r\n\t\tdefaultOrganization.imageUrl = imageUrl;\r\n\t\tdefaultOrganization.invitesAllowed = true;\r\n\t\tdefaultOrganization.bonusType = BonusTypeEnum.REVENUE_BASED_BONUS;\r\n\t\tdefaultOrganization.bonusPercentage = 10;\r\n\t\tdefaultOrganization.registrationDate = faker.date.past(5);\r\n\t\tdefaultOrganization.overview = faker.name.jobDescriptor();\r\n\t\tdefaultOrganization.short_description = faker.name.jobDescriptor();\r\n\t\tdefaultOrganization.client_focus = faker.name.jobDescriptor();\r\n\t\tdefaultOrganization.show_profits = false;\r\n\t\tdefaultOrganization.show_bonuses_paid = false;\r\n\t\tdefaultOrganization.show_income = false;\r\n\t\tdefaultOrganization.show_total_hours = false;\r\n\t\tdefaultOrganization.show_projects_count = true;\r\n\t\tdefaultOrganization.show_minimum_project_size = true;\r\n\t\tdefaultOrganization.show_clients_count = true;\r\n\t\tdefaultOrganization.show_clients = true;\r\n\t\tdefaultOrganization.show_employees_count = true;\r\n\t\tdefaultOrganization.banner = faker.name.jobDescriptor();\r\n\t\tdefaultOrganization.skills = organizationSkills;\r\n\t\tdefaultOrganization.brandColor = faker.random.arrayElement([\r\n\t\t\t'red',\r\n\t\t\t'green',\r\n\t\t\t'blue',\r\n\t\t\t'orange',\r\n\t\t\t'yellow'\r\n\t\t]);\r\n\t\tdefaultOrganization.contact = faker.random.arrayElement(contacts);\r\n\t\tdefaultOrganization.timeZone = faker.random.arrayElement(\r\n\t\t\ttimezone.tz.names().filter((zone) => zone.includes('/'))\r\n\t\t);\r\n\t\tdefaultOrganization.dateFormat = faker.random.arrayElement([\r\n\t\t\t'L',\r\n\t\t\t'L hh:mm',\r\n\t\t\t'LL',\r\n\t\t\t'LLL',\r\n\t\t\t'LLLL'\r\n\t\t]);\r\n\t\tdefaultOrganization.defaultAlignmentType = faker.random.arrayElement(\r\n\t\t\tObject.keys(AlignmentOptions)\r\n\t\t);\r\n\t\tdefaultOrganization.fiscalStartDate = moment(new Date())\r\n\t\t\t.add(faker.random.number(10), 'days')\r\n\t\t\t.toDate();\r\n\t\tdefaultOrganization.fiscalEndDate = moment(\r\n\t\t\tdefaultOrganization.fiscalStartDate\r\n\t\t)\r\n\t\t\t.add(faker.random.number(10), 'days')\r\n\t\t\t.toDate();\r\n\t\tdefaultOrganization.futureDateAllowed = faker.random.boolean();\r\n\t\tdefaultOrganization.inviteExpiryPeriod = faker.random.number(50);\r\n\t\tdefaultOrganization.numberFormat = faker.random.arrayElement([\r\n\t\t\t'USD',\r\n\t\t\t'BGN',\r\n\t\t\t'ILS'\r\n\t\t]);\r\n\t\tdefaultOrganization.officialName = faker.company.companyName();\r\n\t\tdefaultOrganization.separateInvoiceItemTaxAndDiscount = faker.random.boolean();\r\n\t\tdefaultOrganization.startWeekOn = WeekDaysEnum.MONDAY;\r\n\t\tdefaultOrganization.totalEmployees = faker.random.number(4);\r\n\t\tdefaultOrganization.tenant = tenant;\r\n\t\tdefaultOrganization.valueDate = moment(new Date())\r\n\t\t\t.add(faker.random.number(10), 'days')\r\n\t\t\t.toDate();\r\n\r\n\t\tdefaultOrganizations.push(defaultOrganization);\r\n\t});\r\n\r\n\tconst organizations = await connection.manager.save(defaultOrganizations);\r\n\tdefaultOrganizationsInserted = [...defaultOrganizations];\r\n\treturn organizations;\r\n};\r\n\r\nexport const createRandomOrganizations = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\tnoOfOrganizations: number\r\n): Promise<Map<Tenant, Organization[]>> => {\r\n\tconst defaultDateTypes = Object.values(DefaultValueDateTypeEnum);\r\n\tconst skills = await getSkills(connection);\r\n\tconst contacts = await getContacts(connection);\r\n\tconst tenantOrganizations: Map<Tenant, Organization[]> = new Map();\r\n\tlet allOrganizations: Organization[] = [];\r\n\r\n\ttenants.forEach((tenant) => {\r\n\t\tconst randomOrganizations: Organization[] = [];\r\n\t\tif (tenant.name === 'Ever') {\r\n\t\t\ttenantOrganizations.set(tenant, defaultOrganizationsInserted);\r\n\t\t} else {\r\n\t\t\tfor (let index = 0; index < noOfOrganizations; index++) {\r\n\t\t\t\tconst organizationSkills = _.chain(skills)\r\n\t\t\t\t\t.shuffle()\r\n\t\t\t\t\t.take(faker.random.number({ min: 1, max: 4 }))\r\n\t\t\t\t\t.values()\r\n\t\t\t\t\t.value();\r\n\t\t\t\tconst organization = new Organization();\r\n\t\t\t\tconst companyName = faker.company.companyName();\r\n\r\n\t\t\t\tconst logoAbbreviation = _extractLogoAbbreviation(companyName);\r\n\r\n\t\t\t\torganization.name = companyName;\r\n\t\t\t\torganization.profile_link = generateLink(companyName);\r\n\t\t\t\torganization.currency = env.defaultCurrency;\r\n\t\t\t\torganization.defaultValueDateType =\r\n\t\t\t\t\tdefaultDateTypes[index % defaultDateTypes.length];\r\n\t\t\t\torganization.imageUrl = getDummyImage(\r\n\t\t\t\t\t330,\r\n\t\t\t\t\t300,\r\n\t\t\t\t\tlogoAbbreviation\r\n\t\t\t\t);\r\n\t\t\t\torganization.invitesAllowed = true;\r\n\t\t\t\torganization.overview = faker.name.jobDescriptor();\r\n\t\t\t\torganization.short_description = faker.name.jobDescriptor();\r\n\t\t\t\torganization.client_focus = faker.name.jobDescriptor();\r\n\t\t\t\torganization.show_profits = false;\r\n\t\t\t\torganization.show_bonuses_paid = false;\r\n\t\t\t\torganization.show_income = false;\r\n\t\t\t\torganization.show_total_hours = false;\r\n\t\t\t\torganization.show_projects_count = true;\r\n\t\t\t\torganization.show_minimum_project_size = true;\r\n\t\t\t\torganization.show_clients_count = true;\r\n\t\t\t\torganization.show_employees_count = true;\r\n\t\t\t\torganization.banner = faker.name.jobDescriptor();\r\n\r\n\t\t\t\tconst { bonusType, bonusPercentage } = randomBonus();\r\n\t\t\t\torganization.bonusType = bonusType;\r\n\t\t\t\torganization.bonusPercentage = bonusPercentage;\r\n\t\t\t\torganization.registrationDate = faker.date.past(\r\n\t\t\t\t\tMath.floor(Math.random() * 10) + 1\r\n\t\t\t\t);\r\n\r\n\t\t\t\torganization.skills = organizationSkills;\r\n\t\t\t\torganization.brandColor = faker.random.arrayElement([\r\n\t\t\t\t\t'red',\r\n\t\t\t\t\t'green',\r\n\t\t\t\t\t'blue',\r\n\t\t\t\t\t'orange',\r\n\t\t\t\t\t'yellow'\r\n\t\t\t\t]);\r\n\t\t\t\torganization.contact = faker.random.arrayElement(contacts);\r\n\t\t\t\torganization.timeZone = faker.random.arrayElement(\r\n\t\t\t\t\ttimezone.tz.names().filter((zone) => zone.includes('/'))\r\n\t\t\t\t);\r\n\t\t\t\torganization.dateFormat = faker.random.arrayElement([\r\n\t\t\t\t\t'L',\r\n\t\t\t\t\t'L hh:mm',\r\n\t\t\t\t\t'LL',\r\n\t\t\t\t\t'LLL',\r\n\t\t\t\t\t'LLLL'\r\n\t\t\t\t]);\r\n\t\t\t\torganization.defaultAlignmentType = faker.random.arrayElement(\r\n\t\t\t\t\tObject.keys(AlignmentOptions)\r\n\t\t\t\t);\r\n\t\t\t\torganization.fiscalStartDate = moment(new Date())\r\n\t\t\t\t\t.add(faker.random.number(10), 'days')\r\n\t\t\t\t\t.toDate();\r\n\t\t\t\torganization.fiscalEndDate = moment(\r\n\t\t\t\t\torganization.fiscalStartDate\r\n\t\t\t\t)\r\n\t\t\t\t\t.add(faker.random.number(10), 'days')\r\n\t\t\t\t\t.toDate();\r\n\t\t\t\torganization.futureDateAllowed = faker.random.boolean();\r\n\t\t\t\torganization.inviteExpiryPeriod = faker.random.number(50);\r\n\t\t\t\torganization.numberFormat = faker.random.arrayElement([\r\n\t\t\t\t\t'USD',\r\n\t\t\t\t\t'BGN',\r\n\t\t\t\t\t'ILS'\r\n\t\t\t\t]);\r\n\t\t\t\torganization.officialName = faker.company.companyName();\r\n\t\t\t\torganization.separateInvoiceItemTaxAndDiscount = faker.random.boolean();\r\n\t\t\t\torganization.startWeekOn = WeekDaysEnum.MONDAY;\r\n\t\t\t\torganization.totalEmployees = faker.random.number(4);\r\n\t\t\t\torganization.tenant = tenant;\r\n\t\t\t\torganization.valueDate = moment(new Date())\r\n\t\t\t\t\t.add(faker.random.number(10), 'days')\r\n\t\t\t\t\t.toDate();\r\n\r\n\t\t\t\trandomOrganizations.push(organization);\r\n\t\t\t}\r\n\r\n\t\t\ttenantOrganizations.set(tenant, randomOrganizations);\r\n\t\t}\r\n\r\n\t\tallOrganizations = allOrganizations.concat(randomOrganizations);\r\n\t});\r\n\r\n\tawait insertOrganizations(connection, allOrganizations);\r\n\treturn tenantOrganizations;\r\n};\r\n\r\nconst insertOrganizations = async (\r\n\tconnection: Connection,\r\n\torganizations: Organization[]\r\n): Promise<void> => {\r\n\tawait connection.manager.save(organizations);\r\n};\r\n\r\nconst _extractLogoAbbreviation = (companyName: string) => {\r\n\tconst logoFirstWordFirstLetterIndex = 0;\r\n\tconst companyNameLastEmptyLetterIndex = companyName.lastIndexOf(' ');\r\n\tconst logoFirstLetter = companyName[logoFirstWordFirstLetterIndex];\r\n\r\n\tlet logoAbbreviation = logoFirstLetter;\r\n\r\n\tif (\r\n\t\tcompanyNameLastEmptyLetterIndex !== -1 &&\r\n\t\tcompanyNameLastEmptyLetterIndex !== logoFirstWordFirstLetterIndex\r\n\t) {\r\n\t\tconst logoLastWordFirstLetterIndex =\r\n\t\t\tcompanyNameLastEmptyLetterIndex + 1;\r\n\t\tconst logoSecondLetter = companyName[logoLastWordFirstLetterIndex];\r\n\r\n\t\tlogoAbbreviation += logoSecondLetter;\r\n\t}\r\n\r\n\treturn logoAbbreviation;\r\n};\r\n\r\nconst randomBonus = () => {\r\n\tconst randomNumberBetween = (min, max) =>\r\n\t\tMath.floor(Math.random() * (max - min + 1) + min);\r\n\r\n\tconst bonusType = Object.values(BonusTypeEnum)[randomNumberBetween(0, 1)];\r\n\r\n\tconst bonusPercentage =\r\n\t\tbonusType === BonusTypeEnum.PROFIT_BASED_BONUS\r\n\t\t\t? randomNumberBetween(65, 75)\r\n\t\t\t: randomNumberBetween(5, 10);\r\n\r\n\treturn { bonusType, bonusPercentage };\r\n};\r\n\r\nconst generateLink = (name) => {\r\n\treturn name.replace(/[^A-Z0-9]+/gi, '-').toLowerCase();\r\n};\r\n\r\nconst getSkills = async (connection: Connection): Promise<any> => {\r\n\treturn await connection.manager.find(Skill, {});\r\n};\r\n\r\nconst getContacts = async (connection: Connection): Promise<Contact[]> => {\r\n\treturn await connection.manager.find(Contact, {});\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository, FindOneOptions } from 'typeorm';\r\nimport { TenantAwareCrudService } from '../core/crud/tenant-aware-crud.service';\r\nimport { Organization } from './organization.entity';\r\n\r\n@Injectable()\r\nexport class OrganizationService extends TenantAwareCrudService<Organization> {\r\n\tconstructor(\r\n\t\t@InjectRepository(Organization)\r\n\t\tprivate readonly organizationRepository: Repository<Organization>\r\n\t) {\r\n\t\tsuper(organizationRepository);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the organization based on the public link irrespective of the tenant.\r\n\t */\r\n\tpublic async findByPublicLink(\r\n\t\tprofile_link: string,\r\n\t\tselect?: string,\r\n\t\trelation?: string\r\n\t): Promise<Organization> {\r\n\t\tconst findObj: FindOneOptions<Organization> = {};\r\n\r\n\t\tif (select) {\r\n\t\t\tfindObj['select'] = JSON.parse(select);\r\n\t\t\tfindObj['relations'] = JSON.parse(relation);\r\n\t\t}\r\n\r\n\t\treturn await this.organizationRepository.findOne(\r\n\t\t\t{ profile_link },\r\n\t\t\tfindObj\r\n\t\t);\r\n\t}\r\n}\r\n","import { IEmployeeLevelInput } from '@gauzy/models';\r\n\r\nexport const DEFAULT_EMPLOYEE_LEVELS: IEmployeeLevelInput[] = [\r\n\t{\r\n\t\tlevel: 'Level A'\r\n\t},\r\n\t{\r\n\t\tlevel: 'Level B'\r\n\t},\r\n\t{\r\n\t\tlevel: 'Level C'\r\n\t},\r\n\t{\r\n\t\tlevel: 'Level D'\r\n\t}\r\n];\r\n","import {\r\n\tController,\r\n\tGet,\r\n\tParam,\r\n\tUseGuards,\r\n\tQuery,\r\n\tBody,\r\n\tPut\r\n} from '@nestjs/common';\r\nimport { ApiTags } from '@nestjs/swagger';\r\nimport { CrudController, IPagination } from '../core';\r\nimport { EmployeeLevel } from './organization-employee-level.entity';\r\nimport { EmployeeLevelService } from './organization-employee-level.service';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('OrganizationEmployeeLevel')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class EmployeeLevelController extends CrudController<EmployeeLevel> {\r\n\tconstructor(private employeeLevelService: EmployeeLevelService) {\r\n\t\tsuper(employeeLevelService);\r\n\t}\r\n\r\n\t@Get(':orgId')\r\n\tasync findByOrgId(\r\n\t\t@Query('data') data: string,\r\n\t\t@Param() id\r\n\t): Promise<IPagination<EmployeeLevel>> {\r\n\t\tconst orgId = id.orgId;\r\n\t\tconst { relations, findInput } = JSON.parse(data);\r\n\t\treturn await this.employeeLevelService.findAll({\r\n\t\t\twhere: {\r\n\t\t\t\torganizationId: orgId,\r\n\t\t\t\t...findInput\r\n\t\t\t},\r\n\t\t\trelations\r\n\t\t});\r\n\t}\r\n\r\n\t@Put(':id')\r\n\tasync updateOrganizationTeam(\r\n\t\t@Param('id') id: string,\r\n\t\t@Body() entity: EmployeeLevel,\r\n\t\t...options: any[]\r\n\t): Promise<EmployeeLevel> {\r\n\t\treturn this.employeeLevelService.create({\r\n\t\t\tid,\r\n\t\t\t...entity\r\n\t\t});\r\n\t}\r\n}\r\n","import { Entity, Column, ManyToMany, JoinTable } from 'typeorm';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { Tag } from '../tags/tag.entity';\r\nimport { IsString, IsNotEmpty } from 'class-validator';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity({ name: 'organization_employee_level' })\r\nexport class EmployeeLevel extends TenantOrganizationBase {\r\n\t@ApiProperty()\r\n\t@ManyToMany((type) => Tag, (tag) => tag.employeeLevel)\r\n\t@JoinTable({\r\n\t\tname: 'tag_organization_employee_level'\r\n\t})\r\n\ttags: Tag[];\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Column()\r\n\tlevel: string;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { EmployeeLevelController } from './organization-employee-level.controller';\r\nimport { EmployeeLevelService } from './organization-employee-level.service';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { EmployeeLevel } from './organization-employee-level.entity';\r\nimport { CqrsModule } from '@nestjs/cqrs';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([EmployeeLevel]),\r\n\t\tCqrsModule,\r\n\t\tTenantModule\r\n\t],\r\n\tcontrollers: [EmployeeLevelController],\r\n\tproviders: [EmployeeLevelService]\r\n})\r\nexport class EmployeeLevelModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { IEmployeeLevelInput } from '@gauzy/models';\r\nimport { EmployeeLevel } from './organization-employee-level.entity';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { DEFAULT_EMPLOYEE_LEVELS } from './default-organization-employee-levels';\r\n\r\nexport const createEmployeeLevels = async (\r\n\tconnection: Connection,\r\n\torganizations: Organization[]\r\n): Promise<IEmployeeLevelInput[]> => {\r\n\tconst employeeLevels: EmployeeLevel[] = [];\r\n\tDEFAULT_EMPLOYEE_LEVELS.forEach(({ level }) => {\r\n\t\torganizations.forEach((organization: Organization) => {\r\n\t\t\tconst entity = new EmployeeLevel();\r\n\t\t\tentity.level = level;\r\n\t\t\tentity.organization = organization;\r\n\t\t\tentity.tenant = organization.tenant;\r\n\t\t\temployeeLevels.push(entity);\r\n\t\t});\r\n\t});\r\n\r\n\treturn insertLevels(connection, employeeLevels);\r\n};\r\n\r\nconst insertLevels = async (\r\n\tconnection: Connection,\r\n\temployeeLevels: EmployeeLevel[]\r\n) => await connection.manager.save(employeeLevels);\r\n","import { Injectable } from '@nestjs/common';\r\nimport { CrudService } from '../core';\r\nimport { EmployeeLevel } from './organization-employee-level.entity';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\n\r\n@Injectable()\r\nexport class EmployeeLevelService extends CrudService<EmployeeLevel> {\r\n\tconstructor(\r\n\t\t@InjectRepository(EmployeeLevel)\r\n\t\tprivate readonly employeeLevelRepository: Repository<EmployeeLevel>\r\n\t) {\r\n\t\tsuper(employeeLevelRepository);\r\n\t}\r\n}\r\n","import { CrudController, IPagination } from '../core';\r\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\r\nimport {\r\n\tController,\r\n\tUseGuards,\r\n\tQuery,\r\n\tGet,\r\n\tHttpCode,\r\n\tHttpStatus,\r\n\tPut,\r\n\tParam,\r\n\tBody,\r\n\tPost,\r\n\tDelete\r\n} from '@nestjs/common';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { Payment } from './payment.entity';\r\nimport { PaymentService } from './payment.service';\r\nimport {\r\n\tIGetPaymentInput,\r\n\tIPayment,\r\n\tIPaymentReportData,\r\n\tPermissionsEnum\r\n} from '@gauzy/models';\r\nimport { ParseJsonPipe } from '../shared';\r\nimport { PermissionGuard } from '../shared/guards/auth/permission.guard';\r\nimport { Permissions } from '../shared/decorators/permissions';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\nimport { PaymentMapService } from './payment.map.service';\r\n\r\n@ApiTags('Payment')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class PaymentController extends CrudController<Payment> {\r\n\tconstructor(\r\n\t\tprivate paymentService: PaymentService,\r\n\t\tprivate paymentMapService: PaymentMapService\r\n\t) {\r\n\t\tsuper(paymentService);\r\n\t}\r\n\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_PAYMENT_VIEW)\r\n\t@Get()\r\n\tasync findAllPayments(\r\n\t\t@Query('data', ParseJsonPipe) data: any\r\n\t): Promise<IPagination<IPayment>> {\r\n\t\tconst { relations = [], findInput = null } = data;\r\n\t\treturn this.paymentService.findAll({\r\n\t\t\twhere: findInput,\r\n\t\t\trelations\r\n\t\t});\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Payments report.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found reports'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_EXPENSES_VIEW)\r\n\t@Get('report')\r\n\tasync getPaymentReport(\r\n\t\t@Query() request: IGetPaymentInput\r\n\t): Promise<IPaymentReportData[]> {\r\n\t\tconst reports = await this.paymentService.getPayments(request);\r\n\r\n\t\tlet response: IPaymentReportData[] = [];\r\n\t\tif (request.groupBy === 'date') {\r\n\t\t\tresponse = this.paymentMapService.mapByDate(reports);\r\n\t\t} else if (request.groupBy === 'client') {\r\n\t\t\tresponse = this.paymentMapService.mapByClient(reports);\r\n\t\t} else if (request.groupBy === 'project') {\r\n\t\t\tresponse = this.paymentMapService.mapByProject(reports);\r\n\t\t}\r\n\t\treturn response;\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Payment Report daily chart' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found one record'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get('report/chart-data')\r\n\tasync getDailyReportChartData(@Query() options: IGetPaymentInput) {\r\n\t\treturn this.paymentService.getDailyReportChartData(options);\r\n\t}\r\n\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_PAYMENT_ADD_EDIT)\r\n\t@Post()\r\n\tasync createPayment(@Body() entity: IPayment): Promise<any> {\r\n\t\treturn this.paymentService.create(entity);\r\n\t}\r\n\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_PAYMENT_ADD_EDIT)\r\n\t@Put(':id')\r\n\tasync updatePayment(\r\n\t\t@Param('id') id: string,\r\n\t\t@Body() entity: IPayment\r\n\t): Promise<any> {\r\n\t\treturn this.paymentService.create({\r\n\t\t\tid,\r\n\t\t\t...entity\r\n\t\t});\r\n\t}\r\n\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_PAYMENT_ADD_EDIT)\r\n\t@Delete(':id')\r\n\tasync deleteTask(@Param('id') id: string): Promise<any> {\r\n\t\treturn this.paymentService.delete(id);\r\n\t}\r\n}\r\n","import {\r\n\tEntity,\r\n\tColumn,\r\n\tManyToOne,\r\n\tJoinColumn,\r\n\tJoinTable,\r\n\tManyToMany,\r\n\tRelationId\r\n} from 'typeorm';\r\nimport {\r\n\tIPayment,\r\n\tCurrenciesEnum,\r\n\tPaymentMethodEnum,\r\n\tIEmployee\r\n} from '@gauzy/models';\r\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\r\nimport {\r\n\tIsEnum,\r\n\tIsString,\r\n\tIsOptional,\r\n\tIsDate,\r\n\tIsNumber,\r\n\tIsBoolean\r\n} from 'class-validator';\r\nimport { Tag } from '../tags/tag.entity';\r\nimport { User } from '../user/user.entity';\r\nimport { Invoice } from '../invoice/invoice.entity';\r\nimport { OrganizationProject } from '../organization-projects/organization-projects.entity';\r\nimport { OrganizationContact } from '../organization-contact/organization-contact.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\nimport { Employee } from '../employee/employee.entity';\r\n\r\n@Entity('payment')\r\nexport class Payment extends TenantOrganizationBase implements IPayment {\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@IsString()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tinvoiceId?: string;\r\n\r\n\t@ApiPropertyOptional({ type: Invoice })\r\n\t@ManyToOne((type) => Invoice, (invoice) => invoice.payments, {\r\n\t\tonDelete: 'SET NULL'\r\n\t})\r\n\t@JoinColumn()\r\n\tinvoice?: Invoice;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@RelationId((expense: Payment) => expense.employee)\r\n\t@Column({ nullable: true })\r\n\temployeeId?: string;\r\n\r\n\t@ApiProperty({ type: Employee })\r\n\t@ManyToOne((type) => Employee, {\r\n\t\tonDelete: 'SET NULL'\r\n\t})\r\n\t@JoinColumn()\r\n\temployee?: IEmployee;\r\n\r\n\t@ApiPropertyOptional({ type: User })\r\n\t@ManyToOne((type) => User)\r\n\t@JoinColumn()\r\n\trecordedBy?: User;\r\n\r\n\t@ApiPropertyOptional({ type: Date })\r\n\t@IsDate()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tpaymentDate?: Date;\r\n\r\n\t@ApiPropertyOptional({ type: Number })\r\n\t@IsNumber()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true, type: 'numeric' })\r\n\tamount?: number;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@IsString()\r\n\t@IsOptional()\r\n\t@Column()\r\n\tnote?: string;\r\n\r\n\t@ApiPropertyOptional({ type: String, enum: CurrenciesEnum })\r\n\t@IsEnum(CurrenciesEnum)\r\n\t@Column()\r\n\tcurrency?: string;\r\n\r\n\t@ApiPropertyOptional({ type: String, enum: PaymentMethodEnum })\r\n\t@IsEnum(PaymentMethodEnum)\r\n\t@Column()\r\n\tpaymentMethod?: string;\r\n\r\n\t@ApiPropertyOptional({ type: Boolean })\r\n\t@IsBoolean()\r\n\t@Column({ nullable: true })\r\n\toverdue?: boolean;\r\n\r\n\t@ApiPropertyOptional({ type: OrganizationProject })\r\n\t@ManyToOne((type) => OrganizationProject, (project) => project.payments, {\r\n\t\tonDelete: 'SET NULL'\r\n\t})\r\n\t@JoinColumn()\r\n\tproject?: OrganizationProject;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@IsString()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tprojectId?: string;\r\n\r\n\t@ApiPropertyOptional({ type: OrganizationContact })\r\n\t@ManyToOne((type) => OrganizationContact, (contact) => contact.payments, {\r\n\t\tonDelete: 'SET NULL'\r\n\t})\r\n\t@JoinColumn()\r\n\tcontact?: OrganizationContact;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@IsString()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tcontactId?: string;\r\n\r\n\t@ManyToMany(() => Tag, (tag) => tag.payment)\r\n\t@JoinTable({\r\n\t\tname: 'tag_payment'\r\n\t})\r\n\ttags?: Tag[];\r\n}\r\n","import {\r\n\tIPayment,\r\n\tIPaymentReportGroupByClient,\r\n\tIPaymentReportGroupByDate,\r\n\tIPaymentReportGroupByProject\r\n} from '@gauzy/models';\r\nimport { Injectable } from '@nestjs/common';\r\nimport * as moment from 'moment';\r\nimport { chain } from 'underscore';\r\n\r\n@Injectable()\r\nexport class PaymentMapService {\r\n\tconstructor() {}\r\n\r\n\tmapByDate(payments: IPayment[]): IPaymentReportGroupByDate[] {\r\n\t\tconst dailyLogs: any = this.groupByDate(payments).map(\r\n\t\t\t(byDatePayment: IPayment[], date) => {\r\n\t\t\t\tconst sum = this.getDurationSum(byDatePayment);\r\n\t\t\t\tconst byClient = this.groupByClient(byDatePayment).map(\r\n\t\t\t\t\t(byClientPayment: IPayment[]) => {\r\n\t\t\t\t\t\tconst byProject = this.groupByProject(\r\n\t\t\t\t\t\t\tbyClientPayment\r\n\t\t\t\t\t\t).map((byProjectPayment: IPayment[]) => {\r\n\t\t\t\t\t\t\tconst project =\r\n\t\t\t\t\t\t\t\tbyProjectPayment.length > 0 &&\r\n\t\t\t\t\t\t\t\tbyProjectPayment[0]\r\n\t\t\t\t\t\t\t\t\t? byProjectPayment[0].project\r\n\t\t\t\t\t\t\t\t\t: null;\r\n\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tproject,\r\n\t\t\t\t\t\t\t\tpayments: byProjectPayment.map((row) =>\r\n\t\t\t\t\t\t\t\t\tthis.mapPaymentPercentage(row, sum)\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tconst employee =\r\n\t\t\t\t\t\t\tbyClientPayment.length > 0 && byClientPayment[0]\r\n\t\t\t\t\t\t\t\t? byClientPayment[0].employee\r\n\t\t\t\t\t\t\t\t: null;\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\temployee,\r\n\t\t\t\t\t\t\tprojects: byProject\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tdate,\r\n\t\t\t\t\tclients: byClient\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t);\r\n\t\treturn dailyLogs;\r\n\t}\r\n\r\n\tmapByClient(payments: IPayment[]): IPaymentReportGroupByClient[] {\r\n\t\tconst byClient: any = this.groupByClient(payments).map(\r\n\t\t\t(byClientPayment: IPayment[]) => {\r\n\t\t\t\tconst sum = this.getDurationSum(byClientPayment);\r\n\t\t\t\tconst dailyLogs = this.groupByDate(byClientPayment).map(\r\n\t\t\t\t\t(byDatePayment: IPayment[], date) => {\r\n\t\t\t\t\t\tconst byProject = this.groupByProject(\r\n\t\t\t\t\t\t\tbyDatePayment\r\n\t\t\t\t\t\t).map((byProjectPayment: IPayment[]) => {\r\n\t\t\t\t\t\t\tconst project =\r\n\t\t\t\t\t\t\t\tbyProjectPayment.length > 0 &&\r\n\t\t\t\t\t\t\t\tbyProjectPayment[0]\r\n\t\t\t\t\t\t\t\t\t? byProjectPayment[0].project\r\n\t\t\t\t\t\t\t\t\t: null;\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tproject,\r\n\t\t\t\t\t\t\t\tpayments: byProjectPayment.map((row) =>\r\n\t\t\t\t\t\t\t\t\tthis.mapPaymentPercentage(row, sum)\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tdate,\r\n\t\t\t\t\t\t\tprojects: byProject\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\r\n\t\t\t\tconst client =\r\n\t\t\t\t\tbyClientPayment.length > 0 && byClientPayment[0]\r\n\t\t\t\t\t\t? byClientPayment[0].contact\r\n\t\t\t\t\t\t: null;\r\n\t\t\t\treturn {\r\n\t\t\t\t\tclient,\r\n\t\t\t\t\tdates: dailyLogs\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t);\r\n\t\treturn byClient;\r\n\t}\r\n\r\n\tmapByProject(payments: IPayment[]): IPaymentReportGroupByProject[] {\r\n\t\tconst byClient: any = this.groupByProject(payments).map(\r\n\t\t\t(byProjectPayment: IPayment[]) => {\r\n\t\t\t\tconst sum = this.getDurationSum(byProjectPayment);\r\n\r\n\t\t\t\tconst dailyLogs = this.groupByDate(byProjectPayment).map(\r\n\t\t\t\t\t(byDatePayment: IPayment[], date) => {\r\n\t\t\t\t\t\tconst byProject = this.groupByClient(byDatePayment).map(\r\n\t\t\t\t\t\t\t(byClientPayment: IPayment[]) => {\r\n\t\t\t\t\t\t\t\tconst employee =\r\n\t\t\t\t\t\t\t\t\tbyClientPayment.length > 0 &&\r\n\t\t\t\t\t\t\t\t\tbyClientPayment[0]\r\n\t\t\t\t\t\t\t\t\t\t? byClientPayment[0].employee\r\n\t\t\t\t\t\t\t\t\t\t: null;\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\temployee,\r\n\t\t\t\t\t\t\t\t\tpayments: byClientPayment.map((row) =>\r\n\t\t\t\t\t\t\t\t\t\tthis.mapPaymentPercentage(row, sum)\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tdate,\r\n\t\t\t\t\t\t\tclients: byProject\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\r\n\t\t\t\tconst project =\r\n\t\t\t\t\tbyProjectPayment.length > 0 && byProjectPayment[0]\r\n\t\t\t\t\t\t? byProjectPayment[0].project\r\n\t\t\t\t\t\t: null;\r\n\t\t\t\treturn {\r\n\t\t\t\t\tproject,\r\n\t\t\t\t\tdates: dailyLogs\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t);\r\n\t\treturn byClient;\r\n\t}\r\n\r\n\tprivate groupByProject(payments: IPayment[]) {\r\n\t\treturn chain(payments).groupBy((payment) => {\r\n\t\t\treturn payment.projectId;\r\n\t\t});\r\n\t}\r\n\r\n\tprivate groupByDate(payments: IPayment[]) {\r\n\t\treturn chain(payments).groupBy((payment) => {\r\n\t\t\treturn moment.utc(payment.paymentDate).format('YYYY-MM-DD');\r\n\t\t});\r\n\t}\r\n\r\n\tprivate groupByClient(payments: IPayment[]) {\r\n\t\treturn chain(payments).groupBy((payment) => {\r\n\t\t\treturn payment.employeeId;\r\n\t\t});\r\n\t}\r\n\r\n\t// private groupByClient(payments: IPayment[]) {\r\n\t// \treturn chain(payments).groupBy((payment) => {\r\n\t// \t\treturn payment.contactId;\r\n\t// \t});\r\n\t// }\r\n\r\n\tprivate mapPaymentPercentage(payments, sum = 0) {\r\n\t\tpayments.duration_percentage =\r\n\t\t\t(parseInt(payments.duration, 10) * 100) / sum;\r\n\t\treturn payments;\r\n\t}\r\n\r\n\tprivate getDurationSum(payments) {\r\n\t\treturn payments.reduce((iteratee: any, log: any) => {\r\n\t\t\treturn iteratee + parseInt(log.duration, 10);\r\n\t\t}, 0);\r\n\t}\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { Payment } from './payment.entity';\r\nimport { PaymentController } from './payment.controller';\r\nimport { PaymentService } from './payment.service';\r\nimport { UserService } from '../user/user.service';\r\nimport { User } from '../user/user.entity';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\nimport { PaymentMapService } from './payment.map.service';\r\n\r\n@Module({\r\n\timports: [TypeOrmModule.forFeature([User, Payment]), TenantModule],\r\n\tcontrollers: [PaymentController],\r\n\tproviders: [PaymentService, UserService, PaymentMapService],\r\n\texports: [PaymentService, UserService, PaymentMapService]\r\n})\r\nexport class PaymentModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { IEmployee, IOrganization, PaymentMethodEnum } from '@gauzy/models';\r\nimport { Payment } from './payment.entity';\r\nimport * as faker from 'faker';\r\nimport { Invoice } from '../invoice/invoice.entity';\r\nimport { Tag } from '../tags/tag.entity';\r\nimport { User } from '../user/user.entity';\r\nimport * as moment from 'moment';\r\nimport { environment as env } from '@env-api/environment';\r\n\r\nexport const createDefaultPayment = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\temployees: IEmployee[],\r\n\tdefaultOrganizations: IOrganization[]\r\n): Promise<Payment[]> => {\r\n\tconst payments: Payment[] = [];\r\n\r\n\tconst users = await connection.manager.find(User, {\r\n\t\twhere: [{ tenant: tenant.id }]\r\n\t});\r\n\r\n\tfor (const tenantOrg of defaultOrganizations) {\r\n\t\tconst invoices = await connection.manager.find(Invoice, {\r\n\t\t\twhere: [{ organizationId: tenantOrg.id }]\r\n\t\t});\r\n\t\tfor (const invoice of invoices) {\r\n\t\t\tconst payment = new Payment();\r\n\r\n\t\t\tpayment.invoiceId = invoice.id;\r\n\t\t\tpayment.invoice = invoice;\r\n\t\t\tpayment.organization = tenantOrg;\r\n\t\t\tpayment.organizationId = tenantOrg.id;\r\n\t\t\tpayment.paymentDate = faker.date.between(\r\n\t\t\t\tnew Date(),\r\n\t\t\t\tmoment(new Date()).add(1, 'month').toDate()\r\n\t\t\t);\r\n\t\t\tpayment.amount = faker.random.number({\r\n\t\t\t\tmin: 1000,\r\n\t\t\t\tmax: 100000\r\n\t\t\t});\r\n\t\t\tpayment.note = faker.name.jobDescriptor();\r\n\t\t\tpayment.currency = tenantOrg.currency || env.defaultCurrency;\r\n\t\t\tpayment.paymentMethod = faker.random.arrayElement(\r\n\t\t\t\tObject.keys(PaymentMethodEnum)\r\n\t\t\t);\r\n\t\t\tpayment.overdue = faker.random.boolean();\r\n\t\t\tpayment.tenant = tenant;\r\n\t\t\tpayment.tags = invoice.tags;\r\n\t\t\tpayment.employeeId = faker.random.arrayElement(employees).id;\r\n\t\t\tpayment.recordedBy = faker.random.arrayElement(users);\r\n\r\n\t\t\tpayments.push(payment);\r\n\t\t}\r\n\t}\r\n\tawait connection.manager.save(payments);\r\n\treturn payments;\r\n};\r\n\r\nexport const createRandomPayment = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantEmployeeMap: Map<Tenant, IEmployee[]>,\r\n\ttenantOrganizationsMap: Map<Tenant, IOrganization[]>\r\n): Promise<Payment[]> => {\r\n\tif (!tenantOrganizationsMap) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: tenantOrganizationsMap not found, Payment  will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tfor (const tenant of tenants) {\r\n\t\tconst tenantOrgs = tenantOrganizationsMap.get(tenant);\r\n\t\tconst tenantEmployees = tenantEmployeeMap.get(tenant);\r\n\t\tconst users = await connection.manager.find(User, {\r\n\t\t\twhere: [{ tenant: tenant.id }]\r\n\t\t});\r\n\r\n\t\tfor (const tenantOrg of tenantOrgs) {\r\n\t\t\tconst payments1: Payment[] = [];\r\n\t\t\tconst payments2: Payment[] = [];\r\n\t\t\tconst invoices = await connection.manager.find(Invoice, {\r\n\t\t\t\twhere: { organizationId: tenantOrg.id }\r\n\t\t\t});\r\n\t\t\tlet count = 0;\r\n\t\t\tfor (const invoice of invoices) {\r\n\t\t\t\tconst tags = await connection.manager.find(Tag, {\r\n\t\t\t\t\twhere: [{ organization: tenantOrg }]\r\n\t\t\t\t});\r\n\t\t\t\tconst payment = new Payment();\r\n\t\t\t\tpayment.invoice = invoice;\r\n\t\t\t\tpayment.organizationId = tenantOrg.id;\r\n\t\t\t\tpayment.paymentDate = faker.date.between(\r\n\t\t\t\t\t2019,\r\n\t\t\t\t\tfaker.date.recent()\r\n\t\t\t\t);\r\n\t\t\t\tpayment.amount = faker.random.number({\r\n\t\t\t\t\tmin: 1000,\r\n\t\t\t\t\tmax: 100000\r\n\t\t\t\t});\r\n\t\t\t\tpayment.note = faker.name.jobDescriptor();\r\n\t\t\t\tpayment.currency = tenantOrg.currency || env.defaultCurrency;\r\n\t\t\t\tpayment.paymentMethod = faker.random.arrayElement(\r\n\t\t\t\t\tObject.keys(PaymentMethodEnum)\r\n\t\t\t\t);\r\n\t\t\t\tpayment.overdue = faker.random.boolean();\r\n\t\t\t\tpayment.tenant = tenant;\r\n\t\t\t\tpayment.tags = tags;\r\n\t\t\t\tpayment.employeeId = faker.random.arrayElement(\r\n\t\t\t\t\ttenantEmployees\r\n\t\t\t\t).id;\r\n\t\t\t\tpayment.recordedBy = faker.random.arrayElement(users);\r\n\t\t\t\tif (count % 2 === 0) {\r\n\t\t\t\t\tpayments1.push(payment);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpayments2.push(payment);\r\n\t\t\t\t}\r\n\t\t\t\tcount++;\r\n\t\t\t}\r\n\t\t\tawait connection.manager.save(payments1);\r\n\t\t\tawait connection.manager.save(payments2);\r\n\t\t}\r\n\t}\r\n};\r\n","import { CrudService } from '../core';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { Payment } from './payment.entity';\r\nimport { RequestContext } from '../core/context';\r\nimport { IGetPaymentInput } from '@gauzy/models';\r\nimport { chain } from 'underscore';\r\nimport * as moment from 'moment';\r\n\r\n@Injectable()\r\nexport class PaymentService extends CrudService<Payment> {\r\n\tconstructor(\r\n\t\t@InjectRepository(Payment)\r\n\t\tprivate readonly paymentRepository: Repository<Payment>\r\n\t) {\r\n\t\tsuper(paymentRepository);\r\n\t}\r\n\r\n\tasync getPayments(request: IGetPaymentInput) {\r\n\t\tconst query = this.filterQuery(request);\r\n\t\tquery.orderBy(`\"${query.alias}\".\"paymentDate\"`, 'ASC');\r\n\r\n\t\t// if (\r\n\t\t// \tRequestContext.hasPermission(\r\n\t\t// \t\tPermissionsEnum.CHANGE_SELECTED_EMPLOYEE\r\n\t\t// \t)\r\n\t\t// ) {\r\n\t\t// \tquery.leftJoinAndSelect(\r\n\t\t// \t\t`${query.alias}.employee`,\r\n\t\t// \t\t'activityEmployee'\r\n\t\t// \t);\r\n\t\t// \tquery.leftJoinAndSelect(\r\n\t\t// \t\t`activityEmployee.user`,\r\n\t\t// \t\t'activityUser',\r\n\t\t// \t\t'\"employee\".\"userId\" = activityUser.id'\r\n\t\t// \t);\r\n\t\t// }\r\n\r\n\t\tconst payments = await query.getMany();\r\n\r\n\t\treturn payments;\r\n\t}\r\n\r\n\tasync getDailyReportChartData(request: IGetPaymentInput) {\r\n\t\tconst query = this.filterQuery(request);\r\n\t\tquery.orderBy(`\"${query.alias}\".\"paymentDate\"`, 'ASC');\r\n\r\n\t\tlet dayList = [];\r\n\t\tconst range = {};\r\n\t\tlet i = 0;\r\n\t\tconst start = moment(request.startDate);\r\n\t\twhile (start.isSameOrBefore(request.endDate) && i < 31) {\r\n\t\t\tconst date = start.format('YYYY-MM-DD');\r\n\t\t\trange[date] = null;\r\n\t\t\tstart.add(1, 'day');\r\n\t\t\ti++;\r\n\t\t}\r\n\t\tdayList = Object.keys(range);\r\n\t\tconst payments = await query.getMany();\r\n\r\n\t\tconst byDate = chain(payments)\r\n\t\t\t.groupBy((payment) =>\r\n\t\t\t\tmoment(payment.paymentDate).format('YYYY-MM-DD')\r\n\t\t\t)\r\n\t\t\t.mapObject((payments: Payment[], date) => {\r\n\t\t\t\tconst sum = payments.reduce((iteratee: any, payment: any) => {\r\n\t\t\t\t\treturn iteratee + parseFloat(payment.amount);\r\n\t\t\t\t}, 0);\r\n\t\t\t\treturn {\r\n\t\t\t\t\tdate,\r\n\t\t\t\t\tvalue: sum.toFixed(1)\r\n\t\t\t\t};\r\n\t\t\t})\r\n\t\t\t.value();\r\n\r\n\t\tconst dates = dayList.map((date) => {\r\n\t\t\tif (byDate[date]) {\r\n\t\t\t\treturn byDate[date];\r\n\t\t\t} else {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tdate: date,\r\n\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\texpanse: 0\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn dates;\r\n\t}\r\n\r\n\tprivate filterQuery(request: IGetPaymentInput) {\r\n\t\t// let employeeIds: string[];\r\n\r\n\t\tconst query = this.paymentRepository.createQueryBuilder();\r\n\t\tif (request && request.limit > 0) {\r\n\t\t\tquery.take(request.limit);\r\n\t\t\tquery.skip((request.page || 0) * request.limit);\r\n\t\t}\r\n\t\t// if (\r\n\t\t// \tRequestContext.hasPermission(\r\n\t\t// \t\tPermissionsEnum.CHANGE_SELECTED_EMPLOYEE\r\n\t\t// \t)\r\n\t\t// ) {\r\n\t\t// \tif (request.employeeIds) {\r\n\t\t// \t\temployeeIds = request.employeeIds;\r\n\t\t// \t}\r\n\t\t// } else {\r\n\t\t// \tconst user = RequestContext.currentUser();\r\n\t\t// \temployeeIds = [user.employeeId];\r\n\t\t// }\r\n\r\n\t\t// query.innerJoin(`${query.alias}.employee`, 'employee');\r\n\t\tquery.where((qb) => {\r\n\t\t\tif (request.startDate && request.endDate) {\r\n\t\t\t\tconst startDate = moment.utc(request.startDate).toDate();\r\n\t\t\t\tconst endDate = moment.utc(request.endDate).toDate();\r\n\t\t\t\tqb.andWhere(\r\n\t\t\t\t\t`\"${query.alias}\".\"paymentDate\" Between :startDate AND :endDate`,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tstartDate,\r\n\t\t\t\t\t\tendDate\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\t// if (employeeIds) {\r\n\t\t\t// \tqb.andWhere(\r\n\t\t\t// \t\t`\"${query.alias}\".\"employeeId\" IN (:...employeeId)`,\r\n\t\t\t// \t\t{\r\n\t\t\t// \t\t\temployeeId: employeeIds\r\n\t\t\t// \t\t}\r\n\t\t\t// \t);\r\n\t\t\t// }\r\n\r\n\t\t\tif (request.projectIds) {\r\n\t\t\t\tqb.andWhere(`\"${query.alias}\".\"projectId\" IN (:...projectId)`, {\r\n\t\t\t\t\tprojectId: request.projectIds\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (request.organizationId) {\r\n\t\t\t\tqb.andWhere(\r\n\t\t\t\t\t`\"${query.alias}\".\"organizationId\" = :organizationId`,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\torganizationId: request.organizationId\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tqb.andWhere(`\"${query.alias}\".\"tenantId\" = :tenantId`, {\r\n\t\t\t\ttenantId: RequestContext.currentTenantId()\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\treturn query;\r\n\t}\r\n}\r\n","import { IPipelineStage as IStage } from '@gauzy/models';\r\nimport { Column, Entity, JoinColumn, ManyToOne, RelationId } from 'typeorm';\r\nimport { IsNotEmpty, IsNumber, IsString, Min } from 'class-validator';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { Pipeline } from '../pipeline/pipeline.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('pipeline_stage')\r\nexport class PipelineStage extends TenantOrganizationBase implements IStage {\r\n\t@ManyToOne(() => Pipeline, { onDelete: 'CASCADE' })\r\n\t@ApiProperty({ type: Pipeline })\r\n\t@JoinColumn()\r\n\tpublic pipeline: Pipeline;\r\n\r\n\t@RelationId(({ pipeline }: PipelineStage) => pipeline)\r\n\t@ApiProperty({ type: String })\r\n\t@IsNotEmpty()\r\n\t@IsString()\r\n\t@Column()\r\n\tpublic pipelineId: string;\r\n\r\n\t@Column({ nullable: true, type: 'text' })\r\n\t@IsString()\r\n\tpublic description: string;\r\n\r\n\t@ApiProperty({ type: Number, minimum: 1 })\r\n\t@Column({ type: 'int' })\r\n\t@Min(1)\r\n\t@IsNotEmpty()\r\n\t@IsNumber()\r\n\tpublic index: number;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsNotEmpty()\r\n\t@IsString()\r\n\t@Column()\r\n\tpublic name: string;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { AuthModule } from '../auth/auth.module';\r\nimport { PipelineStage } from './pipeline-stage.entity';\r\nimport { StageService } from './pipeline-stage.service';\r\n\r\n@Module({\r\n\timports: [TypeOrmModule.forFeature([PipelineStage]), AuthModule],\r\n\tproviders: [StageService],\r\n\texports: [StageService]\r\n})\r\nexport class StageModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { PipelineStage } from './pipeline-stage.entity';\r\nimport * as faker from 'faker';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { IOrganization } from '@gauzy/models';\r\nimport { Pipeline } from '../pipeline/pipeline.entity';\r\n\r\nexport const createRandomPipelineStage = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantOrganizationsMap: Map<Tenant, IOrganization[]>\r\n): Promise<PipelineStage[]> => {\r\n\tif (!tenantOrganizationsMap) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: tenantOrganizationsMap not found, pipeline stages not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst pipelineStages: PipelineStage[] = [];\r\n\r\n\tfor (const tenant of tenants) {\r\n\t\tconst tenantOrganization = tenantOrganizationsMap.get(tenant);\r\n\t\tfor (const tenantOrg of tenantOrganization) {\r\n\t\t\tconst organizationPipeline = await connection.manager.find(\r\n\t\t\t\tPipeline,\r\n\t\t\t\t{\r\n\t\t\t\t\twhere: [{ organization: tenantOrg }]\r\n\t\t\t\t}\r\n\t\t\t);\r\n\r\n\t\t\tfor (const pipeline of organizationPipeline) {\r\n\t\t\t\tfor (let i = 0; i <= faker.random.number(10); i++) {\r\n\t\t\t\t\t//todo Need to update with real values\r\n\t\t\t\t\tconst pipelineStage = new PipelineStage();\r\n\r\n\t\t\t\t\tpipelineStage.pipeline = pipeline;\r\n\t\t\t\t\tpipelineStage.pipelineId = pipeline.id;\r\n\t\t\t\t\tpipelineStage.name = faker.company.companyName();\r\n\t\t\t\t\tpipelineStage.description = faker.name.jobDescriptor();\r\n\t\t\t\t\tpipelineStage.index = Math.floor(Math.random() * 99999) + 1;\r\n\t\t\t\t\tpipelineStage.tenant = tenant;\r\n\t\t\t\t\tpipelineStage.organization = tenantOrg;\r\n\r\n\t\t\t\t\tpipelineStages.push(pipelineStage);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn await insertRandomPipelineStage(connection, pipelineStages);\r\n};\r\n\r\nconst insertRandomPipelineStage = async (\r\n\tconnection: Connection,\r\n\tpipelineStages: PipelineStage[]\r\n) => await connection.manager.save(pipelineStages);\r\n","import { CrudService } from '../core/crud';\r\nimport { PipelineStage } from './pipeline-stage.entity';\r\nimport { Repository } from 'typeorm';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class StageService extends CrudService<PipelineStage> {\r\n\tpublic constructor(\r\n\t\t@InjectRepository(PipelineStage)\r\n\t\tstageRepository: Repository<PipelineStage>\r\n\t) {\r\n\t\tsuper(stageRepository);\r\n\t}\r\n}\r\n","import { CrudController, IPagination } from '../core/crud';\r\nimport { Pipeline } from './pipeline.entity';\r\nimport {\r\n\tBody,\r\n\tController,\r\n\tDelete,\r\n\tGet,\r\n\tHttpCode,\r\n\tHttpStatus,\r\n\tParam,\r\n\tPost,\r\n\tPut,\r\n\tQuery,\r\n\tUseGuards\r\n} from '@nestjs/common';\r\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { PipelineService } from './pipeline.service';\r\nimport { ParseJsonPipe } from '../shared/pipes';\r\nimport { DeepPartial } from 'typeorm';\r\nimport { QueryDeepPartialEntity } from 'typeorm/query-builder/QueryPartialEntity';\r\nimport { PermissionsEnum } from '@gauzy/models';\r\nimport { Permissions } from '../shared/decorators/permissions';\r\nimport { PermissionGuard } from '../shared/guards/auth/permission.guard';\r\nimport { Deal } from '../deal/deal.entity';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('Pipeline')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class PipelineController extends CrudController<Pipeline> {\r\n\tpublic constructor(protected pipelineService: PipelineService) {\r\n\t\tsuper(pipelineService);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'find all' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found records'\r\n\t})\r\n\t@Get()\r\n\tpublic async findAll(\r\n\t\t@Query('data', ParseJsonPipe) data: any\r\n\t): Promise<IPagination<Pipeline>> {\r\n\t\tconst { relations = [], findInput: where = null } = data;\r\n\t\treturn this.pipelineService.findAll({\r\n\t\t\trelations,\r\n\t\t\twhere\r\n\t\t});\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'find deals' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found records'\r\n\t})\r\n\t@Get(':id/deals')\r\n\tpublic async findDeals(\r\n\t\t@Param('id') id: string\r\n\t): Promise<IPagination<Deal>> {\r\n\t\treturn this.pipelineService.findDeals(id);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Create new record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully created.' /*, type: T*/\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@Permissions(PermissionsEnum.EDIT_SALES_PIPELINES)\r\n\t@HttpCode(HttpStatus.CREATED)\r\n\t@UseGuards(PermissionGuard)\r\n\t@Post()\r\n\tasync create(\r\n\t\t@Body() entity: DeepPartial<Pipeline>,\r\n\t\t...options: any[]\r\n\t): Promise<Pipeline> {\r\n\t\treturn super.create(entity, ...options);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Update an existing record' })\r\n\t@Permissions(PermissionsEnum.EDIT_SALES_PIPELINES)\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully edited.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@UseGuards(PermissionGuard)\r\n\t@Put(':id')\r\n\tasync update(\r\n\t\t@Param('id') id: string,\r\n\t\t@Body() entity: QueryDeepPartialEntity<Pipeline>,\r\n\t\t...options: any[]\r\n\t): Promise<any> {\r\n\t\treturn super.update(id, entity, ...options);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Delete record' })\r\n\t@Permissions(PermissionsEnum.EDIT_SALES_PIPELINES)\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NO_CONTENT,\r\n\t\tdescription: 'The record has been successfully deleted'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@UseGuards(PermissionGuard)\r\n\t@Delete(':id')\r\n\tasync delete(@Param('id') id: string, ...options: any[]): Promise<any> {\r\n\t\treturn super.delete(id);\r\n\t}\r\n}\r\n","import { IPipeline } from '@gauzy/models';\r\nimport {\r\n\tAfterInsert,\r\n\tAfterLoad,\r\n\tAfterUpdate,\r\n\tBeforeInsert,\r\n\tColumn,\r\n\tEntity,\r\n\tOneToMany\r\n} from 'typeorm';\r\nimport { IsNotEmpty, IsString, IsBoolean } from 'class-validator';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { PipelineStage } from '../pipeline-stage/pipeline-stage.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('pipeline')\r\nexport class Pipeline extends TenantOrganizationBase implements IPipeline {\r\n\t@OneToMany(() => PipelineStage, ({ pipeline }) => pipeline, {\r\n\t\tcascade: ['insert']\r\n\t})\r\n\t@ApiProperty({ type: PipelineStage })\r\n\tpublic stages: PipelineStage[];\r\n\r\n\t@Column({ nullable: true, type: 'text' })\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\tpublic description: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsNotEmpty()\r\n\t@IsString()\r\n\t@Column()\r\n\tpublic name: string;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@IsBoolean()\r\n\t@Column()\r\n\tpublic isActive: boolean;\r\n\r\n\t@BeforeInsert()\r\n\tpublic __before_persist(): void {\r\n\t\tconst pipelineId = this.id ? { pipelineId: this.id } : {};\r\n\t\tlet index = 0;\r\n\r\n\t\tthis.stages?.forEach((stage) => {\r\n\t\t\tObject.assign(stage, pipelineId, { index: ++index });\r\n\t\t});\r\n\t}\r\n\r\n\t@AfterLoad()\r\n\t@AfterInsert()\r\n\t@AfterUpdate()\r\n\tpublic __after_fetch(): void {\r\n\t\tif (this.stages) {\r\n\t\t\tthis.stages.sort(({ index: a }, { index: b }) => a - b);\r\n\t\t}\r\n\t}\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { AuthModule } from '../auth/auth.module';\r\nimport { PipelineController } from './pipeline.controller';\r\nimport { PipelineService } from './pipeline.service';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { Pipeline } from './pipeline.entity';\r\nimport { StageModule } from '../pipeline-stage/pipeline-stage.module';\r\nimport { DealModule } from '../deal/deal.module';\r\nimport { Deal } from '../deal/deal.entity';\r\nimport { User } from '../user/user.entity';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([Pipeline, Deal, User]),\r\n\t\tStageModule,\r\n\t\tDealModule,\r\n\t\tAuthModule,\r\n\t\tTenantModule\r\n\t],\r\n\tcontrollers: [PipelineController],\r\n\tproviders: [PipelineService],\r\n\texports: [PipelineService]\r\n})\r\nexport class PipelineModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { Pipeline } from './pipeline.entity';\r\nimport * as faker from 'faker';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { IOrganization } from '@gauzy/models';\r\n\r\nexport const createDefaultPipeline = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\ttenantOrganizations\r\n): Promise<Pipeline[]> => {\r\n\tif (!tenantOrganizations) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: tenantOrganizations not found, Default pipeline not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tlet pipelines: Pipeline[] = [];\r\n\t// for (const tenantOrg of tenantOrganizations) {\r\n\tpipelines = await dataOperation(\r\n\t\tconnection,\r\n\t\ttenant,\r\n\t\tpipelines,\r\n\t\ttenantOrganizations\r\n\t);\r\n\t// }\r\n\treturn pipelines;\r\n};\r\n\r\nexport const createRandomPipeline = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantOrganizationsMap: Map<Tenant, IOrganization[]>\r\n): Promise<Pipeline[]> => {\r\n\tif (!tenantOrganizationsMap) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: tenantOrganizationsMap not found, pipeline not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tlet pipelines: Pipeline[] = [];\r\n\r\n\tfor (const tenant of tenants) {\r\n\t\tconst tenantOrganization = tenantOrganizationsMap.get(tenant);\r\n\t\tfor (const tenantOrg of tenantOrganization) {\r\n\t\t\tpipelines = await dataOperation(\r\n\t\t\t\tconnection,\r\n\t\t\t\ttenant,\r\n\t\t\t\tpipelines,\r\n\t\t\t\ttenantOrg\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\treturn pipelines;\r\n};\r\n\r\nconst dataOperation = async (\r\n\tconnection: Connection,\r\n\ttenant,\r\n\tpipelines,\r\n\torganization\r\n) => {\r\n\tfor (let i = 0; i <= faker.random.number(10); i++) {\r\n\t\tconst pipeline = new Pipeline();\r\n\r\n\t\tpipeline.organization = organization;\r\n\t\tpipeline.tenant = tenant;\r\n\t\tpipeline.organizationId = organization.id;\r\n\t\tpipeline.name = faker.company.companyName();\r\n\t\tpipeline.description = faker.name.jobDescriptor();\r\n\t\tpipeline.isActive = faker.random.boolean();\r\n\r\n\t\tpipelines.push(pipeline);\r\n\t}\r\n\tawait connection.manager.save(pipelines);\r\n\treturn pipelines;\r\n};\r\n","import { CrudService } from '../core/crud';\r\nimport { Pipeline } from './pipeline.entity';\r\nimport {\r\n\tDeepPartial,\r\n\tEntityManager,\r\n\tFindConditions,\r\n\tRepository,\r\n\tTransaction,\r\n\tTransactionManager,\r\n\tUpdateResult\r\n} from 'typeorm';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { PipelineStage } from '../pipeline-stage/pipeline-stage.entity';\r\nimport { QueryDeepPartialEntity } from 'typeorm/query-builder/QueryPartialEntity';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { Deal } from '../deal/deal.entity';\r\nimport { User } from '../user/user.entity';\r\nimport { RequestContext } from '../core/context';\r\n\r\n@Injectable()\r\nexport class PipelineService extends CrudService<Pipeline> {\r\n\tpublic constructor(\r\n\t\t@InjectRepository(Deal)\r\n\t\tprotected dealRepository: Repository<Deal>,\r\n\t\t@InjectRepository(Pipeline)\r\n\t\tprotected pipelineRepository: Repository<Pipeline>,\r\n\t\t@InjectRepository(User)\r\n\t\tprotected userRepository: Repository<User>\r\n\t) {\r\n\t\tsuper(pipelineRepository);\r\n\t}\r\n\r\n\tpublic async findDeals(pipelineId: string) {\r\n\t\tconst tenantId = RequestContext.currentTenantId();\r\n\t\tconst items: Deal[] = await this.dealRepository\r\n\t\t\t.createQueryBuilder('deal')\r\n\t\t\t.leftJoin('deal.stage', 'pipeline_stage')\r\n\t\t\t.where('pipeline_stage.pipelineId = :pipelineId', { pipelineId })\r\n\t\t\t.andWhere('pipeline_stage.tenantId = :tenantId', { tenantId })\r\n\t\t\t.groupBy('pipeline_stage.id')\r\n\t\t\t// FIX: error: column \"deal.id\" must appear in the GROUP BY clause or be used in an aggregate function\r\n\t\t\t.addGroupBy('deal.id')\r\n\t\t\t// END_FIX\r\n\t\t\t.orderBy('pipeline_stage.index', 'ASC')\r\n\t\t\t.getMany();\r\n\r\n\t\tconst { length: total } = items;\r\n\r\n\t\tfor (const deal of items) {\r\n\t\t\tdeal.createdBy = await this.userRepository.findOne(\r\n\t\t\t\tdeal.createdByUserId\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn { items, total };\r\n\t}\r\n\r\n\t@Transaction()\r\n\tpublic async update(\r\n\t\tid: string | number | FindConditions<Pipeline>,\r\n\t\tpartialEntity: QueryDeepPartialEntity<Pipeline>,\r\n\t\t@TransactionManager() manager: EntityManager,\r\n\t\t...options\r\n\t): Promise<UpdateResult | Pipeline> {\r\n\t\tconst onePipeline = await manager.findOne(Pipeline, id as any);\r\n\t\tconst pipeline = manager.create(Pipeline, {\r\n\t\t\t...partialEntity,\r\n\t\t\tid: onePipeline.id\r\n\t\t} as any);\r\n\t\tconst updatedStages =\r\n\t\t\tpipeline.stages?.filter((stage) => stage.id) || [];\r\n\t\tconst deletedStages = await manager\r\n\t\t\t.find(PipelineStage, {\r\n\t\t\t\twhere: {\r\n\t\t\t\t\tpipelineId: id\r\n\t\t\t\t},\r\n\t\t\t\tselect: ['id']\r\n\t\t\t})\r\n\t\t\t.then((stages) => {\r\n\t\t\t\tconst requestStageIds = updatedStages.map(\r\n\t\t\t\t\t(updatedStage) => updatedStage.id\r\n\t\t\t\t);\r\n\r\n\t\t\t\treturn stages.filter(\r\n\t\t\t\t\t(stage) => !requestStageIds.includes(stage.id)\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\tconst createdStages =\r\n\t\t\tpipeline.stages?.filter(\r\n\t\t\t\t(stage) => !updatedStages.includes(stage)\r\n\t\t\t) || [];\r\n\r\n\t\t// partialEntity.stages?.forEach((stage, index) => {\r\n\t\t// \tstage.pipelineId = pipeline.id;\r\n\t\t// \tstage.index = ++index;\r\n\t\t// });\r\n\t\tpipeline.__before_persist();\r\n\t\tdelete pipeline.stages;\r\n\r\n\t\tawait manager.remove(deletedStages);\r\n\t\tawait Promise.all(\r\n\t\t\tcreatedStages.map((stage) => {\r\n\t\t\t\tstage = manager.create(\r\n\t\t\t\t\tPipelineStage,\r\n\t\t\t\t\tstage as DeepPartial<PipelineStage>\r\n\t\t\t\t);\r\n\r\n\t\t\t\treturn manager.save(stage);\r\n\t\t\t})\r\n\t\t);\r\n\t\tawait Promise.all(\r\n\t\t\tupdatedStages.map((stage) =>\r\n\t\t\t\tmanager.update(PipelineStage, stage.id, stage)\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\treturn await manager.update(Pipeline, id, pipeline);\r\n\t}\r\n}\r\n","import { Connection } from 'typeorm';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { ProductCategory } from './product-category.entity';\r\nimport * as faker from 'faker';\r\nimport * as seed from './product-category.seed.json';\r\nimport { ProductCategoryTranslation } from './product-category-translation.entity';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\n\r\nexport const createCategories = async (\r\n\tconnection: Connection,\r\n\torganizations: Organization[]\r\n): Promise<ProductCategory[]> => {\r\n\tconst seedProductCategories = [];\r\n\r\n\torganizations.forEach(async (organization) => {\r\n\t\tlet image = faker.image.abstract();\r\n\t\tseed.forEach(async (seedProductCategory) => {\r\n\t\t\tconst newCategory = new ProductCategory();\r\n\t\t\timage =\r\n\t\t\t\tfaker.image[seedProductCategory.fakerImageCategory]() ||\r\n\t\t\t\tfaker.image.abstract();\r\n\r\n\t\t\tnewCategory.imageUrl = image;\r\n\t\t\tnewCategory.organization = organization;\r\n\t\t\tnewCategory.tenant = organization.tenant;\r\n\t\t\tnewCategory.translations = [];\r\n\r\n\t\t\tseedProductCategory.translations.forEach((translation) => {\r\n\t\t\t\tconst newTranslation = new ProductCategoryTranslation();\r\n\t\t\t\tnewTranslation.organization = organization;\r\n\t\t\t\tnewTranslation.tenant = organization.tenant;\r\n\t\t\t\tObject.assign(newTranslation, translation);\r\n\t\t\t\tnewCategory.translations.push(newTranslation);\r\n\t\t\t});\r\n\t\t\tseedProductCategories.push(newCategory);\r\n\t\t});\r\n\t});\r\n\r\n\treturn await insertProductCategories(connection, seedProductCategories);\r\n};\r\n\r\nconst insertProductCategories = async (\r\n\tconnection: Connection,\r\n\tcategories: ProductCategory[]\r\n): Promise<ProductCategory[]> => {\r\n\treturn await connection.manager.save(categories);\r\n};\r\n\r\nexport const createRandomCategories = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantOrganizationsMap: Map<Tenant, Organization[]>\r\n): Promise<ProductCategory[]> => {\r\n\tconst seedProductCategories: ProductCategory[] = [];\r\n\r\n\tfor (const tenant of tenants) {\r\n\t\tconst tenantOrgs = tenantOrganizationsMap.get(tenant);\r\n\t\tfor (const tenantOrg of tenantOrgs) {\r\n\t\t\tfor (const seedProductCategory of seed) {\r\n\t\t\t\tconst newCategory = new ProductCategory();\r\n\t\t\t\tconst image =\r\n\t\t\t\t\tfaker.image[seedProductCategory.fakerImageCategory]() ||\r\n\t\t\t\t\tfaker.image.abstract();\r\n\r\n\t\t\t\tnewCategory.imageUrl = image;\r\n\t\t\t\tnewCategory.organization = tenantOrg;\r\n\t\t\t\tnewCategory.tenant = tenant;\r\n\t\t\t\tnewCategory.translations = [];\r\n\r\n\t\t\t\tseedProductCategory.translations.forEach((translation) => {\r\n\t\t\t\t\tconst newTranslation = new ProductCategoryTranslation();\r\n\t\t\t\t\tnewTranslation.organization = tenantOrg;\r\n\t\t\t\t\tnewTranslation.tenant = tenant;\r\n\r\n\t\t\t\t\tObject.assign(newTranslation, translation);\r\n\t\t\t\t\tnewCategory.translations.push(newTranslation);\r\n\t\t\t\t});\r\n\t\t\t\tseedProductCategories.push(newCategory);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tawait insertProductCategories(connection, seedProductCategories);\r\n\treturn seedProductCategories;\r\n};\r\n","import { Entity, Column, ManyToOne, JoinColumn } from 'typeorm';\r\nimport {\r\n\tIProductTypeTranslation as IProductCategoryTranslation,\r\n\tLanguagesEnum\r\n} from '@gauzy/models';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsString, IsOptional, IsEnum } from 'class-validator';\r\nimport { TranslationBase } from '../core/entities/translate-base';\r\nimport { ProductCategory } from './product-category.entity';\r\n\r\n@Entity('product_category_translation')\r\nexport class ProductCategoryTranslation extends TranslationBase\r\n\timplements IProductCategoryTranslation {\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@Column()\r\n\tname: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tdescription: string;\r\n\r\n\t@ApiProperty({ type: ProductCategory })\r\n\t@ManyToOne(\r\n\t\t(type) => ProductCategory,\r\n\t\t(productCategory) => productCategory.translations,\r\n\t\t{ onDelete: 'CASCADE', onUpdate: 'CASCADE' }\r\n\t)\r\n\t@JoinColumn()\r\n\treference: ProductCategory;\r\n\r\n\t@ApiProperty({ type: String, enum: LanguagesEnum })\r\n\t@IsEnum(LanguagesEnum)\r\n\t@Column({ nullable: false })\r\n\tlanguageCode: string;\r\n}\r\n","import { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport {\r\n\tController,\r\n\tGet,\r\n\tHttpStatus,\r\n\tQuery,\r\n\tUseGuards,\r\n\tHttpCode,\r\n\tPut,\r\n\tParam,\r\n\tBody\r\n} from '@nestjs/common';\r\nimport { CrudController, IPagination } from '../core';\r\nimport { ProductCategory } from './product-category.entity';\r\nimport { ProductCategoryService } from './product-category.service';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { ParseJsonPipe } from '../shared';\r\nimport { LanguagesEnum, IProductCategoryTranslated } from '@gauzy/models';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('ProductCategories')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class ProductCategoryController extends CrudController<ProductCategory> {\r\n\tconstructor(\r\n\t\tprivate readonly productCategoriesService: ProductCategoryService\r\n\t) {\r\n\t\tsuper(productCategoriesService);\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find all product categories.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found product categories.',\r\n\t\ttype: ProductCategory\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get()\r\n\tasync findAllProductCategories(\r\n\t\t@Query('data', ParseJsonPipe) data: any\r\n\t): Promise<IPagination<ProductCategory | IProductCategoryTranslated>> {\r\n\t\tconst {\r\n\t\t\trelations = [],\r\n\t\t\tfindInput = null,\r\n\t\t\tlangCode = LanguagesEnum.ENGLISH\r\n\t\t} = data;\r\n\t\treturn this.productCategoriesService.findAllProductCategories(\r\n\t\t\trelations,\r\n\t\t\tfindInput,\r\n\t\t\tlangCode\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Update an existing record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully edited.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Put(':id')\r\n\tasync update(\r\n\t\t@Param('id') id: string,\r\n\t\t@Body() entity: ProductCategory\r\n\t): Promise<any> {\r\n\t\treturn this.productCategoriesService.updateProductCategory(id, entity);\r\n\t}\r\n}\r\n","import { Entity, Column, OneToMany } from 'typeorm';\r\nimport { TranslatableBase } from '../core/entities/translate-base';\r\nimport { ProductCategoryTranslation } from './product-category-translation.entity';\r\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\r\nimport { IsOptional } from 'class-validator';\r\nimport { Product } from '../product/product.entity';\r\nimport { IProductCategoryTranslatable } from '@gauzy/models';\r\n\r\n@Entity('product_category')\r\nexport class ProductCategory extends TranslatableBase\r\n\timplements IProductCategoryTranslatable {\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\timageUrl: string;\r\n\r\n\t@OneToMany((type) => Product, (product) => product.category)\r\n\tproducts: Product[];\r\n\r\n\t@ApiProperty({ type: ProductCategoryTranslation, isArray: true })\r\n\t@OneToMany(\r\n\t\t(type) => ProductCategoryTranslation,\r\n\t\t(productCategoryTranslation) => productCategoryTranslation.reference,\r\n\t\t{\r\n\t\t\teager: true,\r\n\t\t\tcascade: true\r\n\t\t}\r\n\t)\r\n\ttranslations: ProductCategoryTranslation[];\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { ProductCategory } from './product-category.entity';\r\nimport { ProductCategoryService } from './product-category.service';\r\nimport { ProductCategoryController } from './product-category.controller';\r\nimport { ProductCategoryTranslation } from './product-category-translation.entity';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([ProductCategory, ProductCategoryTranslation]),\r\n\t\tTenantModule\r\n\t],\r\n\tcontrollers: [ProductCategoryController],\r\n\tproviders: [ProductCategoryService]\r\n})\r\nexport class ProductCategoriesModule {}\r\n","import { CrudService, IPagination } from '../core';\r\nimport { Injectable, BadRequestException } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { ProductCategory } from './product-category.entity';\r\nimport { Repository } from 'typeorm';\r\nimport { IProductCategoryTranslated } from '@gauzy/models';\r\n\r\n@Injectable()\r\nexport class ProductCategoryService extends CrudService<ProductCategory> {\r\n\tconstructor(\r\n\t\t@InjectRepository(ProductCategory)\r\n\t\tprivate readonly productCategoryRepository: Repository<ProductCategory>\r\n\t) {\r\n\t\tsuper(productCategoryRepository);\r\n\t}\r\n\r\n\tasync updateProductCategory(\r\n\t\tid: string,\r\n\t\tentity: ProductCategory\r\n\t): Promise<ProductCategory> {\r\n\t\ttry {\r\n\t\t\tawait this.productCategoryRepository.delete(id);\r\n\t\t\treturn this.productCategoryRepository.save(entity);\r\n\t\t} catch (err) {\r\n\t\t\tthrow new BadRequestException(err);\r\n\t\t}\r\n\t}\r\n\r\n\tasync findAllProductCategories(\r\n\t\trelations?: string[],\r\n\t\tfindInput?: any,\r\n\t\tlangCode?: string\r\n\t): Promise<IPagination<ProductCategory | IProductCategoryTranslated>> {\r\n\t\tconst allProductCategories = await this.productCategoryRepository.find({\r\n\t\t\twhere: findInput,\r\n\t\t\trelations\r\n\t\t});\r\n\r\n\t\treturn {\r\n\t\t\titems: allProductCategories.map((category) =>\r\n\t\t\t\tcategory.translate(langCode)\r\n\t\t\t),\r\n\t\t\ttotal: allProductCategories.length\r\n\t\t};\r\n\t}\r\n}\r\n","import { Entity, Column, ManyToOne, JoinColumn } from 'typeorm';\r\nimport { IProductOption } from '@gauzy/models';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsString } from 'class-validator';\r\nimport { Product } from '../product/product.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('product_option')\r\nexport class ProductOption extends TenantOrganizationBase\r\n\timplements IProductOption {\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@Column()\r\n\tname: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@Column()\r\n\tcode: string;\r\n\r\n\t@ManyToOne(() => Product, (product) => product.options, {\r\n\t\tonUpdate: 'CASCADE',\r\n\t\tonDelete: 'CASCADE'\r\n\t})\r\n\t@JoinColumn()\r\n\tproduct: Product;\r\n}\r\n","import { Connection } from 'typeorm';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { IOrganization } from '@gauzy/models';\r\nimport { ProductOption } from './product-option.entity';\r\nimport * as faker from 'faker';\r\nimport { ProductCategory } from '../product-category/product-category.entity';\r\nimport { Product } from '../product/product.entity';\r\n\r\nexport const createRandomProductOption = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantOrganizationsMap: Map<Tenant, IOrganization[]>,\r\n\tnumberOfOptionPerProduct\r\n): Promise<ProductOption[]> => {\r\n\tif (!tenantOrganizationsMap) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: tenantOrganizationsMap not found, Product Options  will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst productOptions: ProductOption[] = [];\r\n\tfor (const tenant of tenants) {\r\n\t\tconst tenantOrgs = tenantOrganizationsMap.get(tenant);\r\n\t\tfor (const tenantOrg of tenantOrgs) {\r\n\t\t\tconst productCategories = await connection.manager.find(\r\n\t\t\t\tProductCategory,\r\n\t\t\t\t{\r\n\t\t\t\t\twhere: { organization: tenantOrg }\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\tfor (const productCategory of productCategories) {\r\n\t\t\t\tconst products = await connection.manager.find(Product, {\r\n\t\t\t\t\twhere: { category: productCategory }\r\n\t\t\t\t});\r\n\t\t\t\tfor (const product of products) {\r\n\t\t\t\t\tfor (let i = 0; i <= numberOfOptionPerProduct; i++) {\r\n\t\t\t\t\t\tconst productOption = new ProductOption();\r\n\r\n\t\t\t\t\t\tproductOption.name = faker.company.companyName();\r\n\t\t\t\t\t\tproductOption.code = product.code;\r\n\t\t\t\t\t\tproductOption.product = product;\r\n\t\t\t\t\t\tproductOption.tenant = tenant;\r\n\t\t\t\t\t\tproductOption.organization = tenantOrg;\r\n\r\n\t\t\t\t\t\tproductOptions.push(productOption);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn await connection.manager.save(productOptions);\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { CrudService } from '../core';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { IProductOption } from '@gauzy/models';\r\nimport { ProductOption } from './product-option.entity';\r\n\r\n@Injectable()\r\nexport class ProductOptionService extends CrudService<ProductOption> {\r\n\tconstructor(\r\n\t\t@InjectRepository(ProductOption)\r\n\t\tprivate readonly productOptionRepository: Repository<ProductOption>\r\n\t) {\r\n\t\tsuper(productOptionRepository);\r\n\t}\r\n\r\n\tasync saveBulk(\r\n\t\tproductOptionsInput: ProductOption[]\r\n\t): Promise<ProductOption[]> {\r\n\t\treturn this.productOptionRepository.save(productOptionsInput);\r\n\t}\r\n\r\n\tasync deleteBulk(productOptionsInput: IProductOption[]) {\r\n\t\treturn this.productOptionRepository.remove(productOptionsInput as any);\r\n\t}\r\n}\r\n","import { ApiTags } from '@nestjs/swagger';\r\nimport { CrudController } from '../core';\r\nimport { Controller, UseGuards } from '@nestjs/common';\r\nimport { ProductVariantSettings } from './product-settings.entity';\r\nimport { ProductVariantSettingService } from './product-settings.service';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('ProductVariantPrice')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class ProductVariantSettingsController extends CrudController<\r\n\tProductVariantSettings\r\n> {\r\n\tconstructor(\r\n\t\tprivate readonly productVariantSettingService: ProductVariantSettingService\r\n\t) {\r\n\t\tsuper(productVariantSettingService);\r\n\t}\r\n}\r\n","import { Entity, Column, OneToOne } from 'typeorm';\r\nimport { IProductVariantSetting } from '@gauzy/models';\r\nimport { ApiPropertyOptional } from '@nestjs/swagger';\r\nimport { ProductVariant } from '../product-variant/product-variant.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('product_variant_setting')\r\nexport class ProductVariantSettings extends TenantOrganizationBase\r\n\timplements IProductVariantSetting {\r\n\t@ApiPropertyOptional({ type: Boolean })\r\n\t@Column({ default: false })\r\n\tisSubscription: boolean;\r\n\r\n\t@ApiPropertyOptional({ type: Boolean })\r\n\t@Column({ default: false })\r\n\tisPurchaseAutomatically: boolean;\r\n\r\n\t@ApiPropertyOptional({ type: Boolean })\r\n\t@Column({ default: true })\r\n\tcanBeSold: boolean;\r\n\r\n\t@ApiPropertyOptional({ type: Boolean })\r\n\t@Column({ default: true })\r\n\tcanBePurchased: boolean;\r\n\r\n\t@ApiPropertyOptional({ type: Boolean })\r\n\t@Column({ default: false })\r\n\tcanBeCharged: boolean;\r\n\r\n\t@ApiPropertyOptional({ type: Boolean })\r\n\t@Column({ default: false })\r\n\tcanBeRented: boolean;\r\n\r\n\t@ApiPropertyOptional({ type: Boolean })\r\n\t@Column({ default: false })\r\n\tisEquipment: boolean;\r\n\r\n\t@ApiPropertyOptional({ type: Boolean })\r\n\t@Column({ default: false })\r\n\ttrackInventory: boolean;\r\n\r\n\t@OneToOne(() => ProductVariant)\r\n\tproductVariant: ProductVariant;\r\n}\r\n","import { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { Module } from '@nestjs/common';\r\nimport { ProductVariantSettings } from './product-settings.entity';\r\nimport { ProductVariantSettingService } from './product-settings.service';\r\nimport { ProductVariantSettingsController } from './product-settings.controller';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [TypeOrmModule.forFeature([ProductVariantSettings]), TenantModule],\r\n\tcontrollers: [ProductVariantSettingsController],\r\n\tproviders: [ProductVariantSettingService],\r\n\texports: [ProductVariantSettingService]\r\n})\r\nexport class ProductVariantSettingsModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { IOrganization } from '@gauzy/models';\r\nimport { ProductVariantSettings } from './product-settings.entity';\r\nimport * as faker from 'faker';\r\nimport { ProductCategory } from '../product-category/product-category.entity';\r\nimport { Product } from '../product/product.entity';\r\nimport { ProductVariant } from '../product-variant/product-variant.entity';\r\n\r\nexport const createRandomProductVariantSettings = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantOrganizationsMap: Map<Tenant, IOrganization[]>\r\n): Promise<ProductVariantSettings[]> => {\r\n\tif (!tenantOrganizationsMap) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: tenantOrganizationsMap not found, Product Options  will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\tconst productVariantSettings: ProductVariantSettings[] = [];\r\n\r\n\tfor (const tenant of tenants) {\r\n\t\tconst tenantOrgs = tenantOrganizationsMap.get(tenant);\r\n\t\tfor (const tenantOrg of tenantOrgs) {\r\n\t\t\tconst productCategories = await connection.manager.find(\r\n\t\t\t\tProductCategory,\r\n\t\t\t\t{\r\n\t\t\t\t\twhere: [{ organization: tenantOrg }]\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\tfor (const productCategory of productCategories) {\r\n\t\t\t\tconst products = await connection.manager.find(Product, {\r\n\t\t\t\t\twhere: [{ category: productCategory }]\r\n\t\t\t\t});\r\n\t\t\t\tfor (const product of products) {\r\n\t\t\t\t\tconst productVariants = await connection.manager.find(\r\n\t\t\t\t\t\tProductVariant,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\twhere: [{ productId: product.id }]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t\tfor (const productVariant of productVariants) {\r\n\t\t\t\t\t\tconst productVariantSetting = new ProductVariantSettings();\r\n\t\t\t\t\t\tproductVariantSetting.productVariant = productVariant;\r\n\t\t\t\t\t\tproductVariantSetting.isSubscription = faker.random.boolean();\r\n\t\t\t\t\t\tproductVariantSetting.isPurchaseAutomatically = faker.random.boolean();\r\n\t\t\t\t\t\tproductVariantSetting.canBeSold = faker.random.boolean();\r\n\t\t\t\t\t\tproductVariantSetting.canBePurchased = faker.random.boolean();\r\n\t\t\t\t\t\tproductVariantSetting.canBeCharged = faker.random.boolean();\r\n\t\t\t\t\t\tproductVariantSetting.canBeRented = faker.random.boolean();\r\n\t\t\t\t\t\tproductVariantSetting.isEquipment = faker.random.boolean();\r\n\t\t\t\t\t\tproductVariantSetting.trackInventory = faker.random.boolean();\r\n\t\t\t\t\t\tproductVariantSetting.tenant = tenant;\r\n\t\t\t\t\t\tproductVariantSetting.organization = tenantOrg;\r\n\r\n\t\t\t\t\t\tproductVariantSettings.push(productVariantSetting);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tawait connection.manager.save(productVariantSettings);\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { CrudService } from '../core';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { ProductVariantSettings } from './product-settings.entity';\r\n\r\n@Injectable()\r\nexport class ProductVariantSettingService extends CrudService<\r\n\tProductVariantSettings\r\n> {\r\n\tconstructor(\r\n\t\t@InjectRepository(ProductVariantSettings)\r\n\t\tprivate readonly productVariantSettingsRepository: Repository<\r\n\t\t\tProductVariantSettings\r\n\t\t>\r\n\t) {\r\n\t\tsuper(productVariantSettingsRepository);\r\n\t}\r\n\r\n\tasync createDefaultVariantSettings(): Promise<ProductVariantSettings> {\r\n\t\tconst newProductVariantSettings = new ProductVariantSettings();\r\n\t\treturn this.productVariantSettingsRepository.save(\r\n\t\t\tnewProductVariantSettings\r\n\t\t);\r\n\t}\r\n\r\n\tasync deleteMany(\r\n\t\tproductVariantPrices: ProductVariantSettings[]\r\n\t): Promise<ProductVariantSettings[]> {\r\n\t\treturn this.productVariantSettingsRepository.remove(\r\n\t\t\tproductVariantPrices\r\n\t\t);\r\n\t}\r\n}\r\n","import { Entity, Column, ManyToOne, JoinColumn } from 'typeorm';\r\nimport { IProductTypeTranslation, LanguagesEnum } from '@gauzy/models';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsString, IsOptional, IsEnum } from 'class-validator';\r\nimport { TranslationBase } from '../core/entities/translate-base';\r\nimport { ProductType } from './product-type.entity';\r\n\r\n@Entity('product_type_translation')\r\nexport class ProductTypeTranslation extends TranslationBase\r\n\timplements IProductTypeTranslation {\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@Column()\r\n\tname: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tdescription: string;\r\n\r\n\t@ApiProperty({ type: ProductType })\r\n\t@ManyToOne(\r\n\t\t(type) => ProductType,\r\n\t\t(productType) => productType.translations,\r\n\t\t{ onDelete: 'CASCADE', onUpdate: 'CASCADE' }\r\n\t)\r\n\t@JoinColumn()\r\n\treference: ProductType;\r\n\r\n\t@ApiProperty({ type: String, enum: LanguagesEnum })\r\n\t@IsEnum(LanguagesEnum)\r\n\t@Column({ nullable: false })\r\n\tlanguageCode: string;\r\n}\r\n","import { ApiTags, ApiResponse, ApiOperation } from '@nestjs/swagger';\r\nimport { CrudController, IPagination } from '../core';\r\nimport { ProductType } from './product-type.entity';\r\nimport {\r\n\tController,\r\n\tHttpStatus,\r\n\tGet,\r\n\tQuery,\r\n\tUseGuards,\r\n\tBody,\r\n\tHttpCode,\r\n\tPut,\r\n\tParam\r\n} from '@nestjs/common';\r\nimport { ProductTypeService } from './product-type.service';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { ParseJsonPipe } from '../shared/pipes/parse-json.pipe';\r\nimport { LanguagesEnum, IProductTypeTranslatable } from '@gauzy/models';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('ProductTypes')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class ProductTypeController extends CrudController<ProductType> {\r\n\tconstructor(private readonly productTypesService: ProductTypeService) {\r\n\t\tsuper(productTypesService);\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find all product types.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found product types.',\r\n\t\ttype: ProductType\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get()\r\n\tasync findAllProductTypes(\r\n\t\t@Query('data', ParseJsonPipe) data: any\r\n\t): Promise<IPagination<ProductType | IProductTypeTranslatable>> {\r\n\t\tconst {\r\n\t\t\trelations = [],\r\n\t\t\tfindInput = null,\r\n\t\t\tlangCode = LanguagesEnum.ENGLISH\r\n\t\t} = data;\r\n\t\treturn this.productTypesService.findAllProductTypes(\r\n\t\t\trelations,\r\n\t\t\tfindInput,\r\n\t\t\tlangCode\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Update an existing record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully edited.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Put(':id')\r\n\tasync update(\r\n\t\t@Param('id') id: string,\r\n\t\t@Body() entity: ProductType\r\n\t): Promise<any> {\r\n\t\treturn this.productTypesService.updateProductType(id, entity);\r\n\t}\r\n}\r\n","import { Entity, Column, OneToMany } from 'typeorm';\r\nimport { ProductTypesIconsEnum } from '@gauzy/models';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsOptional, IsEnum } from 'class-validator';\r\nimport { Product } from '../product/product.entity';\r\nimport { TranslatableBase } from '../core/entities/translate-base';\r\nimport { ProductTypeTranslation } from './product-type-translation.entity';\r\n\r\n@Entity('product_type')\r\nexport class ProductType extends TranslatableBase {\r\n\t@ApiProperty({ type: String, enum: ProductTypesIconsEnum })\r\n\t@IsOptional()\r\n\t@IsEnum(ProductTypesIconsEnum)\r\n\t@Column({ nullable: true })\r\n\ticon: string;\r\n\r\n\t@OneToMany((type) => Product, (product) => product.type)\r\n\tproducts: Product[];\r\n\r\n\t@ApiProperty({ type: ProductTypeTranslation, isArray: true })\r\n\t@OneToMany(\r\n\t\t(type) => ProductTypeTranslation,\r\n\t\t(productTypeTranslation) => productTypeTranslation.reference,\r\n\t\t{\r\n\t\t\teager: true,\r\n\t\t\tcascade: true\r\n\t\t}\r\n\t)\r\n\ttranslations: ProductTypeTranslation[];\r\n}\r\n","import { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { ProductType } from './product-type.entity';\r\nimport { Module } from '@nestjs/common';\r\nimport { ProductTypeController } from './product-type.controller';\r\nimport { ProductTypeService } from './product-type.service';\r\nimport { ProductTypeTranslation } from './product-type-translation.entity';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([ProductType, ProductTypeTranslation]),\r\n\t\tTenantModule\r\n\t],\r\n\tcontrollers: [ProductTypeController],\r\n\tproviders: [ProductTypeService]\r\n})\r\nexport class ProductTypesModule {}\r\n","import { Injectable, BadRequestException } from '@nestjs/common';\r\nimport { CrudService, IPagination } from '../core';\r\nimport { ProductType } from './product-type.entity';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\n\r\n@Injectable()\r\nexport class ProductTypeService extends CrudService<ProductType> {\r\n\tconstructor(\r\n\t\t@InjectRepository(ProductType)\r\n\t\tprivate readonly productTypeRepository: Repository<ProductType>\r\n\t) {\r\n\t\tsuper(productTypeRepository);\r\n\t}\r\n\r\n\tasync updateProductType(\r\n\t\tid: string,\r\n\t\tentity: ProductType\r\n\t): Promise<ProductType> {\r\n\t\ttry {\r\n\t\t\tawait this.productTypeRepository.delete(id);\r\n\t\t\treturn this.productTypeRepository.save(entity);\r\n\t\t} catch (err) {\r\n\t\t\tthrow new BadRequestException(err);\r\n\t\t}\r\n\t}\r\n\r\n\tasync findAllProductTypes(\r\n\t\trelations?: string[],\r\n\t\tfindInput?: any,\r\n\t\tlangCode?: string\r\n\t): Promise<IPagination<ProductType>> {\r\n\t\tconst allProductTypes = await this.productTypeRepository.find({\r\n\t\t\twhere: findInput,\r\n\t\t\trelations\r\n\t\t});\r\n\r\n\t\treturn {\r\n\t\t\titems: allProductTypes.map((type) => type.translate(langCode)),\r\n\t\t\ttotal: allProductTypes.length\r\n\t\t};\r\n\t}\r\n}\r\n","import { Connection } from 'typeorm';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { ProductType } from './product-type.entity';\r\nimport * as seed from './product-type.seed.json';\r\nimport { ProductTypeTranslation } from './product-type-translation.entity';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\n\r\nexport const createDefaultProductType = async (\r\n\tconnection: Connection,\r\n\torganizations: Organization[]\r\n): Promise<ProductType[]> => {\r\n\tconst seedProductTypes: ProductType[] = [];\r\n\r\n\torganizations.forEach(async (organization) => {\r\n\t\tseed.forEach((seedProductType) => {\r\n\t\t\tconst newType = new ProductType();\r\n\r\n\t\t\tnewType.icon = seedProductType.icon;\r\n\t\t\tnewType.organization = organization;\r\n\t\t\tnewType.tenant = organization.tenant;\r\n\t\t\tnewType.translations = [];\r\n\r\n\t\t\tseedProductType.translations.forEach((translation) => {\r\n\t\t\t\tconst newTranslation = new ProductTypeTranslation();\r\n\t\t\t\tnewTranslation.tenant = organization;\r\n\t\t\t\tnewTranslation.tenant = organization.tenant;\r\n\t\t\t\tObject.assign(newTranslation, translation);\r\n\t\t\t\tnewType.translations.push(newTranslation);\r\n\t\t\t});\r\n\r\n\t\t\tseedProductTypes.push(newType);\r\n\t\t});\r\n\t});\r\n\r\n\treturn await insertProductTypes(connection, seedProductTypes);\r\n};\r\n\r\nconst insertProductTypes = async (\r\n\tconnection: Connection,\r\n\tproductTypes: ProductType[]\r\n): Promise<ProductType[]> => {\r\n\treturn await connection.manager.save(productTypes);\r\n};\r\n\r\nexport const createRandomProductType = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantOrganizationsMap: Map<Tenant, Organization[]>\r\n): Promise<ProductType[]> => {\r\n\tif (!tenantOrganizationsMap) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: tenantOrganizationsMap not found, Random Product Type will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst productTypes: ProductType[] = [];\r\n\r\n\tfor (const tenant of tenants) {\r\n\t\tconst tenantOrgs = tenantOrganizationsMap.get(tenant);\r\n\t\tfor (const tenantOrg of tenantOrgs) {\r\n\t\t\tfor (const seedProductType of seed) {\r\n\t\t\t\tconst productType = new ProductType();\r\n\r\n\t\t\t\tproductType.icon = seedProductType.icon;\r\n\t\t\t\tproductType.organization = tenantOrg;\r\n\t\t\t\tproductType.tenant = tenantOrg.tenant;\r\n\t\t\t\tproductType.translations = [];\r\n\r\n\t\t\t\tseedProductType.translations.forEach((translation) => {\r\n\t\t\t\t\tconst newTranslation = new ProductTypeTranslation();\r\n\t\t\t\t\tnewTranslation.organization = tenantOrg;\r\n\t\t\t\t\tnewTranslation.tenant = tenantOrg.tenant;\r\n\t\t\t\t\tObject.assign(newTranslation, translation);\r\n\t\t\t\t\tproductType.translations.push(newTranslation);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tproductTypes.push(productType);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn await insertProductTypes(connection, productTypes);\r\n};\r\n","import { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { Module } from '@nestjs/common';\r\nimport { ProductVariantPrice } from './product-variant-price.entity';\r\nimport { ProductVariantPriceController } from './product-variant-price.controller';\r\nimport { ProductVariantPriceService } from './product-variant-price.service';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [TypeOrmModule.forFeature([ProductVariantPrice]), TenantModule],\r\n\tcontrollers: [ProductVariantPriceController],\r\n\tproviders: [ProductVariantPriceService],\r\n\texports: [ProductVariantPriceService]\r\n})\r\nexport class ProductVariantPriceModule {}\r\n","import { ApiTags } from '@nestjs/swagger';\r\nimport { CrudController } from '../core';\r\nimport { Controller, UseGuards } from '@nestjs/common';\r\nimport { ProductVariantPrice } from './product-variant-price.entity';\r\nimport { ProductVariantPriceService } from './product-variant-price.service';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('ProductVariantPrice')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class ProductVariantPriceController extends CrudController<\r\n\tProductVariantPrice\r\n> {\r\n\tconstructor(\r\n\t\tprivate readonly productVariantPriceService: ProductVariantPriceService\r\n\t) {\r\n\t\tsuper(productVariantPriceService);\r\n\t}\r\n}\r\n","import { Entity, Column, OneToOne } from 'typeorm';\r\nimport { IProductVariantPrice, CurrenciesEnum } from '@gauzy/models';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsNumber, IsEnum } from 'class-validator';\r\nimport { ProductVariant } from '../product-variant/product-variant.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('product_variant_price')\r\nexport class ProductVariantPrice extends TenantOrganizationBase\r\n\timplements IProductVariantPrice {\r\n\t@ApiProperty({ type: Number })\r\n\t@IsNumber()\r\n\t@Column({ default: 0 })\r\n\tunitCost: number;\r\n\r\n\t@ApiProperty({ type: String, enum: CurrenciesEnum })\r\n\t@IsEnum(CurrenciesEnum)\r\n\t@Column({ default: CurrenciesEnum.USD })\r\n\tunitCostCurrency: string;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@IsNumber()\r\n\t@Column({ default: 0 })\r\n\tretailPrice: number;\r\n\r\n\t@ApiProperty({ type: String, enum: CurrenciesEnum })\r\n\t@IsEnum(CurrenciesEnum)\r\n\t@Column({ default: CurrenciesEnum.USD })\r\n\tretailPriceCurrency: string;\r\n\r\n\t@OneToOne((type) => ProductVariant)\r\n\tproductVariant: ProductVariant;\r\n}\r\n","import { Connection } from 'typeorm';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { IOrganization } from '@gauzy/models';\r\nimport { ProductVariantPrice } from './product-variant-price.entity';\r\nimport * as faker from 'faker';\r\nimport { ProductCategory } from '../product-category/product-category.entity';\r\nimport { Product } from '../product/product.entity';\r\nimport { ProductVariant } from '../product-variant/product-variant.entity';\r\nimport { environment as env } from '@env-api/environment';\r\n\r\nexport const createRandomProductVariantPrice = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantOrganizationsMap: Map<Tenant, IOrganization[]>\r\n): Promise<ProductVariantPrice[]> => {\r\n\tif (!tenantOrganizationsMap) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: tenantOrganizationsMap not found, Product Variant will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst productVariantPrices: ProductVariantPrice[] = [];\r\n\r\n\tfor (const tenant of tenants) {\r\n\t\tconst tenantOrgs = tenantOrganizationsMap.get(tenant);\r\n\t\tfor (const tenantOrg of tenantOrgs) {\r\n\t\t\tconst productCategories = await connection.manager.find(\r\n\t\t\t\tProductCategory,\r\n\t\t\t\t{\r\n\t\t\t\t\twhere: [{ organization: tenantOrg }]\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\tfor (const productCategory of productCategories) {\r\n\t\t\t\tconst products = await connection.manager.find(Product, {\r\n\t\t\t\t\twhere: [{ category: productCategory }]\r\n\t\t\t\t});\r\n\t\t\t\tfor (const product of products) {\r\n\t\t\t\t\tconst productVariants = await connection.manager.find(\r\n\t\t\t\t\t\tProductVariant,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\twhere: [{ productId: product.id }]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t\tfor (const productVariant of productVariants) {\r\n\t\t\t\t\t\tconst productVariantPrice = new ProductVariantPrice();\r\n\r\n\t\t\t\t\t\tproductVariantPrice.productVariant = productVariant;\r\n\t\t\t\t\t\tproductVariantPrice.unitCost = faker.random.number(\r\n\t\t\t\t\t\t\t10000\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tproductVariantPrice.unitCostCurrency =\r\n\t\t\t\t\t\t\ttenantOrg.currency || env.defaultCurrency;\r\n\t\t\t\t\t\tproductVariantPrice.retailPrice = faker.random.number(\r\n\t\t\t\t\t\t\tproductVariantPrice.unitCost\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tproductVariantPrice.retailPriceCurrency =\r\n\t\t\t\t\t\t\ttenantOrg.currency || env.defaultCurrency;\r\n\t\t\t\t\t\tproductVariantPrice.tenant = tenant;\r\n\t\t\t\t\t\tproductVariant.organization = tenantOrg;\r\n\r\n\t\t\t\t\t\tproductVariantPrices.push(productVariantPrice);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tawait connection.manager.save(productVariantPrices);\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { CrudService } from '../core';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { ProductVariantPrice } from './product-variant-price.entity';\r\n\r\n@Injectable()\r\nexport class ProductVariantPriceService extends CrudService<\r\n\tProductVariantPrice\r\n> {\r\n\tconstructor(\r\n\t\t@InjectRepository(ProductVariantPrice)\r\n\t\tprivate readonly productVariantPriceRepository: Repository<\r\n\t\t\tProductVariantPrice\r\n\t\t>\r\n\t) {\r\n\t\tsuper(productVariantPriceRepository);\r\n\t}\r\n\r\n\tasync createDefaultProductVariantPrice(): Promise<ProductVariantPrice> {\r\n\t\tconst newProductVariantPrice = new ProductVariantPrice();\r\n\t\treturn this.productVariantPriceRepository.save(newProductVariantPrice);\r\n\t}\r\n\r\n\tasync deleteMany(\r\n\t\tproductVariantPrices: ProductVariantPrice[]\r\n\t): Promise<ProductVariantPrice[]> {\r\n\t\treturn this.productVariantPriceRepository.remove(productVariantPrices);\r\n\t}\r\n}\r\n","import { ICommandHandler, CommandHandler } from '@nestjs/cqrs';\r\nimport { ProductVariant } from '../../product-variant.entity';\r\nimport { ProductVariantCreateCommand } from '../product-variant.create.command';\r\nimport { ProductVariantService } from '../../product-variant.service';\r\nimport { ProductVariantPriceService } from '../../../product-variant-price/product-variant-price.service';\r\nimport { ProductVariantSettingService } from '../../../product-settings/product-settings.service';\r\nimport { IVariantCreateInput } from '@gauzy/models';\r\nimport { ProductService } from '../../../product/product.service';\r\n\r\n@CommandHandler(ProductVariantCreateCommand)\r\nexport class ProductVariantCreateHandler\r\n\timplements ICommandHandler<ProductVariantCreateCommand> {\r\n\tconstructor(\r\n\t\tprivate productService: ProductService,\r\n\t\tprivate productVariantService: ProductVariantService,\r\n\t\tprivate productVariantPriceService: ProductVariantPriceService,\r\n\t\tprivate productVariantSettingsService: ProductVariantSettingService\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand?: ProductVariantCreateCommand\r\n\t): Promise<ProductVariant[]> {\r\n\t\tconst variantCreateInput: IVariantCreateInput = command.productInput;\r\n\r\n\t\tconst product = await this.productService.findById(\r\n\t\t\tvariantCreateInput.product.id,\r\n\t\t\t{ relations: ['options'] }\r\n\t\t);\r\n\t\tconst productOptions = product.options;\r\n\t\tconst optionCombinations = variantCreateInput.optionCombinations;\r\n\t\tconst { organizationId, tenantId } = variantCreateInput.product;\r\n\r\n\t\tconst arrVariants = [];\r\n\r\n\t\tfor await (const optionCombination of optionCombinations) {\r\n\t\t\tconst newProductVariant = new ProductVariant();\r\n\t\t\tconst variantOptions = productOptions.filter((option) => {\r\n\t\t\t\treturn optionCombination.options.includes(option.name);\r\n\t\t\t});\r\n\r\n\t\t\tnewProductVariant.options = variantOptions;\r\n\t\t\tnewProductVariant.internalReference = variantOptions\r\n\t\t\t\t.map((option) => option.name)\r\n\t\t\t\t.join('-');\r\n\r\n\t\t\tnewProductVariant.organizationId = organizationId;\r\n\t\t\tnewProductVariant.tenantId = tenantId;\r\n\r\n\t\t\tnewProductVariant.settings = await this.productVariantSettingsService.createDefaultVariantSettings();\r\n\t\t\tnewProductVariant.price = await this.productVariantPriceService.createDefaultProductVariantPrice();\r\n\t\t\tnewProductVariant.product = await this.productService.findOne({\r\n\t\t\t\tid: variantCreateInput.product.id\r\n\t\t\t});\r\n\r\n\t\t\tarrVariants.push(\r\n\t\t\t\tawait this.productVariantService.createVariant(\r\n\t\t\t\t\tnewProductVariant\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn arrVariants;\r\n\t}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { ProductVariantDeleteCommand } from '../product-variant.delete.command';\r\nimport { ProductVariantService } from '../../product-variant.service';\r\nimport { ProductVariantSettingService } from '../../../product-settings/product-settings.service';\r\nimport { ProductVariantPriceService } from '../../../product-variant-price/product-variant-price.service';\r\nimport { DeleteResult } from 'typeorm/query-builder/result/DeleteResult';\r\n\r\n@CommandHandler(ProductVariantDeleteCommand)\r\nexport class ProductVariantDeleteHandler\r\n\timplements ICommandHandler<ProductVariantDeleteCommand> {\r\n\tconstructor(\r\n\t\tprivate productVariantService: ProductVariantService,\r\n\t\tprivate productVariantSettingsService: ProductVariantSettingService,\r\n\t\tprivate productVariantPricesService: ProductVariantPriceService\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand?: ProductVariantDeleteCommand\r\n\t): Promise<DeleteResult> {\r\n\t\tconst { productVariantId } = command;\r\n\r\n\t\tconst productVariant = await this.productVariantService.findOne({\r\n\t\t\twhere: { id: productVariantId }\r\n\t\t});\r\n\r\n\t\tconst deleteRes = [\r\n\t\t\tawait this.productVariantService.delete(productVariant.id),\r\n\t\t\tawait this.productVariantPricesService.delete(\r\n\t\t\t\tproductVariant.price.id\r\n\t\t\t),\r\n\t\t\tawait this.productVariantSettingsService.delete(\r\n\t\t\t\tproductVariant.settings.id\r\n\t\t\t)\r\n\t\t];\r\n\r\n\t\treturn {\r\n\t\t\traw: deleteRes.map((res) => res.affected),\r\n\t\t\taffected: deleteRes\r\n\t\t\t\t.map((res) => (res.affected ? res.affected : 0))\r\n\t\t\t\t.reduce((acc, value) => acc + value)\r\n\t\t};\r\n\t}\r\n}\r\n","export { ProductVariantCreateCommand } from './product-variant.create.command';\r\nexport { ProductVariantDeleteCommand } from './product-variant.delete.command';\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { IVariantCreateInput } from '@gauzy/models';\r\n\r\nexport class ProductVariantCreateCommand implements ICommand {\r\n\tstatic readonly type = '[ProductVariant] Register';\r\n\r\n\tconstructor(public readonly productInput: IVariantCreateInput) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class ProductVariantDeleteCommand implements ICommand {\r\n\tstatic readonly type = '[ProductVariant] Delete';\r\n\r\n\tconstructor(public readonly productVariantId: string) {}\r\n}\r\n","import {\r\n\tController,\r\n\tHttpStatus,\r\n\tPost,\r\n\tBody,\r\n\tGet,\r\n\tHttpCode,\r\n\tPut,\r\n\tParam,\r\n\tUseGuards,\r\n\tDelete\r\n} from '@nestjs/common';\r\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport { CrudController, IPagination } from '../core';\r\nimport { ProductVariant } from './product-variant.entity';\r\nimport { ProductVariantService } from './product-variant.service';\r\nimport {\r\n\tProductVariantCreateCommand,\r\n\tProductVariantDeleteCommand\r\n} from './commands';\r\nimport { CommandBus } from '@nestjs/cqrs';\r\nimport { Product } from '../product/product.entity';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { DeleteResult } from 'typeorm';\r\nimport { IVariantCreateInput } from '@gauzy/models';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('ProductVariant')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class ProductVariantController extends CrudController<ProductVariant> {\r\n\tconstructor(\r\n\t\tprivate readonly productVariantService: ProductVariantService,\r\n\t\tprivate readonly commandBus: CommandBus\r\n\t) {\r\n\t\tsuper(productVariantService);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Create product variants' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription:\r\n\t\t\t'These records have been successfully created.' /*, type: T*/\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t// @UseGuards(PermissionGuard)\r\n\t@Post('/create-variants')\r\n\tasync createProductVariants(\r\n\t\t@Body() entity: IVariantCreateInput,\r\n\t\t...options: any[]\r\n\t): Promise<ProductVariant[]> {\r\n\t\treturn this.commandBus.execute(new ProductVariantCreateCommand(entity));\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find all product variants'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found product variants',\r\n\t\ttype: Product\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get('all')\r\n\tasync findAllProductVariants(): Promise<IPagination<ProductVariant>> {\r\n\t\treturn this.productVariantService.findAllProductVariants();\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Update an existing record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully edited.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Put(':id')\r\n\tasync update(\r\n\t\t@Param('id') id: string,\r\n\t\t@Body() productVariant: ProductVariant\r\n\t): Promise<ProductVariant> {\r\n\t\treturn this.productVariantService.updateVariant(productVariant);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Delete record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NO_CONTENT,\r\n\t\tdescription: 'The record has been successfully deleted'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Delete(':id')\r\n\tasync delete(\r\n\t\t@Param('id') id: string,\r\n\t\t...options: any[]\r\n\t): Promise<DeleteResult> {\r\n\t\treturn this.commandBus.execute(new ProductVariantDeleteCommand(id));\r\n\t}\r\n}\r\n","import {\r\n\tEntity,\r\n\tColumn,\r\n\tManyToOne,\r\n\tOneToOne,\r\n\tRelationId,\r\n\tJoinColumn,\r\n\tManyToMany,\r\n\tJoinTable\r\n} from 'typeorm';\r\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\r\nimport { IProductVariant, BillingInvoicingPolicyEnum } from '@gauzy/models';\r\nimport { ProductVariantPrice } from '../product-variant-price/product-variant-price.entity';\r\nimport { ProductOption } from '../product-option/product-option.entity';\r\nimport { ProductVariantSettings } from '../product-settings/product-settings.entity';\r\nimport { Product } from '../product/product.entity';\r\nimport { IsNumber, IsString, IsOptional, IsEnum } from 'class-validator';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('product_variant')\r\nexport class ProductVariant extends TenantOrganizationBase\r\n\timplements IProductVariant {\r\n\t@ApiProperty({ type: Number })\r\n\t@IsNumber()\r\n\t@Column({ default: 0 })\r\n\ttaxes: number;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@IsString()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tnotes: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@RelationId((productVariant: ProductVariant) => productVariant.product)\r\n\t@IsString()\r\n\t@Column({ nullable: true })\r\n\tproductId: string;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@IsNumber()\r\n\t@Column({ default: 0 })\r\n\tquantity: number;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsEnum(BillingInvoicingPolicyEnum)\r\n\t@Column({ default: BillingInvoicingPolicyEnum.QUANTITY_ORDERED })\r\n\tbillingInvoicingPolicy: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@Column({ nullable: true })\r\n\tinternalReference: string;\r\n\r\n\t@ApiPropertyOptional({ type: Boolean })\r\n\t@Column({ default: true })\r\n\tenabled: boolean;\r\n\r\n\t@ManyToMany(() => ProductOption, { eager: true })\r\n\t@JoinTable()\r\n\toptions: ProductOption[];\r\n\r\n\t@OneToOne(\r\n\t\t() => ProductVariantSettings,\r\n\t\t(settings) => settings.productVariant,\r\n\t\t{\r\n\t\t\teager: true,\r\n\t\t\tonDelete: 'CASCADE'\r\n\t\t}\r\n\t)\r\n\t@JoinColumn()\r\n\tsettings: ProductVariantSettings;\r\n\r\n\t@OneToOne(\r\n\t\t() => ProductVariantPrice,\r\n\t\t(variantPrice) => variantPrice.productVariant,\r\n\t\t{\r\n\t\t\teager: true,\r\n\t\t\tonDelete: 'CASCADE'\r\n\t\t}\r\n\t)\r\n\t@JoinColumn()\r\n\tprice: ProductVariantPrice;\r\n\r\n\t@ManyToOne(() => Product, (product) => product.variants, {\r\n\t\tonDelete: 'CASCADE'\r\n\t})\r\n\t@JoinColumn()\r\n\tproduct: Product;\r\n}\r\n","import { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { Module } from '@nestjs/common';\r\nimport { ProductVariant } from './product-variant.entity';\r\nimport { ProductVariantController } from './product-variant.controller';\r\nimport { ProductVariantService } from './product-variant.service';\r\nimport { CqrsModule } from '@nestjs/cqrs';\r\nimport { ProductVariantCreateHandler } from './commands/handlers/product-variant.create.handler';\r\nimport { ProductVariantPriceService } from '../product-variant-price/product-variant-price.service';\r\nimport { ProductVariantSettingService } from '../product-settings/product-settings.service';\r\nimport { ProductVariantPrice } from '../product-variant-price/product-variant-price.entity';\r\nimport { ProductVariantSettings } from '../product-settings/product-settings.entity';\r\nimport { ProductService } from '../product/product.service';\r\nimport { Product } from '../product/product.entity';\r\nimport { ProductVariantDeleteHandler } from './commands/handlers/product-variant.delete.handler';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([\r\n\t\t\tProductVariant,\r\n\t\t\tProductVariantPrice,\r\n\t\t\tProductVariantSettings,\r\n\t\t\tProduct\r\n\t\t]),\r\n\t\tCqrsModule,\r\n\t\tTenantModule\r\n\t],\r\n\tcontrollers: [ProductVariantController],\r\n\tproviders: [\r\n\t\tProductService,\r\n\t\tProductVariantService,\r\n\t\tProductVariantCreateHandler,\r\n\t\tProductVariantDeleteHandler,\r\n\t\tProductVariantPriceService,\r\n\t\tProductVariantSettingService,\r\n\t\tProductService\r\n\t],\r\n\texports: [ProductVariantService]\r\n})\r\nexport class ProductVariantModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { BillingInvoicingPolicyEnum, IOrganization } from '@gauzy/models';\r\nimport { ProductVariant } from './product-variant.entity';\r\nimport * as faker from 'faker';\r\nimport { ProductCategory } from '../product-category/product-category.entity';\r\nimport { Product } from '../product/product.entity';\r\nimport { ProductOption } from '../product-option/product-option.entity';\r\nimport { ProductVariantSettings } from '../product-settings/product-settings.entity';\r\nimport { ProductVariantPrice } from '../product-variant-price/product-variant-price.entity';\r\n\r\nexport const createRandomProductVariant = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantOrganizationsMap: Map<Tenant, IOrganization[]>,\r\n\tnumberOfVariantPerProduct\r\n): Promise<ProductVariant[]> => {\r\n\tif (!tenantOrganizationsMap) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: tenantOrganizationsMap not found, Product Variant will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst productVariants: ProductVariant[] = [];\r\n\tfor (const tenant of tenants) {\r\n\t\tconst tenantOrgs = tenantOrganizationsMap.get(tenant);\r\n\t\tfor (const tenantOrg of tenantOrgs) {\r\n\t\t\tconst productCategories = await connection.manager.find(\r\n\t\t\t\tProductCategory,\r\n\t\t\t\t{\r\n\t\t\t\t\twhere: { organization: tenantOrg }\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\tfor (const productCategory of productCategories) {\r\n\t\t\t\tconst products = await connection.manager.find(Product, {\r\n\t\t\t\t\twhere: { category: productCategory }\r\n\t\t\t\t});\r\n\t\t\t\tfor (const product of products) {\r\n\t\t\t\t\tconst productOptions = await connection.manager.find(\r\n\t\t\t\t\t\tProductOption,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\twhere: { product: product }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t\tfor (let i = 0; i < numberOfVariantPerProduct; i++) {\r\n\t\t\t\t\t\tconst productVariant = new ProductVariant();\r\n\t\t\t\t\t\tproductVariant.notes = faker.name.jobDescriptor();\r\n\t\t\t\t\t\tproductVariant.productId = product.id;\r\n\t\t\t\t\t\tproductVariant.quantity = faker.random.number(20);\r\n\t\t\t\t\t\tproductVariant.billingInvoicingPolicy = faker.random.arrayElement(\r\n\t\t\t\t\t\t\tObject.keys(BillingInvoicingPolicyEnum)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tproductVariant.enabled = faker.random.boolean();\r\n\t\t\t\t\t\tproductVariant.options = productOptions;\r\n\t\t\t\t\t\tproductVariant.settings = new ProductVariantSettings();\r\n\t\t\t\t\t\tproductVariant.price = new ProductVariantPrice();\r\n\t\t\t\t\t\tproductVariant.product = product;\r\n\t\t\t\t\t\tproductVariant.tenant = tenant;\r\n\t\t\t\t\t\tproductVariant.organization = tenantOrg;\r\n\r\n\t\t\t\t\t\tproductVariants.push(productVariant);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn await connection.manager.save(productVariants);\r\n};\r\n","import { Repository } from 'typeorm';\r\nimport { CrudService, IPagination } from '../core';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { ProductVariant } from './product-variant.entity';\r\n\r\n@Injectable()\r\nexport class ProductVariantService extends CrudService<ProductVariant> {\r\n\tconstructor(\r\n\t\t@InjectRepository(ProductVariant)\r\n\t\tprivate readonly productVariantRepository: Repository<ProductVariant>\r\n\t) {\r\n\t\tsuper(productVariantRepository);\r\n\t}\r\n\r\n\tasync findAllProductVariants(): Promise<IPagination<ProductVariant>> {\r\n\t\tconst total = await this.productVariantRepository.count();\r\n\t\tconst items = await this.productVariantRepository.find({\r\n\t\t\trelations: ['settings', 'price']\r\n\t\t});\r\n\r\n\t\treturn { items, total };\r\n\t}\r\n\r\n\tasync createBulk(\r\n\t\tproductVariants: ProductVariant[]\r\n\t): Promise<ProductVariant[]> {\r\n\t\treturn this.productVariantRepository.save(productVariants);\r\n\t}\r\n\r\n\tasync createVariant(\r\n\t\tproductVariant: ProductVariant\r\n\t): Promise<ProductVariant> {\r\n\t\treturn this.productVariantRepository.save(productVariant);\r\n\t}\r\n\r\n\tasync updateVariant(\r\n\t\tproductVariant: ProductVariant\r\n\t): Promise<ProductVariant> {\r\n\t\treturn this.productVariantRepository.save(productVariant);\r\n\t}\r\n\r\n\tdeleteMany(productVariants: ProductVariant[]): Promise<ProductVariant[]> {\r\n\t\treturn this.productVariantRepository.remove(productVariants);\r\n\t}\r\n}\r\n","import { ICommandHandler, CommandHandler } from '@nestjs/cqrs';\r\nimport { ProductService } from '../../../product/product.service';\r\nimport { ProductCreateCommand } from '../product.create.command';\r\nimport { ProductOptionService } from '../../../product-option/product-option.service';\r\nimport { ProductOption } from '../../../product-option/product-option.entity';\r\nimport { Product } from '../../product.entity';\r\n\r\n@CommandHandler(ProductCreateCommand)\r\nexport class ProductCreateHandler\r\n\timplements ICommandHandler<ProductCreateCommand> {\r\n\tconstructor(\r\n\t\tprivate productOptionService: ProductOptionService,\r\n\t\tprivate productService: ProductService\r\n\t) {}\r\n\r\n\tpublic async execute(command?: ProductCreateCommand): Promise<Product> {\r\n\t\tconst { productInput } = command;\r\n\r\n\t\tconst optionsCreate = productInput.optionCreateInputs.map(\r\n\t\t\t(optionInput) => {\r\n\t\t\t\tconst option = new ProductOption();\r\n\t\t\t\toption.name = optionInput.name;\r\n\t\t\t\toption.code = optionInput.code;\r\n\t\t\t\treturn option;\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\tconst savedOptions = await this.productOptionService.saveBulk(\r\n\t\t\toptionsCreate\r\n\t\t);\r\n\r\n\t\tproductInput['options'] = savedOptions;\r\n\r\n\t\tconst product = await this.productService.saveProduct(productInput);\r\n\r\n\t\treturn product;\r\n\t}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { ProductDeleteCommand } from '../product.delete.command';\r\nimport { ProductService } from '../../product.service';\r\nimport { ProductVariantService } from '../../../product-variant/product-variant.service';\r\nimport { DeleteResult } from 'typeorm';\r\nimport { ProductVariantSettingService } from '../../../product-settings/product-settings.service';\r\nimport { ProductVariantPriceService } from '../../../product-variant-price/product-variant-price.service';\r\n\r\n@CommandHandler(ProductDeleteCommand)\r\nexport class ProductDeleteHandler\r\n\timplements ICommandHandler<ProductDeleteCommand> {\r\n\tconstructor(\r\n\t\tprivate productService: ProductService,\r\n\t\tprivate productVariantService: ProductVariantService,\r\n\t\tprivate productVariantSettingsService: ProductVariantSettingService,\r\n\t\tprivate productVariantPricesService: ProductVariantPriceService\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand?: ProductDeleteCommand\r\n\t): Promise<DeleteResult> {\r\n\t\tconst { productId } = command;\r\n\r\n\t\tconst product = await this.productService.findOne({\r\n\t\t\twhere: { id: productId },\r\n\t\t\trelations: ['variants']\r\n\t\t});\r\n\r\n\t\tconst settingsToDelete = [];\r\n\t\tconst pricesToDelete = [];\r\n\r\n\t\tproduct.variants.forEach((variant) => {\r\n\t\t\tsettingsToDelete.push(variant.settings);\r\n\t\t});\r\n\t\tproduct.variants.forEach((variant) => {\r\n\t\t\tpricesToDelete.push(variant.price);\r\n\t\t});\r\n\r\n\t\tconst deleteRes = [\r\n\t\t\tawait this.productVariantService.deleteMany(product.variants),\r\n\t\t\tawait this.productVariantSettingsService.deleteMany(\r\n\t\t\t\tsettingsToDelete\r\n\t\t\t),\r\n\t\t\tawait this.productVariantPricesService.deleteMany(pricesToDelete),\r\n\t\t\tawait this.productService.delete(product.id)\r\n\t\t];\r\n\r\n\t\treturn {\r\n\t\t\traw: deleteRes,\r\n\t\t\taffected: deleteRes\r\n\t\t\t\t.map((res) => {\r\n\t\t\t\t\tif (Array.isArray(res)) {\r\n\t\t\t\t\t\treturn res.length;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn res.affected ? res.affected : 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.reduce((acc, value) => acc + value)\r\n\t\t};\r\n\t}\r\n}\r\n","import { ICommandHandler, CommandHandler } from '@nestjs/cqrs';\r\nimport { ProductService } from '../../../product/product.service';\r\nimport { ProductOptionService } from '../../../product-option/product-option.service';\r\nimport { Product } from '../../product.entity';\r\nimport { ProductUpdateCommand } from '../product.update.command';\r\nimport { ProductOption } from '../../../product-option/product-option.entity';\r\n\r\n@CommandHandler(ProductUpdateCommand)\r\nexport class ProductUpdateHandler\r\n\timplements ICommandHandler<ProductUpdateCommand> {\r\n\tconstructor(\r\n\t\tprivate productOptionService: ProductOptionService,\r\n\t\tprivate productService: ProductService\r\n\t) {}\r\n\r\n\tpublic async execute(command?: ProductUpdateCommand): Promise<Product> {\r\n\t\tconst { productUpdateRequest } = command;\r\n\r\n\t\tconst optionsCreate = productUpdateRequest.optionCreateInputs.map(\r\n\t\t\t(optionInput) => {\r\n\t\t\t\tconst option = new ProductOption();\r\n\t\t\t\toption.name = optionInput.name;\r\n\t\t\t\toption.code = optionInput.code;\r\n\t\t\t\treturn option;\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\tawait this.productOptionService.deleteBulk(\r\n\t\t\tproductUpdateRequest.optionDeleteInputs\r\n\t\t);\r\n\r\n\t\tconst savedOptions = await this.productOptionService.saveBulk(\r\n\t\t\toptionsCreate\r\n\t\t);\r\n\r\n\t\tproductUpdateRequest['options'] = savedOptions;\r\n\r\n\t\tconst product = await this.productService.saveProduct(\r\n\t\t\tproductUpdateRequest\r\n\t\t);\r\n\t\treturn product;\r\n\t}\r\n}\r\n","export { ProductCreateCommand } from './product.create.command';\r\nexport { ProductUpdateCommand } from './product.update.command';\r\nexport { ProductDeleteCommand } from './product.delete.command';\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { IProductCreateInput } from '@gauzy/models';\r\n\r\nexport class ProductCreateCommand implements ICommand {\r\n\tstatic readonly type = '[Product] Register';\r\n\r\n\tconstructor(public readonly productInput: IProductCreateInput) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class ProductDeleteCommand implements ICommand {\r\n\tstatic readonly type = '[Product] Delete';\r\n\r\n\tconstructor(public readonly productId: string) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { IProductCreateInput } from '@gauzy/models';\r\n\r\nexport class ProductUpdateCommand implements ICommand {\r\n\tstatic readonly type = '[Product] Update';\r\n\r\n\tconstructor(\r\n\t\tpublic readonly id: string,\r\n\t\tpublic readonly productUpdateRequest: IProductCreateInput\r\n\t) {}\r\n}\r\n","import {\r\n\tController,\r\n\tGet,\r\n\tHttpStatus,\r\n\tPost,\r\n\tBody,\r\n\tPut,\r\n\tParam,\r\n\tHttpCode,\r\n\tUseGuards,\r\n\tDelete,\r\n\tQuery\r\n} from '@nestjs/common';\r\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport { CrudController, IPagination } from '../core';\r\nimport { ProductService } from './product.service';\r\nimport { Product } from './product.entity';\r\nimport { CommandBus } from '@nestjs/cqrs';\r\nimport { ProductCreateCommand } from './commands/product.create.command';\r\nimport { ProductUpdateCommand } from './commands/product.update.command';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { PermissionGuard } from '../shared/guards/auth/permission.guard';\r\nimport { PermissionsEnum, IProductCreateInput } from '@gauzy/models';\r\nimport { Permissions } from '../shared/decorators/permissions';\r\nimport { ProductDeleteCommand } from './commands';\r\nimport { DeleteResult } from 'typeorm';\r\nimport { ParseJsonPipe } from '../shared';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('Product')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class ProductController extends CrudController<Product> {\r\n\tconstructor(\r\n\t\tprivate readonly productService: ProductService,\r\n\t\tprivate commandBus: CommandBus\r\n\t) {\r\n\t\tsuper(productService);\r\n\t}\r\n\t@ApiOperation({ summary: 'Find Product by id ' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found one record',\r\n\t\ttype: Product\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get(':id')\r\n\tasync findById(\r\n\t\t@Param('id') id: string,\r\n\t\t@Query('data', ParseJsonPipe) data?: any\r\n\t): Promise<Product> {\r\n\t\tconst { relations = [], findInput = null } = data;\r\n\r\n\t\treturn this.productService.findById(id, {\r\n\t\t\trelations,\r\n\t\t\twhere: findInput\r\n\t\t});\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find all products'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found products',\r\n\t\ttype: Product\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get()\r\n\tasync findAllProducts(): Promise<IPagination<Product>> {\r\n\t\treturn this.productService.findAllProducts();\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find all products translated'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found products',\r\n\t\ttype: Product\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get('local/:langCode')\r\n\tasync findAllProductsTranslated(\r\n\t\t@Param('langCode') langCode: string,\r\n\t\t@Query('data', ParseJsonPipe) data: any\r\n\t): Promise<IPagination<Product>> {\r\n\t\tconst { relations = [], findInput = null } = data;\r\n\t\treturn this.productService.findAllProducts(\r\n\t\t\tlangCode,\r\n\t\t\trelations,\r\n\t\t\tfindInput\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Create new record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully created.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_INVENTORY_PRODUCT_EDIT)\r\n\t@Post('/create')\r\n\tasync createProduct(\r\n\t\t@Body() entity: IProductCreateInput,\r\n\t\t...options: any[]\r\n\t) {\r\n\t\treturn this.commandBus.execute(new ProductCreateCommand(entity));\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Update an existing record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully edited.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Put(':id')\r\n\tasync update(\r\n\t\t@Param('id') id: string,\r\n\t\t@Body() entity: IProductCreateInput\r\n\t): Promise<any> {\r\n\t\treturn this.commandBus.execute(new ProductUpdateCommand(id, entity));\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Delete record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NO_CONTENT,\r\n\t\tdescription: 'The record has been successfully deleted'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Delete(':id')\r\n\tasync delete(\r\n\t\t@Param('id') id: string,\r\n\t\t...options: any[]\r\n\t): Promise<DeleteResult> {\r\n\t\treturn this.commandBus.execute(new ProductDeleteCommand(id));\r\n\t}\r\n}\r\n","import {\r\n\tEntity,\r\n\tColumn,\r\n\tOneToMany,\r\n\tRelationId,\r\n\tJoinColumn,\r\n\tManyToOne,\r\n\tManyToMany,\r\n\tJoinTable\r\n} from 'typeorm';\r\nimport { IProduct } from '@gauzy/models';\r\nimport { ProductVariant } from '../product-variant/product-variant.entity';\r\nimport { ProductType } from '../product-type/product-type.entity';\r\nimport { ProductCategory } from '../product-category/product-category.entity';\r\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\r\nimport { IsString, IsOptional } from 'class-validator';\r\nimport { ProductOption } from '../product-option/product-option.entity';\r\nimport { Tag } from '../tags/tag.entity';\r\nimport { InvoiceItem } from '../invoice-item/invoice-item.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('product')\r\nexport class Product extends TenantOrganizationBase implements IProduct {\r\n\t@ManyToMany((type) => Tag, (tag) => tag.product)\r\n\t@JoinTable({\r\n\t\tname: 'tag_product'\r\n\t})\r\n\ttags?: Tag[];\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@Column()\r\n\tname: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@Column()\r\n\tdescription: string;\r\n\r\n\t@ApiPropertyOptional({ type: Boolean })\r\n\t@Column({ default: true })\r\n\tenabled: boolean;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@Column()\r\n\tcode: string;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\timageUrl: string;\r\n\r\n\t@OneToMany(\r\n\t\t() => ProductVariant,\r\n\t\t(productVariant) => productVariant.product,\r\n\t\t{ onDelete: 'CASCADE' }\r\n\t)\r\n\tvariants: ProductVariant[];\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@RelationId((product: Product) => product.type)\r\n\tproductTypeId: string;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@RelationId((product: Product) => product.category)\r\n\tproductCategoryId: string;\r\n\r\n\t@ManyToOne(() => ProductType, { onDelete: 'SET NULL' })\r\n\t@JoinColumn()\r\n\ttype: ProductType;\r\n\r\n\t@ManyToOne(() => ProductCategory, { onDelete: 'SET NULL' })\r\n\t@JoinColumn()\r\n\tcategory: ProductCategory;\r\n\r\n\t@OneToMany(\r\n\t\t(type) => ProductOption,\r\n\t\t(productOption) => productOption.product\r\n\t)\r\n\toptions: ProductOption[];\r\n\r\n\t@ApiPropertyOptional({ type: InvoiceItem, isArray: true })\r\n\t@OneToMany((type) => InvoiceItem, (invoiceItem) => invoiceItem.product, {\r\n\t\tonDelete: 'SET NULL'\r\n\t})\r\n\t@JoinColumn()\r\n\tinvoiceItems?: InvoiceItem[];\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@IsString()\r\n\t@Column({ nullable: true })\r\n\tlanguage?: string;\r\n}\r\n","import { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { Module } from '@nestjs/common';\r\nimport { Product } from './product.entity';\r\nimport { ProductController } from './product.controller';\r\nimport { ProductService } from './product.service';\r\nimport { ProductOption } from '../product-option/product-option.entity';\r\nimport { CqrsModule } from '@nestjs/cqrs';\r\nimport { ProductOptionService } from '../product-option/product-option.service';\r\nimport { ProductCreateHandler } from './commands/handlers/product.create.handler';\r\nimport { ProductUpdateHandler } from './commands/handlers/product.update.handler';\r\nimport { UserService } from '../user/user.service';\r\nimport { User } from '../user/user.entity';\r\nimport { ProductDeleteHandler } from './commands/handlers/product.delete.handler';\r\nimport { ProductVariantService } from '../product-variant/product-variant.service';\r\nimport { ProductVariant } from '../product-variant/product-variant.entity';\r\nimport { ProductVariantSettings } from '../product-settings/product-settings.entity';\r\nimport { ProductVariantSettingService } from '../product-settings/product-settings.service';\r\nimport { ProductVariantPriceService } from '../product-variant-price/product-variant-price.service';\r\nimport { ProductVariantPrice } from '../product-variant-price/product-variant-price.entity';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([\r\n\t\t\tProduct,\r\n\t\t\tProductOption,\r\n\t\t\tUser,\r\n\t\t\tProductVariant,\r\n\t\t\tProductVariantSettings,\r\n\t\t\tProductVariantPrice\r\n\t\t]),\r\n\t\tCqrsModule,\r\n\t\tTenantModule\r\n\t],\r\n\tcontrollers: [ProductController],\r\n\tproviders: [\r\n\t\tProductService,\r\n\t\tProductOptionService,\r\n\t\tProductVariantService,\r\n\t\tProductVariantSettingService,\r\n\t\tProductVariantPriceService,\r\n\t\tProductCreateHandler,\r\n\t\tProductUpdateHandler,\r\n\t\tUserService,\r\n\t\tProductDeleteHandler\r\n\t],\r\n\texports: [ProductService]\r\n})\r\nexport class ProductModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { Product } from './product.entity';\r\nimport { ProductType } from '../product-type/product-type.entity';\r\nimport { ProductCategory } from '../product-category/product-category.entity';\r\nimport * as faker from 'faker';\r\nimport { IOrganization } from '@gauzy/models';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\n\r\nexport const createDefaultProducts = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\torganization: IOrganization\r\n) => {\r\n\tconst productTypes = await connection.manager.find(ProductType);\r\n\tconst productCategories = await connection.manager.find(ProductCategory);\r\n\tconst products = [];\r\n\r\n\tfor (let i = 0; i <= 30; i++) {\r\n\t\tconst product = new Product();\r\n\t\tproduct.name = faker.commerce.productName();\r\n\t\tproduct.code = faker.lorem.word();\r\n\t\tproduct.type =\r\n\t\t\tproductTypes[Math.floor(Math.random() * productTypes.length)];\r\n\t\tproduct.category =\r\n\t\t\tproductCategories[\r\n\t\t\t\tMath.floor(Math.random() * productCategories.length)\r\n\t\t\t];\r\n\t\tproduct.description = faker.lorem.words();\r\n\t\tproduct.organization = organization;\r\n\t\tproduct.tenant = tenant;\r\n\r\n\t\tproducts.push(product);\r\n\t}\r\n\r\n\tawait insertProduct(connection, products);\r\n};\r\n\r\nconst insertProduct = async (\r\n\tconnection: Connection,\r\n\tproducts: Product[]\r\n): Promise<void> => {\r\n\tawait connection.manager.save(products);\r\n};\r\n\r\nexport const createRandomProduct = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantOrganizationsMap: Map<Tenant, IOrganization[]>\r\n): Promise<Product[]> => {\r\n\tif (!tenantOrganizationsMap) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: tenantOrganizationsMap not found, Product will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst products: Product[] = [];\r\n\r\n\tfor (const tenant of tenants) {\r\n\t\tconst tenantOrgs = tenantOrganizationsMap.get(tenant);\r\n\t\tfor (const tenantOrg of tenantOrgs) {\r\n\t\t\tconst productCategories = await connection.manager.find(\r\n\t\t\t\tProductCategory,\r\n\t\t\t\t{\r\n\t\t\t\t\twhere: [{ organization: tenantOrg }]\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\tconst productTypes = await connection.manager.find(ProductType, {\r\n\t\t\t\twhere: [{ organization: tenantOrg }]\r\n\t\t\t});\r\n\t\t\tconst product = new Product();\r\n\t\t\tproduct.name = faker.commerce.productName();\r\n\t\t\tproduct.code = faker.lorem.word();\r\n\t\t\tproduct.type =\r\n\t\t\t\tproductTypes[Math.floor(Math.random() * productTypes.length)];\r\n\t\t\tproduct.category =\r\n\t\t\t\tproductCategories[\r\n\t\t\t\t\tMath.floor(Math.random() * productCategories.length)\r\n\t\t\t\t];\r\n\t\t\tproduct.description = faker.lorem.words();\r\n\t\t\tproduct.tenant = tenant;\r\n\t\t\tproduct.organization = tenantOrg;\r\n\r\n\t\t\tproducts.push(product);\r\n\t\t}\r\n\t}\r\n\r\n\tawait connection.manager.save(products);\r\n};\r\n","import { Repository } from 'typeorm';\r\nimport { IPagination } from '../core';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Product } from './product.entity';\r\nimport { IProductCreateInput, IProductFindInput } from '@gauzy/models';\r\nimport { TenantAwareCrudService } from '../core/crud/tenant-aware-crud.service';\r\n\r\n@Injectable()\r\nexport class ProductService extends TenantAwareCrudService<Product> {\r\n\tconstructor(\r\n\t\t@InjectRepository(Product)\r\n\t\tprivate readonly productRepository: Repository<Product>\r\n\t) {\r\n\t\tsuper(productRepository);\r\n\t}\r\n\r\n\tasync findAllProducts(\r\n\t\tlangCode?: string,\r\n\t\trelations?: string[],\r\n\t\tfindInput?: IProductFindInput\r\n\t): Promise<IPagination<Product>> {\r\n\t\tconst total = await this.productRepository.count(findInput);\r\n\t\tconst items = await this.productRepository.find({\r\n\t\t\trelations: relations,\r\n\t\t\twhere: findInput\r\n\t\t});\r\n\r\n\t\tif (langCode) {\r\n\t\t\t//tstodo write method\r\n\t\t\titems.forEach((product) => {\r\n\t\t\t\tif (product.type) {\r\n\t\t\t\t\tproduct.type = product.type.translate(langCode);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (product.category) {\r\n\t\t\t\t\tproduct.category = product.category.translate(langCode);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn { items, total };\r\n\t}\r\n\r\n\tasync findById(id: string, options: any): Promise<Product> {\r\n\t\treturn await this.productRepository.findOne(id, options);\r\n\t}\r\n\r\n\tasync saveProduct(productRequest: IProductCreateInput): Promise<Product> {\r\n\t\treturn await this.productRepository.save(productRequest);\r\n\t}\r\n}\r\n","import { ProposalCreateHandler } from './proposal-create.handler';\r\n\r\nexport const CommandHandlers = [ProposalCreateHandler];\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { ProposalCreateCommand } from '../proposal-create.command';\r\nimport { ProposalService } from '../../proposal.service';\r\nimport { Proposal } from '../../proposal.entity';\r\n\r\n@CommandHandler(ProposalCreateCommand)\r\nexport class ProposalCreateHandler\r\n\timplements ICommandHandler<ProposalCreateCommand> {\r\n\tconstructor(private readonly _proposalService: ProposalService) {}\r\n\r\n\tpublic async execute(command: ProposalCreateCommand): Promise<Proposal> {\r\n\t\tconst { input } = command;\r\n\t\treturn await this._proposalService.create(input);\r\n\t}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { IProposalCreateInput } from '@gauzy/models';\r\n\r\nexport class ProposalCreateCommand implements ICommand {\r\n\tstatic readonly type = '[Proposal] Create Proposal';\r\n\r\n\tconstructor(public readonly input: IProposalCreateInput) {}\r\n}\r\n","import {\r\n\tController,\r\n\tHttpStatus,\r\n\tPost,\r\n\tBody,\r\n\tGet,\r\n\tQuery,\r\n\tUseGuards,\r\n\tPut,\r\n\tParam\r\n} from '@nestjs/common';\r\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport { ProposalService } from './proposal.service';\r\nimport { Proposal } from './proposal.entity';\r\nimport { CrudController } from '../core/crud/crud.controller';\r\nimport { IProposalCreateInput, IProposal } from '@gauzy/models';\r\nimport { IPagination } from '../core';\r\nimport { PermissionGuard } from '../shared/guards/auth/permission.guard';\r\nimport { PermissionsEnum } from '@gauzy/models';\r\nimport { Permissions } from '../shared/decorators/permissions';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\nimport { ParseJsonPipe } from '../shared';\r\n\r\n@ApiTags('Proposal')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class ProposalController extends CrudController<Proposal> {\r\n\tconstructor(private readonly proposalService: ProposalService) {\r\n\t\tsuper(proposalService);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find all proposals.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found proposals',\r\n\t\ttype: Proposal\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_PROPOSALS_VIEW)\r\n\t@Get()\r\n\tasync findAllProposals(\r\n\t\t@Query('data') data: string\r\n\t): Promise<IPagination<IProposal>> {\r\n\t\tconst { relations, findInput, filterDate } = JSON.parse(data);\r\n\r\n\t\treturn this.proposalService.getAllProposals(\r\n\t\t\t{ where: findInput, relations },\r\n\t\t\tfilterDate\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find single proposal by id.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found proposal',\r\n\t\ttype: Proposal\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_PROPOSALS_VIEW)\r\n\t@Get(':id')\r\n\tasync findOne(\r\n\t\t@Param('id') id: string,\r\n\t\t@Query('data', ParseJsonPipe) data: any\r\n\t): Promise<IProposal> {\r\n\t\tconst { relations, findInput } = data;\r\n\t\treturn this.proposalService.findOne(id, {\r\n\t\t\twhere: findInput,\r\n\t\t\trelations\r\n\t\t});\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Create new record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully created.' /*, type: T*/\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_PROPOSALS_EDIT)\r\n\t@Post('/create')\r\n\tasync createOrganizationTeam(\r\n\t\t@Body() entity: IProposalCreateInput,\r\n\t\t...options: any[]\r\n\t): Promise<Proposal> {\r\n\t\treturn this.proposalService.create(entity);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Update single proposal by id.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Updates proposal',\r\n\t\ttype: Proposal\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_PROPOSALS_EDIT)\r\n\t@Put(':id')\r\n\tasync updateProposal(\r\n\t\t@Param('id') id: string,\r\n\t\t@Body() entity: any\r\n\t): Promise<any> {\r\n\t\treturn this.proposalService.create({\r\n\t\t\tid,\r\n\t\t\t...entity\r\n\t\t});\r\n\t}\r\n}\r\n","import {\r\n\tColumn,\r\n\tEntity,\r\n\tIndex,\r\n\tJoinColumn,\r\n\tRelationId,\r\n\tManyToOne,\r\n\tManyToMany,\r\n\tJoinTable\r\n} from 'typeorm';\r\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\r\nimport { IsString, IsOptional, IsDate } from 'class-validator';\r\nimport {\r\n\tIProposal,\r\n\tIEmployee,\r\n\tITag,\r\n\tIOrganizationContact\r\n} from '@gauzy/models';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { Tag } from '../tags/tag.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\nimport { OrganizationContact } from '../organization-contact/organization-contact.entity';\r\n\r\n@Entity('proposal')\r\nexport class Proposal extends TenantOrganizationBase implements IProposal {\r\n\t@ApiProperty({ type: Tag })\r\n\t@ManyToMany((type) => Tag, (tag) => tag.proposal)\r\n\t@JoinTable({ name: 'tag_proposal' })\r\n\ttags: ITag[];\r\n\r\n\t@ApiProperty({ type: Employee })\r\n\t@ManyToOne((type) => Employee, { nullable: true, onDelete: 'CASCADE' })\r\n\t@JoinColumn()\r\n\temployee: IEmployee;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@RelationId((proposal: Proposal) => proposal.employee)\r\n\t@IsString()\r\n\t@Column({ nullable: true })\r\n\treadonly employeeId?: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Index()\r\n\t@IsString()\r\n\t@Column({ nullable: true })\r\n\tjobPostUrl: string;\r\n\r\n\t@ApiPropertyOptional({ type: Date })\r\n\t@IsDate()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tvalueDate?: Date;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@IsString()\r\n\t@IsOptional()\r\n\t@Column()\r\n\tjobPostContent?: string;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@IsString()\r\n\t@IsOptional()\r\n\t@Column()\r\n\tproposalContent?: string;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@IsString()\r\n\t@IsOptional()\r\n\t@Column()\r\n\tstatus?: string;\r\n\r\n\t@ApiPropertyOptional({ type: OrganizationContact })\r\n\t@ManyToOne(\r\n\t\t(type) => OrganizationContact,\r\n\t\t(organizationContact) => organizationContact.proposals,\r\n\t\t{\r\n\t\t\tnullable: true,\r\n\t\t\tonDelete: 'CASCADE'\r\n\t\t}\r\n\t)\r\n\t@JoinColumn()\r\n\torganizationContact?: IOrganizationContact;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@RelationId((contact: Proposal) => contact.organizationContact)\r\n\t@Column({ nullable: true })\r\n\torganizationContactId?: string;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { Proposal } from './proposal.entity';\r\nimport { ProposalController } from './proposal.controller';\r\nimport { ProposalService } from './proposal.service';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { User } from '../user/user.entity';\r\nimport { UserService } from '../user/user.service';\r\nimport { CommandHandlers } from './commands/handlers';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([User, Proposal, Employee]),\r\n\t\tTenantModule\r\n\t],\r\n\tcontrollers: [ProposalController],\r\n\tproviders: [ProposalService, UserService, ...CommandHandlers],\r\n\texports: [ProposalService, UserService]\r\n})\r\nexport class ProposalModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { Proposal } from './proposal.entity';\r\nimport * as faker from 'faker';\r\nimport { Tag } from '../tags/tag.entity';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { Organization } from '../organization/organization.entity';\r\n\r\nexport const createDefaultProposals = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\temployees: Employee[],\r\n\torganizations: Organization[],\r\n\tnoOfProposalsPerOrganization: number\r\n): Promise<Proposal[]> => {\r\n\tconst proposals: Proposal[] = [];\r\n\tfor (const organization of organizations) {\r\n\t\tconst tags = await connection.manager.find(Tag, {\r\n\t\t\twhere: [{ organization: organization }]\r\n\t\t});\r\n\t\tfor (let i = 0; i < noOfProposalsPerOrganization; i++) {\r\n\t\t\tconst proposal = new Proposal();\r\n\t\t\tproposal.employee = faker.random.arrayElement(employees);\r\n\t\t\tproposal.jobPostUrl = faker.internet.url();\r\n\t\t\tproposal.jobPostContent = faker.name.jobTitle();\r\n\t\t\tproposal.organization = organization;\r\n\t\t\tproposal.status = faker.random.arrayElement(['ACCEPTED', 'SENT']);\r\n\t\t\tproposal.tags = [faker.random.arrayElement(tags)];\r\n\t\t\tproposal.valueDate = faker.date.recent();\r\n\t\t\tproposal.proposalContent = faker.name.jobDescriptor();\r\n\t\t\tproposal.tenant = tenant;\r\n\t\t\tproposals.push(proposal);\r\n\t\t}\r\n\t}\r\n\r\n\treturn await connection.manager.save(proposals);\r\n};\r\n\r\nexport const createRandomProposals = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantEmployeeMap: Map<Tenant, Employee[]>,\r\n\ttenantOrganizationsMap: Map<Tenant, Organization[]>,\r\n\tnoOfProposalsPerOrganization: number\r\n): Promise<Proposal[]> => {\r\n\tconst proposals: Proposal[] = [];\r\n\tfor (const tenant of tenants) {\r\n\t\tconst organizations = tenantOrganizationsMap.get(tenant);\r\n\t\tconst employees = tenantEmployeeMap.get(tenant);\r\n\t\tfor (const organization of organizations) {\r\n\t\t\tconst tags = await connection.manager.find(Tag, {\r\n\t\t\t\twhere: [{ organization: organization }]\r\n\t\t\t});\r\n\t\t\tfor (let i = 0; i < noOfProposalsPerOrganization; i++) {\r\n\t\t\t\tconst proposal = new Proposal();\r\n\t\t\t\tproposal.employee = faker.random.arrayElement(employees);\r\n\t\t\t\tproposal.jobPostUrl = faker.internet.url();\r\n\t\t\t\tproposal.jobPostContent = faker.name.jobTitle();\r\n\t\t\t\tproposal.organization = organization;\r\n\t\t\t\tproposal.status = faker.random.arrayElement([\r\n\t\t\t\t\t'ACCEPTED',\r\n\t\t\t\t\t'SENT'\r\n\t\t\t\t]);\r\n\t\t\t\tproposal.tags = [faker.random.arrayElement(tags)];\r\n\t\t\t\tproposal.valueDate = faker.date.recent();\r\n\t\t\t\tproposal.proposalContent = faker.name.jobDescriptor();\r\n\t\t\t\tproposal.tenant = tenant;\r\n\t\t\t\tproposals.push(proposal);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn await connection.manager.save(proposals);\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository, FindManyOptions } from 'typeorm';\r\nimport { Proposal } from './proposal.entity';\r\nimport { IPagination } from '../core';\r\nimport { IProposalCreateInput, IProposal } from '@gauzy/models';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { TenantAwareCrudService } from '../core/crud/tenant-aware-crud.service';\r\n\r\n@Injectable()\r\nexport class ProposalService extends TenantAwareCrudService<Proposal> {\r\n\tconstructor(\r\n\t\t@InjectRepository(Proposal)\r\n\t\tprivate readonly proposalRepository: Repository<Proposal>,\r\n\t\t@InjectRepository(Employee)\r\n\t\tprivate readonly employeeRepository: Repository<Employee>\r\n\t) {\r\n\t\tsuper(proposalRepository);\r\n\t}\r\n\r\n\tasync getAllProposals(\r\n\t\tfilter?: FindManyOptions<Proposal>,\r\n\t\tfilterDate?: string\r\n\t): Promise<IPagination<IProposal>> {\r\n\t\tconst total = await this.repository.count(filter);\r\n\t\tlet items = await this.repository.find(filter);\r\n\r\n\t\tif (filterDate) {\r\n\t\t\tconst dateObject = new Date(filterDate);\r\n\r\n\t\t\tconst month = dateObject.getMonth() + 1;\r\n\t\t\tconst year = dateObject.getFullYear();\r\n\r\n\t\t\titems = items.filter((i) => {\r\n\t\t\t\tconst currentItemMonth = i.valueDate.getMonth() + 1;\r\n\t\t\t\tconst currentItemYear = i.valueDate.getFullYear();\r\n\t\t\t\treturn currentItemMonth === month && currentItemYear === year;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn { items, total };\r\n\t}\r\n\r\n\tasync createProposal(entity: IProposalCreateInput): Promise<Proposal> {\r\n\t\tconst proposal = new Proposal();\r\n\t\tproposal.jobPostUrl = entity.jobPostUrl;\r\n\t\tproposal.valueDate = entity.valueDate;\r\n\t\tproposal.jobPostContent = entity.jobPostContent;\r\n\t\tproposal.proposalContent = entity.proposalContent;\r\n\r\n\t\tawait this.employeeRepository.findOneOrFail(entity.employeeId);\r\n\r\n\t\treturn this.proposalRepository.save(proposal);\r\n\t}\r\n}\r\n","import { Controller, Get, HttpStatus, Query } from '@nestjs/common';\r\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\r\nimport { IPagination, PaginationParams } from '../core';\r\nimport { ReportCategory } from './report-category.entity';\r\nimport { ReportCategoryService } from './report-category.service';\r\n\r\n@ApiTags('Report Category')\r\n@Controller('category')\r\nexport class ReportCategoryController {\r\n\tconstructor(private reportCategoryService: ReportCategoryService) {}\r\n\r\n\t@ApiOperation({ summary: 'Find all' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found records'\r\n\t})\r\n\t@Get()\r\n\tasync findAll(\r\n\t\t@Query() filter?: PaginationParams<ReportCategory>\r\n\t): Promise<IPagination<ReportCategory>> {\r\n\t\treturn this.reportCategoryService.findAll(filter);\r\n\t}\r\n}\r\n","import { Entity, Index, Column, OneToMany } from 'typeorm';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsString, IsNotEmpty } from 'class-validator';\r\nimport { IReport, IReportCategory } from '@gauzy/models';\r\nimport { Report } from './report.entity';\r\nimport { Base } from '../core/entities/base';\r\n\r\n@Entity('report_category')\r\nexport class ReportCategory extends Base implements IReportCategory {\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Index()\r\n\t@Column()\r\n\tname?: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@Column({ nullable: true })\r\n\ticonClass?: string;\r\n\r\n\t@ApiProperty({ type: Report })\r\n\t@OneToMany(() => Report, (report) => report.category)\r\n\treports: IReport[];\r\n}\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { CrudService } from '../core';\r\nimport { ReportCategory } from './report-category.entity';\r\n\r\n@Injectable()\r\nexport class ReportCategoryService extends CrudService<ReportCategory> {\r\n\tconstructor(\r\n\t\t@InjectRepository(ReportCategory)\r\n\t\treportRepository: Repository<ReportCategory>\r\n\t) {\r\n\t\tsuper(reportRepository);\r\n\t}\r\n}\r\n","import { Entity, Column, RelationId, ManyToOne, JoinColumn } from 'typeorm';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IOrganization, IReport, IReportOrganization } from '@gauzy/models';\r\nimport { Base } from '../core/entities/base';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { Report } from './report.entity';\r\n\r\n@Entity('report_organization')\r\nexport class ReportOrganization extends Base implements IReportOrganization {\r\n\t@ApiProperty({ type: Report })\r\n\t@ManyToOne(() => Report)\r\n\t@JoinColumn()\r\n\treport?: IReport;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@RelationId((report: ReportOrganization) => report.report)\r\n\t@Column()\r\n\treportId?: string;\r\n\r\n\t@ApiProperty({ type: Organization })\r\n\t@ManyToOne(() => Organization)\r\n\t@JoinColumn()\r\n\torganization?: IOrganization;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@RelationId((report: ReportOrganization) => report.organization)\r\n\t@Column()\r\n\torganizationId?: string;\r\n\r\n\t@Column({ default: true })\r\n\tisEnabled?: boolean;\r\n}\r\n","import {\r\n\tGetReportMenuItemsInput,\r\n\tIGetReport,\r\n\tUpdateReportMenuInput\r\n} from '@gauzy/models';\r\nimport {\r\n\tBody,\r\n\tController,\r\n\tGet,\r\n\tHttpStatus,\r\n\tPost,\r\n\tQuery,\r\n\tUseGuards\r\n} from '@nestjs/common';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\r\nimport { CrudController, IPagination } from '../core';\r\nimport { Report } from './report.entity';\r\nimport { ReportService } from './report.service';\r\n\r\n@ApiTags('Report')\r\n@Controller()\r\nexport class ReportController extends CrudController<Report> {\r\n\tconstructor(private reportService: ReportService) {\r\n\t\tsuper(reportService);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find all' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found records'\r\n\t})\r\n\t@Get()\r\n\tasync getAll(@Query() filter?: IGetReport): Promise<IPagination<Report>> {\r\n\t\treturn this.reportService.findAll(filter);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find all' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found records'\r\n\t})\r\n\t@Get('menu-items')\r\n\tasync getMenuItems(\r\n\t\t@Query() filter?: GetReportMenuItemsInput\r\n\t): Promise<Report[]> {\r\n\t\treturn this.reportService.getMenuItems(filter);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find all' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found records'\r\n\t})\r\n\t@UseGuards(AuthGuard('jwt'))\r\n\t@Post('menu-item')\r\n\tasync updateReportMenu(@Body() input?: UpdateReportMenuInput) {\r\n\t\treturn this.reportService.updateReportMenu(input);\r\n\t}\r\n}\r\n","import {\r\n\tEntity,\r\n\tIndex,\r\n\tColumn,\r\n\tRelationId,\r\n\tManyToOne,\r\n\tJoinColumn,\r\n\tAfterLoad,\r\n\tOneToMany\r\n} from 'typeorm';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsString, IsNotEmpty } from 'class-validator';\r\nimport { IReport, IReportCategory } from '@gauzy/models';\r\nimport { ReportCategory } from './report-category.entity';\r\nimport { Base } from '../core/entities/base';\r\nimport { FileStorage } from '../core/file-storage';\r\nimport { ReportOrganization } from './report-organization.entity';\r\n\r\n@Entity('report')\r\nexport class Report extends Base implements IReport {\r\n\t@ApiProperty({ type: ReportOrganization })\r\n\t@OneToMany(\r\n\t\t() => ReportOrganization,\r\n\t\t(reportOrganization) => reportOrganization.report\r\n\t)\r\n\t@JoinColumn()\r\n\treportOrganizations?: ReportOrganization[];\r\n\r\n\t@ApiProperty({ type: ReportCategory })\r\n\t@ManyToOne(() => ReportCategory)\r\n\t@JoinColumn()\r\n\tcategory?: IReportCategory;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@RelationId((report: Report) => report.category)\r\n\t@Column()\r\n\tcategoryId?: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Index()\r\n\t@Column()\r\n\tname?: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Index()\r\n\t@Column({ nullable: true })\r\n\tslug?: string;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@IsString()\r\n\t@Column({ nullable: true })\r\n\tdescription?: string;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@IsString()\r\n\t@Column({ nullable: true })\r\n\timage?: string;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@IsString()\r\n\t@Column({ nullable: true })\r\n\ticonClass?: string;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@IsString()\r\n\t@Column({ default: false })\r\n\tshowInMenu?: boolean;\r\n\r\n\timageUrl?: string;\r\n\r\n\t@AfterLoad()\r\n\tafterLoad?() {\r\n\t\tif (this.image) {\r\n\t\t\tthis.imageUrl = new FileStorage().getProvider().url(this.image);\r\n\t\t}\r\n\t}\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { ReportCategory } from './report-category.entity';\r\nimport { Report } from './report.entity';\r\nimport { ReportController } from './report.controller';\r\nimport { ReportService } from './report.service';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\nimport { ReportCategoryController } from './report-category.controller';\r\nimport { ReportCategoryService } from './report-category.service';\r\nimport { ReportOrganization } from './report-organization.entity';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([Report, ReportCategory, ReportOrganization]),\r\n\t\tTenantModule\r\n\t],\r\n\tcontrollers: [ReportCategoryController, ReportController],\r\n\tproviders: [ReportService, ReportCategoryService]\r\n})\r\nexport class ReportModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { Report } from './report.entity';\r\nimport { ReportCategory } from './report-category.entity';\r\nimport { indexBy } from 'underscore';\r\nimport * as path from 'path';\r\nimport { copyFileSync, mkdirSync } from 'fs';\r\nimport * as rimraf from 'rimraf';\r\nimport chalk from 'chalk';\r\nimport { environment as env } from '@env-api/environment';\r\n\r\nexport const createDefaultReport = async (\r\n\tconnection: Connection\r\n): Promise<Report[]> => {\r\n\tawait cleanReport(connection);\r\n\r\n\tconst defaultCategories: ReportCategory[] = [\r\n\t\tnew ReportCategory({\r\n\t\t\tname: 'Time Tracking',\r\n\t\t\ticonClass: 'fa-clock'\r\n\t\t}),\r\n\t\tnew ReportCategory({\r\n\t\t\tname: 'Payments',\r\n\t\t\ticonClass: 'fa-credit-card'\r\n\t\t}),\r\n\t\tnew ReportCategory({\r\n\t\t\tname: 'Time Off',\r\n\t\t\ticonClass: 'fa-stopwatch'\r\n\t\t}),\r\n\t\tnew ReportCategory({\r\n\t\t\tname: 'Invoicing',\r\n\t\t\ticonClass: 'fa-file-invoice-dollar'\r\n\t\t})\r\n\t];\r\n\r\n\tawait connection.manager.save(defaultCategories);\r\n\r\n\tconst categoryByName = indexBy(defaultCategories, 'name');\r\n\r\n\tconst reports: Report[] = [\r\n\t\tnew Report({\r\n\t\t\tname: 'Time & Activity',\r\n\t\t\tslug: 'time-activity',\r\n\t\t\timage: copyImage('time-activity.png'),\r\n\t\t\tcategory: categoryByName['Time Tracking'],\r\n\t\t\tshowInMenu: true,\r\n\t\t\ticonClass: 'clock-outline',\r\n\t\t\tdescription:\r\n\t\t\t\t\"See team members' time worked, activity levels, and amounts earned per project or task\"\r\n\t\t}),\r\n\t\tnew Report({\r\n\t\t\tname: 'Weekly',\r\n\t\t\tslug: 'weekly',\r\n\t\t\timage: copyImage('weekly.png'),\r\n\t\t\tcategory: categoryByName['Time Tracking'],\r\n\t\t\ticonClass: 'calendar-outline',\r\n\t\t\tshowInMenu: true,\r\n\t\t\tdescription:\r\n\t\t\t\t\"See team members' time worked, activity levels, and amount earned per week\"\r\n\t\t}),\r\n\t\tnew Report({\r\n\t\t\tname: 'Apps & URLs',\r\n\t\t\tslug: 'apps-urls',\r\n\t\t\timage: copyImage('apps-urls.png'),\r\n\t\t\tcategory: categoryByName['Time Tracking'],\r\n\t\t\tdescription:\r\n\t\t\t\t\"See team members' apps used and URLs visited while working\"\r\n\t\t}),\r\n\t\tnew Report({\r\n\t\t\tname: 'Manual time edits',\r\n\t\t\tslug: 'manual-time-edits',\r\n\t\t\timage: copyImage('manual-time-edits.png'),\r\n\t\t\tcategory: categoryByName['Time Tracking'],\r\n\t\t\ticonClass: 'browser-outline',\r\n\t\t\tdescription:\r\n\t\t\t\t\"See team members' time worked, project, task, and reason for each manual time entry\"\r\n\t\t}),\r\n\t\tnew Report({\r\n\t\t\tname: 'Expense',\r\n\t\t\tslug: 'expense',\r\n\t\t\timage: copyImage('expense.png'),\r\n\t\t\tcategory: categoryByName['Time Tracking'],\r\n\t\t\ticonClass: 'credit-card-outline',\r\n\t\t\tdescription:\r\n\t\t\t\t'See how much has been spent on expenses by member and project.'\r\n\t\t}),\r\n\t\tnew Report({\r\n\t\t\tname: 'Amounts owed',\r\n\t\t\tslug: 'amounts-owed',\r\n\t\t\timage: copyImage('amounts-owed.png'),\r\n\t\t\tcategory: categoryByName['Payments'],\r\n\t\t\ticonClass: 'credit-card-outline',\r\n\t\t\tdescription: 'See how much team members are currently owed'\r\n\t\t}),\r\n\t\tnew Report({\r\n\t\t\tname: 'Payments',\r\n\t\t\tslug: 'payments',\r\n\t\t\timage: copyImage('payments.png'),\r\n\t\t\tcategory: categoryByName['Payments'],\r\n\t\t\ticonClass: 'credit-card-outline',\r\n\t\t\tdescription:\r\n\t\t\t\t'See how much team members were paid over a given period'\r\n\t\t}),\r\n\t\tnew Report({\r\n\t\t\tname: 'Weekly limits',\r\n\t\t\tslug: 'weekly-limits',\r\n\t\t\timage: copyImage('blank.png'),\r\n\t\t\tcategory: categoryByName['Time Off'],\r\n\t\t\tdescription: \"See team members' weekly limits usage\"\r\n\t\t}),\r\n\t\tnew Report({\r\n\t\t\tname: 'Daily limits',\r\n\t\t\tslug: 'daily-limits',\r\n\t\t\timage: copyImage('blank.png'),\r\n\t\t\tcategory: categoryByName['Time Off'],\r\n\t\t\ticonClass: 'clock-outline',\r\n\t\t\tdescription: \"See team members' daily limits usage\"\r\n\t\t}),\r\n\t\tnew Report({\r\n\t\t\tname: 'Project budgets',\r\n\t\t\tslug: 'project-budgets',\r\n\t\t\timage: copyImage('blank.png'),\r\n\t\t\tcategory: categoryByName['Invoicing'],\r\n\t\t\ticonClass: 'credit-card-outline',\r\n\t\t\tdescription:\r\n\t\t\t\t\"See how much of your projects' budgets have been spent\"\r\n\t\t}),\r\n\t\tnew Report({\r\n\t\t\tname: 'Client budgets',\r\n\t\t\tslug: 'client-budgets',\r\n\t\t\timage: copyImage('blank.png'),\r\n\t\t\tcategory: categoryByName['Invoicing'],\r\n\t\t\ticonClass: 'credit-card-outline',\r\n\t\t\tdescription: \"See how much of your clients' budgets have been spent\"\r\n\t\t})\r\n\t];\r\n\r\n\treturn await connection.manager.save(reports);\r\n};\r\n\r\nasync function cleanReport(connection) {\r\n\tif (env.database.type === 'sqlite') {\r\n\t\tawait connection.query('DELETE FROM report_category');\r\n\t\tawait connection.query('DELETE FROM report');\r\n\t} else {\r\n\t\tawait connection.query(\r\n\t\t\t'TRUNCATE TABLE report_category RESTART IDENTITY CASCADE'\r\n\t\t);\r\n\t\tawait connection.query(\r\n\t\t\t'TRUNCATE TABLE report RESTART IDENTITY CASCADE'\r\n\t\t);\r\n\t}\r\n\r\n\tconsole.log(chalk.green(`CLEANING UP REPORT IMAGES...`));\r\n\r\n\tawait new Promise((resolve, reject) => {\r\n\t\tconst dir = env.isElectron\r\n\t\t\t? path.resolve(env.gauzyUserPath, ...['public', 'reports'])\r\n\t\t\t: path.resolve('.', ...['apps', 'api', 'public', 'reports']);\r\n\r\n\t\t// delete old generated report image\r\n\t\trimraf(dir, () => {\r\n\t\t\tconsole.log(chalk.green(`CLEANED UP REPORT IMAGES`));\r\n\t\t\tresolve(null);\r\n\t\t});\r\n\t});\r\n}\r\n\r\nfunction copyImage(fileName: string) {\r\n\tconst dir = env.isElectron\r\n\t\t? path.resolve(\r\n\t\t\t\tenv.gauzyUserPath,\r\n\t\t\t\t...['src', 'assets', 'seed', 'reports']\r\n\t\t  )\r\n\t\t: path.resolve(\r\n\t\t\t\t'.',\r\n\t\t\t\t...['apps', 'api', 'src', 'assets', 'seed', 'reports']\r\n\t\t  );\r\n\r\n\tconst baseDir = env.isElectron\r\n\t\t? path.resolve(env.gauzyUserPath, ...['public'])\r\n\t\t: path.resolve('.', ...['apps', 'api', 'public']);\r\n\r\n\tconst destDir = 'reports';\r\n\r\n\tmkdirSync(path.join(baseDir, destDir), { recursive: true });\r\n\r\n\tconst destFilePath = path.join(destDir, fileName);\r\n\tcopyFileSync(path.join(dir, fileName), path.join(baseDir, destFilePath));\r\n\r\n\treturn destFilePath;\r\n}\r\n","import {\r\n\tGetReportMenuItemsInput,\r\n\tIGetReport,\r\n\tIPagination,\r\n\tUpdateReportMenuInput\r\n} from '@gauzy/models';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { indexBy } from 'underscore';\r\nimport { CrudService } from '../core';\r\nimport { ReportOrganization } from './report-organization.entity';\r\nimport { Report } from './report.entity';\r\n\r\n@Injectable()\r\nexport class ReportService extends CrudService<Report> {\r\n\tconstructor(\r\n\t\t@InjectRepository(Report)\r\n\t\treportRepository: Repository<Report>,\r\n\t\t@InjectRepository(ReportOrganization)\r\n\t\tprivate reportOrganizationRepository: Repository<ReportOrganization>\r\n\t) {\r\n\t\tsuper(reportRepository);\r\n\t}\r\n\r\n\tpublic async findAll(filter?: IGetReport): Promise<IPagination<Report>> {\r\n\t\tconst { items, total } = await super.findAll(filter);\r\n\r\n\t\tconst menuItems = await this.getMenuItems({\r\n\t\t\torganizationId: filter.organizationId\r\n\t\t});\r\n\t\tconst orgMenuItems = indexBy(menuItems, 'id');\r\n\r\n\t\tconst mapItems = items.map((item) => {\r\n\t\t\tif (orgMenuItems[item.id]) {\r\n\t\t\t\titem.showInMenu = true;\r\n\t\t\t} else {\r\n\t\t\t\titem.showInMenu = false;\r\n\t\t\t}\r\n\t\t\treturn item;\r\n\t\t});\r\n\t\treturn { items: mapItems, total };\r\n\t}\r\n\r\n\tpublic getMenuItems(filter: GetReportMenuItemsInput): Promise<Report[]> {\r\n\t\treturn this.repository.find({\r\n\t\t\trelations: ['reportOrganizations'],\r\n\t\t\tjoin: {\r\n\t\t\t\talias: 'reports',\r\n\t\t\t\tinnerJoin: {\r\n\t\t\t\t\treportOrganizations: 'reports.reportOrganizations'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\twhere: (qb) => {\r\n\t\t\t\tqb.where(\r\n\t\t\t\t\t'\"reportOrganizations\".\"organizationId\" = :organizationId',\r\n\t\t\t\t\t{ organizationId: filter.organizationId }\r\n\t\t\t\t);\r\n\t\t\t\tqb.andWhere('\"reportOrganizations\".\"isEnabled\" = :isEnabled', {\r\n\t\t\t\t\tisEnabled: true\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tasync updateReportMenu(\r\n\t\tinput: UpdateReportMenuInput\r\n\t): Promise<ReportOrganization> {\r\n\t\tlet reportOrganization = await this.reportOrganizationRepository.findOne(\r\n\t\t\t{\r\n\t\t\t\twhere: {\r\n\t\t\t\t\treportId: input.reportId\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\tif (!reportOrganization) {\r\n\t\t\treportOrganization = new ReportOrganization(input);\r\n\t\t} else {\r\n\t\t\treportOrganization = new ReportOrganization(\r\n\t\t\t\tObject.assign(reportOrganization, input)\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tthis.reportOrganizationRepository.save(reportOrganization);\r\n\t\treturn reportOrganization;\r\n\t}\r\n}\r\n","/*\r\n  - Request Approval Employee table is the third table which will combine the employee table and the request approval table.\r\n  - Request Approval Employee table has the many to one relationship to the RequestApproval table and the Employee table by requestApprovalId and employeeId\r\n*/\r\nimport { Entity, Column, ManyToOne } from 'typeorm';\r\nimport { IRequestApprovalEmployee } from '@gauzy/models';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsString, IsNotEmpty, IsNumber } from 'class-validator';\r\nimport { RequestApproval } from '../request-approval/request-approval.entity';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('request_approval_employee')\r\nexport class RequestApprovalEmployee extends TenantOrganizationBase\r\n\timplements IRequestApprovalEmployee {\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Column()\r\n\tpublic requestApprovalId!: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Column()\r\n\tpublic employeeId!: string;\r\n\r\n\t@ManyToOne(\r\n\t\t(type) => RequestApproval,\r\n\t\t(requestApproval) => requestApproval.employeeApprovals,\r\n\t\t{\r\n\t\t\tonDelete: 'CASCADE'\r\n\t\t}\r\n\t)\r\n\tpublic requestApproval!: RequestApproval;\r\n\r\n\t@ManyToOne((type) => Employee, (employee) => employee.requestApprovals, {\r\n\t\tcascade: true\r\n\t})\r\n\tpublic employee!: Employee;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@IsNumber()\r\n\t@Column({ nullable: true })\r\n\tstatus: number;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { RequestApprovalEmployee } from './request-approval-employee.entity';\r\n\r\n@Module({\r\n\timports: [TypeOrmModule.forFeature([RequestApprovalEmployee])]\r\n})\r\nexport class RequestApprovalEmployeeModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { IEmployee, IOrganization } from '@gauzy/models';\r\nimport { RequestApprovalEmployee } from './request-approval-employee.entity';\r\nimport * as faker from 'faker';\r\nimport { ApprovalPolicy } from '../approval-policy/approval-policy.entity';\r\nimport { RequestApproval } from '../request-approval/request-approval.entity';\r\n\r\nexport const createRandomRequestApprovalEmployee = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantEmployeeMap: Map<Tenant, IEmployee[]>,\r\n\ttenantOrganizationsMap: Map<Tenant, IOrganization[]>\r\n): Promise<RequestApprovalEmployee[]> => {\r\n\tif (!tenantOrganizationsMap) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: tenantOrganizationsMap not found, Request Approval Employee  will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\tif (!tenantEmployeeMap) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: tenantEmployeeMap not found, Request Approval Employee  will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tfor (const tenant of tenants) {\r\n\t\tconst tenantOrgs = tenantOrganizationsMap.get(tenant);\r\n\t\tconst tenantEmployees = tenantEmployeeMap.get(tenant);\r\n\t\tfor (const tenantEmployee of tenantEmployees) {\r\n\t\t\tfor (const tenantOrg of tenantOrgs) {\r\n\t\t\t\tconst requestApprovalEmployees: RequestApprovalEmployee[] = [];\r\n\t\t\t\tconst approvalPolicies = await connection.manager.find(\r\n\t\t\t\t\tApprovalPolicy,\r\n\t\t\t\t\t{ where: { organization: tenantOrg } }\r\n\t\t\t\t);\r\n\t\t\t\tfor (const approvalPolicy of approvalPolicies) {\r\n\t\t\t\t\tconst requestApprovals = await connection.manager.find(\r\n\t\t\t\t\t\tRequestApproval,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\twhere: { approvalPolicy: approvalPolicy }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t\tfor (const requestApproval of requestApprovals) {\r\n\t\t\t\t\t\tconst requestApprovalEmployee = new RequestApprovalEmployee();\r\n\r\n\t\t\t\t\t\trequestApprovalEmployee.requestApprovalId =\r\n\t\t\t\t\t\t\trequestApproval.id;\r\n\t\t\t\t\t\trequestApprovalEmployee.requestApproval = requestApproval;\r\n\t\t\t\t\t\t// requestApprovalEmployee.employeeId = tenantEmployee.id;\r\n\t\t\t\t\t\trequestApprovalEmployee.employee = tenantEmployee;\r\n\t\t\t\t\t\trequestApprovalEmployee.status = faker.random.number(\r\n\t\t\t\t\t\t\t99\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\trequestApprovalEmployee.tenant = tenant;\r\n\t\t\t\t\t\trequestApprovalEmployee.organization = tenantOrg;\r\n\r\n\t\t\t\t\t\trequestApprovalEmployees.push(requestApprovalEmployee);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tawait connection.manager.save(requestApprovalEmployees);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n","/*\r\n  - Request Approval Employee table is the third table which will combine the employee table and the request approval table.\r\n  - Request Approval Employee table has the many to one relationship to the RequestApproval table and the Employee table by requestApprovalId and employeeId\r\n*/\r\nimport { Entity, Column, ManyToOne } from 'typeorm';\r\nimport { IRequestApprovalTeam } from '@gauzy/models';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsString, IsNotEmpty, IsNumber } from 'class-validator';\r\nimport { RequestApproval } from '../request-approval/request-approval.entity';\r\nimport { OrganizationTeam } from '../organization-team/organization-team.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('request_approval_team')\r\nexport class RequestApprovalTeam extends TenantOrganizationBase\r\n\timplements IRequestApprovalTeam {\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Column()\r\n\tpublic requestApprovalId!: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Column()\r\n\tpublic teamId!: string;\r\n\r\n\t@ManyToOne(\r\n\t\t(type) => RequestApproval,\r\n\t\t(requestApproval) => requestApproval.teamApprovals,\r\n\t\t{\r\n\t\t\tonDelete: 'CASCADE'\r\n\t\t}\r\n\t)\r\n\tpublic requestApproval!: RequestApproval;\r\n\r\n\t@ManyToOne((type) => OrganizationTeam, (team) => team.requestApprovals, {\r\n\t\tonDelete: 'CASCADE'\r\n\t})\r\n\tpublic team!: OrganizationTeam;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@IsNumber()\r\n\t@Column({ nullable: true })\r\n\tstatus: number;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { RequestApprovalTeam } from './request-approval-team.entity';\r\n\r\n@Module({\r\n\timports: [TypeOrmModule.forFeature([RequestApprovalTeam])]\r\n})\r\nexport class RequestApprovalTeamModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { IEmployee, IOrganization } from '@gauzy/models';\r\nimport { RequestApprovalTeam } from './request-approval-team.entity';\r\nimport * as faker from 'faker';\r\nimport { ApprovalPolicy } from '../approval-policy/approval-policy.entity';\r\nimport { RequestApproval } from '../request-approval/request-approval.entity';\r\nimport { OrganizationTeam } from '../organization-team/organization-team.entity';\r\n\r\nexport const createRandomRequestApprovalTeam = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantEmployeeMap: Map<Tenant, IEmployee[]>,\r\n\ttenantOrganizationsMap: Map<Tenant, IOrganization[]>\r\n): Promise<RequestApprovalTeam[]> => {\r\n\tif (!tenantOrganizationsMap) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: tenantOrganizationsMap not found, Request Approval Team  will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\tif (!tenantEmployeeMap) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: tenantEmployeeMap not found, Request Approval Team  will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst requestApprovalEmployees: RequestApprovalTeam[] = [];\r\n\r\n\tfor (const tenant of tenants) {\r\n\t\tconst tenantOrgs = tenantOrganizationsMap.get(tenant);\r\n\r\n\t\tfor (const tenantOrg of tenantOrgs) {\r\n\t\t\tconst approvalPolicies = await connection.manager.find(\r\n\t\t\t\tApprovalPolicy,\r\n\t\t\t\t{\r\n\t\t\t\t\twhere: [{ organization: tenantOrg }]\r\n\t\t\t\t}\r\n\t\t\t);\r\n\r\n\t\t\tconst organizationTeams = await connection.manager.find(\r\n\t\t\t\tOrganizationTeam,\r\n\t\t\t\t{\r\n\t\t\t\t\twhere: [{ organizationId: tenantOrg.id }]\r\n\t\t\t\t}\r\n\t\t\t);\r\n\r\n\t\t\tfor (const approvalPolicy of approvalPolicies) {\r\n\t\t\t\tconst requestApprovals = await connection.manager.find(\r\n\t\t\t\t\tRequestApproval,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\twhere: [{ approvalPolicy: approvalPolicy }]\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\r\n\t\t\t\tfor (const requestApproval of requestApprovals) {\r\n\t\t\t\t\tfor (const organizationTeam of organizationTeams) {\r\n\t\t\t\t\t\tconst requestApprovalEmployee = new RequestApprovalTeam();\r\n\r\n\t\t\t\t\t\trequestApprovalEmployee.requestApprovalId =\r\n\t\t\t\t\t\t\trequestApproval.id;\r\n\t\t\t\t\t\trequestApprovalEmployee.requestApproval = requestApproval;\r\n\t\t\t\t\t\trequestApprovalEmployee.teamId = organizationTeam.id;\r\n\t\t\t\t\t\trequestApprovalEmployee.team = organizationTeam;\r\n\t\t\t\t\t\trequestApprovalEmployee.tenant = tenant;\r\n\t\t\t\t\t\trequestApprovalEmployee.organization = tenantOrg;\r\n\t\t\t\t\t\trequestApprovalEmployee.status = faker.random.number(3);\r\n\r\n\t\t\t\t\t\trequestApprovalEmployees.push(requestApprovalEmployee);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tawait connection.manager.save(requestApprovalEmployees);\r\n};\r\n","import { ICommandHandler, CommandHandler } from '@nestjs/cqrs';\r\nimport { RequestApprovalStatusCommand } from '../request-approval.status.command';\r\nimport { RequestApproval } from '../../request-approval.entity';\r\nimport { RequestApprovalService } from '../../request-approval.service';\r\nimport { EquipmentSharingService } from '../../../equipment-sharing';\r\nimport {\r\n\tApprovalPolicyTypesStringEnum,\r\n\tStatusTypesMapRequestApprovalEnum\r\n} from '@gauzy/models';\r\nimport { TimeOffRequestService } from '../../../time-off-request/time-off-request.service';\r\n\r\n@CommandHandler(RequestApprovalStatusCommand)\r\nexport class RequestApprovalStatusHandler\r\n\timplements ICommandHandler<RequestApprovalStatusCommand> {\r\n\tconstructor(\r\n\t\tprivate requestApprovalService: RequestApprovalService,\r\n\t\tprivate equipmentSharingService: EquipmentSharingService,\r\n\t\tprivate timeOffRequestService: TimeOffRequestService\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand?: RequestApprovalStatusCommand\r\n\t): Promise<RequestApproval> {\r\n\t\tconst { requestApprovalId, status } = command;\r\n\r\n\t\tconst requestApproval = await this.requestApprovalService.updateStatusRequestApprovalByAdmin(\r\n\t\t\trequestApprovalId,\r\n\t\t\tstatus\r\n\t\t);\r\n\r\n\t\tif (\r\n\t\t\trequestApproval.requestType ===\r\n\t\t\tApprovalPolicyTypesStringEnum.TIME_OFF\r\n\t\t) {\r\n\t\t\tconst timeOffStatus = StatusTypesMapRequestApprovalEnum[status];\r\n\t\t\tawait this.timeOffRequestService.updateStatusTimeOffByAdmin(\r\n\t\t\t\trequestApproval.requestId,\r\n\t\t\t\ttimeOffStatus\r\n\t\t\t);\r\n\t\t} else if (\r\n\t\t\trequestApproval.requestType ===\r\n\t\t\tApprovalPolicyTypesStringEnum.EQUIPMENT_SHARING\r\n\t\t) {\r\n\t\t\tawait this.equipmentSharingService.updateStatusEquipmentSharingByAdmin(\r\n\t\t\t\trequestApproval.requestId,\r\n\t\t\t\tstatus\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn requestApproval;\r\n\t}\r\n}\r\n","export { RequestApprovalStatusCommand } from './request-approval.status.command';\r\n","import { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class RequestApprovalStatusCommand implements ICommand {\r\n\tstatic readonly type = '[RequestApproval] Status';\r\n\r\n\tconstructor(\r\n\t\tpublic readonly requestApprovalId: string,\r\n\t\tpublic readonly status: number\r\n\t) {}\r\n}\r\n","import { CrudController, IPagination } from '../core';\r\nimport { RequestApproval } from './request-approval.entity';\r\nimport { RequestApprovalService } from './request-approval.service';\r\nimport {\r\n\tIRequestApproval,\r\n\tPermissionsEnum,\r\n\tIRequestApprovalCreateInput,\r\n\tRequestApprovalStatusTypesEnum\r\n} from '@gauzy/models';\r\nimport {\r\n\tQuery,\r\n\tHttpStatus,\r\n\tUseGuards,\r\n\tGet,\r\n\tPost,\r\n\tBody,\r\n\tHttpCode,\r\n\tPut,\r\n\tParam,\r\n\tController\r\n} from '@nestjs/common';\r\nimport { CommandBus } from '@nestjs/cqrs';\r\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\r\nimport { PermissionGuard } from '../shared/guards/auth/permission.guard';\r\nimport { Permissions } from '../shared/decorators/permissions';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { RequestApprovalStatusCommand } from './commands';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\nimport { ParseJsonPipe } from '../shared/pipes/parse-json.pipe';\r\n\r\n@ApiTags('RequestApproval')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard, PermissionGuard)\r\n@Controller()\r\nexport class RequestApprovalControler extends CrudController<RequestApproval> {\r\n\tconstructor(\r\n\t\tprivate readonly requestApprovalService: RequestApprovalService,\r\n\t\tprivate commandBus: CommandBus\r\n\t) {\r\n\t\tsuper(requestApprovalService);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find all request approvals.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found policies',\r\n\t\ttype: RequestApproval\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Permissions(PermissionsEnum.REQUEST_APPROVAL_VIEW)\r\n\t@Get()\r\n\tfindAllRequestApprovals(\r\n\t\t@Query('data', ParseJsonPipe) data: any\r\n\t): Promise<IPagination<IRequestApproval>> {\r\n\t\tconst { relations, findInput } = data;\r\n\t\treturn this.requestApprovalService.findAllRequestApprovals(\r\n\t\t\t{ relations },\r\n\t\t\tfindInput\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find all request approval.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found policies',\r\n\t\ttype: RequestApproval\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Permissions(PermissionsEnum.REQUEST_APPROVAL_VIEW)\r\n\t@Get('employee/:id')\r\n\tfindRequestApprovalsByEmployeeId(\r\n\t\t@Param('id') id: string,\r\n\t\t@Query('data', ParseJsonPipe) data: any\r\n\t): Promise<IPagination<IRequestApproval>> {\r\n\t\tconst { relations, findInput } = data;\r\n\t\treturn this.requestApprovalService.findRequestApprovalsByEmployeeId(\r\n\t\t\tid,\r\n\t\t\trelations,\r\n\t\t\tfindInput\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'create a request approval.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found policies',\r\n\t\ttype: RequestApproval\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Permissions(PermissionsEnum.REQUEST_APPROVAL_EDIT)\r\n\t@Post()\r\n\tasync createRequestApproval(\r\n\t\t@Body() entity: IRequestApprovalCreateInput\r\n\t): Promise<RequestApproval> {\r\n\t\treturn this.requestApprovalService.createRequestApproval(entity);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'employee accept request approval.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found policies',\r\n\t\ttype: RequestApproval\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Permissions(PermissionsEnum.REQUEST_APPROVAL_EDIT)\r\n\t@Put('approval/:id')\r\n\tasync employeeApprovalRequestApproval(\r\n\t\t@Param('id') id: string\r\n\t): Promise<RequestApproval> {\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew RequestApprovalStatusCommand(\r\n\t\t\t\tid,\r\n\t\t\t\tRequestApprovalStatusTypesEnum.APPROVED\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'employee refuse request approval.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found policies',\r\n\t\ttype: RequestApproval\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Permissions(PermissionsEnum.REQUEST_APPROVAL_EDIT)\r\n\t@Put('refuse/:id')\r\n\tasync employeeRefuseRequestApproval(\r\n\t\t@Param('id') id: string\r\n\t): Promise<RequestApproval> {\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew RequestApprovalStatusCommand(\r\n\t\t\t\tid,\r\n\t\t\t\tRequestApprovalStatusTypesEnum.REFUSED\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'update a request approval.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found policies',\r\n\t\ttype: RequestApproval\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Permissions(PermissionsEnum.REQUEST_APPROVAL_EDIT)\r\n\t@Put(':id')\r\n\tasync updateRequestApprovalByAdmin(\r\n\t\t@Param('id') id: string,\r\n\t\t@Body() entity: IRequestApprovalCreateInput\r\n\t): Promise<RequestApproval> {\r\n\t\treturn this.requestApprovalService.updateRequestApproval(id, entity);\r\n\t}\r\n}\r\n","/*\r\n  - Request Approval is a request which is made by the employee. The employee can ask the approver for approvals different things.\r\n  E.g. business trips, job referral awards, etc.\r\n  - Request Approval table has the many to one relationship to ApprovalPolicy table by approvalPolicyId\r\n  - Request Approval table has the one to many relationships to RequestApprovalEmployee table\r\n  - Request Approval table has the many to many relationships to the Employee table through the RequestApprovalEmployee table.\r\n*/\r\nimport {\r\n\tEntity,\r\n\tIndex,\r\n\tColumn,\r\n\tOneToMany,\r\n\tRelationId,\r\n\tManyToOne,\r\n\tJoinColumn,\r\n\tManyToMany,\r\n\tJoinTable\r\n} from 'typeorm';\r\nimport { IRequestApproval, ApprovalPolicyTypesStringEnum } from '@gauzy/models';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsString, IsNotEmpty, IsNumber, IsEnum } from 'class-validator';\r\nimport { RequestApprovalEmployee } from '../request-approval-employee/request-approval-employee.entity';\r\nimport { ApprovalPolicy } from '../approval-policy/approval-policy.entity';\r\nimport { RequestApprovalTeam } from '../request-approval-team/request-approval-team.entity';\r\nimport { Tag } from '../tags/tag.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('request_approval')\r\nexport class RequestApproval extends TenantOrganizationBase\r\n\timplements IRequestApproval {\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Index()\r\n\t@Column()\r\n\tname: string;\r\n\r\n\t@ApiProperty({ type: ApprovalPolicy })\r\n\t@ManyToOne((type) => ApprovalPolicy, {\r\n\t\tnullable: true,\r\n\t\tonDelete: 'CASCADE'\r\n\t})\r\n\t@JoinColumn()\r\n\tapprovalPolicy: ApprovalPolicy;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@RelationId((policy: RequestApproval) => policy.approvalPolicy)\r\n\t@IsString()\r\n\t@Column({ nullable: true })\r\n\tapprovalPolicyId: string;\r\n\r\n\t@OneToMany(\r\n\t\t(type) => RequestApprovalEmployee,\r\n\t\t(employeeApprovals) => employeeApprovals.requestApproval,\r\n\t\t{\r\n\t\t\tcascade: true\r\n\t\t}\r\n\t)\r\n\temployeeApprovals?: RequestApprovalEmployee[];\r\n\r\n\t@OneToMany(\r\n\t\t(type) => RequestApprovalTeam,\r\n\t\t(teamApprovals) => teamApprovals.requestApproval,\r\n\t\t{\r\n\t\t\tcascade: true\r\n\t\t}\r\n\t)\r\n\tteamApprovals?: RequestApprovalTeam[];\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@IsNumber()\r\n\t@Column({ nullable: true })\r\n\tstatus: number;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@IsString()\r\n\t@Column({ nullable: true })\r\n\tcreatedBy: string;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@IsNumber()\r\n\t@Column({ nullable: true })\r\n\tmin_count: number;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@Column({ nullable: true })\r\n\tcreatedByName: string;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@IsString()\r\n\t@Column({ nullable: true })\r\n\trequestId: string;\r\n\r\n\t@ApiProperty()\r\n\t@ManyToMany((type) => Tag, (tag) => tag.requestApproval)\r\n\t@JoinTable({\r\n\t\tname: 'tag_request_approval'\r\n\t})\r\n\ttags?: Tag[];\r\n\r\n\t@ApiProperty({ type: String, enum: ApprovalPolicyTypesStringEnum })\r\n\t@IsEnum(ApprovalPolicyTypesStringEnum)\r\n\t@Column({ nullable: true })\r\n\trequestType: string;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { RequestApproval } from './request-approval.entity';\r\nimport { RequestApprovalControler } from './request-approval.controller';\r\nimport { RequestApprovalService } from './request-approval.service';\r\nimport { User } from '../user/user.entity';\r\nimport { UserService } from '../user/user.service';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { OrganizationTeam } from '../organization-team/organization-team.entity';\r\nimport { OrganizationTeamService } from '../organization-team/organization-team.service';\r\nimport { Role } from '../role/role.entity';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { EmployeeService } from '../employee/employee.service';\r\nimport { RoleService } from '../role/role.service';\r\nimport { OrganizationService } from '../organization/organization.service';\r\nimport { OrganizationTeamEmployeeModule } from '../organization-team-employee/organization-team-employee.module';\r\nimport { TimeOffRequest } from '../time-off-request/time-off-request.entity';\r\nimport {\r\n\tEquipmentSharing,\r\n\tEquipmentSharingService\r\n} from '../equipment-sharing';\r\nimport { RequestApprovalStatusHandler } from './commands/handlers/request-approval.status.handler';\r\nimport { TimeOffRequestService } from '../time-off-request/time-off-request.service';\r\nimport { CqrsModule } from '@nestjs/cqrs';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([\r\n\t\t\tUser,\r\n\t\t\tRequestApproval,\r\n\t\t\tEmployee,\r\n\t\t\tOrganizationTeam,\r\n\t\t\tRole,\r\n\t\t\tOrganization,\r\n\t\t\tTimeOffRequest,\r\n\t\t\tEquipmentSharing\r\n\t\t]),\r\n\t\tCqrsModule,\r\n\t\tOrganizationTeamEmployeeModule,\r\n\t\tTenantModule\r\n\t],\r\n\tcontrollers: [RequestApprovalControler],\r\n\tproviders: [\r\n\t\tRequestApprovalService,\r\n\t\tUserService,\r\n\t\tOrganizationTeamService,\r\n\t\tEmployeeService,\r\n\t\tRoleService,\r\n\t\tOrganizationService,\r\n\t\tRequestApprovalStatusHandler,\r\n\t\tEquipmentSharingService,\r\n\t\tTimeOffRequestService\r\n\t],\r\n\texports: [RequestApprovalService]\r\n})\r\nexport class RequestApprovalModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { RequestApproval } from './request-approval.entity';\r\nimport { RequestApprovalEmployee } from '../request-approval-employee/request-approval-employee.entity';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport * as faker from 'faker';\r\nimport { ApprovalPolicy } from '../approval-policy/approval-policy.entity';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { Organization } from '../organization/organization.entity';\r\n\r\nconst approvalTypes = [\r\n\t'Business Trip',\r\n\t'Contract Approval',\r\n\t'Payment for Software',\r\n\t'Car Rental',\r\n\t'Job Referral Award',\r\n\t'Best Employee Award',\r\n\t'Christmas Bonus',\r\n\t'Payment for Hardware',\r\n\t'Payment for Service Provider',\r\n\t'Loyalty Rewards',\r\n\t'Bonus',\r\n\t'Holiday Stay',\r\n\t'Payment for Electric gadgets',\r\n\t'Health Meal'\r\n];\r\n\r\nexport const createRandomRequestApproval = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantEmployeeMap: Map<Tenant, Employee[]>,\r\n\tnoOfRequestsPerOrganizations: number\r\n): Promise<any> => {\r\n\tconst requestApprovals: RequestApproval[] = [];\r\n\tconst policies: ApprovalPolicy[] = await connection.manager.find(\r\n\t\tApprovalPolicy\r\n\t);\r\n\r\n\tfor await (const tenant of tenants || []) {\r\n\t\tconst organizations = await connection.manager.find(Organization, {\r\n\t\t\twhere: [{ tenant: tenant }]\r\n\t\t});\r\n\r\n\t\tfor (let i = 0; i < noOfRequestsPerOrganizations; i++) {\r\n\t\t\tconst tenantPolicy = faker.random.arrayElement(policies);\r\n\t\t\tconst employees = tenantEmployeeMap.get(tenant);\r\n\t\t\tconst specificEmployees = employees\r\n\t\t\t\t.sort(() => Math.random() - Math.random())\r\n\t\t\t\t.slice(0, 3);\r\n\r\n\t\t\tconst requestApproval = new RequestApproval();\r\n\t\t\trequestApproval.name = faker.random.arrayElement(approvalTypes);\r\n\t\t\trequestApproval.status = faker.random.number({ min: 1, max: 3 });\r\n\r\n\t\t\t// requestApproval.approvalPolicyId = tenantPolicy.id;\r\n\t\t\trequestApproval.approvalPolicy = tenantPolicy;\r\n\t\t\trequestApproval.min_count = faker.random.number({\r\n\t\t\t\tmin: 1,\r\n\t\t\t\tmax: 100\r\n\t\t\t});\r\n\t\t\trequestApproval.createdBy = faker.random.arrayElement(\r\n\t\t\t\tspecificEmployees\r\n\t\t\t).id;\r\n\r\n\t\t\tconst organization = faker.random.arrayElement(organizations);\r\n\r\n\t\t\tconst requestApprovalEmployees: RequestApprovalEmployee[] = [];\r\n\t\t\tspecificEmployees.forEach((employee) => {\r\n\t\t\t\tconst raEmployees = new RequestApprovalEmployee();\r\n\t\t\t\traEmployees.employeeId = employee.id;\r\n\t\t\t\traEmployees.employee = employee;\r\n\t\t\t\traEmployees.tenant = organization;\r\n\t\t\t\traEmployees.organization = organization;\r\n\t\t\t\traEmployees.status = requestApproval.status;\r\n\t\t\t\trequestApprovalEmployees.push(raEmployees);\r\n\t\t\t});\r\n\r\n\t\t\trequestApproval.employeeApprovals = requestApprovalEmployees;\r\n\t\t\trequestApproval.tenant = tenant;\r\n\t\t\t(requestApproval.organization = organization),\r\n\t\t\t\trequestApprovals.push(requestApproval);\r\n\t\t}\r\n\t}\r\n\r\n\tawait connection\r\n\t\t.createQueryBuilder()\r\n\t\t.insert()\r\n\t\t.into(RequestApproval)\r\n\t\t.values(requestApprovals)\r\n\t\t.execute();\r\n};\r\n","import { CrudService, IPagination } from '../core';\r\nimport { RequestApproval } from './request-approval.entity';\r\nimport {\r\n\tInjectable,\r\n\tBadRequestException,\r\n\tNotFoundException,\r\n\tConflictException\r\n} from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Brackets, FindManyOptions, Repository } from 'typeorm';\r\nimport {\r\n\tIRequestApproval,\r\n\tRequestApprovalStatusTypesEnum,\r\n\tIRequestApprovalCreateInput,\r\n\tIRequestApprovalFindInput\r\n} from '@gauzy/models';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { RequestApprovalEmployee } from '../request-approval-employee/request-approval-employee.entity';\r\nimport { RequestContext } from '../core/context';\r\nimport { OrganizationTeam } from '../organization-team/organization-team.entity';\r\nimport { RequestApprovalTeam } from '../request-approval-team/request-approval-team.entity';\r\nimport { environment as env } from '@env-api/environment';\r\n\r\n@Injectable()\r\nexport class RequestApprovalService extends CrudService<RequestApproval> {\r\n\tconstructor(\r\n\t\t@InjectRepository(RequestApproval)\r\n\t\tprivate readonly requestApprovalRepository: Repository<RequestApproval>,\r\n\t\t@InjectRepository(Employee)\r\n\t\tprivate readonly employeeRepository: Repository<Employee>,\r\n\t\t// private readonly organizationTeamService: OrganizationTeamService,\r\n\t\t@InjectRepository(OrganizationTeam)\r\n\t\tprivate readonly organizationTeamRepository: Repository<\r\n\t\t\tOrganizationTeam\r\n\t\t>\r\n\t) {\r\n\t\tsuper(requestApprovalRepository);\r\n\t}\r\n\r\n\tasync findAllRequestApprovals(\r\n\t\tfilter: FindManyOptions<RequestApproval>,\r\n\t\tfindInput: IRequestApprovalFindInput\r\n\t): Promise<IPagination<IRequestApproval>> {\r\n\t\tconst query = this.requestApprovalRepository.createQueryBuilder(\r\n\t\t\t'request_approval'\r\n\t\t);\r\n\t\tquery.leftJoinAndSelect(\r\n\t\t\t`${query.alias}.approvalPolicy`,\r\n\t\t\t'approvalPolicy'\r\n\t\t);\r\n\r\n\t\tif (env.database.type === 'sqlite') {\r\n\t\t\tquery.leftJoinAndSelect(\r\n\t\t\t\t'time_off_request',\r\n\t\t\t\t'time_off_request',\r\n\t\t\t\t'\"time_off_request\".\"id\" = \"request_approval\".\"requestId\"'\r\n\t\t\t);\r\n\t\t\tquery.leftJoinAndSelect(\r\n\t\t\t\t'equipment_sharing',\r\n\t\t\t\t'equipment_sharing',\r\n\t\t\t\t'\"equipment_sharing\".\"id\" = \"request_approval\".\"requestId\"'\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tquery.leftJoinAndSelect(\r\n\t\t\t\t'time_off_request',\r\n\t\t\t\t'time_off_request',\r\n\t\t\t\t'\"time_off_request\".\"id\"::\"varchar\" = \"request_approval\".\"requestId\"'\r\n\t\t\t);\r\n\t\t\tquery.leftJoinAndSelect(\r\n\t\t\t\t'equipment_sharing',\r\n\t\t\t\t'equipment_sharing',\r\n\t\t\t\t'\"equipment_sharing\".\"id\"::\"varchar\" = \"request_approval\".\"requestId\"'\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tif (filter.relations && filter.relations.length > 0) {\r\n\t\t\tfilter.relations.forEach((item) => {\r\n\t\t\t\tquery.leftJoinAndSelect(`request_approval.${item}`, item);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tconst { organizationId, tenantId } = findInput;\r\n\t\tconst [items, total] = await query\r\n\t\t\t.where(\r\n\t\t\t\tnew Brackets((sqb) => {\r\n\t\t\t\t\tsqb.where(\r\n\t\t\t\t\t\t'approvalPolicy.organizationId =:organizationId',\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\torganizationId\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t).andWhere('approvalPolicy.tenantId =:tenantId', {\r\n\t\t\t\t\t\ttenantId\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t)\r\n\t\t\t.orWhere(\r\n\t\t\t\tnew Brackets((sqb) => {\r\n\t\t\t\t\tsqb.where(\r\n\t\t\t\t\t\t'time_off_request.organizationId =:organizationId',\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\torganizationId\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t).andWhere('time_off_request.tenantId =:tenantId', {\r\n\t\t\t\t\t\ttenantId\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t)\r\n\t\t\t.orWhere(\r\n\t\t\t\tnew Brackets((sqb) => {\r\n\t\t\t\t\tsqb.where(\r\n\t\t\t\t\t\t'equipment_sharing.organizationId =:organizationId',\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\torganizationId\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t).andWhere('equipment_sharing.tenantId =:tenantId', {\r\n\t\t\t\t\t\ttenantId\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t)\r\n\t\t\t.getManyAndCount();\r\n\r\n\t\treturn { items, total };\r\n\t}\r\n\r\n\tasync findRequestApprovalsByEmployeeId(\r\n\t\tid: string,\r\n\t\trelations: string[],\r\n\t\tfindInput?: IRequestApprovalFindInput\r\n\t): Promise<IPagination<IRequestApproval>> {\r\n\t\ttry {\r\n\t\t\tconst { organizationId, tenantId } = findInput;\r\n\t\t\tconst result = await this.requestApprovalRepository.find({\r\n\t\t\t\twhere: {\r\n\t\t\t\t\tcreatedBy: id,\r\n\t\t\t\t\torganizationId,\r\n\t\t\t\t\ttenantId\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// const employeeTeam = await this.organizationTeamService.getMyOrgTeams(\r\n\t\t\t// \t{\r\n\t\t\t// \t\trelations: ['members']\r\n\t\t\t// \t},\r\n\t\t\t// \tid\r\n\t\t\t// );\r\n\r\n\t\t\tlet requestApproval = [];\r\n\r\n\t\t\t// if (employeeTeam.items && employeeTeam.items.length > 0) {\r\n\t\t\t// \tfor (const team of employeeTeam.items) {\r\n\t\t\t// \t\tconst organizationTeam = await this.organizationTeamRepository.findOne(\r\n\t\t\t// \t\t\tteam.id,\r\n\t\t\t// \t\t\t{\r\n\t\t\t// \t\t\t\trelations: ['requestApprovals']\r\n\t\t\t// \t\t\t}\r\n\t\t\t// \t\t);\r\n\t\t\t// \t\trequestApproval = [\r\n\t\t\t// \t\t\t...requestApproval,\r\n\t\t\t// \t\t\t...organizationTeam.requestApprovals\r\n\t\t\t// \t\t];\r\n\t\t\t// \t}\r\n\t\t\t// }\r\n\r\n\t\t\tconst employee = await this.employeeRepository.findOne(id, {\r\n\t\t\t\trelations\r\n\t\t\t});\r\n\r\n\t\t\tif (\r\n\t\t\t\temployee &&\r\n\t\t\t\temployee.requestApprovals &&\r\n\t\t\t\temployee.requestApprovals.length > 0\r\n\t\t\t) {\r\n\t\t\t\t// requestApproval.concat(employee.requestApprovals);\r\n\t\t\t\trequestApproval = [\r\n\t\t\t\t\t...requestApproval,\r\n\t\t\t\t\t...employee.requestApprovals\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\tfor (const request of requestApproval) {\r\n\t\t\t\tconst emp = await this.requestApprovalRepository.findOne(\r\n\t\t\t\t\trequest.requestApprovalId,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trelations: [\r\n\t\t\t\t\t\t\t'approvalPolicy',\r\n\t\t\t\t\t\t\t'employeeApprovals',\r\n\t\t\t\t\t\t\t'teamApprovals',\r\n\t\t\t\t\t\t\t'tags'\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t\tresult.push(emp);\r\n\t\t\t}\r\n\r\n\t\t\treturn { items: result, total: result.length };\r\n\t\t} catch (error) {\r\n\t\t\tthrow new BadRequestException(error);\r\n\t\t}\r\n\t}\r\n\r\n\tasync createRequestApproval(\r\n\t\tentity: IRequestApprovalCreateInput\r\n\t): Promise<RequestApproval> {\r\n\t\ttry {\r\n\t\t\tconst requestApproval = new RequestApproval();\r\n\t\t\trequestApproval.status = RequestApprovalStatusTypesEnum.REQUESTED;\r\n\t\t\trequestApproval.approvalPolicyId = entity.approvalPolicyId;\r\n\t\t\trequestApproval.createdBy = RequestContext.currentUser().id;\r\n\t\t\trequestApproval.createdByName = RequestContext.currentUser().name;\r\n\t\t\trequestApproval.name = entity.name;\r\n\t\t\trequestApproval.min_count = entity.min_count;\r\n\t\t\trequestApproval.tags = entity.tags;\r\n\t\t\trequestApproval.organizationId = entity.organizationId;\r\n\t\t\trequestApproval.tenantId = entity.tenantId;\r\n\t\t\tif (entity.employeeApprovals) {\r\n\t\t\t\tconst employees = await this.employeeRepository.findByIds(\r\n\t\t\t\t\tentity.employeeApprovals,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trelations: ['user']\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\r\n\t\t\t\tconst requestApprovalEmployees: RequestApprovalEmployee[] = [];\r\n\t\t\t\temployees.forEach((employee) => {\r\n\t\t\t\t\tconst raEmployees = new RequestApprovalEmployee();\r\n\t\t\t\t\traEmployees.employeeId = employee.id;\r\n\t\t\t\t\traEmployees.employee = employee;\r\n\t\t\t\t\traEmployees.organizationId = entity.organizationId;\r\n\t\t\t\t\traEmployees.tenantId = entity.tenantId;\r\n\t\t\t\t\traEmployees.status =\r\n\t\t\t\t\t\tRequestApprovalStatusTypesEnum.REQUESTED;\r\n\t\t\t\t\trequestApprovalEmployees.push(raEmployees);\r\n\t\t\t\t});\r\n\r\n\t\t\t\trequestApproval.employeeApprovals = requestApprovalEmployees;\r\n\t\t\t}\r\n\r\n\t\t\tif (entity.teams) {\r\n\t\t\t\tconst teams = await this.organizationTeamRepository.findByIds(\r\n\t\t\t\t\tentity.teams\r\n\t\t\t\t);\r\n\r\n\t\t\t\tconst requestApprovalTeams: RequestApprovalTeam[] = [];\r\n\t\t\t\tteams.forEach((team) => {\r\n\t\t\t\t\tconst raTeam = new RequestApprovalTeam();\r\n\t\t\t\t\traTeam.teamId = team.id;\r\n\t\t\t\t\traTeam.team = team;\r\n\t\t\t\t\traTeam.status = RequestApprovalStatusTypesEnum.REQUESTED;\r\n\t\t\t\t\traTeam.organizationId = entity.organizationId;\r\n\t\t\t\t\traTeam.tenantId = entity.tenantId;\r\n\t\t\t\t\trequestApprovalTeams.push(raTeam);\r\n\t\t\t\t});\r\n\r\n\t\t\t\trequestApproval.teamApprovals = requestApprovalTeams;\r\n\t\t\t}\r\n\r\n\t\t\treturn this.requestApprovalRepository.save(requestApproval);\r\n\t\t} catch (err) {\r\n\t\t\tthrow new BadRequestException(err);\r\n\t\t}\r\n\t}\r\n\tasync updateRequestApproval(\r\n\t\tid: string,\r\n\t\tentity: IRequestApprovalCreateInput\r\n\t): Promise<RequestApproval> {\r\n\t\ttry {\r\n\t\t\tlet employees;\r\n\t\t\tlet teams;\r\n\t\t\tconst requestApproval = await this.requestApprovalRepository.findOne(\r\n\t\t\t\tid\r\n\t\t\t);\r\n\r\n\t\t\trequestApproval.name = entity.name;\r\n\t\t\trequestApproval.status = RequestApprovalStatusTypesEnum.REQUESTED;\r\n\t\t\trequestApproval.approvalPolicyId = entity.approvalPolicyId;\r\n\t\t\trequestApproval.min_count = entity.min_count;\r\n\t\t\trequestApproval.tags = entity.tags;\r\n\t\t\trequestApproval.organizationId = entity.organizationId;\r\n\t\t\trequestApproval.tenantId = entity.tenantId;\r\n\r\n\t\t\tawait this.repository\r\n\t\t\t\t.createQueryBuilder()\r\n\t\t\t\t.delete()\r\n\t\t\t\t.from(RequestApprovalEmployee)\r\n\t\t\t\t.where('requestApprovalId = :id', { id: id })\r\n\t\t\t\t.execute();\r\n\r\n\t\t\tawait this.repository\r\n\t\t\t\t.createQueryBuilder()\r\n\t\t\t\t.delete()\r\n\t\t\t\t.from(RequestApprovalTeam)\r\n\t\t\t\t.where('requestApprovalId = :id', { id: id })\r\n\t\t\t\t.execute();\r\n\r\n\t\t\tif (entity.employeeApprovals) {\r\n\t\t\t\temployees = await this.employeeRepository.findByIds(\r\n\t\t\t\t\tentity.employeeApprovals,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trelations: ['user']\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\r\n\t\t\t\tconst requestApprovalEmployees: RequestApprovalEmployee[] = [];\r\n\t\t\t\temployees.forEach((employee) => {\r\n\t\t\t\t\tconst raEmployees = new RequestApprovalEmployee();\r\n\t\t\t\t\traEmployees.employeeId = employee.id;\r\n\t\t\t\t\traEmployees.employee = employee;\r\n\t\t\t\t\traEmployees.organizationId = entity.organizationId;\r\n\t\t\t\t\traEmployees.tenantId = entity.tenantId;\r\n\t\t\t\t\traEmployees.status =\r\n\t\t\t\t\t\tRequestApprovalStatusTypesEnum.REQUESTED;\r\n\t\t\t\t\trequestApprovalEmployees.push(raEmployees);\r\n\t\t\t\t});\r\n\r\n\t\t\t\trequestApproval.employeeApprovals = requestApprovalEmployees;\r\n\t\t\t}\r\n\r\n\t\t\tif (entity.teams) {\r\n\t\t\t\tteams = await this.organizationTeamRepository.findByIds(\r\n\t\t\t\t\tentity.teams\r\n\t\t\t\t);\r\n\r\n\t\t\t\tconst requestApprovalTeams: RequestApprovalTeam[] = [];\r\n\t\t\t\tteams.forEach((team) => {\r\n\t\t\t\t\tconst raTeam = new RequestApprovalTeam();\r\n\t\t\t\t\traTeam.teamId = team.id;\r\n\t\t\t\t\traTeam.team = team;\r\n\t\t\t\t\traTeam.status = RequestApprovalStatusTypesEnum.REQUESTED;\r\n\t\t\t\t\traTeam.organizationId = entity.organizationId;\r\n\t\t\t\t\traTeam.tenantId = entity.tenantId;\r\n\t\t\t\t\trequestApprovalTeams.push(raTeam);\r\n\t\t\t\t});\r\n\r\n\t\t\t\trequestApproval.teamApprovals = requestApprovalTeams;\r\n\t\t\t}\r\n\t\t\treturn this.requestApprovalRepository.save(requestApproval);\r\n\t\t} catch (err /*: WriteError*/) {\r\n\t\t\tthrow new BadRequestException(err);\r\n\t\t}\r\n\t}\r\n\r\n\tasync updateStatusRequestApprovalByAdmin(\r\n\t\tid: string,\r\n\t\tstatus: number\r\n\t): Promise<RequestApproval> {\r\n\t\ttry {\r\n\t\t\tconst requestApproval = await this.requestApprovalRepository.findOne(\r\n\t\t\t\tid,\r\n\t\t\t\t{\r\n\t\t\t\t\trelations: ['approvalPolicy']\r\n\t\t\t\t}\r\n\t\t\t);\r\n\r\n\t\t\tif (!requestApproval) {\r\n\t\t\t\tthrow new NotFoundException('Request Approval not found');\r\n\t\t\t}\r\n\r\n\t\t\tif (\r\n\t\t\t\trequestApproval.status ===\r\n\t\t\t\t\tRequestApprovalStatusTypesEnum.APPROVED ||\r\n\t\t\t\trequestApproval.status ===\r\n\t\t\t\t\tRequestApprovalStatusTypesEnum.REFUSED\r\n\t\t\t) {\r\n\t\t\t\tthrow new ConflictException('Request Approval is Conflict');\r\n\t\t\t}\r\n\r\n\t\t\trequestApproval.status = status;\r\n\r\n\t\t\treturn this.requestApprovalRepository.save(requestApproval);\r\n\t\t} catch (err /*: WriteError*/) {\r\n\t\t\tthrow err;\r\n\t\t}\r\n\t}\r\n\r\n\tasync updateStatusRequestApprovalByEmployeeOrTeam(\r\n\t\tid: string,\r\n\t\tstatus: number\r\n\t): Promise<RequestApproval> {\r\n\t\ttry {\r\n\t\t\tlet minCount = 0;\r\n\t\t\tconst employeeId = RequestContext.currentUser().employeeId;\r\n\t\t\tconst requestApproval = await this.requestApprovalRepository.findOne(\r\n\t\t\t\tid,\r\n\t\t\t\t{\r\n\t\t\t\t\trelations: ['employeeApprovals', 'teamApprovals']\r\n\t\t\t\t}\r\n\t\t\t);\r\n\r\n\t\t\tif (!requestApproval) {\r\n\t\t\t\tthrow new NotFoundException('Request Approval not found');\r\n\t\t\t}\r\n\r\n\t\t\tif (\r\n\t\t\t\trequestApproval.status ===\r\n\t\t\t\t\tRequestApprovalStatusTypesEnum.APPROVED ||\r\n\t\t\t\trequestApproval.status ===\r\n\t\t\t\t\tRequestApprovalStatusTypesEnum.REFUSED\r\n\t\t\t) {\r\n\t\t\t\tthrow new ConflictException('Request Approval is Conflict');\r\n\t\t\t}\r\n\r\n\t\t\tif (\r\n\t\t\t\trequestApproval.employeeApprovals &&\r\n\t\t\t\trequestApproval.employeeApprovals.length > 0\r\n\t\t\t) {\r\n\t\t\t\trequestApproval.employeeApprovals.forEach((req) => {\r\n\t\t\t\t\tif (req.employeeId === employeeId) {\r\n\t\t\t\t\t\treq.status = status;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\treq.status === RequestApprovalStatusTypesEnum.APPROVED\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tminCount++;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (status === RequestApprovalStatusTypesEnum.REFUSED) {\r\n\t\t\t\trequestApproval.status = RequestApprovalStatusTypesEnum.REFUSED;\r\n\t\t\t} else if (minCount >= requestApproval.min_count) {\r\n\t\t\t\trequestApproval.status =\r\n\t\t\t\t\tRequestApprovalStatusTypesEnum.APPROVED;\r\n\t\t\t}\r\n\r\n\t\t\treturn this.requestApprovalRepository.save(requestApproval);\r\n\t\t} catch (err /*: WriteError*/) {\r\n\t\t\tthrow err;\r\n\t\t}\r\n\t}\r\n}\r\n","import { PermissionsEnum, RolesEnum } from '@gauzy/models';\r\n\r\nexport const DEFAULT_ROLE_PERMISSIONS = [\r\n\t{\r\n\t\trole: RolesEnum.SUPER_ADMIN,\r\n\t\tdefaultEnabledPermissions: [\r\n\t\t\tPermissionsEnum.ADMIN_DASHBOARD_VIEW,\r\n\t\t\tPermissionsEnum.ORG_PAYMENT_VIEW,\r\n\t\t\tPermissionsEnum.ORG_PAYMENT_ADD_EDIT,\r\n\t\t\tPermissionsEnum.ORG_INCOMES_VIEW,\r\n\t\t\tPermissionsEnum.ORG_INCOMES_EDIT,\r\n\t\t\tPermissionsEnum.ORG_EXPENSES_VIEW,\r\n\t\t\tPermissionsEnum.ORG_EXPENSES_EDIT,\r\n\t\t\tPermissionsEnum.ORG_PROPOSALS_VIEW,\r\n\t\t\tPermissionsEnum.EMPLOYEE_EXPENSES_VIEW,\r\n\t\t\tPermissionsEnum.EMPLOYEE_EXPENSES_EDIT,\r\n\t\t\tPermissionsEnum.ORG_PROPOSALS_EDIT,\r\n\t\t\tPermissionsEnum.ORG_PROPOSAL_TEMPLATES_VIEW,\r\n\t\t\tPermissionsEnum.ORG_PROPOSAL_TEMPLATES_EDIT,\r\n\t\t\tPermissionsEnum.ORG_EMPLOYEES_VIEW,\r\n\t\t\tPermissionsEnum.ORG_EMPLOYEES_EDIT,\r\n\t\t\tPermissionsEnum.ORG_CANDIDATES_VIEW,\r\n\t\t\tPermissionsEnum.ORG_CANDIDATES_EDIT,\r\n\t\t\tPermissionsEnum.ORG_CANDIDATES_TASK_EDIT,\r\n\t\t\tPermissionsEnum.ORG_CANDIDATES_INTERVIEW_EDIT,\r\n\t\t\tPermissionsEnum.ORG_CANDIDATES_INTERVIEWERS_EDIT,\r\n\t\t\tPermissionsEnum.ORG_INVENTORY_PRODUCT_EDIT,\r\n\t\t\tPermissionsEnum.ORG_CANDIDATES_DOCUMENTS_VIEW,\r\n\t\t\tPermissionsEnum.ORG_HELP_CENTER_EDIT,\r\n\t\t\tPermissionsEnum.ORG_USERS_VIEW,\r\n\t\t\tPermissionsEnum.ORG_USERS_EDIT,\r\n\t\t\tPermissionsEnum.ALL_ORG_VIEW,\r\n\t\t\tPermissionsEnum.ALL_ORG_EDIT,\r\n\t\t\tPermissionsEnum.POLICY_EDIT,\r\n\t\t\tPermissionsEnum.POLICY_VIEW,\r\n\t\t\tPermissionsEnum.APPROVAL_POLICY_EDIT,\r\n\t\t\tPermissionsEnum.APPROVAL_POLICY_VIEW,\r\n\t\t\tPermissionsEnum.REQUEST_APPROVAL_EDIT,\r\n\t\t\tPermissionsEnum.REQUEST_APPROVAL_VIEW,\r\n\t\t\tPermissionsEnum.ORG_TIME_OFF_VIEW,\r\n\t\t\tPermissionsEnum.TIME_OFF_EDIT,\r\n\t\t\tPermissionsEnum.CHANGE_SELECTED_EMPLOYEE,\r\n\t\t\tPermissionsEnum.CHANGE_SELECTED_CANDIDATE,\r\n\t\t\tPermissionsEnum.CHANGE_SELECTED_ORGANIZATION,\r\n\t\t\tPermissionsEnum.CHANGE_ROLES_PERMISSIONS,\r\n\t\t\tPermissionsEnum.ORG_INVITE_VIEW,\r\n\t\t\tPermissionsEnum.ORG_INVITE_EDIT,\r\n\t\t\tPermissionsEnum.ACCESS_PRIVATE_PROJECTS,\r\n\t\t\tPermissionsEnum.TIMESHEET_EDIT_TIME,\r\n\t\t\tPermissionsEnum.SUPER_ADMIN_EDIT,\r\n\t\t\tPermissionsEnum.PUBLIC_PAGE_EDIT,\r\n\t\t\tPermissionsEnum.INVOICES_VIEW,\r\n\t\t\tPermissionsEnum.INVOICES_EDIT,\r\n\t\t\tPermissionsEnum.ESTIMATES_VIEW,\r\n\t\t\tPermissionsEnum.ESTIMATES_EDIT,\r\n\t\t\tPermissionsEnum.ORG_CANDIDATES_FEEDBACK_EDIT,\r\n\t\t\tPermissionsEnum.ORG_TAGS_EDIT,\r\n\t\t\tPermissionsEnum.VIEW_ALL_EMAILS,\r\n\t\t\tPermissionsEnum.VIEW_ALL_EMAIL_TEMPLATES,\r\n\t\t\tPermissionsEnum.VIEW_SALES_PIPELINES,\r\n\t\t\tPermissionsEnum.EDIT_SALES_PIPELINES,\r\n\t\t\tPermissionsEnum.CAN_APPROVE_TIMESHEET,\r\n\t\t\tPermissionsEnum.ORG_SPRINT_EDIT,\r\n\t\t\tPermissionsEnum.ORG_SPRINT_VIEW,\r\n\t\t\tPermissionsEnum.ORG_PROJECT_EDIT,\r\n\t\t\tPermissionsEnum.ORG_CONTACT_EDIT,\r\n\t\t\tPermissionsEnum.ORG_CONTACT_VIEW,\r\n\t\t\tPermissionsEnum.ORG_TEAM_EDIT,\r\n\t\t\tPermissionsEnum.ORG_CONTRACT_EDIT,\r\n\t\t\tPermissionsEnum.EVENT_TYPES_VIEW,\r\n\t\t\tPermissionsEnum.TENANT_ADD_EXISTING_USER,\r\n\t\t\tPermissionsEnum.INTEGRATION_VIEW,\r\n\t\t\tPermissionsEnum.IMPORT_EXPORT_VIEW,\r\n\t\t\tPermissionsEnum.FILE_STORAGE_VIEW,\r\n\t\t\tPermissionsEnum.PAYMENT_GATEWAY_VIEW,\r\n\t\t\tPermissionsEnum.SMS_GATEWAY_VIEW,\r\n\t\t\tPermissionsEnum.CUSTOM_SMTP_VIEW,\r\n\t\t\tPermissionsEnum.ORG_JOB_EMPLOYEE_VIEW,\r\n\t\t\tPermissionsEnum.ORG_JOB_MATCHING_VIEW\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\trole: RolesEnum.ADMIN,\r\n\t\tdefaultEnabledPermissions: [\r\n\t\t\tPermissionsEnum.ADMIN_DASHBOARD_VIEW,\r\n\t\t\tPermissionsEnum.ORG_PAYMENT_VIEW,\r\n\t\t\tPermissionsEnum.ORG_PAYMENT_ADD_EDIT,\r\n\t\t\tPermissionsEnum.ORG_INCOMES_VIEW,\r\n\t\t\tPermissionsEnum.ORG_INCOMES_EDIT,\r\n\t\t\tPermissionsEnum.ORG_EXPENSES_VIEW,\r\n\t\t\tPermissionsEnum.ORG_EXPENSES_EDIT,\r\n\t\t\tPermissionsEnum.EMPLOYEE_EXPENSES_VIEW,\r\n\t\t\tPermissionsEnum.EMPLOYEE_EXPENSES_EDIT,\r\n\t\t\tPermissionsEnum.ORG_PROPOSALS_VIEW,\r\n\t\t\tPermissionsEnum.ORG_PROPOSALS_EDIT,\r\n\t\t\tPermissionsEnum.ORG_PROPOSAL_TEMPLATES_VIEW,\r\n\t\t\tPermissionsEnum.ORG_PROPOSAL_TEMPLATES_EDIT,\r\n\t\t\tPermissionsEnum.ORG_EMPLOYEES_VIEW,\r\n\t\t\tPermissionsEnum.ORG_EMPLOYEES_EDIT,\r\n\t\t\tPermissionsEnum.ORG_CANDIDATES_VIEW,\r\n\t\t\tPermissionsEnum.ORG_CANDIDATES_EDIT,\r\n\t\t\tPermissionsEnum.ORG_CANDIDATES_TASK_EDIT,\r\n\t\t\tPermissionsEnum.ORG_CANDIDATES_INTERVIEW_EDIT,\r\n\t\t\tPermissionsEnum.ORG_CANDIDATES_INTERVIEWERS_EDIT,\r\n\t\t\tPermissionsEnum.ORG_INVENTORY_PRODUCT_EDIT,\r\n\t\t\tPermissionsEnum.ORG_CANDIDATES_DOCUMENTS_VIEW,\r\n\t\t\tPermissionsEnum.ORG_HELP_CENTER_EDIT,\r\n\t\t\tPermissionsEnum.ORG_USERS_VIEW,\r\n\t\t\tPermissionsEnum.ORG_USERS_EDIT,\r\n\t\t\tPermissionsEnum.ALL_ORG_VIEW,\r\n\t\t\tPermissionsEnum.ALL_ORG_EDIT,\r\n\t\t\tPermissionsEnum.POLICY_EDIT,\r\n\t\t\tPermissionsEnum.POLICY_VIEW,\r\n\t\t\tPermissionsEnum.APPROVAL_POLICY_EDIT,\r\n\t\t\tPermissionsEnum.APPROVAL_POLICY_VIEW,\r\n\t\t\tPermissionsEnum.REQUEST_APPROVAL_EDIT,\r\n\t\t\tPermissionsEnum.ORG_TIME_OFF_VIEW,\r\n\t\t\tPermissionsEnum.TIME_OFF_EDIT,\r\n\t\t\tPermissionsEnum.REQUEST_APPROVAL_VIEW,\r\n\t\t\tPermissionsEnum.CHANGE_SELECTED_EMPLOYEE,\r\n\t\t\tPermissionsEnum.CHANGE_SELECTED_CANDIDATE,\r\n\t\t\tPermissionsEnum.CHANGE_SELECTED_ORGANIZATION,\r\n\t\t\tPermissionsEnum.CHANGE_ROLES_PERMISSIONS,\r\n\t\t\tPermissionsEnum.ORG_INVITE_VIEW,\r\n\t\t\tPermissionsEnum.ORG_INVITE_EDIT,\r\n\t\t\tPermissionsEnum.ACCESS_PRIVATE_PROJECTS,\r\n\t\t\tPermissionsEnum.TIMESHEET_EDIT_TIME,\r\n\t\t\tPermissionsEnum.PUBLIC_PAGE_EDIT,\r\n\t\t\tPermissionsEnum.INVOICES_VIEW,\r\n\t\t\tPermissionsEnum.INVOICES_EDIT,\r\n\t\t\tPermissionsEnum.ESTIMATES_VIEW,\r\n\t\t\tPermissionsEnum.ESTIMATES_EDIT,\r\n\t\t\tPermissionsEnum.ORG_CANDIDATES_FEEDBACK_EDIT,\r\n\t\t\tPermissionsEnum.ORG_TAGS_EDIT,\r\n\t\t\tPermissionsEnum.VIEW_ALL_EMAILS,\r\n\t\t\tPermissionsEnum.VIEW_ALL_EMAIL_TEMPLATES,\r\n\t\t\tPermissionsEnum.VIEW_SALES_PIPELINES,\r\n\t\t\tPermissionsEnum.EDIT_SALES_PIPELINES,\r\n\t\t\tPermissionsEnum.CAN_APPROVE_TIMESHEET,\r\n\t\t\tPermissionsEnum.ORG_SPRINT_EDIT,\r\n\t\t\tPermissionsEnum.ORG_SPRINT_VIEW,\r\n\t\t\tPermissionsEnum.ORG_PROJECT_EDIT,\r\n\t\t\tPermissionsEnum.ORG_CONTACT_EDIT,\r\n\t\t\tPermissionsEnum.ORG_CONTACT_VIEW,\r\n\t\t\tPermissionsEnum.ORG_TEAM_EDIT,\r\n\t\t\tPermissionsEnum.ORG_CONTRACT_EDIT,\r\n\t\t\tPermissionsEnum.EVENT_TYPES_VIEW,\r\n\t\t\tPermissionsEnum.TENANT_ADD_EXISTING_USER,\r\n\t\t\tPermissionsEnum.INTEGRATION_VIEW,\r\n\t\t\tPermissionsEnum.IMPORT_EXPORT_VIEW,\r\n\t\t\tPermissionsEnum.FILE_STORAGE_VIEW,\r\n\t\t\tPermissionsEnum.PAYMENT_GATEWAY_VIEW,\r\n\t\t\tPermissionsEnum.SMS_GATEWAY_VIEW,\r\n\t\t\tPermissionsEnum.CUSTOM_SMTP_VIEW,\r\n\t\t\tPermissionsEnum.ORG_JOB_EMPLOYEE_VIEW,\r\n\t\t\tPermissionsEnum.ORG_JOB_MATCHING_VIEW\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\trole: RolesEnum.DATA_ENTRY,\r\n\t\tdefaultEnabledPermissions: [\r\n\t\t\tPermissionsEnum.ORG_PAYMENT_VIEW,\r\n\t\t\tPermissionsEnum.ORG_PAYMENT_ADD_EDIT,\r\n\t\t\tPermissionsEnum.ORG_EXPENSES_EDIT,\r\n\t\t\tPermissionsEnum.ORG_EXPENSES_VIEW,\r\n\t\t\tPermissionsEnum.ORG_INCOMES_EDIT,\r\n\t\t\tPermissionsEnum.ORG_INCOMES_VIEW,\r\n\t\t\tPermissionsEnum.CHANGE_SELECTED_ORGANIZATION,\r\n\t\t\tPermissionsEnum.INVOICES_VIEW,\r\n\t\t\tPermissionsEnum.INVOICES_EDIT,\r\n\t\t\tPermissionsEnum.ESTIMATES_VIEW,\r\n\t\t\tPermissionsEnum.ESTIMATES_EDIT,\r\n\t\t\tPermissionsEnum.ORG_CANDIDATES_TASK_EDIT,\r\n\t\t\tPermissionsEnum.ORG_CANDIDATES_INTERVIEW_EDIT,\r\n\t\t\tPermissionsEnum.ORG_CANDIDATES_INTERVIEWERS_EDIT,\r\n\t\t\tPermissionsEnum.ORG_INVENTORY_PRODUCT_EDIT,\r\n\t\t\tPermissionsEnum.ORG_HELP_CENTER_EDIT\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\trole: RolesEnum.EMPLOYEE,\r\n\t\tdefaultEnabledPermissions: [\r\n\t\t\tPermissionsEnum.ADMIN_DASHBOARD_VIEW,\r\n\t\t\tPermissionsEnum.ORG_PROPOSALS_VIEW,\r\n\t\t\tPermissionsEnum.ORG_PROPOSALS_EDIT,\r\n\t\t\tPermissionsEnum.ORG_PROPOSAL_TEMPLATES_VIEW,\r\n\t\t\tPermissionsEnum.ORG_PROPOSAL_TEMPLATES_EDIT,\r\n\t\t\tPermissionsEnum.ORG_TIME_OFF_VIEW,\r\n\t\t\tPermissionsEnum.APPROVAL_POLICY_EDIT,\r\n\t\t\tPermissionsEnum.APPROVAL_POLICY_VIEW,\r\n\t\t\tPermissionsEnum.REQUEST_APPROVAL_EDIT,\r\n\t\t\tPermissionsEnum.REQUEST_APPROVAL_VIEW,\r\n\t\t\tPermissionsEnum.ORG_CANDIDATES_TASK_EDIT,\r\n\t\t\tPermissionsEnum.EVENT_TYPES_VIEW,\r\n\t\t\tPermissionsEnum.TIME_TRACKER,\r\n\t\t\tPermissionsEnum.INVOICES_VIEW,\r\n\t\t\tPermissionsEnum.INVOICES_EDIT,\r\n\t\t\tPermissionsEnum.ESTIMATES_VIEW,\r\n\t\t\tPermissionsEnum.ESTIMATES_EDIT,\r\n\t\t\tPermissionsEnum.ORG_CONTACT_VIEW,\r\n\t\t\tPermissionsEnum.EMPLOYEE_EXPENSES_VIEW,\r\n\t\t\tPermissionsEnum.EMPLOYEE_EXPENSES_EDIT\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\trole: RolesEnum.CANDIDATE,\r\n\t\tdefaultEnabledPermissions: [\r\n\t\t\tPermissionsEnum.ADMIN_DASHBOARD_VIEW,\r\n\t\t\tPermissionsEnum.ORG_PROPOSALS_VIEW,\r\n\t\t\tPermissionsEnum.ORG_TIME_OFF_VIEW,\r\n\t\t\tPermissionsEnum.ORG_TAGS_EDIT\r\n\t\t]\r\n\t}\r\n];\r\n","import { PermissionsEnum } from '@gauzy/models';\r\nimport {\r\n\tBody,\r\n\tController,\r\n\tGet,\r\n\tHttpCode,\r\n\tHttpStatus,\r\n\tParam,\r\n\tPost,\r\n\tPut,\r\n\tQuery,\r\n\tUseGuards\r\n} from '@nestjs/common';\r\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\r\nimport { IPagination } from '../core';\r\nimport { CrudController } from '../core/crud/crud.controller';\r\nimport { Permissions } from '../shared/decorators/permissions';\r\nimport { PermissionGuard } from '../shared/guards/auth/permission.guard';\r\nimport { RolePermissions } from './role-permissions.entity';\r\nimport { RolePermissionsService } from './role-permissions.service';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('Role')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class RolePermissionsController extends CrudController<RolePermissions> {\r\n\tconstructor(\r\n\t\tprivate readonly rolePermissionsService: RolePermissionsService\r\n\t) {\r\n\t\tsuper(rolePermissionsService);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find role permissions.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found role permissions.',\r\n\t\ttype: RolePermissions\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get()\r\n\tasync findRolePermission(\r\n\t\t@Query('data') data: string\r\n\t): Promise<IPagination<RolePermissions>> {\r\n\t\tconst { findInput } = JSON.parse(data);\r\n\r\n\t\treturn this.rolePermissionsService.findAll({ where: findInput });\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Create new record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully created.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.CHANGE_ROLES_PERMISSIONS)\r\n\t@HttpCode(HttpStatus.CREATED)\r\n\t@Post()\r\n\tasync create(\r\n\t\t@Body() entity: RolePermissions,\r\n\t\t...options: any[]\r\n\t): Promise<RolePermissions> {\r\n\t\treturn this.rolePermissionsService.create(entity);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Update an existing record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully edited.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.CHANGE_ROLES_PERMISSIONS)\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Put(':id')\r\n\tasync update(\r\n\t\t@Param('id') id: string,\r\n\t\t@Body() entity: RolePermissions,\r\n\t\t...options: any[]\r\n\t): Promise<any> {\r\n\t\treturn this.rolePermissionsService.update(id, entity);\r\n\t}\r\n}\r\n","import {\r\n\tPermissionsEnum,\r\n\tIRolePermission as IRolePermissions,\r\n\tRolesEnum,\r\n\tITenant\r\n} from '@gauzy/models';\r\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\r\nimport { IsEnum, IsNotEmpty, IsOptional, IsString } from 'class-validator';\r\nimport {\r\n\tColumn,\r\n\tEntity,\r\n\tIndex,\r\n\tManyToOne,\r\n\tJoinColumn,\r\n\tRelationId\r\n} from 'typeorm';\r\nimport { Role } from '../role/role.entity';\r\nimport { Base } from '../core/entities/base';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\n\r\n@Entity('role_permission')\r\nexport class RolePermissions extends Base implements IRolePermissions {\r\n\t@ApiProperty({ type: Tenant, readOnly: true })\r\n\t@ManyToOne((type) => Tenant, { nullable: true, onDelete: 'CASCADE' })\r\n\t@JoinColumn()\r\n\t@IsOptional()\r\n\ttenant?: ITenant;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@RelationId((t: RolePermissions) => t.tenant)\r\n\t@IsString()\r\n\t@IsOptional()\r\n\t@Index()\r\n\t@Column({ nullable: true })\r\n\ttenantId?: string;\r\n\r\n\t@ApiProperty({ type: String, enum: RolesEnum })\r\n\t@IsEnum(RolesEnum)\r\n\t@IsNotEmpty()\r\n\t@Index()\r\n\t@Column()\r\n\troleId: string;\r\n\r\n\t@ApiProperty({ type: String, enum: RolesEnum })\r\n\t@IsEnum(PermissionsEnum)\r\n\t@IsNotEmpty()\r\n\t@Index()\r\n\t@Column()\r\n\tpermission: string;\r\n\r\n\t@ApiPropertyOptional({ type: Boolean, default: false })\r\n\t@Column({ nullable: true, default: false })\r\n\tenabled: boolean;\r\n\r\n\t@ManyToOne((type) => Role, (role) => role.rolePermissions)\r\n\trole!: Role;\r\n}\r\n","import { forwardRef, Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { RolePermissionsController } from './role-permissions.controller';\r\nimport { RolePermissions } from './role-permissions.entity';\r\nimport { RolePermissionsService } from './role-permissions.service';\r\nimport { User } from '../user/user.entity';\r\nimport { UserService } from '../user/user.service';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tforwardRef(() => TypeOrmModule.forFeature([RolePermissions, User])),\r\n\t\tforwardRef(() => TenantModule)\r\n\t],\r\n\tcontrollers: [RolePermissionsController],\r\n\tproviders: [RolePermissionsService, UserService],\r\n\texports: [RolePermissionsService]\r\n})\r\nexport class RolePermissionsModule {}\r\n","// Modified code from https://github.com/alexitaylor/angular-graphql-nestjs-postgres-starter-kit.\r\n// MIT License, see https://github.com/alexitaylor/angular-graphql-nestjs-postgres-starter-kit/blob/master/LICENSE\r\n// Copyright (c) 2019 Alexi Taylor\r\n\r\nimport { IRole, ITenant, IRolePermission } from '@gauzy/models';\r\nimport { Connection } from 'typeorm';\r\nimport { DEFAULT_ROLE_PERMISSIONS } from './default-role-permissions';\r\nimport { RolePermissions } from './role-permissions.entity';\r\n\r\nexport const createRolePermissions = async (\r\n\tconnection: Connection,\r\n\troles: IRole[],\r\n\ttenants: ITenant[]\r\n): Promise<IRolePermission[]> => {\r\n\tconst rolePermissions: IRolePermission[] = [];\r\n\r\n\ttenants.forEach((t) => {\r\n\t\tDEFAULT_ROLE_PERMISSIONS.forEach((r) => {\r\n\t\t\tconst role = roles.find(\r\n\t\t\t\t(dbRole) =>\r\n\t\t\t\t\tdbRole.name === r.role && dbRole.tenant.name === t.name\r\n\t\t\t);\r\n\t\t\tif (role) {\r\n\t\t\t\tr.defaultEnabledPermissions.forEach((p) => {\r\n\t\t\t\t\tconst rolePermission = new RolePermissions();\r\n\t\t\t\t\trolePermission.roleId = role.id;\r\n\t\t\t\t\trolePermission.permission = p;\r\n\t\t\t\t\trolePermission.enabled = true;\r\n\t\t\t\t\trolePermission.tenant = role.tenant;\r\n\t\t\t\t\trolePermissions.push(rolePermission);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\r\n\treturn await connection.manager.save(rolePermissions);\r\n};\r\n","import { Injectable, BadRequestException } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository, FindConditions, UpdateResult } from 'typeorm';\r\nimport { TenantAwareCrudService } from '../core/crud/tenant-aware-crud.service';\r\nimport { RolePermissions } from './role-permissions.entity';\r\nimport { QueryDeepPartialEntity } from 'typeorm/query-builder/QueryPartialEntity';\r\nimport { RolesEnum, ITenant, IRole, IRolePermission } from '@gauzy/models';\r\nimport { Role } from '../role/role.entity';\r\nimport { DEFAULT_ROLE_PERMISSIONS } from './default-role-permissions';\r\n\r\n@Injectable()\r\nexport class RolePermissionsService extends TenantAwareCrudService<\r\n\tRolePermissions\r\n> {\r\n\tconstructor(\r\n\t\t@InjectRepository(RolePermissions)\r\n\t\tprivate readonly rolePermissionsRepository: Repository<RolePermissions>\r\n\t) {\r\n\t\tsuper(rolePermissionsRepository);\r\n\t}\r\n\r\n\tpublic async update(\r\n\t\tid: string | number | FindConditions<RolePermissions>,\r\n\t\tpartialEntity: QueryDeepPartialEntity<RolePermissions>,\r\n\t\t...options: any[]\r\n\t): Promise<UpdateResult | RolePermissions> {\r\n\t\ttry {\r\n\t\t\tif (partialEntity['hash']) {\r\n\t\t\t\tconst hashPassword = await this.getPasswordHash(\r\n\t\t\t\t\tpartialEntity['hash']\r\n\t\t\t\t);\r\n\t\t\t\tpartialEntity['hash'] = hashPassword;\r\n\t\t\t}\r\n\r\n\t\t\tconst { role } = await this.repository.findOne({\r\n\t\t\t\twhere: { id },\r\n\t\t\t\trelations: ['role']\r\n\t\t\t});\r\n\r\n\t\t\tif (role.name === RolesEnum.SUPER_ADMIN)\r\n\t\t\t\tthrow new Error('Cannot modify Permissions for Super Admin');\r\n\r\n\t\t\treturn await this.repository.update(id, partialEntity);\r\n\t\t} catch (err /*: WriteError*/) {\r\n\t\t\tthrow new BadRequestException(err.message);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic async updateRoles(tenant: ITenant, role: Role) {\r\n\t\tconst { defaultEnabledPermissions } = DEFAULT_ROLE_PERMISSIONS.find(\r\n\t\t\t(defaultRole) => role.name === defaultRole.role\r\n\t\t);\r\n\r\n\t\tdefaultEnabledPermissions.forEach((p) => {\r\n\t\t\tconst rolePermission = new RolePermissions();\r\n\t\t\trolePermission.roleId = role.id;\r\n\t\t\trolePermission.permission = p;\r\n\t\t\trolePermission.enabled = true;\r\n\t\t\trolePermission.tenant = tenant;\r\n\t\t\tthis.create(rolePermission);\r\n\t\t});\r\n\t}\r\n\r\n\tpublic async updateRolesAndPermissions(\r\n\t\ttenants: ITenant[],\r\n\t\troles: IRole[]\r\n\t): Promise<IRolePermission[]> {\r\n\t\tif (!tenants.length) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst rolesPermissions: IRolePermission[] = [];\r\n\t\tfor await (const tenant of tenants) {\r\n\t\t\tfor await (const role of roles) {\r\n\t\t\t\tconst defaultPermissions = DEFAULT_ROLE_PERMISSIONS.find(\r\n\t\t\t\t\t(defaultRole) => role.name === defaultRole.role\r\n\t\t\t\t);\r\n\t\t\t\tif (\r\n\t\t\t\t\tdefaultPermissions &&\r\n\t\t\t\t\tdefaultPermissions['defaultEnabledPermissions']\r\n\t\t\t\t) {\r\n\t\t\t\t\tconst { defaultEnabledPermissions } = defaultPermissions;\r\n\t\t\t\t\tdefaultEnabledPermissions.forEach((p) => {\r\n\t\t\t\t\t\tconst rolePermission = new RolePermissions();\r\n\t\t\t\t\t\trolePermission.roleId = role.id;\r\n\t\t\t\t\t\trolePermission.permission = p;\r\n\t\t\t\t\t\trolePermission.enabled = true;\r\n\t\t\t\t\t\trolePermission.tenant = tenant;\r\n\t\t\t\t\t\trolesPermissions.push(rolePermission);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tawait this.rolePermissionsRepository.save(rolesPermissions);\r\n\t\treturn rolesPermissions;\r\n\t}\r\n}\r\n","import { TenantRoleBulkCreateHandler } from './tenant-role-bulk-create.handler';\r\n\r\nexport const CommandHandlers = [TenantRoleBulkCreateHandler];\r\n","import { IRole } from '@gauzy/models';\r\nimport { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { RolePermissionsService } from '../../../role-permissions/role-permissions.service';\r\nimport { RoleService } from '../../role.service';\r\nimport { TenantRoleBulkCreateCommand } from '../tenant-role-bulk-create.command';\r\n\r\n@CommandHandler(TenantRoleBulkCreateCommand)\r\nexport class TenantRoleBulkCreateHandler\r\n\timplements ICommandHandler<TenantRoleBulkCreateCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly roleService: RoleService,\r\n\t\tprivate readonly rolePermissionsService: RolePermissionsService\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: TenantRoleBulkCreateCommand\r\n\t): Promise<IRole[]> {\r\n\t\tconst { input: tenants } = command;\r\n\r\n\t\t//create roles/permissions after create tenant\r\n\t\tconst roles = await this.roleService.createBulk(tenants);\r\n\t\tawait this.rolePermissionsService.updateRolesAndPermissions(\r\n\t\t\ttenants,\r\n\t\t\troles\r\n\t\t);\r\n\t\treturn roles;\r\n\t}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { ITenant } from '@gauzy/models';\r\n\r\nexport class TenantRoleBulkCreateCommand implements ICommand {\r\n\tstatic readonly type = '[Role] Bulk Create';\r\n\r\n\tconstructor(public readonly input: ITenant[]) {}\r\n}\r\n","import { Controller, Get, HttpStatus, Query, UseGuards } from '@nestjs/common';\r\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport { RoleService } from './role.service';\r\nimport { CrudController } from '../core/crud/crud.controller';\r\nimport { Role } from './role.entity';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('Role')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class RoleController extends CrudController<Role> {\r\n\tconstructor(private readonly roleService: RoleService) {\r\n\t\tsuper(roleService);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find role.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found role',\r\n\t\ttype: Role\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get()\r\n\tasync findRole(@Query('data') data: string): Promise<Role> {\r\n\t\tconst { findInput } = JSON.parse(data);\r\n\r\n\t\treturn this.roleService.findOne({ where: findInput });\r\n\t}\r\n}\r\n","import { Column, Entity, Index, OneToMany } from 'typeorm';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsNotEmpty, IsEnum } from 'class-validator';\r\nimport { RolesEnum, IRolePermission, IRole } from '@gauzy/models';\r\nimport { RolePermissions } from '../role-permissions/role-permissions.entity';\r\nimport { TenantBase } from '../core/entities/tenant-base';\r\n\r\n@Entity('role')\r\nexport class Role extends TenantBase implements IRole {\r\n\t@ApiProperty({ type: String, enum: RolesEnum })\r\n\t@IsEnum(RolesEnum)\r\n\t@IsNotEmpty()\r\n\t@Index()\r\n\t@Column()\r\n\tname: string;\r\n\r\n\t@OneToMany(\r\n\t\t(type) => RolePermissions,\r\n\t\t(rolePermission) => rolePermission.role\r\n\t)\r\n\trolePermissions: IRolePermission[];\r\n}\r\n","import { forwardRef, Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { Role } from './role.entity';\r\nimport { RoleService } from './role.service';\r\nimport { RoleController } from './role.controller';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\nimport { CommandHandlers } from './commands/handlers';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tforwardRef(() => TypeOrmModule.forFeature([Role])),\r\n\t\tforwardRef(() => TenantModule)\r\n\t],\r\n\tcontrollers: [RoleController],\r\n\tproviders: [RoleService, ...CommandHandlers],\r\n\texports: [RoleService]\r\n})\r\nexport class RoleModule {}\r\n","// Modified code from https://github.com/alexitaylor/angular-graphql-nestjs-postgres-starter-kit.\r\n// MIT License, see https://github.com/alexitaylor/angular-graphql-nestjs-postgres-starter-kit/blob/master/LICENSE\r\n// Copyright (c) 2019 Alexi Taylor\r\n\r\nimport { Connection } from 'typeorm';\r\nimport { Role } from './role.entity';\r\nimport { RolesEnum } from '@gauzy/models';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\n\r\nexport const createRoles = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[]\r\n): Promise<Role[]> => {\r\n\tconst roles: Role[] = [];\r\n\tconst rolesNames = Object.values(RolesEnum);\r\n\r\n\ttenants.forEach((tenant) => {\r\n\t\tfor (const name of rolesNames) {\r\n\t\t\tconst role = new Role();\r\n\t\t\trole.name = name;\r\n\t\t\trole.tenant = tenant;\r\n\t\t\troles.push(role);\r\n\t\t}\r\n\t});\r\n\r\n\treturn await connection.manager.save(roles);\r\n};\r\n","import { IRole, ITenant, RolesEnum } from '@gauzy/models';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { TenantAwareCrudService } from '../core/crud/tenant-aware-crud.service';\r\nimport { Role } from './role.entity';\r\n\r\n@Injectable()\r\nexport class RoleService extends TenantAwareCrudService<Role> {\r\n\tconstructor(\r\n\t\t@InjectRepository(Role)\r\n\t\tprivate readonly roleRepository: Repository<Role>\r\n\t) {\r\n\t\tsuper(roleRepository);\r\n\t}\r\n\r\n\tasync createBulk(tenants: ITenant[]): Promise<IRole[]> {\r\n\t\tconst roles: IRole[] = [];\r\n\t\tconst rolesNames = Object.values(RolesEnum);\r\n\r\n\t\ttenants.forEach((tenant: ITenant) => {\r\n\t\t\tfor (const name of rolesNames) {\r\n\t\t\t\tconst role = new Role();\r\n\t\t\t\trole.name = name;\r\n\t\t\t\trole.tenant = tenant;\r\n\t\t\t\troles.push(role);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tawait this.roleRepository.save(roles);\r\n\t\treturn roles;\r\n\t}\r\n}\r\n","import { SetMetadata, createParamDecorator } from '@nestjs/common';\r\nimport { PermissionsEnum } from '@gauzy/models';\r\nimport { RequestContext } from '../../core/context/request-context';\r\nimport { verify } from 'jsonwebtoken';\r\nimport { environment as env } from '@env-api/environment';\r\n\r\nexport const Permissions = (...permissions: string[]) =>\r\n\tSetMetadata('permissions', permissions);\r\n\r\nexport const UserPermissions = createParamDecorator((): PermissionsEnum[] => {\r\n\tconst token = RequestContext.currentToken();\r\n\r\n\tconst { permissions } = verify(token, env.JWT_SECRET) as {\r\n\t\tid: string;\r\n\t\tpermissions: PermissionsEnum[];\r\n\t};\r\n\r\n\treturn permissions.map((permission) => PermissionsEnum[permission]);\r\n});\r\n","import { SetMetadata, createParamDecorator } from '@nestjs/common';\r\nimport { RequestContext } from '../../core/context';\r\nimport { environment as env } from '@env-api/environment';\r\nimport { verify } from 'jsonwebtoken';\r\nimport { RolesEnum } from '@gauzy/models';\r\n\r\nexport const Roles = (...roles: string[]) => SetMetadata('roles', roles);\r\n\r\nexport const UserRole = createParamDecorator(\r\n\t(): RolesEnum => {\r\n\t\tconst token = RequestContext.currentToken();\r\n\r\n\t\tconst { role } = verify(token, env.JWT_SECRET) as {\r\n\t\t\tid: string;\r\n\t\t\trole: string;\r\n\t\t};\r\n\r\n\t\treturn RolesEnum[role];\r\n\t}\r\n);\r\n","import { environment as env } from '@env-api/environment';\r\nimport { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\r\nimport { Reflector } from '@nestjs/core';\r\nimport { verify } from 'jsonwebtoken';\r\nimport { RequestContext } from '../../../core/context';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Employee } from '../../../employee/employee.entity';\r\nimport { Repository } from 'typeorm';\r\nimport { RolesEnum } from '@gauzy/models';\r\n\r\n@Injectable()\r\nexport class OrganizationPermissionGuard implements CanActivate {\r\n\tconstructor(\r\n\t\tprivate readonly _reflector: Reflector,\r\n\r\n\t\t@InjectRepository(Employee)\r\n\t\tprivate readonly employeeRepository: Repository<Employee>\r\n\t) {}\r\n\r\n\tasync canActivate(context: ExecutionContext): Promise<boolean> {\r\n\t\tconst permissions = this._reflector.get<string[]>(\r\n\t\t\t'permissions',\r\n\t\t\tcontext.getHandler()\r\n\t\t);\r\n\r\n\t\tlet isAuthorized = false;\r\n\t\tif (!permissions) {\r\n\t\t\tisAuthorized = true;\r\n\t\t} else {\r\n\t\t\tconst token = RequestContext.currentToken();\r\n\t\t\tconst { employeeId, role } = verify(token, env.JWT_SECRET) as {\r\n\t\t\t\tid: string;\r\n\t\t\t\trole: string;\r\n\t\t\t\temployeeId: string;\r\n\t\t\t};\r\n\r\n\t\t\tif (\r\n\t\t\t\tenv.allowSuperAdminRole === true &&\r\n\t\t\t\trole === RolesEnum.SUPER_ADMIN\r\n\t\t\t) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tconst employee = await this.employeeRepository.findOne(employeeId, {\r\n\t\t\t\trelations: ['organization']\r\n\t\t\t});\r\n\t\t\tlet organizationId: string;\r\n\t\t\tif (employeeId && employee.organization) {\r\n\t\t\t\torganizationId = employee.organization.id;\r\n\t\t\t\tisAuthorized =\r\n\t\t\t\t\tpermissions.filter((p) => employee.organization[p]).length >\r\n\t\t\t\t\t0;\r\n\t\t\t}\r\n\r\n\t\t\tif (!isAuthorized) {\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t'Unauthorized access blocked. OrganizationId:',\r\n\t\t\t\t\torganizationId,\r\n\t\t\t\t\t' Permissions Checked:',\r\n\t\t\t\t\tpermissions\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn isAuthorized;\r\n\t}\r\n}\r\n","import { environment as env } from '@env-api/environment';\r\nimport { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\r\nimport { Reflector } from '@nestjs/core';\r\nimport { verify } from 'jsonwebtoken';\r\nimport { RequestContext } from '../../../core/context';\r\nimport { UserService } from '../../../user/user.service';\r\n\r\n@Injectable()\r\nexport class PermissionGuard implements CanActivate {\r\n\tconstructor(\r\n\t\tprivate readonly _reflector: Reflector,\r\n\t\tprivate readonly userService: UserService\r\n\t) {}\r\n\r\n\tasync canActivate(context: ExecutionContext): Promise<boolean> {\r\n\t\tconst permissions = this._reflector.get<string[]>(\r\n\t\t\t'permissions',\r\n\t\t\tcontext.getHandler()\r\n\t\t);\r\n\r\n\t\tlet isAuthorized = false;\r\n\r\n\t\tif (!permissions) {\r\n\t\t\tisAuthorized = true;\r\n\t\t} else {\r\n\t\t\tconst token = RequestContext.currentToken();\r\n\r\n\t\t\tconst { id } = verify(token, env.JWT_SECRET) as {\r\n\t\t\t\tid: string;\r\n\t\t\t\trole: string;\r\n\t\t\t};\r\n\r\n\t\t\tconst user = await this.userService.findOne(id, {\r\n\t\t\t\trelations: ['role', 'role.rolePermissions']\r\n\t\t\t});\r\n\r\n\t\t\tisAuthorized = !!user.role.rolePermissions.find(\r\n\t\t\t\t(p) => permissions.indexOf(p.permission) > -1 && p.enabled\r\n\t\t\t);\r\n\r\n\t\t\tif (!isAuthorized) {\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t'Unauthorized access blocked. UserId:',\r\n\t\t\t\t\tid,\r\n\t\t\t\t\t' Permissions Checked:',\r\n\t\t\t\t\tpermissions\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn isAuthorized;\r\n\t}\r\n}\r\n","import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\r\nimport { Reflector } from '@nestjs/core';\r\nimport { RequestContext } from '../../../core/context';\r\nimport { RolesEnum } from '@gauzy/models';\r\n\r\n@Injectable()\r\nexport class RoleGuard implements CanActivate {\r\n\tconstructor(private readonly _reflector: Reflector) {}\r\n\r\n\tasync canActivate(context: ExecutionContext): Promise<boolean> {\r\n\t\tconst roles = this._reflector.get<RolesEnum[]>(\r\n\t\t\t'roles',\r\n\t\t\tcontext.getHandler()\r\n\t\t);\r\n\r\n\t\tlet isAuthorized = false;\r\n\r\n\t\tif (!roles) {\r\n\t\t\tisAuthorized = true;\r\n\t\t} else {\r\n\t\t\tisAuthorized = RequestContext.hasRoles(roles);\r\n\t\t}\r\n\t\treturn isAuthorized;\r\n\t}\r\n}\r\n","import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\r\nimport { RequestContext } from '../../../core/context';\r\nimport { RequestMethodEnum } from '@gauzy/models';\r\nimport { isJSON } from 'class-validator';\r\nimport { Reflector } from '@nestjs/core';\r\n\r\n@Injectable()\r\nexport class TenantBaseGuard implements CanActivate {\r\n\tconstructor(protected readonly reflector: Reflector) {}\r\n\r\n\tasync canActivate(context: ExecutionContext): Promise<boolean> {\r\n\t\tconst { tenantId: currentTenantId } = RequestContext.currentUser();\r\n\t\tconst request: any = context.switchToHttp().getRequest();\r\n\t\tconst method: RequestMethodEnum = request.method;\r\n\t\tconst query: any = request.query;\r\n\r\n\t\tlet isAuthorized = false;\r\n\t\tif (!currentTenantId) {\r\n\t\t\treturn isAuthorized;\r\n\t\t}\r\n\t\t//Get Tenant-ID from request headers\r\n\t\tconst headerTenantId = context.switchToHttp().getRequest().headers[\r\n\t\t\t'tenant-id'\r\n\t\t];\r\n\t\tconst rawHeaders = context.switchToHttp().getRequest().rawHeaders;\r\n\t\tif (\r\n\t\t\theaderTenantId &&\r\n\t\t\t(rawHeaders.includes('tenant-id') ||\r\n\t\t\t\trawHeaders.includes('Tenant-ID'))\r\n\t\t) {\r\n\t\t\tisAuthorized = currentTenantId === headerTenantId;\r\n\t\t} else {\r\n\t\t\t//If request to get/delete data using another tenantId then reject request.\r\n\t\t\tconst httpMethods = [\r\n\t\t\t\tRequestMethodEnum.GET,\r\n\t\t\t\tRequestMethodEnum.DELETE\r\n\t\t\t];\r\n\t\t\tif (httpMethods.includes(method)) {\r\n\t\t\t\tif ('tenantId' in query) {\r\n\t\t\t\t\tconst queryTenantId = query['tenantId'];\r\n\t\t\t\t\tisAuthorized = currentTenantId === queryTenantId;\r\n\t\t\t\t} else if (query.hasOwnProperty('data')) {\r\n\t\t\t\t\tconst data: any = query.data;\r\n\t\t\t\t\tconst isJson = isJSON(data);\r\n\t\t\t\t\tif (isJson) {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tconst parse = JSON.parse(data);\r\n\t\t\t\t\t\t\t//Match provided tenantId with logged in tenantId\r\n\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t'findInput' in parse &&\r\n\t\t\t\t\t\t\t\t'tenantId' in parse['findInput']\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\tconst queryTenantId =\r\n\t\t\t\t\t\t\t\t\tparse['findInput']['tenantId'];\r\n\t\t\t\t\t\t\t\tisAuthorized =\r\n\t\t\t\t\t\t\t\t\tcurrentTenantId === queryTenantId;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t//If tenantId not found in query params\r\n\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t\tconsole.log('Json Parser Error:', e);\r\n\t\t\t\t\t\t\treturn isAuthorized;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//If tenantId not found in query params\r\n\t\t\t\t\tisAuthorized = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// If request to save/update data using another tenantId then reject request.\r\n\t\t\tconst payloadMethods = [\r\n\t\t\t\tRequestMethodEnum.POST,\r\n\t\t\t\tRequestMethodEnum.PUT,\r\n\t\t\t\tRequestMethodEnum.PATCH\r\n\t\t\t];\r\n\t\t\tif (payloadMethods.includes(method)) {\r\n\t\t\t\tconst body: any = request.body;\r\n\t\t\t\tlet bodyTenantId: string;\r\n\t\t\t\tif ('tenantId' in body) {\r\n\t\t\t\t\tbodyTenantId = body['tenantId'];\r\n\t\t\t\t} else if ('tenant' in body) {\r\n\t\t\t\t\tbodyTenantId = body['tenant']['id'];\r\n\t\t\t\t}\r\n\t\t\t\tisAuthorized = currentTenantId === bodyTenantId;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!isAuthorized) {\r\n\t\t\tconsole.log(\r\n\t\t\t\t'Unauthorized access blocked. TenantId:',\r\n\t\t\t\theaderTenantId\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn isAuthorized;\r\n\t}\r\n}\r\n","import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\r\nimport { Reflector } from '@nestjs/core';\r\nimport { RequestContext } from '../../../core/context';\r\nimport { RolesEnum } from '@gauzy/models';\r\nimport { TenantService } from '../../../tenant/tenant.service';\r\nimport { environment as env } from '@env-api/environment';\r\nimport { TenantBaseGuard } from './tenant-base.guard ';\r\n@Injectable()\r\nexport class TenantPermissionGuard\r\n\textends TenantBaseGuard\r\n\timplements CanActivate {\r\n\tconstructor(\r\n\t\tprotected readonly reflector: Reflector,\r\n\t\tprivate readonly tenantService: TenantService\r\n\t) {\r\n\t\tsuper(reflector);\r\n\t}\r\n\r\n\tasync canActivate(context: ExecutionContext): Promise<boolean> {\r\n\t\tconst { tenantId: currentTenantId } = RequestContext.currentUser();\r\n\t\tlet isAuthorized = false;\r\n\t\tif (!currentTenantId) {\r\n\t\t\treturn isAuthorized;\r\n\t\t}\r\n\r\n\t\t// Basically if this guard is true then try the check tenant permissions.\r\n\t\tisAuthorized = await super.canActivate(context);\r\n\t\tif (!isAuthorized) {\r\n\t\t\treturn isAuthorized;\r\n\t\t}\r\n\r\n\t\t//Enabled AllowSuperAdminRole from .env file\r\n\t\tif (env.allowSuperAdminRole === true) {\r\n\t\t\t//Super admin and admin has allowed to access request\r\n\t\t\tconst isSuperAdmin = RequestContext.hasRoles([\r\n\t\t\t\tRolesEnum.SUPER_ADMIN\r\n\t\t\t]);\r\n\t\t\tif (isSuperAdmin === true) {\r\n\t\t\t\tisAuthorized = isSuperAdmin;\r\n\t\t\t\treturn isAuthorized;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//Check tenant permissions\r\n\t\tconst permissions = this.reflector.get<string[]>(\r\n\t\t\t'permissions',\r\n\t\t\tcontext.getHandler()\r\n\t\t);\r\n\t\tif (permissions) {\r\n\t\t\tconst tenant = await this.tenantService.findOne(currentTenantId, {\r\n\t\t\t\trelations: ['rolePermissions']\r\n\t\t\t});\r\n\t\t\tisAuthorized = !!tenant.rolePermissions.find(\r\n\t\t\t\t(p) => permissions.indexOf(p.permission) > -1 && p.enabled\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (!isAuthorized) {\r\n\t\t\tconsole.log(\r\n\t\t\t\t'Unauthorized access blocked. TenantId:',\r\n\t\t\t\tcurrentTenantId,\r\n\t\t\t\t' Permissions Checked:',\r\n\t\t\t\tpermissions\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn isAuthorized;\r\n\t}\r\n}\r\n","export * from './recurring-expense.delete.handler';\r\nexport * from './recurring-expense.edit.handler';\r\nexport * from './recurring-expense.find-by-month.handler';\r\nexport * from './update-entity.by-member.handler';\r\n","import {\r\n\tIOrganizationRecurringExpense,\r\n\tIRecurringExpenseDeleteInput,\r\n\tRecurringExpenseDeletionEnum,\r\n\tIRecurringExpenseModel\r\n} from '@gauzy/models';\r\nimport { BadRequestException } from '@nestjs/common';\r\nimport { DeleteResult, UpdateResult } from 'typeorm';\r\nimport { CrudService, getLastDayOfMonth } from '../../core';\r\n\r\n/**\r\n * Deletes a OrganizationRecurringExpense based on command.deleteInput.deletionType:\r\n *\r\n * 1. ALL: Delete all entries for an expense (By actually deleting it from the db)\r\n * 2. FUTURE : Delete only current and future events (By reducing the end date)\r\n * 3. CURRENT : Delete only one month (By splitting the expense into two)\r\n *\r\n * TODO: Fix typescript, remove usage of :any\r\n */\r\nexport abstract class RecurringExpenseDeleteHandler<\r\n\tT extends IRecurringExpenseModel\r\n> {\r\n\tconstructor(private readonly crudService: CrudService<T>) {}\r\n\r\n\tpublic async executeCommand(\r\n\t\tid: string,\r\n\t\tdeleteInput: IRecurringExpenseDeleteInput\r\n\t): Promise<IOrganizationRecurringExpense | UpdateResult | DeleteResult> {\r\n\t\tlet result;\r\n\t\tswitch (deleteInput.deletionType) {\r\n\t\t\tcase RecurringExpenseDeletionEnum.ALL:\r\n\t\t\t\tconst deleteId: any = {\r\n\t\t\t\t\tid\r\n\t\t\t\t};\r\n\t\t\t\tresult = await this.crudService.delete(deleteId);\r\n\t\t\t\tbreak;\r\n\t\t\tcase RecurringExpenseDeletionEnum.FUTURE:\r\n\t\t\t\tresult = await this.updateEndDateToLastMonth(id, deleteInput);\r\n\t\t\t\tbreak;\r\n\t\t\tcase RecurringExpenseDeletionEnum.CURRENT:\r\n\t\t\t\tresult = await this.deleteOneMonthOnly(id, deleteInput);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new BadRequestException(\r\n\t\t\t\t\t`Unsupported deletion type ${deleteInput.deletionType}`\r\n\t\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * This removes the given month in deleteInput from the expense.\r\n\t * 1. Find the original expense.\r\n\t * 2. Check if there is only one month in the original month (start date = end date = the one which needs to be deleted)\r\n\t * 2.a If true then delete the entry completely.\r\n\t * 2.b If false proceed to 3\r\n\t * 3. Check if this is the first month (start date = the one which needs to be deleted)\r\n\t * 3.a If true then delete entry but create for next months\r\n\t * 3.b If false then proceed to 4\r\n\t * 4. Update the end month of the original expense to one less than the month to be deleted\r\n\t * 5. Create a new record with start month as one more than the month to be deleted\r\n\t */\r\n\tprivate async deleteOneMonthOnly(\r\n\t\tid: string,\r\n\t\tdeleteInput: IRecurringExpenseDeleteInput\r\n\t): Promise<IOrganizationRecurringExpense | UpdateResult | DeleteResult> {\r\n\t\tconst originalExpense = await this.crudService.findOne(id);\r\n\r\n\t\tconst deleteDate = new Date(deleteInput.year, deleteInput.month);\r\n\t\tconst deleteId: any = {\r\n\t\t\tid\r\n\t\t};\r\n\r\n\t\tif (\r\n\t\t\tdeleteDate.getTime() === originalExpense.startDate.getTime() &&\r\n\t\t\toriginalExpense.endDate &&\r\n\t\t\toriginalExpense.endDate.getTime() === deleteDate.getTime()\r\n\t\t) {\r\n\t\t\t//Only delete\r\n\t\t\treturn await this.crudService.delete(deleteId);\r\n\t\t} else if (\r\n\t\t\tdeleteDate.getTime() === originalExpense.startDate.getTime()\r\n\t\t) {\r\n\t\t\t//Delete and create for next month onwards\r\n\t\t\tawait this.crudService.delete(deleteId);\r\n\t\t\treturn await this.createExpenseFromNextMonth(\r\n\t\t\t\tdeleteInput,\r\n\t\t\t\toriginalExpense\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tawait this.updateEndDateToLastMonth(id, deleteInput);\r\n\t\t\treturn await this.createExpenseFromNextMonth(\r\n\t\t\t\tdeleteInput,\r\n\t\t\t\toriginalExpense\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the end date to one month before deleteInput.month\r\n\t */\r\n\tprivate async updateEndDateToLastMonth(\r\n\t\tid: string,\r\n\t\tdeleteInput: IRecurringExpenseDeleteInput\r\n\t): Promise<any> {\r\n\t\tconst endMonth = deleteInput.month > 0 ? deleteInput.month - 1 : 11; //Because input.startMonth needs to be deleted\r\n\t\tconst endYear =\r\n\t\t\tdeleteInput.month > 0 ? deleteInput.year : deleteInput.year - 1;\r\n\t\tconst endDay = getLastDayOfMonth(endYear, endMonth);\r\n\t\tconst updateOptions: any = {\r\n\t\t\tendDay,\r\n\t\t\tendMonth,\r\n\t\t\tendYear,\r\n\t\t\tendDate: new Date(endYear, endMonth, endDay)\r\n\t\t};\r\n\t\treturn await this.crudService.update(id, updateOptions);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a copy of the originalExpense but with start date are one month more than deleteInput\r\n\t * By default, start date is the first day of the month & end date is the last date of the month\r\n\t *\r\n\t * @param deleteInput The delete input\r\n\t * @param originalExpense The original (non modified) expense\r\n\t */\r\n\tprivate async createExpenseFromNextMonth(\r\n\t\tdeleteInput: IRecurringExpenseDeleteInput,\r\n\t\toriginalExpense: IRecurringExpenseModel | any\r\n\t): Promise<any> {\r\n\t\tconst nextStartDate = new Date(\r\n\t\t\tdeleteInput.year,\r\n\t\t\tdeleteInput.month + 1,\r\n\t\t\t1\r\n\t\t);\r\n\r\n\t\t// If there is still more time left after deleting one month from in between\r\n\t\tif (\r\n\t\t\t!originalExpense.endDate ||\r\n\t\t\tnextStartDate.getTime() <= originalExpense.endDate.getTime()\r\n\t\t) {\r\n\t\t\tconst createOptions: any = {\r\n\t\t\t\tstartDay: 1,\r\n\t\t\t\tstartMonth: deleteInput.month + 1,\r\n\t\t\t\tstartYear: deleteInput.year,\r\n\t\t\t\tstartDate: nextStartDate,\r\n\t\t\t\tendDay: getLastDayOfMonth(\r\n\t\t\t\t\toriginalExpense.endYear,\r\n\t\t\t\t\toriginalExpense.endMonth\r\n\t\t\t\t),\r\n\t\t\t\tendMonth: originalExpense.endMonth,\r\n\t\t\t\tendYear: originalExpense.endYear,\r\n\t\t\t\tendDate: originalExpense.endDate,\r\n\t\t\t\tcategoryName: originalExpense.categoryName,\r\n\t\t\t\tcurrency: originalExpense.currency,\r\n\t\t\t\tvalue: originalExpense.value,\r\n\t\t\t\tparentRecurringExpenseId:\r\n\t\t\t\t\toriginalExpense.parentRecurringExpenseId\r\n\t\t\t};\r\n\t\t\tif (originalExpense.organizationId) {\r\n\t\t\t\tcreateOptions.organizationId = originalExpense.organizationId;\r\n\t\t\t\tcreateOptions.splitExpense = originalExpense.splitExpense;\r\n\t\t\t} else if (originalExpense.employeeId) {\r\n\t\t\t\tcreateOptions.employeeId = originalExpense.employeeId;\r\n\t\t\t}\r\n\t\t\t//Create new expense for the remaining time\r\n\t\t\treturn await this.crudService.create(createOptions);\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n}\r\n","import {\r\n\tIRecurringExpenseEditInput,\r\n\tIRecurringExpenseModel,\r\n\tStartDateUpdateTypeEnum\r\n} from '@gauzy/models';\r\nimport { BadRequestException } from '@nestjs/common';\r\nimport {\r\n\tBetween,\r\n\tIn,\r\n\tIsNull,\r\n\tLessThanOrEqual,\r\n\tMoreThanOrEqual,\r\n\tNot\r\n} from 'typeorm';\r\nimport { CrudService, getLastDayOfMonth } from '../../core';\r\n\r\n/**\r\n * Edits a recurring expense.\r\n * To edit a recurring expense there can be different cases depending on the new start date.\r\n * For description of difference in each StartDateUpdateTypeEnum please refer to FindRecurringExpenseStartDateUpdateTypeHandler\r\n */\r\nexport abstract class RecurringExpenseEditHandler<\r\n\tT extends IRecurringExpenseModel\r\n> {\r\n\tconstructor(private readonly crudService: CrudService<T>) {}\r\n\r\n\tpublic async executeCommand(\r\n\t\tid: string,\r\n\t\tinput: IRecurringExpenseEditInput\r\n\t): Promise<any> {\r\n\t\tconst originalExpense: any = await this.crudService.findOne(id);\r\n\r\n\t\tconst { startDateUpdateType } = input;\r\n\r\n\t\tswitch (startDateUpdateType) {\r\n\t\t\tcase StartDateUpdateTypeEnum.NO_CHANGE:\r\n\t\t\tcase StartDateUpdateTypeEnum.WITHIN_MONTH:\r\n\t\t\tcase StartDateUpdateTypeEnum.REDUCE_SAFE:\r\n\t\t\t\treturn this.updateExpenseStartDateAndValue(id, input);\r\n\t\t\tcase StartDateUpdateTypeEnum.INCREASE_SAFE_OUTSIDE_LIMIT:\r\n\t\t\tcase StartDateUpdateTypeEnum.INCREASE_SAFE_WITHIN_LIMIT:\r\n\t\t\t\treturn this.increaseSafe(id, input, originalExpense);\r\n\t\t\tcase StartDateUpdateTypeEnum.REDUCE_CONFLICT:\r\n\t\t\t\treturn this.reduceConflict(id, input, originalExpense);\r\n\t\t\tcase StartDateUpdateTypeEnum.INCREASE_CONFLICT:\r\n\t\t\t\t//TODO: Handle this case too\r\n\t\t\t\tthrow new BadRequestException(\r\n\t\t\t\t\t'Cannot increase start date with conflicts'\r\n\t\t\t\t);\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new BadRequestException(\r\n\t\t\t\t\t'Start Date Update Type Not Defined'\r\n\t\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Update the original expense with the input values.\r\n\t * This is to be used when there is no other change required to update the expense.\r\n\t */\r\n\tprivate updateExpenseStartDateAndValue = async (\r\n\t\tid: string,\r\n\t\tinput: IRecurringExpenseEditInput\r\n\t) => {\r\n\t\t//TODO: Fix typescript\r\n\t\tconst updateObject: any = {\r\n\t\t\tstartDay: input.startDay,\r\n\t\t\tstartMonth: input.startMonth,\r\n\t\t\tstartYear: input.startYear,\r\n\t\t\tstartDate: new Date(\r\n\t\t\t\tinput.startYear,\r\n\t\t\t\tinput.startMonth,\r\n\t\t\t\tinput.startDay\r\n\t\t\t),\r\n\t\t\tvalue: input.value\r\n\t\t};\r\n\t\treturn await this.crudService.update(id, updateObject);\r\n\t};\r\n\r\n\t/**\r\n\t * This increases the date of the recurring expense when it is safe to do so\r\n\t * i.e. it is not conflicting with any other expense with the same parentExpenseId\r\n\t *\r\n\t * To do this we\r\n\t * 1. Change the end date of the original expense so that old value is not modified for previous expense.\r\n\t * 2. Create a new expense to have new values for all future dates.\r\n\t */\r\n\tprivate increaseSafe = async (\r\n\t\tid: string,\r\n\t\tinput: IRecurringExpenseEditInput,\r\n\t\toriginalExpense: IRecurringExpenseModel | any\r\n\t) => {\r\n\t\tconst originalEndDate = new Date(\r\n\t\t\toriginalExpense.endYear,\r\n\t\t\toriginalExpense.endMonth,\r\n\t\t\toriginalExpense.endDay\r\n\t\t);\r\n\t\tconst newStartDate = new Date(\r\n\t\t\tinput.startYear,\r\n\t\t\tinput.startMonth,\r\n\t\t\tinput.startDay\r\n\t\t);\r\n\r\n\t\t//1. Change the end date of the original expense so that old value is not modified for previous expense.\r\n\t\tconst endMonth = input.startMonth > 0 ? input.startMonth - 1 : 11;\r\n\t\tconst endYear =\r\n\t\t\tinput.startMonth > 0 ? input.startYear : input.startYear - 1;\r\n\t\tconst endDay = getLastDayOfMonth(endYear, endMonth);\r\n\r\n\t\t//TODO: Fix typescript\r\n\t\tconst updateObject: any = {\r\n\t\t\tendDay,\r\n\t\t\tendMonth, //Because from input.startMonth the new value will be considered\r\n\t\t\tendYear,\r\n\t\t\tendDate: new Date(endYear, endMonth, endDay)\r\n\t\t};\r\n\r\n\t\tawait this.crudService.update(id, updateObject);\r\n\r\n\t\tconst createObject: any = {\r\n\t\t\tstartDay: input.startDay,\r\n\t\t\tstartMonth: input.startMonth,\r\n\t\t\tstartYear: input.startYear,\r\n\t\t\tstartDate: new Date(\r\n\t\t\t\tinput.startYear,\r\n\t\t\t\tinput.startMonth,\r\n\t\t\t\tinput.startDay\r\n\t\t\t),\r\n\t\t\tendDay:\r\n\t\t\t\toriginalEndDate > newStartDate ? originalExpense.endDay : null,\r\n\t\t\tendMonth:\r\n\t\t\t\toriginalEndDate > newStartDate\r\n\t\t\t\t\t? originalExpense.endMonth\r\n\t\t\t\t\t: null,\r\n\t\t\tendYear:\r\n\t\t\t\toriginalEndDate > newStartDate ? originalExpense.endYear : null,\r\n\t\t\tendDate:\r\n\t\t\t\toriginalEndDate > newStartDate ? originalExpense.endDate : null,\r\n\t\t\tvalue: input.value,\r\n\t\t\tcategoryName: originalExpense.categoryName,\r\n\t\t\tcurrency: originalExpense.currency,\r\n\t\t\tparentRecurringExpenseId: originalExpense.parentRecurringExpenseId\r\n\t\t};\r\n\t\tif (originalExpense.employeeId) {\r\n\t\t\tcreateObject.employeeId = originalExpense.employeeId;\r\n\t\t}\r\n\t\tif (originalExpense.organizationId) {\r\n\t\t\tcreateObject.organizationId = originalExpense.organizationId;\r\n\t\t\tcreateObject.splitExpense = originalExpense.splitExpense;\r\n\t\t}\r\n\t\tconst newExpense = await this.crudService.create(createObject);\r\n\r\n\t\treturn newExpense;\r\n\t};\r\n\r\n\t/**\r\n\t * Decrease the date of the recurring expense while modifying the date of the conflicting expense\r\n\t * 1. Find conflicting expense\r\n\t * 2. Update end date of conflicting expense to one month after the input month\r\n\t * 3. Remove any expense if is in between\r\n\t * 4. This resolves the conflict, now do a simple non conflicting update.\r\n\t */\r\n\tprivate reduceConflict = async (\r\n\t\tid: string,\r\n\t\tinput: IRecurringExpenseEditInput,\r\n\t\toriginalExpense: IRecurringExpenseModel\r\n\t) => {\r\n\t\t//1. Find conflicting expense\r\n\t\tconst conflictingExpense = await this.findConflictingExpense(\r\n\t\t\tid,\r\n\t\t\toriginalExpense.parentRecurringExpenseId,\r\n\t\t\tinput.startYear,\r\n\t\t\tinput.startMonth\r\n\t\t);\r\n\r\n\t\t//2. Update end date of conflicting expense to one month before the input start month\r\n\t\tif (conflictingExpense) {\r\n\t\t\tawait this.reduceEndDateToPreviousMonth(\r\n\t\t\t\tconflictingExpense.id,\r\n\t\t\t\tinput.startYear,\r\n\t\t\t\tinput.startMonth\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\t//3. Remove expenses in between, if any\r\n\t\tconst { items, total } = await this.findAllExpensesInBetween(\r\n\t\t\toriginalExpense.id,\r\n\t\t\toriginalExpense.parentRecurringExpenseId,\r\n\t\t\tinput.startYear,\r\n\t\t\tinput.startMonth,\r\n\t\t\toriginalExpense.startYear,\r\n\t\t\toriginalExpense.startMonth\r\n\t\t);\r\n\r\n\t\tif (total > 0) {\r\n\t\t\tconst itemsInBetween: any = {\r\n\t\t\t\tid: In(items.map((i) => i.id))\r\n\t\t\t};\r\n\t\t\tawait this.crudService.delete(itemsInBetween);\r\n\t\t}\r\n\r\n\t\t//4. This resolves the conflict, now do a simple non conflicting update.\r\n\t\tthis.updateExpenseStartDateAndValue(id, input);\r\n\t};\r\n\r\n\t/**\r\n\t * Decrease only the end date to the end of previous month without modifying any value\r\n\t */\r\n\tprivate async reduceEndDateToPreviousMonth(\r\n\t\tid: string,\r\n\t\tstartYear: number,\r\n\t\tstartMonth: number\r\n\t) {\r\n\t\tconst newEndYear = startMonth > 0 ? startYear : startYear - 1;\r\n\t\tconst newEndMonth = startMonth > 0 ? startMonth - 1 : 11;\r\n\t\tconst newEndDay = getLastDayOfMonth(newEndYear, newEndMonth);\r\n\r\n\t\tconst dateUpdate: any = {\r\n\t\t\tendDay: newEndDay,\r\n\t\t\tendMonth: newEndMonth,\r\n\t\t\tendYear: newEndYear,\r\n\t\t\tendDate: new Date(newEndYear, newEndMonth, newEndDay)\r\n\t\t};\r\n\t\tawait this.crudService.update(id, dateUpdate);\r\n\t}\r\n\r\n\t/**\r\n\t * Find all expenses (except the recurringExpenseId) between a given start and end months of the same parent recurring expense id.\r\n\t */\r\n\tasync findAllExpensesInBetween(\r\n\t\trecurringExpenseId: string,\r\n\t\tparentRecurringExpenseId: string,\r\n\t\tupdatedStartYear: number,\r\n\t\tupdatedStartMonth: number,\r\n\t\tcurrentStartYear: number,\r\n\t\tcurrentStartMonth: number\r\n\t) {\r\n\t\tconst lastDayOfMonth = getLastDayOfMonth(\r\n\t\t\tcurrentStartYear,\r\n\t\t\tcurrentStartMonth\r\n\t\t);\r\n\t\tconst currentStartDate = new Date(\r\n\t\t\tcurrentStartYear,\r\n\t\t\tcurrentStartMonth,\r\n\t\t\tlastDayOfMonth\r\n\t\t);\r\n\t\tconst updatedStartDate = new Date(\r\n\t\t\tupdatedStartYear,\r\n\t\t\tupdatedStartMonth,\r\n\t\t\t1\r\n\t\t);\r\n\r\n\t\treturn await this.crudService.findAll({\r\n\t\t\twhere: [\r\n\t\t\t\t{\r\n\t\t\t\t\tid: Not(recurringExpenseId),\r\n\t\t\t\t\tparentRecurringExpenseId: parentRecurringExpenseId,\r\n\t\t\t\t\tstartDate: Between(updatedStartDate, currentStartDate)\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tid: Not(recurringExpenseId),\r\n\t\t\t\t\tparentRecurringExpenseId: parentRecurringExpenseId,\r\n\t\t\t\t\tendDate: Between(updatedStartDate, currentStartDate)\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t});\r\n\t}\r\n\r\n\tasync findConflictingExpense(\r\n\t\trecurringExpenseId: string,\r\n\t\tparentRecurringExpenseId: string,\r\n\t\tyear: number,\r\n\t\tmonth: number\r\n\t) {\r\n\t\tconst lastDayOfMonth = getLastDayOfMonth(year, month);\r\n\t\tconst inputStartDate = new Date(year, month, lastDayOfMonth);\r\n\t\tconst inputEndDate = new Date(year, month, 1);\r\n\r\n\t\ttry {\r\n\t\t\tconst expense = await this.crudService.findOne({\r\n\t\t\t\twhere: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tparentRecurringExpenseId: parentRecurringExpenseId,\r\n\t\t\t\t\t\tstartDate: LessThanOrEqual(inputStartDate),\r\n\t\t\t\t\t\tendDate: IsNull()\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tparentRecurringExpenseId: parentRecurringExpenseId,\r\n\t\t\t\t\t\tstartDate: LessThanOrEqual(inputStartDate),\r\n\t\t\t\t\t\tendDate: MoreThanOrEqual(inputEndDate)\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t});\r\n\r\n\t\t\t//If this is the same expense as the expense we want to update, then it is not a conflicting expense\r\n\t\t\treturn expense.id !== recurringExpenseId ? expense : undefined;\r\n\t\t} catch (error) {\r\n\t\t\t//Ignore, this means record not found.\r\n\t\t}\r\n\r\n\t\treturn undefined;\r\n\t}\r\n}\r\n","import {\r\n\tIRecurringExpenseByMonthFindInput,\r\n\tIRecurringExpenseModel\r\n} from '@gauzy/models';\r\nimport { IsNull, LessThanOrEqual, MoreThanOrEqual } from 'typeorm';\r\nimport { CrudService, getLastDayOfMonth, IPagination } from '../../core';\r\n\r\n/**\r\n * Finds income, expense, profit and bonus for all organizations for the given month.\r\n *\r\n * (start date) < (input date) < (end date, null for end date is treated as infinity)\r\n *\r\n * If year is different, only company year.\r\n * If year is same, compare month\r\n */\r\nexport abstract class FindRecurringExpenseByMonthHandler<\r\n\tT extends IRecurringExpenseModel\r\n> {\r\n\t//TODO: Change CrudService<any> to be more specific\r\n\tconstructor(private readonly crudService: CrudService<T>) {}\r\n\r\n\tpublic async executeCommand(\r\n\t\tinput: IRecurringExpenseByMonthFindInput | any,\r\n\t\trelations?: string[]\r\n\t): Promise<IPagination<T>> {\r\n\t\tconst lastDayOfMonth = getLastDayOfMonth(input.year, input.month);\r\n\t\tconst inputStartDate = new Date(\r\n\t\t\tinput.year,\r\n\t\t\tinput.month,\r\n\t\t\tlastDayOfMonth\r\n\t\t);\r\n\t\tconst inputEndDate = new Date(input.year, input.month, 1);\r\n\r\n\t\tlet whereId: Object = input.employeeId\r\n\t\t\t? {\r\n\t\t\t\t\temployeeId: input.employeeId,\r\n\t\t\t\t\torganizationId: input.organizationId,\r\n\t\t\t\t\ttenantId: input.tenantId\r\n\t\t\t  }\r\n\t\t\t: {\r\n\t\t\t\t\torganizationId: input.organizationId,\r\n\t\t\t\t\ttenantId: input.tenantId\r\n\t\t\t  };\r\n\r\n\t\tif (input.parentRecurringExpenseId) {\r\n\t\t\twhereId = {\r\n\t\t\t\t...whereId,\r\n\t\t\t\tparentRecurringExpenseId: input.parentRecurringExpenseId\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tconst expenses = await this.crudService.findAll({\r\n\t\t\twhere: [\r\n\t\t\t\t{\r\n\t\t\t\t\t...whereId,\r\n\t\t\t\t\tstartDate: LessThanOrEqual(inputStartDate),\r\n\t\t\t\t\tendDate: IsNull()\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t...whereId,\r\n\t\t\t\t\tstartDate: LessThanOrEqual(inputStartDate),\r\n\t\t\t\t\tendDate: MoreThanOrEqual(inputEndDate)\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\trelations\r\n\t\t});\r\n\r\n\t\treturn expenses;\r\n\t}\r\n}\r\n","import {\r\n\tIFindStartDateUpdateTypeInput,\r\n\tIStartUpdateTypeInfo,\r\n\tIRecurringExpenseModel,\r\n\tStartDateUpdateTypeEnum\r\n} from '@gauzy/models';\r\nimport { Between, Not } from 'typeorm';\r\nimport { CrudService, getLastDayOfMonth } from '../../core';\r\n\r\n/**\r\n * Finds the start date update type.\r\n *\r\n * When updating the start date, if\r\n * NO_CHANGE: When there is no change in the date.\r\n * WITHIN_MONTH: When the change is within a particular month.\r\n * INCREASE_SAFE_WITHIN_LIMIT: When the change is 'safe*' and the new start date is BEFORE the end date\r\n * INCREASE_SAFE_OUTSIDE_LIMIT: When the change is 'safe*' and the new start date is AFTER the end date\r\n * INCREASE_CONFLICT: When there are one or more conflicting expenses between the original start date and new start date\r\n * REDUCE_SAFE: When the new start date is before the old start date and it is 'safe*' to update the date\r\n * REDUCE_CONFLICT: When the new start date is before the old start date and there is some expense already with the same parentRecurringExpenseId for the date\r\n *\r\n * *safe: An expense update is 'safe' when there is no other expense with the same parentRecurringExpenseId for the new start date.\r\n */\r\nexport abstract class FindRecurringExpenseStartDateUpdateTypeHandler<\r\n\tT extends IRecurringExpenseModel\r\n> {\r\n\tconstructor(private readonly crudService: CrudService<T>) {}\r\n\r\n\tpublic async executeQuery(\r\n\t\tinput: IFindStartDateUpdateTypeInput\r\n\t): Promise<IStartUpdateTypeInfo> {\r\n\t\tconst { newStartDate, recurringExpenseId } = input;\r\n\r\n\t\tconst originalExpense = await this.crudService.findOne(\r\n\t\t\trecurringExpenseId\r\n\t\t);\r\n\r\n\t\tconst oldStartDateObject = originalExpense.startDate;\r\n\r\n\t\tconst newStartDateObject = new Date(newStartDate);\r\n\r\n\t\tif (oldStartDateObject.getTime() === newStartDateObject.getTime()) {\r\n\t\t\treturn { value: StartDateUpdateTypeEnum.NO_CHANGE, conflicts: [] };\r\n\t\t} else if (\r\n\t\t\tnewStartDateObject.getMonth() === oldStartDateObject.getMonth() &&\r\n\t\t\tnewStartDateObject.getFullYear() ===\r\n\t\t\t\toldStartDateObject.getFullYear()\r\n\t\t) {\r\n\t\t\treturn {\r\n\t\t\t\tvalue: StartDateUpdateTypeEnum.WITHIN_MONTH,\r\n\t\t\t\tconflicts: []\r\n\t\t\t};\r\n\t\t} else if (\r\n\t\t\tnewStartDateObject.getTime() > oldStartDateObject.getTime()\r\n\t\t) {\r\n\t\t\treturn this.getIncreaseType(originalExpense, newStartDateObject);\r\n\t\t} else if (\r\n\t\t\tnewStartDateObject.getTime() < oldStartDateObject.getTime()\r\n\t\t) {\r\n\t\t\treturn this.getReduceType(originalExpense, newStartDate);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns whether the increase is safe or has conflicts.\r\n\t * 1. If new start date is more than original end date then it is outside limit\r\n\t * 2. Find all expenses between original start date and new start date, if any expense found then conflict\r\n\t */\r\n\tprivate async getIncreaseType(originalExpense, newStartDateObject) {\r\n\t\tconst safeUpdateType =\r\n\t\t\toriginalExpense.endDate &&\r\n\t\t\tnewStartDateObject.getTime() > originalExpense.endDate.getTime()\r\n\t\t\t\t? StartDateUpdateTypeEnum.INCREASE_SAFE_OUTSIDE_LIMIT\r\n\t\t\t\t: StartDateUpdateTypeEnum.INCREASE_SAFE_WITHIN_LIMIT;\r\n\r\n\t\tconst {\r\n\t\t\titems: foundRecurringExpenses,\r\n\t\t\ttotal\r\n\t\t} = await this.findAllExpensesInBetween(\r\n\t\t\toriginalExpense.id,\r\n\t\t\toriginalExpense.parentRecurringExpenseId,\r\n\t\t\tnew Date(originalExpense.startYear, originalExpense.startMonth, 1),\r\n\t\t\tnew Date(\r\n\t\t\t\tnewStartDateObject.getFullYear(),\r\n\t\t\t\tnewStartDateObject.getMonth(),\r\n\t\t\t\tgetLastDayOfMonth(\r\n\t\t\t\t\tnewStartDateObject.getFullYear(),\r\n\t\t\t\t\tnewStartDateObject.getMonth()\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\treturn {\r\n\t\t\tvalue:\r\n\t\t\t\ttotal === 0\r\n\t\t\t\t\t? safeUpdateType\r\n\t\t\t\t\t: StartDateUpdateTypeEnum.INCREASE_CONFLICT,\r\n\t\t\tconflicts: foundRecurringExpenses\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Returns whether reducing the start date is safe or has conflicts.\r\n\t * Find all expenses between new start date and original start date, if any expense found then conflict\r\n\t */\r\n\tprivate async getReduceType(originalExpense, newStartDate) {\r\n\t\tconst currentStartDate = new Date(\r\n\t\t\toriginalExpense.startYear,\r\n\t\t\toriginalExpense.startMonth,\r\n\t\t\tgetLastDayOfMonth(\r\n\t\t\t\toriginalExpense.startYear,\r\n\t\t\t\toriginalExpense.startMonth\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tconst {\r\n\t\t\titems: foundRecurringExpenses,\r\n\t\t\ttotal\r\n\t\t} = await this.findAllExpensesInBetween(\r\n\t\t\toriginalExpense.id,\r\n\t\t\toriginalExpense.parentRecurringExpenseId,\r\n\t\t\tnewStartDate,\r\n\t\t\tcurrentStartDate\r\n\t\t);\r\n\r\n\t\treturn {\r\n\t\t\tvalue:\r\n\t\t\t\ttotal === 0\r\n\t\t\t\t\t? StartDateUpdateTypeEnum.REDUCE_SAFE\r\n\t\t\t\t\t: StartDateUpdateTypeEnum.REDUCE_CONFLICT,\r\n\t\t\tconflicts: foundRecurringExpenses\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Find all expenses (except the recurringExpenseId) between a given from and to date of the same parent recurring expense id.\r\n\t */\r\n\tprivate async findAllExpensesInBetween(\r\n\t\trecurringExpenseId: string,\r\n\t\tparentRecurringExpenseId: string,\r\n\t\tfromStartDate: Date,\r\n\t\ttoStartDate: Date\r\n\t) {\r\n\t\treturn await this.crudService.findAll({\r\n\t\t\twhere: [\r\n\t\t\t\t{\r\n\t\t\t\t\tid: Not(recurringExpenseId),\r\n\t\t\t\t\tparentRecurringExpenseId: parentRecurringExpenseId,\r\n\t\t\t\t\tstartDate: Between(fromStartDate, toStartDate)\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tid: Not(recurringExpenseId),\r\n\t\t\t\t\tparentRecurringExpenseId: parentRecurringExpenseId,\r\n\t\t\t\t\tendDate: Between(fromStartDate, toStartDate)\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t});\r\n\t}\r\n}\r\n","import { IEditEntityByMemberInput } from '@gauzy/models';\r\nimport { In } from 'typeorm';\r\nimport { CrudService } from '../../core/crud';\r\n\r\nexport abstract class UpdateEntityByMembersHandler {\r\n\t//TODO: Change CrudService<any> to be more specific\r\n\tconstructor(private readonly crudService: CrudService<any>) {}\r\n\r\n\tpublic async executeCommand(input: IEditEntityByMemberInput): Promise<any> {\r\n\t\tconst { addedEntityIds, removedEntityIds, member } = input;\r\n\r\n\t\tif (addedEntityIds && addedEntityIds.length > 0) {\r\n\t\t\tconst departmentsToAdd = await this.crudService.findAll({\r\n\t\t\t\twhere: {\r\n\t\t\t\t\tid: In(addedEntityIds)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tfor (let i = 0; i < departmentsToAdd.total; i++) {\r\n\t\t\t\tconst existingMembers = departmentsToAdd.items[i].members || [];\r\n\r\n\t\t\t\t//Note: This does not really create anything, just calls repository.save on the given id.\r\n\t\t\t\t//Cannot call update here because update will not update relations (members)\r\n\t\t\t\tawait this.crudService.create({\r\n\t\t\t\t\tid: departmentsToAdd.items[i].id,\r\n\t\t\t\t\tmembers: [...existingMembers, member]\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (removedEntityIds && removedEntityIds.length > 0) {\r\n\t\t\tconst departmentsToRemove = await this.crudService.findAll({\r\n\t\t\t\twhere: {\r\n\t\t\t\t\tid: In(removedEntityIds)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tfor (let i = 0; i < departmentsToRemove.total; i++) {\r\n\t\t\t\t//Note: This does not really create anything, just calls repository.save on the given id.\r\n\t\t\t\t//Cannot call update here because update will not update relations (members)\r\n\t\t\t\tawait this.crudService.create({\r\n\t\t\t\t\tid: departmentsToRemove.items[i].id,\r\n\t\t\t\t\tmembers: (\r\n\t\t\t\t\t\tdepartmentsToRemove.items[i].members || []\r\n\t\t\t\t\t).filter((e) => e.id !== member.id)\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn;\r\n\t}\r\n}\r\n","export * from './shared.module';\r\nexport * from './pipes';\r\nexport * from './handlers';\r\n","export * from './uuid-validation.pipe';\r\nexport * from './parse-json.pipe';\r\n","import {\r\n\tArgumentMetadata,\r\n\tHttpStatus,\r\n\tInjectable,\r\n\tOptional,\r\n\tPipeTransform\r\n} from '@nestjs/common';\r\nimport {\r\n\tErrorHttpStatusCode,\r\n\tHttpErrorByCode\r\n} from '@nestjs/common/utils/http-error-by-code.util';\r\nimport { isJSON } from 'class-validator';\r\n\r\nexport interface ParseJsonPipeOptions {\r\n\tthrowInvalidError?: boolean;\r\n\terrorHttpStatusCode?: ErrorHttpStatusCode;\r\n\texceptionFactory?: (error: string) => any;\r\n}\r\n/**\r\n * JSON Parse Pipe\r\n * Validates UUID passed in request parameters.\r\n */\r\n@Injectable()\r\nexport class ParseJsonPipe implements PipeTransform<string> {\r\n\t/**\r\n\t * Throw invalid JSON error or not ? default to \"false\"\r\n\t */\r\n\tprotected throwInvalidError: boolean;\r\n\r\n\tprotected exceptionFactory: (error: string) => any;\r\n\r\n\t/**\r\n\t * Instance of class-validator\r\n\t * Can not be easily injected, and there's no need to do so as we\r\n\t * only use it for json validation method.\r\n\t */\r\n\r\n\tconstructor(@Optional() options?: ParseJsonPipeOptions) {\r\n\t\toptions = options || {};\r\n\r\n\t\tconst {\r\n\t\t\texceptionFactory,\r\n\t\t\terrorHttpStatusCode = HttpStatus.BAD_REQUEST,\r\n\t\t\tthrowInvalidError = false\r\n\t\t} = options;\r\n\r\n\t\tthis.throwInvalidError = throwInvalidError;\r\n\t\tthis.exceptionFactory =\r\n\t\t\texceptionFactory ||\r\n\t\t\t((error) => new HttpErrorByCode[errorHttpStatusCode](error));\r\n\t}\r\n\r\n\t/**\r\n\t * @param value currently processed route argument\r\n\t * @param metadata contains metadata about the currently processed route argument\r\n\t */\r\n\tasync transform(value: string, metadata: ArgumentMetadata): Promise<any> {\r\n\t\tconst isJson = isJSON(value);\r\n\r\n\t\tif (isJson) {\r\n\t\t\ttry {\r\n\t\t\t\treturn JSON.parse(value);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log('Json Parser Error:', e);\r\n\t\t\t}\r\n\t\t} else if (this.throwInvalidError) {\r\n\t\t\tthrow this.exceptionFactory(\r\n\t\t\t\t'Validation failed (JSON string is expected)'\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn {};\r\n\t}\r\n}\r\n","// Code from https://github.com/xmlking/ngx-starter-kit.\r\n// MIT License, see https://github.com/xmlking/ngx-starter-kit/blob/develop/LICENSE\r\n// Copyright (c) 2018 Sumanth Chinthagunta\r\n\r\nimport {\r\n\tArgumentMetadata,\r\n\tInjectable,\r\n\tNotFoundException,\r\n\tPipeTransform\r\n} from '@nestjs/common';\r\nimport { isUUID } from 'class-validator';\r\n\r\n/**\r\n * UUID Validation Pipe\r\n *\r\n * Validates UUID passed in request parameters.\r\n */\r\n@Injectable()\r\nexport class UUIDValidationPipe implements PipeTransform {\r\n\t/**\r\n\t * Instance of class-validator\r\n\t *\r\n\t * Can not be easily injected, and there's no need to do so as we\r\n\t * only use it for uuid validation method.\r\n\t */\r\n\r\n\t/**\r\n\t * When user requests an entity with invalid UUID we must return 404\r\n\t * error before reaching into the database.\r\n\t */\r\n\tpublic transform(value: string, metadata: ArgumentMetadata): string {\r\n\t\tif (!isUUID(value)) {\r\n\t\t\tthrow new NotFoundException();\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t}\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { UUIDValidationPipe } from './pipes/uuid-validation.pipe';\r\n\r\n@Module({\r\n  imports: [],\r\n  providers: [UUIDValidationPipe],\r\n  exports: [UUIDValidationPipe],\r\n})\r\nexport class SharedModule { }\r\n","export const DEFAULT_SKILLS: string[] = [\r\n\t'Node.js',\r\n\t'Angular',\r\n\t'React',\r\n\t'NestJS',\r\n\t'NextJS',\r\n\t'PostgreSQL'\r\n];\r\n","import { Controller, Get, Param, UseGuards } from '@nestjs/common';\r\nimport { ApiTags } from '@nestjs/swagger';\r\nimport { CrudController } from '../core';\r\nimport { Skill } from './skill.entity';\r\nimport { SkillService } from './skill.service';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('Skills')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class SkillController extends CrudController<Skill> {\r\n\tconstructor(private readonly skillService: SkillService) {\r\n\t\tsuper(skillService);\r\n\t}\r\n\r\n\t@Get('getByName/:name')\r\n\tasync findByName(@Param('name') name: string): Promise<Skill> {\r\n\t\treturn this.skillService.findOneByName(name);\r\n\t}\r\n}\r\n","import { Entity, Column, Unique, ManyToMany, JoinTable } from 'typeorm';\r\nimport { IEmployee, ISkill } from '@gauzy/models';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('skill')\r\n@Unique(['name'])\r\nexport class Skill extends TenantOrganizationBase implements ISkill {\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\tname?: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\tdescription?: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\tcolor?: string;\r\n\r\n\t@ManyToMany((type) => Employee, (employee) => employee.skills)\r\n\t@JoinTable({\r\n\t\tname: 'skill_employee'\r\n\t})\r\n\temployees?: IEmployee[];\r\n}\r\n","import { SkillService } from './skill.service';\r\nimport { SkillController } from './skill.controller';\r\nimport { Skill } from './skill.entity';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { Module } from '@nestjs/common';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [TypeOrmModule.forFeature([Skill]), TenantModule],\r\n\tcontrollers: [SkillController],\r\n\tproviders: [SkillService],\r\n\texports: [SkillService]\r\n})\r\nexport class SkillModule {}\r\n","import { IOrganization, ITenant } from '@gauzy/models';\r\nimport { Connection } from 'typeorm';\r\nimport { DEFAULT_SKILLS } from './default-skills';\r\nimport { Skill } from './skill.entity';\r\n\r\nexport const createDefaultSkills = async (\r\n\tconnection: Connection,\r\n\ttenant: ITenant,\r\n\torganization: IOrganization\r\n): Promise<Skill[]> => {\r\n\tconst skills: Skill[] = [];\r\n\tfor (const name of DEFAULT_SKILLS) {\r\n\t\tconst skill = new Skill();\r\n\t\tskill.name = name;\r\n\t\tskill.tenant = tenant;\r\n\t\tskill.organization = organization;\r\n\t\tskill.description = '';\r\n\t\tskill.color = '#479bfa';\r\n\t\tskills.push(skill);\r\n\t}\r\n\r\n\treturn await connection.manager.save(skills);\r\n};\r\n","import { Repository } from 'typeorm';\r\nimport { Skill } from './skill.entity';\r\nimport { CrudService } from '../core';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\n\r\n@Injectable()\r\nexport class SkillService extends CrudService<Skill> {\r\n\tconstructor(\r\n\t\t@InjectRepository(Skill)\r\n\t\tprivate readonly skillRepository: Repository<Skill>\r\n\t) {\r\n\t\tsuper(skillRepository);\r\n\t}\r\n\r\n\tasync findOneByName(name: string): Promise<Skill> {\r\n\t\tconst query = this.repository\r\n\t\t\t.createQueryBuilder('skill')\r\n\t\t\t.where('\"skill\".\"name\" = :name', {\r\n\t\t\t\tname\r\n\t\t\t});\r\n\t\tconst item = await query.getOne();\r\n\t\treturn item;\r\n\t}\r\n}\r\n","export const DEFAULT_GLOBAL_TAGS: string[] = [\r\n\t'VIP',\r\n\t'Urgent',\r\n\t'Crazy',\r\n\t'Broken',\r\n\t'TODO',\r\n\t'In Process',\r\n\t'Verified',\r\n\t'Third Party API',\r\n\t'Killer',\r\n\t'Idiot',\r\n\t'Super',\r\n\t'WIP'\r\n];\r\n\r\nexport const DEFAULT_ORGANIZATION_TAGS: string[] = [\r\n\t'Program',\r\n\t'Web',\r\n\t'Mobile',\r\n\t'Frontend',\r\n\t'Backend',\r\n\t'Database',\r\n\t'Authentication',\r\n\t'Security',\r\n\t'Dashboard',\r\n\t'API',\r\n\t'Design',\r\n\t'Testing',\r\n\t'Local',\r\n\t'QC',\r\n\t'Production',\r\n\t'Crap',\r\n\t'WTF'\r\n];\r\n","import {\r\n\tController,\r\n\tGet,\r\n\tParam,\r\n\tPost,\r\n\tBody,\r\n\tUseGuards,\r\n\tQuery\r\n} from '@nestjs/common';\r\nimport { ApiTags } from '@nestjs/swagger';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { CrudController, IPagination } from '../core';\r\nimport { Tag } from './tag.entity';\r\nimport { TagService } from './tag.service';\r\nimport { PermissionGuard } from '../shared/guards/auth/permission.guard';\r\nimport { PermissionsEnum } from '@gauzy/models';\r\nimport { Permissions } from '../shared/decorators/permissions';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\nimport { ParseJsonPipe } from '../shared/pipes/parse-json.pipe';\r\n\r\n@ApiTags('Tags')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class TagController extends CrudController<Tag> {\r\n\tconstructor(private readonly tagService: TagService) {\r\n\t\tsuper(tagService);\r\n\t}\r\n\r\n\t@Get('getByName/:name')\r\n\tasync findByName(@Param('name') name: string): Promise<Tag> {\r\n\t\treturn this.tagService.findOneByName(name);\r\n\t}\r\n\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_TAGS_EDIT)\r\n\t@Post()\r\n\tasync createRecord(@Body() entity: Tag): Promise<any> {\r\n\t\treturn this.tagService.create(entity);\r\n\t}\r\n\r\n\t@Get()\r\n\tasync getAllTags(\r\n\t\t@Query('data', ParseJsonPipe) data: any\r\n\t): Promise<IPagination<Tag>> {\r\n\t\tconst { relations, findInput } = data;\r\n\t\treturn this.tagService.findAll({\r\n\t\t\twhere: findInput,\r\n\t\t\trelations\r\n\t\t});\r\n\t}\r\n\r\n\t@Get('getByOrgId')\r\n\tasync getAllTagsByOrgLevel(\r\n\t\t@Query('data', ParseJsonPipe) data: any\r\n\t): Promise<any> {\r\n\t\tconst { relations, findInput } = data;\r\n\t\treturn this.tagService.findTagsByOrgLevel(relations, findInput);\r\n\t}\r\n\t@Get('getByTenantId')\r\n\tasync getAllTagsByTenantLevel(\r\n\t\t@Query('data', ParseJsonPipe) data: any\r\n\t): Promise<any> {\r\n\t\tconst { relations, findInput } = data;\r\n\t\treturn this.tagService.findTagsByTenantLevel(relations, findInput);\r\n\t}\r\n\r\n\t@Get(`getTagsWithCount`)\r\n\tasync getTagUsageCount(\r\n\t\t@Query('data', ParseJsonPipe) data: any\r\n\t): Promise<any> {\r\n\t\tconst { organizationId } = data;\r\n\t\treturn this.tagService.getTagUsageCount(organizationId);\r\n\t}\r\n}\r\n","import { Entity, Column, ManyToMany, JoinTable } from 'typeorm';\r\nimport { ITag } from '@gauzy/models';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { Candidate } from '../candidate/candidate.entity';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { Equipment } from '../equipment/equipment.entity';\r\nimport { EventType } from '../event-types/event-type.entity';\r\nimport { Income } from '../income/income.entity';\r\nimport { Expense } from '../expense/expense.entity';\r\nimport { Invoice } from '../invoice/invoice.entity';\r\nimport { Task } from '../tasks/task.entity';\r\nimport { Proposal } from '../proposal/proposal.entity';\r\nimport { OrganizationVendor } from '../organization-vendors/organization-vendors.entity';\r\nimport { OrganizationTeam } from '../organization-team/organization-team.entity';\r\nimport { OrganizationProject } from '../organization-projects/organization-projects.entity';\r\nimport { OrganizationPositions } from '../organization-positions/organization-positions.entity';\r\nimport { ExpenseCategory } from '../expense-categories/expense-category.entity';\r\nimport { OrganizationEmploymentType } from '../organization-employment-type/organization-employment-type.entity';\r\nimport { EmployeeLevel } from '../organization_employee-level/organization-employee-level.entity';\r\nimport { OrganizationDepartment } from '../organization-department/organization-department.entity';\r\nimport { OrganizationContact } from '../organization-contact/organization-contact.entity';\r\nimport { Product } from '../product/product.entity';\r\nimport { Payment } from '../payment/payment.entity';\r\nimport { RequestApproval } from '../request-approval/request-approval.entity';\r\nimport { User } from '../user/user.entity';\r\nimport { Integration } from '../integration/integration.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('tag')\r\nexport class Tag extends TenantOrganizationBase implements ITag {\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\tname?: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\tdescription?: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\tcolor?: string;\r\n\r\n\t@ApiProperty({ type: Boolean, default: false })\r\n\t@Column({ default: false })\r\n\tisSystem?: boolean;\r\n\r\n\t@ManyToMany((type) => Candidate, (candidate) => candidate.tags)\r\n\tcandidate?: Candidate[];\r\n\r\n\t@ManyToMany((type) => Employee, (employee) => employee.tags)\r\n\temployee?: Employee[];\r\n\r\n\t@ManyToMany((type) => Equipment, (equipment) => equipment.tags)\r\n\tequipment?: Equipment[];\r\n\r\n\t@ManyToMany((type) => EventType, (eventType) => eventType.tags)\r\n\teventType?: EventType[];\r\n\r\n\t@ManyToMany((type) => Income, (income) => income.tags)\r\n\tincome?: Income[];\r\n\r\n\t@ManyToMany((type) => Expense, (expense) => expense.tags)\r\n\texpense?: Expense[];\r\n\r\n\t@ManyToMany((type) => Invoice, (invoice) => invoice.tags)\r\n\tinvoice?: Invoice[];\r\n\r\n\t@ManyToMany((type) => Task, (task) => task.tags)\r\n\ttask?: Task[];\r\n\r\n\t@ManyToMany((type) => Proposal, (proposal) => proposal.tags)\r\n\tproposal?: Proposal[];\r\n\r\n\t@ManyToMany(\r\n\t\t(type) => OrganizationVendor,\r\n\t\t(organizationVendor) => organizationVendor.tags\r\n\t)\r\n\torganizationVendor?: OrganizationVendor[];\r\n\r\n\t@ManyToMany(\r\n\t\t(type) => OrganizationTeam,\r\n\t\t(organizationTeam) => organizationTeam.tags\r\n\t)\r\n\torganizationTeam?: OrganizationTeam[];\r\n\r\n\t@ManyToMany(\r\n\t\t(type) => OrganizationProject,\r\n\t\t(organizationProject) => organizationProject.tags\r\n\t)\r\n\torganizationProject?: OrganizationProject[];\r\n\r\n\t@ManyToMany(\r\n\t\t(type) => OrganizationPositions,\r\n\t\t(organizationPosition) => organizationPosition.tags\r\n\t)\r\n\torganizationPosition?: OrganizationPositions[];\r\n\r\n\t@ManyToMany(\r\n\t\t(type) => ExpenseCategory,\r\n\t\t(expenseCategory) => expenseCategory.tags\r\n\t)\r\n\texpenseCategory?: ExpenseCategory[];\r\n\r\n\t@ManyToMany(\r\n\t\t(type) => OrganizationEmploymentType,\r\n\t\t(organizationEmploymentType) => organizationEmploymentType.tags\r\n\t)\r\n\torganizationEmploymentType?: OrganizationEmploymentType[];\r\n\r\n\t@ManyToMany((type) => EmployeeLevel, (employeeLevel) => employeeLevel.tags)\r\n\temployeeLevel?: EmployeeLevel[];\r\n\r\n\t@ManyToMany(\r\n\t\t(type) => OrganizationDepartment,\r\n\t\t(organizationDepartment) => organizationDepartment.tags\r\n\t)\r\n\torganizationDepartment?: OrganizationDepartment[];\r\n\r\n\t@ManyToMany(\r\n\t\t(type) => OrganizationContact,\r\n\t\t(organizationContact) => organizationContact.tags\r\n\t)\r\n\torganizationContact?: OrganizationContact[];\r\n\r\n\t@ManyToMany((type) => Product, (product) => product.tags)\r\n\tproduct?: Product[];\r\n\r\n\t@ManyToMany((type) => Payment, (payment) => payment.tags)\r\n\tpayment?: Payment[];\r\n\r\n\t@ManyToMany(\r\n\t\t(type) => RequestApproval,\r\n\t\t(requestApproval) => requestApproval.tags\r\n\t)\r\n\trequestApproval?: RequestApproval[];\r\n\r\n\t@ManyToMany(() => User)\r\n\t@JoinTable({\r\n\t\tname: 'tag_user'\r\n\t})\r\n\tusers?: User[];\r\n\r\n\t@ManyToMany(() => Integration)\r\n\t@JoinTable({\r\n\t\tname: 'tag_integration'\r\n\t})\r\n\tintegrations?: Integration[];\r\n}\r\n","import { TagService } from './tag.service';\r\nimport { TagController } from './tag.controller';\r\nimport { Tag } from './tag.entity';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { Module } from '@nestjs/common';\r\nimport { UserModule } from '../user/user.module';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [TypeOrmModule.forFeature([Tag]), UserModule, TenantModule],\r\n\tcontrollers: [TagController],\r\n\tproviders: [TagService],\r\n\texports: [TagService]\r\n})\r\nexport class TagModule {}\r\n","import { Connection } from 'typeorm';\r\nimport * as faker from 'faker';\r\nimport { Tag } from './tag.entity';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { DEFAULT_GLOBAL_TAGS, DEFAULT_ORGANIZATION_TAGS } from './default-tags';\r\n\r\nexport const createDefaultTags = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\torganizations: Organization[]\r\n): Promise<Tag[]> => {\r\n\tlet tags: Tag[] = [];\r\n\r\n\torganizations.forEach((org) => {\r\n\t\tconst organizationTags: Tag[] = Object.values(DEFAULT_GLOBAL_TAGS).map(\r\n\t\t\t(name) => {\r\n\t\t\t\tconst orgTags = new Tag();\r\n\t\t\t\torgTags.name = name;\r\n\t\t\t\torgTags.description = '';\r\n\t\t\t\torgTags.color = faker.commerce.color();\r\n\t\t\t\tif (orgTags.color === 'white') {\r\n\t\t\t\t\torgTags.color = 'Red';\r\n\t\t\t\t}\r\n\t\t\t\torgTags.organization = org;\r\n\t\t\t\torgTags.tenant = tenant;\r\n\t\t\t\treturn orgTags;\r\n\t\t\t}\r\n\t\t);\r\n\t\ttags = [...tags, ...organizationTags];\r\n\t});\r\n\treturn await connection.manager.save(tags);\r\n};\r\n\r\nexport const createTags = async (connection: Connection): Promise<Tag[]> => {\r\n\tconst tags: Tag[] = [];\r\n\tfor (const name of DEFAULT_ORGANIZATION_TAGS) {\r\n\t\tconst tag = new Tag();\r\n\t\ttag.name = name;\r\n\t\ttag.description = '';\r\n\t\ttag.color = faker.commerce.color();\r\n\t\tif (tag.color === 'white') {\r\n\t\t\ttag.color = 'red';\r\n\t\t}\r\n\t\ttags.push(tag);\r\n\t}\r\n\r\n\tawait connection\r\n\t\t.createQueryBuilder()\r\n\t\t.insert()\r\n\t\t.into(Tag)\r\n\t\t.values(tags)\r\n\t\t.execute();\r\n\r\n\treturn tags;\r\n};\r\n\r\nexport const createRandomOrganizationTags = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantOrganizationsMap: Map<Tenant, Organization[]>\r\n): Promise<Tag[]> => {\r\n\tlet tags: Tag[] = [];\r\n\r\n\tfor (const tenant of tenants) {\r\n\t\tconst organizations = tenantOrganizationsMap.get(tenant);\r\n\t\torganizations.forEach((org) => {\r\n\t\t\tconst organizationTags: Tag[] = Object.values(\r\n\t\t\t\tDEFAULT_ORGANIZATION_TAGS\r\n\t\t\t).map((name) => {\r\n\t\t\t\tconst orgTags = new Tag();\r\n\t\t\t\torgTags.name = name;\r\n\t\t\t\torgTags.description = '';\r\n\t\t\t\torgTags.color = faker.commerce.color();\r\n\t\t\t\torgTags.organization = org;\r\n\t\t\t\torgTags.tenant = tenant;\r\n\r\n\t\t\t\tif (orgTags.color === 'white') {\r\n\t\t\t\t\torgTags.color = 'red';\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn orgTags;\r\n\t\t\t});\r\n\t\t\ttags = [...tags, ...organizationTags];\r\n\t\t});\r\n\t}\r\n\treturn await connection.manager.save(tags);\r\n};\r\n","import { Repository } from 'typeorm';\r\nimport { Tag } from './tag.entity';\r\nimport { CrudService } from '../core';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { ITag } from '@gauzy/models';\r\n\r\n@Injectable()\r\nexport class TagService extends CrudService<Tag> {\r\n\tconstructor(\r\n\t\t@InjectRepository(Tag)\r\n\t\tprivate readonly tagRepository: Repository<Tag>\r\n\t) {\r\n\t\tsuper(tagRepository);\r\n\t}\r\n\r\n\tasync findOneByName(name: string): Promise<Tag> {\r\n\t\tconst query = this.tagRepository\r\n\t\t\t.createQueryBuilder('tag')\r\n\t\t\t.where('\"tag\".\"name\" = :name', {\r\n\t\t\t\tname\r\n\t\t\t});\r\n\t\tconst item = await query.getOne();\r\n\t\treturn item;\r\n\t}\r\n\r\n\tasync findTagsByOrgLevel(\r\n\t\trelations: string[],\r\n\t\tfindInput: ITag\r\n\t): Promise<any> {\r\n\t\tconst { organizationId, tenantId } = findInput;\r\n\t\tconst allTags = await this.tagRepository.find({\r\n\t\t\twhere: [{ organizationId, tenantId, isSystem: false }],\r\n\t\t\trelations: relations\r\n\t\t});\r\n\t\treturn allTags;\r\n\t}\r\n\tasync findTagsByTenantLevel(\r\n\t\trelations: string[],\r\n\t\tfindInput: ITag\r\n\t): Promise<any> {\r\n\t\tconst { tenantId } = findInput;\r\n\t\tconst allTags = await this.tagRepository.find({\r\n\t\t\twhere: [{ tenantId, isSystem: false }],\r\n\t\t\trelations: relations\r\n\t\t});\r\n\t\treturn allTags;\r\n\t}\r\n\r\n\tasync getTagUsageCount(organizationId: any): Promise<any> {\r\n\t\tconst allTagsInOrg = await this.tagRepository\r\n\t\t\t.createQueryBuilder('tag')\r\n\t\t\t.select('*')\r\n\t\t\t.where('tag.organization = :organizationId', {\r\n\t\t\t\torganizationId\r\n\t\t\t})\r\n\t\t\t.andWhere('tag.isSystem = :action', {\r\n\t\t\t\taction: false\r\n\t\t\t})\r\n\t\t\t.getRawMany();\r\n\r\n\t\tconst allTagsIds = [];\r\n\t\tallTagsInOrg.forEach((tag) => allTagsIds.push(tag.id));\r\n\r\n\t\tconst tagCounterAllRelations = await this.tagRepository\r\n\t\t\t.createQueryBuilder('tag')\r\n\t\t\t.leftJoinAndSelect('tag.candidate', 'candidate')\r\n\t\t\t.leftJoinAndSelect('tag.employee', 'employee')\r\n\t\t\t.leftJoinAndSelect('tag.equipment', 'equipment')\r\n\t\t\t.leftJoinAndSelect('tag.eventType', 'eventType')\r\n\t\t\t.leftJoinAndSelect('tag.income', 'income')\r\n\t\t\t.leftJoinAndSelect('tag.expense', 'expense')\r\n\t\t\t.leftJoinAndSelect('tag.invoice', 'invoice')\r\n\t\t\t.leftJoinAndSelect('tag.task', 'task')\r\n\t\t\t.leftJoinAndSelect('tag.proposal', 'proposal')\r\n\t\t\t.leftJoinAndSelect('tag.organizationVendor', 'organizationVendor')\r\n\t\t\t.leftJoinAndSelect('tag.organizationTeam', 'organizationTeam')\r\n\t\t\t.leftJoinAndSelect('tag.organizationProject', 'organizationProject')\r\n\t\t\t.leftJoinAndSelect(\r\n\t\t\t\t'tag.organizationPosition',\r\n\t\t\t\t'organizationPosition'\r\n\t\t\t)\r\n\t\t\t.leftJoinAndSelect('tag.expenseCategory', 'expenseCategory')\r\n\t\t\t.leftJoinAndSelect(\r\n\t\t\t\t'tag.organizationEmploymentType',\r\n\t\t\t\t'organizationEmploymentType'\r\n\t\t\t)\r\n\t\t\t.leftJoinAndSelect('tag.employeeLevel', 'employeeLevel')\r\n\t\t\t.leftJoinAndSelect(\r\n\t\t\t\t'tag.organizationDepartment',\r\n\t\t\t\t'organizationDepartment'\r\n\t\t\t)\r\n\t\t\t.leftJoinAndSelect('tag.organizationContact', 'organizationContact')\r\n\t\t\t.leftJoinAndSelect('tag.product', 'product')\r\n\t\t\t.leftJoinAndSelect('tag.payment', 'payment')\r\n\t\t\t.where('tag.id IN (:...id)', { id: allTagsIds })\r\n\t\t\t.andWhere('tag.isSystem = :action', { action: false })\r\n\t\t\t.getMany();\r\n\r\n\t\tlet tagWithCounter = {};\r\n\t\tconst tagsWithCounter = [];\r\n\r\n\t\tfor (\r\n\t\t\tlet arrayIndex = 0;\r\n\t\t\tarrayIndex < allTagsInOrg.length;\r\n\t\t\tarrayIndex++\r\n\t\t) {\r\n\t\t\ttagWithCounter = {\r\n\t\t\t\t...tagCounterAllRelations[arrayIndex],\r\n\t\t\t\tcounter:\r\n\t\t\t\t\ttagCounterAllRelations[arrayIndex].candidate.length +\r\n\t\t\t\t\ttagCounterAllRelations[arrayIndex].employee.length +\r\n\t\t\t\t\ttagCounterAllRelations[arrayIndex].equipment.length +\r\n\t\t\t\t\ttagCounterAllRelations[arrayIndex].eventType.length +\r\n\t\t\t\t\ttagCounterAllRelations[arrayIndex].income.length +\r\n\t\t\t\t\ttagCounterAllRelations[arrayIndex].expense.length +\r\n\t\t\t\t\ttagCounterAllRelations[arrayIndex].invoice.length +\r\n\t\t\t\t\ttagCounterAllRelations[arrayIndex].task.length +\r\n\t\t\t\t\ttagCounterAllRelations[arrayIndex].proposal.length +\r\n\t\t\t\t\ttagCounterAllRelations[arrayIndex].organizationVendor\r\n\t\t\t\t\t\t.length +\r\n\t\t\t\t\ttagCounterAllRelations[arrayIndex].organizationTeam.length +\r\n\t\t\t\t\ttagCounterAllRelations[arrayIndex].organizationProject\r\n\t\t\t\t\t\t.length +\r\n\t\t\t\t\ttagCounterAllRelations[arrayIndex].organizationPosition\r\n\t\t\t\t\t\t.length +\r\n\t\t\t\t\ttagCounterAllRelations[arrayIndex].expenseCategory.length +\r\n\t\t\t\t\ttagCounterAllRelations[arrayIndex]\r\n\t\t\t\t\t\t.organizationEmploymentType.length +\r\n\t\t\t\t\ttagCounterAllRelations[arrayIndex].employeeLevel.length +\r\n\t\t\t\t\ttagCounterAllRelations[arrayIndex].organizationDepartment\r\n\t\t\t\t\t\t.length +\r\n\t\t\t\t\ttagCounterAllRelations[arrayIndex].organizationContact\r\n\t\t\t\t\t\t.length +\r\n\t\t\t\t\ttagCounterAllRelations[arrayIndex].product.length +\r\n\t\t\t\t\ttagCounterAllRelations[arrayIndex].payment.length\r\n\t\t\t};\r\n\t\t\ttagsWithCounter.push(tagWithCounter);\r\n\t\t}\r\n\r\n\t\treturn tagsWithCounter;\r\n\t}\r\n}\r\n","import { TaskCreateHandler } from './task-create.handler';\r\nimport { TaskUpdateHandler } from './task-update.handler';\r\n\r\nexport const CommandHandlers = [TaskCreateHandler, TaskUpdateHandler];\r\n","import { ITask } from '@gauzy/models';\r\nimport { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { TaskCreateCommand } from '..';\r\nimport { TaskService } from '../../task.service';\r\n\r\n@CommandHandler(TaskCreateCommand)\r\nexport class TaskCreateHandler implements ICommandHandler<TaskCreateCommand> {\r\n\tconstructor(private readonly taskService: TaskService) {}\r\n\r\n\tpublic async execute(command: TaskCreateCommand): Promise<ITask> {\r\n\t\tconst { input } = command;\r\n\r\n\t\treturn await this.taskService.create(input);\r\n\t}\r\n}\r\n","import { ITask, ITaskUpdateInput } from '@gauzy/models';\r\nimport { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { TaskService } from '../../task.service';\r\nimport { TaskUpdateCommand } from '../task-update.command';\r\n\r\n@CommandHandler(TaskUpdateCommand)\r\nexport class TaskUpdateHandler implements ICommandHandler<TaskUpdateCommand> {\r\n\tconstructor(private readonly _taskService: TaskService) {}\r\n\r\n\tpublic async execute(command: TaskUpdateCommand): Promise<ITask> {\r\n\t\tconst { input } = command;\r\n\t\tconst { id } = input;\r\n\r\n\t\treturn await this.updateTask(id, input);\r\n\t}\r\n\r\n\t/*\r\n\t * Update task if already integrated\r\n\t */\r\n\tpublic async updateTask(\r\n\t\tid: string,\r\n\t\trequest: ITaskUpdateInput\r\n\t): Promise<ITask> {\r\n\t\tconst task = await this._taskService.findOne(id);\r\n\t\tif (task) {\r\n\t\t\tdelete request.id;\r\n\t\t\tawait this._taskService.update(id, request);\r\n\t\t\treturn await this._taskService.findOne(id);\r\n\t\t}\r\n\r\n\t\treturn task;\r\n\t}\r\n}\r\n","export * from './task-create.command';\r\nexport * from './task-update.command';\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { ITaskCreateInput } from '@gauzy/models';\r\n\r\nexport class TaskCreateCommand implements ICommand {\r\n\tstatic readonly type = '[Tasks] Create Task';\r\n\r\n\tconstructor(public readonly input: ITaskCreateInput) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { ITaskUpdateInput } from '@gauzy/models';\r\n\r\nexport class TaskUpdateCommand implements ICommand {\r\n\tstatic readonly type = '[Tasks] Update Task';\r\n\r\n\tconstructor(public readonly input: ITaskUpdateInput) {}\r\n}\r\n","import {\r\n\tController,\r\n\tHttpStatus,\r\n\tGet,\r\n\tQuery,\r\n\tHttpCode,\r\n\tPut,\r\n\tParam,\r\n\tBody,\r\n\tBadRequestException,\r\n\tUseGuards,\r\n\tPost,\r\n\tDelete\r\n} from '@nestjs/common';\r\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport { Task } from './task.entity';\r\nimport { CrudController, IPagination } from '../core';\r\nimport { TaskService } from './task.service';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { PermissionGuard } from '../shared/guards/auth/permission.guard';\r\nimport { Permissions } from '../shared/decorators/permissions';\r\nimport { PermissionsEnum, IGetTaskByEmployeeOptions } from '@gauzy/models';\r\nimport { EmployeeService } from '../employee/employee.service';\r\nimport { RequestContext } from '../core/context';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\nimport { ParseJsonPipe } from '../shared';\r\n\r\n@ApiTags('Tasks')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class TaskController extends CrudController<Task> {\r\n\tconstructor(\r\n\t\tprivate readonly taskService: TaskService,\r\n\t\tprivate readonly employeeService: EmployeeService\r\n\t) {\r\n\t\tsuper(taskService);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find all tasks.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found tasks',\r\n\t\ttype: Task\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get()\r\n\tasync findAllTasks(\r\n\t\t@Query('data', ParseJsonPipe) data: any\r\n\t): Promise<IPagination<Task>> {\r\n\t\tconst tenantId = RequestContext.currentTenantId();\r\n\t\tconst { relations, findInput } = data;\r\n\t\tif (!findInput.hasOwnProperty('tenantId')) {\r\n\t\t\tfindInput['tenantId'] = tenantId;\r\n\t\t}\r\n\r\n\t\treturn this.taskService.findAll({\r\n\t\t\twhere: findInput,\r\n\t\t\trelations\r\n\t\t});\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find my tasks.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found tasks',\r\n\t\ttype: Task\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Records not found'\r\n\t})\r\n\t@Get('me')\r\n\tasync findMyTasks(): Promise<IPagination<Task>> {\r\n\t\t//If user is not an employee, then this will return 404\r\n\t\tconst employee = await this.employeeService.findOne({\r\n\t\t\twhere: {\r\n\t\t\t\tuser: { id: RequestContext.currentUser().id }\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn this.taskService.getMyTasks(employee.id);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find my team tasks.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found tasks',\r\n\t\ttype: Task\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Records not found'\r\n\t})\r\n\t@Get('team')\r\n\tasync findTeamTasks(\r\n\t\t@Query('data', ParseJsonPipe) data: any\r\n\t): Promise<IPagination<Task>> {\r\n\t\tconst { employeeId } = data;\r\n\t\treturn this.taskService.findTeamTasks(employeeId);\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find Employee Task.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found Employee Task',\r\n\t\ttype: Task\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get('employee/:id')\r\n\tasync getAllTasksByEmployee(\r\n\t\t@Param('id') employeeId: string,\r\n\t\t@Body() findInput: IGetTaskByEmployeeOptions\r\n\t) {\r\n\t\treturn this.taskService.getAllTasksByEmployee(employeeId, findInput);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'create a task' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully created.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_CANDIDATES_TASK_EDIT)\r\n\t@Post()\r\n\tasync createTask(@Body() entity: Task): Promise<Task> {\r\n\t\treturn this.taskService.createTask(entity);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Update an existing task' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully edited.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_CANDIDATES_TASK_EDIT)\r\n\t@Put(':id')\r\n\tasync update(@Param('id') id: string, @Body() entity: Task): Promise<any> {\r\n\t\t//We are using create here because create calls the method save()\r\n\t\t//We need save() to save ManyToMany relations\r\n\t\ttry {\r\n\t\t\treturn await this.taskService.create({\r\n\t\t\t\tid,\r\n\t\t\t\t...entity\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tthrow new BadRequestException(error);\r\n\t\t}\r\n\t}\r\n\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_CANDIDATES_TASK_EDIT)\r\n\t@Delete(':id')\r\n\tasync deleteTask(@Param('id') id: string): Promise<any> {\r\n\t\treturn this.taskService.delete(id);\r\n\t}\r\n}\r\n","import {\r\n\tEntity,\r\n\tColumn,\r\n\tManyToOne,\r\n\tJoinColumn,\r\n\tRelationId,\r\n\tOneToMany,\r\n\tManyToMany,\r\n\tJoinTable\r\n} from 'typeorm';\r\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\r\nimport { IsOptional } from 'class-validator';\r\nimport { ITask, TaskStatusEnum } from '@gauzy/models';\r\nimport { OrganizationProject } from '../organization-projects/organization-projects.entity';\r\nimport { InvoiceItem } from '../invoice-item/invoice-item.entity';\r\nimport { Tag } from '../tags/tag.entity';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { OrganizationTeam } from '../organization-team/organization-team.entity';\r\nimport { User } from '../user/user.entity';\r\nimport { OrganizationSprint } from '../organization-sprint/organization-sprint.entity';\r\nimport { TimeLog } from '../timesheet/time-log.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('task')\r\nexport class Task extends TenantOrganizationBase implements ITask {\r\n\t@ApiProperty({ type: Tag })\r\n\t@ManyToMany((type) => Tag, (tag) => tag.task)\r\n\t@JoinTable({\r\n\t\tname: 'tag_task'\r\n\t})\r\n\ttags?: Tag[];\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column()\r\n\ttitle: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column({ nullable: true })\r\n\tdescription?: string;\r\n\r\n\t@ApiProperty({ type: String, enum: TaskStatusEnum })\r\n\t@Column()\r\n\tstatus?: string;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@Column({ nullable: true })\r\n\t@IsOptional()\r\n\testimate?: number;\r\n\r\n\t@ApiProperty({ type: Date })\r\n\t@Column({ nullable: true })\r\n\t@IsOptional()\r\n\tdueDate?: Date;\r\n\r\n\t@ApiProperty({ type: OrganizationProject })\r\n\t@ManyToOne((type) => OrganizationProject, {\r\n\t\tnullable: true,\r\n\t\tonDelete: 'CASCADE'\r\n\t})\r\n\t@JoinColumn()\r\n\tproject?: OrganizationProject;\r\n\r\n\t@OneToMany((type) => TimeLog, (timeLog) => timeLog.task)\r\n\ttimeLogs?: TimeLog[];\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@RelationId((task: Task) => task.project)\r\n\t@Column({ nullable: true })\r\n\treadonly projectId?: string;\r\n\r\n\t@ManyToMany((type) => Employee, { cascade: ['update'] })\r\n\t@JoinTable({\r\n\t\tname: 'task_employee'\r\n\t})\r\n\treadonly members?: Employee[];\r\n\r\n\t@ManyToMany((type) => OrganizationTeam, { cascade: ['update'] })\r\n\t@JoinTable({\r\n\t\tname: 'task_team'\r\n\t})\r\n\tteams?: OrganizationTeam[];\r\n\r\n\t@ApiPropertyOptional({ type: InvoiceItem, isArray: true })\r\n\t@OneToMany((type) => InvoiceItem, (invoiceItem) => invoiceItem.task)\r\n\t@JoinColumn()\r\n\tinvoiceItems?: InvoiceItem[];\r\n\r\n\t@ApiProperty({ type: User })\r\n\t@ManyToOne((type) => User, {\r\n\t\tnullable: true,\r\n\t\tonDelete: 'CASCADE'\r\n\t})\r\n\t@JoinColumn()\r\n\tcreator?: User;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@RelationId((task: Task) => task.creator)\r\n\t@Column()\r\n\treadonly creatorId?: string;\r\n\r\n\t@ApiProperty({ type: OrganizationSprint })\r\n\t@ManyToOne((type) => OrganizationSprint, {\r\n\t\tonDelete: 'SET NULL'\r\n\t})\r\n\t@JoinColumn()\r\n\torganizationSprint?: OrganizationSprint;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { Task } from './task.entity';\r\nimport { TaskService } from './task.service';\r\nimport { TaskController } from './task.controller';\r\nimport { OrganizationProject } from '../organization-projects/organization-projects.entity';\r\nimport { CommandHandlers } from './commands/handlers';\r\nimport { UserService } from '../user/user.service';\r\nimport { User } from '../user/user.entity';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { EmployeeService } from '../employee/employee.service';\r\nimport { RoleService } from '../role/role.service';\r\nimport { Role } from '../role/role.entity';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([\r\n\t\t\tTask,\r\n\t\t\tOrganizationProject,\r\n\t\t\tUser,\r\n\t\t\tEmployee,\r\n\t\t\tRole\r\n\t\t]),\r\n\t\tTenantModule\r\n\t],\r\n\tcontrollers: [TaskController],\r\n\tproviders: [\r\n\t\tTaskService,\r\n\t\tEmployeeService,\r\n\t\tRoleService,\r\n\t\t...CommandHandlers,\r\n\t\tUserService\r\n\t],\r\n\texports: [TaskService]\r\n})\r\nexport class TaskModule {}\r\n","import { Connection } from 'typeorm';\r\nimport * as faker from 'faker';\r\nimport * as _ from 'underscore';\r\nimport { HttpService } from '@nestjs/common';\r\n\r\nimport { TaskStatusEnum } from '@gauzy/models';\r\nimport { Task } from './task.entity';\r\nimport { Tag } from '../tags/tag.entity';\r\nimport { OrganizationProject } from '../organization-projects/organization-projects.entity';\r\nimport { OrganizationTeam } from '../organization-team/organization-team.entity';\r\nimport { User } from '../user/user.entity';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\n\r\nconst GITHUB_API_URL = 'https://api.github.com';\r\n\r\nexport const createDefaultTask = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\torganization: Organization\r\n): Promise<Task[]> => {\r\n\tconst httpService = new HttpService();\r\n\r\n\tconst tasks: Task[] = [];\r\n\r\n\tconst teams = await connection\r\n\t\t.getRepository(OrganizationTeam)\r\n\t\t.createQueryBuilder()\r\n\t\t.getMany();\r\n\r\n\tconst users = await connection\r\n\t\t.getRepository(User)\r\n\t\t.createQueryBuilder()\r\n\t\t.getMany();\r\n\r\n\tconsole.log(`${GITHUB_API_URL}/repos/ever-co/gauzy/issues`);\r\n\tconst issues: any[] = await httpService\r\n\t\t.get(`${GITHUB_API_URL}/repos/ever-co/gauzy/issues`)\r\n\t\t.toPromise()\r\n\t\t.then((resp) => resp.data);\r\n\r\n\tconsole.log(`Done ${GITHUB_API_URL}/repos/ever-co/gauzy/issues`);\r\n\r\n\tlet labels = [];\r\n\tissues.forEach(async (issue) => {\r\n\t\tlabels = labels.concat(issue.labels);\r\n\t});\r\n\r\n\tlabels = _.uniq(labels, (label) => label.name);\r\n\tconst tags: Tag[] = await createTags(connection, labels);\r\n\r\n\tconst defaultProjects = await connection\r\n\t\t.getRepository(OrganizationProject)\r\n\t\t.createQueryBuilder()\r\n\t\t.getMany();\r\n\r\n\t// issues.forEach((issue) => {\r\n\tfor (const issue of issues) {\r\n\t\tlet status = TaskStatusEnum.TODO;\r\n\t\tif (issue.state === 'open') {\r\n\t\t\tstatus = TaskStatusEnum.IN_PROGRESS;\r\n\t\t}\r\n\r\n\t\tconst project = faker.random.arrayElement(defaultProjects);\r\n\t\tconst task = new Task();\r\n\t\ttask.tags = _.filter(\r\n\t\t\ttags,\r\n\t\t\t(tag: Tag) =>\r\n\t\t\t\t!!issue.labels.find((label: any) => label.name === tag.name)\r\n\t\t);\r\n\r\n\t\ttask.tenant = tenant;\r\n\t\ttask.organization = organization;\r\n\t\ttask.title = issue.title;\r\n\t\ttask.description = issue.body;\r\n\t\ttask.status = status;\r\n\t\ttask.estimate = null;\r\n\t\ttask.dueDate = null;\r\n\t\ttask.project = project;\r\n\t\ttask.teams = [faker.random.arrayElement(teams)];\r\n\t\ttask.creator = faker.random.arrayElement(users);\r\n\t\ttasks.push(task);\r\n\r\n\t\tproject.tasks = tasks;\r\n\t\tawait connection.manager.save(project);\r\n\t}\r\n\r\n\tawait connection.manager.save(tasks);\r\n\treturn tasks;\r\n};\r\n\r\nexport const createRandomTask = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\tprojects: OrganizationProject[] | void\r\n) => {\r\n\tif (!projects) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: projects not found, RandomTask will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst httpService = new HttpService();\r\n\tconst tasks: Task[] = [];\r\n\tconst teams = await connection\r\n\t\t.getRepository(OrganizationTeam)\r\n\t\t.createQueryBuilder()\r\n\t\t.getMany();\r\n\r\n\tconst users = await connection\r\n\t\t.getRepository(User)\r\n\t\t.createQueryBuilder()\r\n\t\t.getMany();\r\n\r\n\tconsole.log(`${GITHUB_API_URL}/repos/ever-co/gauzy/issues`);\r\n\tconst issues: any[] = await httpService\r\n\t\t.get(`${GITHUB_API_URL}/repos/ever-co/gauzy/issues`)\r\n\t\t.toPromise()\r\n\t\t.then((resp) => resp.data);\r\n\r\n\tconsole.log(`Done ${GITHUB_API_URL}/repos/ever-co/gauzy/issues`);\r\n\r\n\tlet labels = [];\r\n\tissues.forEach(async (issue) => {\r\n\t\tlabels = labels.concat(issue.labels);\r\n\t});\r\n\r\n\tlabels = _.uniq(labels, (label) => label.name);\r\n\tconst tags: Tag[] = await createTags(connection, labels);\r\n\r\n\tfor await (const tenant of tenants || []) {\r\n\t\tconst organizations = await connection.manager.find(Organization, {\r\n\t\t\twhere: [{ tenant: tenant }]\r\n\t\t});\r\n\t\tissues.forEach((issue) => {\r\n\t\t\tlet status = TaskStatusEnum.TODO;\r\n\t\t\tif (issue.state === 'open') {\r\n\t\t\t\tstatus = TaskStatusEnum.IN_PROGRESS;\r\n\t\t\t}\r\n\r\n\t\t\tconst task = new Task();\r\n\t\t\ttask.tags = _.filter(\r\n\t\t\t\ttags,\r\n\t\t\t\t(tag: Tag) =>\r\n\t\t\t\t\t!!issue.labels.find((label: any) => label.name === tag.name)\r\n\t\t\t);\r\n\t\t\ttask.title = issue.title;\r\n\t\t\ttask.description = issue.body;\r\n\t\t\ttask.status = status;\r\n\t\t\ttask.estimate = null;\r\n\t\t\ttask.dueDate = null;\r\n\t\t\ttask.project = faker.random.arrayElement(projects);\r\n\t\t\ttask.teams = [faker.random.arrayElement(teams)];\r\n\t\t\ttask.creator = faker.random.arrayElement(users);\r\n\t\t\t(task.organization = faker.random.arrayElement(organizations)),\r\n\t\t\t\t(task.tenant = tenant);\r\n\t\t\ttasks.push(task);\r\n\t\t});\r\n\t}\r\n\r\n\tawait connection.manager.save(tasks);\r\n};\r\n\r\nexport async function createTags(connection: Connection, labels) {\r\n\tif (labels.length === 0) {\r\n\t\treturn [];\r\n\t}\r\n\r\n\tconst tags: Tag[] = labels.map(\r\n\t\t(label) =>\r\n\t\t\tnew Tag({\r\n\t\t\t\tname: label.name,\r\n\t\t\t\tdescription: label.description,\r\n\t\t\t\tcolor: label.color\r\n\t\t\t})\r\n\t);\r\n\r\n\tconst insertedTags = await connection.getRepository(Tag).save(tags);\r\n\treturn insertedTags;\r\n}\r\n","import {\r\n\tInjectable,\r\n\tHttpException,\r\n\tHttpStatus,\r\n\tBadRequestException\r\n} from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Task } from './task.entity';\r\nimport { Repository } from 'typeorm';\r\nimport { CrudService } from '../core';\r\nimport { EmployeeService } from '../employee/employee.service';\r\nimport { RoleService } from '../role/role.service';\r\nimport { RequestContext } from '../core/context';\r\nimport { IGetTaskByEmployeeOptions } from '@gauzy/models';\r\n\r\n@Injectable()\r\nexport class TaskService extends CrudService<Task> {\r\n\tconstructor(\r\n\t\t@InjectRepository(Task)\r\n\t\tprivate readonly taskRepository: Repository<Task>,\r\n\t\tprivate readonly employeeService: EmployeeService,\r\n\t\tprivate readonly roleService: RoleService\r\n\t) {\r\n\t\tsuper(taskRepository);\r\n\t}\r\n\r\n\tasync createTask(task: Task) {\r\n\t\tconst user = RequestContext.currentUser();\r\n\t\tconst obj = this.repository.create({\r\n\t\t\t...task,\r\n\t\t\tcreator: user\r\n\t\t});\r\n\t\ttry {\r\n\t\t\t// https://github.com/Microsoft/TypeScript/issues/21592\r\n\t\t\treturn await this.repository.save(obj as any);\r\n\t\t} catch (err /*: WriteError*/) {\r\n\t\t\tthrow new BadRequestException(err);\r\n\t\t}\r\n\t\t// return await this.repository.insert({\r\n\t\t// \t...task,\r\n\t\t// \tcreatorId: user.id\r\n\t\t// });\r\n\t}\r\n\r\n\tasync getMyTasks(employeeId) {\r\n\t\tconst total = await this.taskRepository\r\n\t\t\t.createQueryBuilder('task')\r\n\t\t\t.leftJoinAndSelect('task.project', 'project')\r\n\t\t\t.leftJoinAndSelect('task.tags', 'tags')\r\n\t\t\t.leftJoinAndSelect('task.organizationSprint', 'sprint')\r\n\t\t\t.leftJoinAndSelect('task.members', 'members')\r\n\t\t\t.leftJoinAndSelect('members.user', 'users')\r\n\t\t\t.leftJoinAndSelect('task.teams', 'teams')\r\n\t\t\t.leftJoinAndSelect('task.creator', 'creator')\r\n\t\t\t.where('\"task_members\".\"employeeId\" = :employeeId', { employeeId })\r\n\t\t\t.getCount();\r\n\t\tconst items = await this.taskRepository\r\n\t\t\t.createQueryBuilder('task')\r\n\t\t\t.leftJoinAndSelect('task.project', 'project')\r\n\t\t\t.leftJoinAndSelect('task.tags', 'tags')\r\n\t\t\t.leftJoinAndSelect('task.organizationSprint', 'sprint')\r\n\t\t\t.leftJoinAndSelect('task.members', 'members')\r\n\t\t\t.leftJoinAndSelect('members.user', 'users')\r\n\t\t\t.leftJoinAndSelect('task.teams', 'teams')\r\n\t\t\t.leftJoinAndSelect('task.creator', 'creator')\r\n\t\t\t.where((qb) => {\r\n\t\t\t\tconst subQuery = qb\r\n\t\t\t\t\t.subQuery()\r\n\t\t\t\t\t.select('\"task_employee_sub\".\"taskId\"')\r\n\t\t\t\t\t.from('task_employee', 'task_employee_sub')\r\n\t\t\t\t\t.where('\"task_employee_sub\".\"employeeId\" = :employeeId')\r\n\t\t\t\t\t.distinct(true)\r\n\t\t\t\t\t.getQuery();\r\n\t\t\t\treturn '\"task_members\".\"taskId\" IN(' + subQuery + ')';\r\n\t\t\t})\r\n\t\t\t.setParameter('employeeId', employeeId)\r\n\t\t\t.getMany();\r\n\t\treturn { items, total };\r\n\t}\r\n\r\n\tasync getAllTasksByEmployee(\r\n\t\temployeeId: string,\r\n\t\tfilter: IGetTaskByEmployeeOptions\r\n\t) {\r\n\t\tconst query = await this.taskRepository\r\n\t\t\t.createQueryBuilder('task')\r\n\t\t\t.leftJoin('task.members', 'members');\r\n\t\tif (filter && filter.where) {\r\n\t\t\tquery.where({\r\n\t\t\t\twhere: filter.where\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn await query\r\n\t\t\t.andWhere((qb) => {\r\n\t\t\t\tconst subQuery = qb\r\n\t\t\t\t\t.subQuery()\r\n\t\t\t\t\t.select('\"task_employee_sub\".\"taskId\"')\r\n\t\t\t\t\t.from('task_employee', 'task_employee_sub')\r\n\t\t\t\t\t.where('\"task_employee_sub\".\"employeeId\" = :employeeId', {\r\n\t\t\t\t\t\temployeeId\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.distinct(true)\r\n\t\t\t\t\t.getQuery();\r\n\t\t\t\treturn '\"task_members\".\"taskId\" IN(' + subQuery + ')';\r\n\t\t\t})\r\n\t\t\t.getMany();\r\n\t}\r\n\r\n\tasync getTeamTasks(employeeId?: string) {\r\n\t\tconsole.log('emp*********', employeeId);\r\n\t\tif (employeeId) {\r\n\t\t\tconst items = await this.taskRepository\r\n\t\t\t\t.createQueryBuilder('task')\r\n\t\t\t\t.leftJoinAndSelect('task.project', 'project')\r\n\t\t\t\t.leftJoinAndSelect('task.tags', 'tags')\r\n\t\t\t\t.leftJoinAndSelect('task.organizationSprint', 'sprint')\r\n\t\t\t\t.leftJoinAndSelect('task.members', 'members')\r\n\t\t\t\t.leftJoinAndSelect('task.teams', 'teams')\r\n\t\t\t\t.leftJoinAndSelect('task.creator', 'users')\r\n\t\t\t\t.where((qb) => {\r\n\t\t\t\t\tconst subQuery = qb\r\n\t\t\t\t\t\t.subQuery()\r\n\t\t\t\t\t\t.select('\"task_team_sub\".\"taskId\"')\r\n\t\t\t\t\t\t.from('task_team', 'task_team_sub')\r\n\t\t\t\t\t\t.innerJoin(\r\n\t\t\t\t\t\t\t'organization_team_employee',\r\n\t\t\t\t\t\t\t'organization_team_employee_sub',\r\n\t\t\t\t\t\t\t'\"organization_team_employee_sub\".\"organizationTeamId\" = \"task_team_sub\".\"organizationTeamId\"'\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t.where(\r\n\t\t\t\t\t\t\t'\"organization_team_employee_sub\".\"employeeId\" = :employeeId'\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t.distinct(true)\r\n\t\t\t\t\t\t.getQuery();\r\n\t\t\t\t\treturn '\"task_teams\".\"taskId\" IN ' + subQuery;\r\n\t\t\t\t})\r\n\t\t\t\t.setParameter('employeeId', employeeId)\r\n\t\t\t\t.getMany();\r\n\t\t\treturn { items, total: items.length };\r\n\t\t} else {\r\n\t\t\tconst items = await this.taskRepository\r\n\t\t\t\t.createQueryBuilder('task')\r\n\t\t\t\t.leftJoinAndSelect('task.project', 'project')\r\n\t\t\t\t.leftJoinAndSelect('task.tags', 'tags')\r\n\t\t\t\t.leftJoinAndSelect('task.organizationSprint', 'sprint')\r\n\t\t\t\t.leftJoinAndSelect('task.members', 'members')\r\n\t\t\t\t.leftJoinAndSelect('task.teams', 'teams')\r\n\t\t\t\t.leftJoinAndSelect('task.creator', 'users')\r\n\t\t\t\t.where((qb) => {\r\n\t\t\t\t\tconst subQuery = qb\r\n\t\t\t\t\t\t.subQuery()\r\n\t\t\t\t\t\t.select('\"task_team_sub\".\"taskId\"')\r\n\t\t\t\t\t\t.from('task_team', 'task_team_sub')\r\n\t\t\t\t\t\t.leftJoin(\r\n\t\t\t\t\t\t\t'organization_team_employee',\r\n\t\t\t\t\t\t\t'organization_team_employee_sub',\r\n\t\t\t\t\t\t\t'\"organization_team_employee_sub\".\"organizationTeamId\" = \"task_team_sub\".\"organizationTeamId\"'\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t.distinct(true)\r\n\t\t\t\t\t\t.getQuery();\r\n\t\t\t\t\treturn '\"task_teams\".\"taskId\" IN ' + subQuery;\r\n\t\t\t\t})\r\n\t\t\t\t.getMany();\r\n\t\t\treturn { items, total: items.length };\r\n\t\t}\r\n\t}\r\n\r\n\tasync findTeamTasks(employeeId) {\r\n\t\t// If user is not an employee, then this will return 404\r\n\t\tlet employee: any = { id: undefined };\r\n\t\tlet role;\r\n\t\ttry {\r\n\t\t\temployee = await this.employeeService.findOne({\r\n\t\t\t\twhere: {\r\n\t\t\t\t\tuser: { id: RequestContext.currentUser().id }\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} catch (e) {}\r\n\r\n\t\ttry {\r\n\t\t\tconst roleId = RequestContext.currentUser().roleId;\r\n\t\t\tif (roleId) {\r\n\t\t\t\trole = await this.roleService.findOne(roleId);\r\n\t\t\t}\r\n\t\t} catch (e) {}\r\n\r\n\t\t// selected user not passed\r\n\t\tif (employeeId) {\r\n\t\t\tif (role.name === 'ADMIN' || role.name === 'SUPER_ADMIN') {\r\n\t\t\t\treturn this.getTeamTasks(employeeId);\r\n\t\t\t} else if (employee.id === employeeId) {\r\n\t\t\t\treturn this.getTeamTasks(employeeId);\r\n\t\t\t} else {\r\n\t\t\t\tthrow new HttpException(\r\n\t\t\t\t\t'Unauthorized',\r\n\t\t\t\t\tHttpStatus.UNAUTHORIZED\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (role.name === 'ADMIN' || role.name === 'SUPER_ADMIN') {\r\n\t\t\t\treturn this.getTeamTasks();\r\n\t\t\t} else {\r\n\t\t\t\treturn this.getTeamTasks(employee.id);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","import { TenantFeatureOrganizationCreateHandler } from './tenant-feature-organization.create.handler';\r\n\r\nexport const CommandHandlers = [TenantFeatureOrganizationCreateHandler];\r\n","import { IFeatureOrganization } from '@gauzy/models';\r\nimport { forwardRef, Inject } from '@nestjs/common';\r\nimport { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { FeatureService } from '../../../feature/feature.service';\r\nimport { TenantFeatureOrganizationCreateCommand } from '../tenant-feature-organization.create.command';\r\n\r\n@CommandHandler(TenantFeatureOrganizationCreateCommand)\r\nexport class TenantFeatureOrganizationCreateHandler\r\n\timplements ICommandHandler<TenantFeatureOrganizationCreateCommand> {\r\n\tconstructor(\r\n\t\t@Inject(forwardRef(() => FeatureService))\r\n\t\tprivate readonly _featureService: FeatureService\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: TenantFeatureOrganizationCreateCommand\r\n\t): Promise<IFeatureOrganization[]> {\r\n\t\tconst { input } = command;\r\n\t\treturn await this._featureService.updateTenantFeatureOrganizations(\r\n\t\t\tinput\r\n\t\t);\r\n\t}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { ITenant } from '@gauzy/models';\r\n\r\nexport class TenantFeatureOrganizationCreateCommand implements ICommand {\r\n\tstatic readonly type = '[Tenant] Feature Organization Create';\r\n\r\n\tconstructor(public readonly input: ITenant[]) {}\r\n}\r\n","import { ITenantSetting, RolesEnum } from '@gauzy/models';\r\nimport {\r\n\tBody,\r\n\tController,\r\n\tGet,\r\n\tHttpCode,\r\n\tHttpStatus,\r\n\tPost,\r\n\tUseGuards\r\n} from '@nestjs/common';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\r\nimport { CrudController } from '../../core';\r\nimport { RequestContext } from '../../core/context';\r\nimport { Roles } from '../../shared/decorators/roles';\r\nimport { RoleGuard } from '../../shared/guards/auth/role.guard';\r\nimport { TenantSetting } from './tenant-setting.entity';\r\nimport { TenantSettingService } from './tenant-setting.service';\r\n\r\n@ApiTags('TenantSetting')\r\n@UseGuards(AuthGuard('jwt'))\r\n@Controller()\r\nexport class TenantSettingController extends CrudController<TenantSetting> {\r\n\tconstructor(private tenantSettingService: TenantSettingService) {\r\n\t\tsuper(tenantSettingService);\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Get tenant settings',\r\n\t\tsecurity: [\r\n\t\t\t{\r\n\t\t\t\trole: [RolesEnum.ADMIN]\r\n\t\t\t}\r\n\t\t]\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Tenant not found'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@UseGuards(RoleGuard)\r\n\t@Roles(RolesEnum.SUPER_ADMIN)\r\n\t@Get()\r\n\tasync get() {\r\n\t\tconst user = RequestContext.currentUser();\r\n\t\treturn this.tenantSettingService.get({\r\n\t\t\twhere: {\r\n\t\t\t\ttenantId: user.tenantId\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Tenant settings updated successfully'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'Tenant settings updated successfully.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.CREATED)\r\n\t@UseGuards(RoleGuard)\r\n\t@Roles(RolesEnum.SUPER_ADMIN)\r\n\t@Post()\r\n\tasync saveSettings(\r\n\t\t@Body() entity: ITenantSetting\r\n\t): Promise<ITenantSetting> {\r\n\t\treturn this.tenantSettingService.saveSettngs(entity);\r\n\t}\r\n}\r\n","import { ApiProperty } from '@nestjs/swagger';\r\nimport { Entity, Column } from 'typeorm';\r\nimport { ITenant } from '@gauzy/models';\r\nimport { TenantBase } from '../../core/entities/tenant-base';\r\n\r\n@Entity('tenant_setting')\r\nexport class TenantSetting extends TenantBase implements ITenant {\r\n\t@ApiProperty({ type: String })\r\n\t@Column({ nullable: false })\r\n\tname?: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@Column({ nullable: true })\r\n\tvalue?: string;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { AuthModule } from '../../auth/auth.module';\r\nimport { RolePermissionsModule } from '../../role-permissions/role-permissions.module';\r\nimport { RoleModule } from '../../role/role.module';\r\nimport { UserModule } from '../../user/user.module';\r\nimport { TenantSettingController } from './tenant-setting.controller';\r\nimport { TenantSetting } from './tenant-setting.entity';\r\nimport { TenantSettingService } from './tenant-setting.service';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([TenantSetting]),\r\n\t\tAuthModule,\r\n\t\tUserModule,\r\n\t\tRoleModule,\r\n\t\tRolePermissionsModule\r\n\t],\r\n\tcontrollers: [TenantSettingController],\r\n\tproviders: [TenantSettingService],\r\n\texports: [TenantSettingService]\r\n})\r\nexport class TenantSettingModule {}\r\n","import { ITenantSetting } from '@gauzy/models';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { FindManyOptions, In, Repository } from 'typeorm';\r\nimport { CrudService } from '../../core/crud';\r\nimport { TenantSetting } from './tenant-setting.entity';\r\nimport * as _ from 'underscore';\r\nimport { RequestContext } from '../../core/context';\r\n\r\n@Injectable()\r\nexport class TenantSettingService extends CrudService<TenantSetting> {\r\n\tconstructor(\r\n\t\t@InjectRepository(TenantSetting)\r\n\t\tprivate tenantSettingRepository: Repository<TenantSetting>\r\n\t) {\r\n\t\tsuper(tenantSettingRepository);\r\n\t}\r\n\r\n\tasync get(requrst?: FindManyOptions) {\r\n\t\tconst settings: TenantSetting[] = await this.tenantSettingRepository.find(\r\n\t\t\trequrst\r\n\t\t);\r\n\t\treturn _.object(_.pluck(settings, 'name'), _.pluck(settings, 'value'));\r\n\t}\r\n\r\n\tasync saveSettngs(input: ITenantSetting): Promise<ITenantSetting> {\r\n\t\tconst settingsName = _.keys(input);\r\n\r\n\t\tconst user = RequestContext.currentUser();\r\n\t\tconst settings: TenantSetting[] = await this.tenantSettingRepository.find(\r\n\t\t\t{\r\n\t\t\t\twhere: {\r\n\t\t\t\t\tname: In(settingsName),\r\n\t\t\t\t\ttenantId: user.tenantId\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\tconst settingsByName = _.indexBy(settings, 'name');\r\n\t\tconst saveInput = [];\r\n\t\tfor (const key in input) {\r\n\t\t\tif (Object.prototype.hasOwnProperty.call(input, key)) {\r\n\t\t\t\tconst setting = settingsByName[key];\r\n\t\t\t\tif (setting !== undefined) {\r\n\t\t\t\t\tsetting.value = input[key];\r\n\t\t\t\t\tsaveInput.push(setting);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsaveInput.push(\r\n\t\t\t\t\t\tnew TenantSetting({\r\n\t\t\t\t\t\t\tvalue: input[key],\r\n\t\t\t\t\t\t\tname: key,\r\n\t\t\t\t\t\t\ttenantId: user.tenantId\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.tenantSettingRepository.save(saveInput);\r\n\t\treturn _.object(\r\n\t\t\t_.pluck(saveInput, 'name'),\r\n\t\t\t_.pluck(saveInput, 'value')\r\n\t\t);\r\n\t}\r\n}\r\n","import { ITenant, ITenantCreateInput, RolesEnum } from '@gauzy/models';\r\nimport {\r\n\tBadRequestException,\r\n\tBody,\r\n\tController,\r\n\tDelete,\r\n\tHttpCode,\r\n\tHttpStatus,\r\n\tParam,\r\n\tPost,\r\n\tUseGuards\r\n} from '@nestjs/common';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\r\nimport { RequestContext } from '../core/context';\r\nimport { CrudController } from '../core/crud/crud.controller';\r\nimport { Roles } from '../shared/decorators/roles';\r\nimport { RoleGuard } from '../shared/guards/auth/role.guard';\r\nimport { Tenant } from './tenant.entity';\r\nimport { TenantService } from './tenant.service';\r\n\r\n@ApiTags('Tenant')\r\n@UseGuards(AuthGuard('jwt'))\r\n@Controller()\r\nexport class TenantController extends CrudController<Tenant> {\r\n\tconstructor(private readonly tenantService: TenantService) {\r\n\t\tsuper(tenantService);\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary:\r\n\t\t\t'Create new tenant. The user who creates the tenant is given the super admin role.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully created.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.CREATED)\r\n\t@Post()\r\n\tasync create(@Body() entity: ITenantCreateInput): Promise<ITenant> {\r\n\t\tconst user = RequestContext.currentUser();\r\n\t\tif (user.tenantId || user.roleId) {\r\n\t\t\tthrow new BadRequestException('Tenant already exists');\r\n\t\t}\r\n\t\treturn this.tenantService.onboardTenant(entity, user);\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Delete tenant',\r\n\t\tsecurity: [\r\n\t\t\t{\r\n\t\t\t\trole: [RolesEnum.ADMIN]\r\n\t\t\t}\r\n\t\t]\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NO_CONTENT,\r\n\t\tdescription: 'The tenant has been successfully deleted'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Tenant not found'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@UseGuards(RoleGuard)\r\n\t@Roles(RolesEnum.SUPER_ADMIN)\r\n\t@Delete(':id')\r\n\tasync delete(@Param('id') id: string) {\r\n\t\treturn this.tenantService.delete(id);\r\n\t}\r\n}\r\n","import { ApiProperty } from '@nestjs/swagger';\r\nimport { Base } from '../core/entities/base';\r\nimport { Entity, Column, Index, OneToMany, JoinColumn } from 'typeorm';\r\nimport { IsNotEmpty, IsString } from 'class-validator';\r\nimport {\r\n\tITenant,\r\n\tIOrganization,\r\n\tIRolePermission,\r\n\tIFeatureOrganization\r\n} from '@gauzy/models';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { RolePermissions } from '../role-permissions/role-permissions.entity';\r\nimport { FeatureOrganization } from '../feature/feature_organization.entity';\r\n\r\n@Entity('tenant')\r\nexport class Tenant extends Base implements ITenant {\r\n\t@ApiProperty({ type: String })\r\n\t@Index()\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Column({ nullable: false })\r\n\tname?: string;\r\n\r\n\t@ApiProperty({ type: Organization })\r\n\t@OneToMany(() => Organization, (organization) => organization.tenant)\r\n\t@JoinColumn()\r\n\torganizations?: IOrganization[];\r\n\r\n\t@ApiProperty({ type: RolePermissions })\r\n\t@OneToMany(\r\n\t\t(type) => RolePermissions,\r\n\t\t(rolePermission) => rolePermission.tenant\r\n\t)\r\n\trolePermissions?: IRolePermission[];\r\n\r\n\t@ApiProperty({ type: FeatureOrganization })\r\n\t@OneToMany(\r\n\t\t(type) => FeatureOrganization,\r\n\t\t(featureOrganization) => featureOrganization.tenant\r\n\t)\r\n\tfeatureOrganizations?: IFeatureOrganization[];\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { CqrsModule } from '@nestjs/cqrs';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { AuthModule } from '../auth/auth.module';\r\nimport { Feature } from '../feature/feature.entity';\r\nimport { FeatureService } from '../feature/feature.service';\r\nimport { FeatureOrganization } from '../feature/feature_organization.entity';\r\nimport { RolePermissionsModule } from '../role-permissions/role-permissions.module';\r\nimport { RoleModule } from '../role/role.module';\r\nimport { UserModule } from '../user/user.module';\r\nimport { CommandHandlers } from './commands/handlers';\r\nimport { TenantController } from './tenant.controller';\r\nimport { Tenant } from './tenant.entity';\r\nimport { TenantService } from './tenant.service';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([Tenant, Feature, FeatureOrganization]),\r\n\t\tAuthModule,\r\n\t\tUserModule,\r\n\t\tRoleModule,\r\n\t\tRolePermissionsModule,\r\n\t\tCqrsModule\r\n\t],\r\n\tcontrollers: [TenantController],\r\n\tproviders: [TenantService, FeatureService, ...CommandHandlers],\r\n\texports: [TenantService, RolePermissionsModule]\r\n})\r\nexport class TenantModule {}\r\n","import { Connection } from 'typeorm';\r\nimport { Tenant } from './tenant.entity';\r\nimport * as faker from 'faker';\r\n\r\nexport const getDefaultTenant = async (\r\n\tconnection: Connection\r\n): Promise<Tenant> => {\r\n\tconst repo = connection.getRepository(Tenant);\r\n\tconst existedTenant = await repo.findOne({ where: { name: 'Ever' } });\r\n\treturn existedTenant;\r\n};\r\n\r\nexport const createDefaultTenants = async (\r\n\tconnection: Connection\r\n): Promise<Tenant> => {\r\n\tconst tenant: Tenant = {\r\n\t\tname: 'Ever'\r\n\t};\r\n\tawait insertTenant(connection, tenant);\r\n\treturn tenant;\r\n};\r\n\r\nexport const createRandomTenants = async (\r\n\tconnection: Connection,\r\n\tnoOfTenants: number = 0\r\n): Promise<Tenant[]> => {\r\n\tconst randomTenants: Tenant[] = [];\r\n\tfor (let i = 0; i < noOfTenants; i++) {\r\n\t\tconst tenant = new Tenant();\r\n\t\ttenant.name = faker.company.companyName();\r\n\t\trandomTenants.push(tenant);\r\n\t}\r\n\r\n\treturn await insertTenants(connection, randomTenants);\r\n};\r\n\r\nconst insertTenant = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant\r\n): Promise<Tenant> => {\r\n\tconst repo = connection.getRepository(Tenant);\r\n\r\n\tconst existedTenant = await repo.findOne({ where: { name: tenant.name } });\r\n\r\n\tif (existedTenant) return existedTenant;\r\n\telse {\r\n\t\tawait connection\r\n\t\t\t.createQueryBuilder()\r\n\t\t\t.insert()\r\n\t\t\t.into(Tenant)\r\n\t\t\t.values(tenant)\r\n\t\t\t.execute();\r\n\r\n\t\treturn tenant;\r\n\t}\r\n};\r\n\r\nconst insertTenants = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[]\r\n): Promise<Tenant[]> => {\r\n\treturn await connection.manager.save(tenants);\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { CommandBus } from '@nestjs/cqrs';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { CrudService } from '../core/crud/crud.service';\r\nimport { Tenant } from './tenant.entity';\r\nimport {\r\n\tITenantCreateInput,\r\n\tRolesEnum,\r\n\tITenant,\r\n\tIUser,\r\n\tIRole\r\n} from '@gauzy/models';\r\nimport { UserService } from '../user/user.service';\r\nimport { TenantRoleBulkCreateCommand } from '../role/commands/tenant-role-bulk-create.command';\r\nimport { TenantFeatureOrganizationCreateCommand } from './commands/tenant-feature-organization.create.command';\r\n\r\n@Injectable()\r\nexport class TenantService extends CrudService<Tenant> {\r\n\tconstructor(\r\n\t\t@InjectRepository(Tenant)\r\n\t\tprivate readonly tenantRepository: Repository<Tenant>,\r\n\t\tprivate readonly userService: UserService,\r\n\t\tprivate readonly commandBus: CommandBus\r\n\t) {\r\n\t\tsuper(tenantRepository);\r\n\t}\r\n\r\n\tpublic async onboardTenant(\r\n\t\tentity: ITenantCreateInput,\r\n\t\tuser: IUser\r\n\t): Promise<ITenant> {\r\n\t\t//1. Create Tenant of user.\r\n\t\tconst tenant = await this.create(entity);\r\n\r\n\t\t//2. Create Enabled/Disabled features for relative tenants.\r\n\t\tthis.commandBus.execute(\r\n\t\t\tnew TenantFeatureOrganizationCreateCommand([tenant])\r\n\t\t);\r\n\r\n\t\t//3. Create Role/Permissions for relative tenants.\r\n\t\tconst roles = await this.commandBus.execute(\r\n\t\t\tnew TenantRoleBulkCreateCommand([tenant])\r\n\t\t);\r\n\r\n\t\tconst role = await roles.find(\r\n\t\t\t(defaultRole: IRole) => defaultRole.name === RolesEnum.SUPER_ADMIN\r\n\t\t);\r\n\r\n\t\tawait this.userService.update(user.id, {\r\n\t\t\ttenant: {\r\n\t\t\t\tid: tenant.id\r\n\t\t\t},\r\n\t\t\trole: {\r\n\t\t\t\tid: role.id\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn tenant;\r\n\t}\r\n}\r\n","export const DEFAULT_TIMEOFF_POLICIES: string[] = [\r\n\t'Policy 1',\r\n\t'Policy 2',\r\n\t'Policy 3',\r\n\t'Policy 4',\r\n\t'Policy 5',\r\n\t'Policy 6',\r\n\t'Policy 7',\r\n\t'Policy 8',\r\n\t'Policy 9',\r\n\t'Policy 10'\r\n];\r\n","import {\r\n\tController,\r\n\tHttpStatus,\r\n\tPost,\r\n\tBody,\r\n\tGet,\r\n\tQuery,\r\n\tPut,\r\n\tParam,\r\n\tHttpCode,\r\n\tUseGuards\r\n} from '@nestjs/common';\r\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport { Permissions } from '../shared/decorators/permissions';\r\nimport { CrudController } from '../core/crud/crud.controller';\r\nimport { TimeOffPolicy } from './time-off-policy.entity';\r\nimport {\r\n\tITimeOffPolicyCreateInput,\r\n\tITimeOffPolicyUpdateInput,\r\n\tITimeOffPolicy,\r\n\tPermissionsEnum\r\n} from '@gauzy/models';\r\nimport { IPagination } from '../core';\r\nimport { TimeOffPolicyService } from './time-off-policy.service';\r\nimport { PermissionGuard } from '../shared/guards/auth/permission.guard';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { ParseJsonPipe } from '../shared/pipes/parse-json.pipe';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('TimeOffPolicy')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class TimeOffPolicyController extends CrudController<TimeOffPolicy> {\r\n\tconstructor(private readonly policyService: TimeOffPolicyService) {\r\n\t\tsuper(policyService);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find all policies.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found policies',\r\n\t\ttype: TimeOffPolicy\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.POLICY_VIEW)\r\n\t@Get()\r\n\tasync findAllTimeOffPolicies(\r\n\t\t@Query('data', ParseJsonPipe) data: any\r\n\t): Promise<IPagination<ITimeOffPolicy>> {\r\n\t\tconst { relations, findInput } = data;\r\n\t\treturn this.policyService.getAllPolicies({\r\n\t\t\twhere: findInput,\r\n\t\t\trelations\r\n\t\t});\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Create new record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully created.' /*, type: T*/\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.POLICY_EDIT)\r\n\t@Post('/create')\r\n\tasync createTimeOffPolicy(\r\n\t\t@Body() entity: ITimeOffPolicyCreateInput,\r\n\t\t...options: any[]\r\n\t): Promise<ITimeOffPolicy> {\r\n\t\treturn this.policyService.create(entity);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Update record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully edited.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.POLICY_EDIT)\r\n\t@Put(':id')\r\n\tasync updateOrganizationTeam(\r\n\t\t@Param('id') id: string,\r\n\t\t@Body() entity: ITimeOffPolicyUpdateInput,\r\n\t\t...options: any[]\r\n\t): Promise<ITimeOffPolicy> {\r\n\t\treturn this.policyService.update(id, entity);\r\n\t}\r\n}\r\n","import { Entity, Index, Column, ManyToMany, JoinTable } from 'typeorm';\r\nimport { ITimeOffPolicy } from '@gauzy/models';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsString, IsNotEmpty, IsBoolean } from 'class-validator';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('time_off_policy')\r\nexport class TimeOffPolicy extends TenantOrganizationBase\r\n\timplements ITimeOffPolicy {\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Index()\r\n\t@Column()\r\n\tname: string;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@IsBoolean()\r\n\t@Column()\r\n\trequiresApproval: boolean;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@IsBoolean()\r\n\t@Column()\r\n\tpaid: boolean;\r\n\r\n\t@ManyToMany((type) => Employee, { cascade: ['update'] })\r\n\t@JoinTable({\r\n\t\tname: 'time_off_policy_employee'\r\n\t})\r\n\temployees?: Employee[];\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { TimeOffPolicyService } from './time-off-policy.service';\r\nimport { TimeOffPolicy } from './time-off-policy.entity';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { TimeOffPolicyController } from './time-off-policy.controller';\r\nimport { User } from '../user/user.entity';\r\nimport { UserService } from '../user/user.service';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([User, TimeOffPolicy, Employee]),\r\n\t\tTenantModule\r\n\t],\r\n\tcontrollers: [TimeOffPolicyController],\r\n\tproviders: [TimeOffPolicyService, UserService],\r\n\texports: [TypeOrmModule, UserService]\r\n})\r\nexport class TimeOffPolicyModule {}\r\n","import { Connection } from 'typeorm';\r\nimport {\r\n\tITimeOffPolicy as ITimeOfPolicy,\r\n\tIOrganization,\r\n\tIEmployee\r\n} from '@gauzy/models';\r\nimport { TimeOffPolicy } from './time-off-policy.entity';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport * as faker from 'faker';\r\nimport { DEFAULT_TIMEOFF_POLICIES } from './default-time-off-policies';\r\n\r\nexport const createDefaultTimeOffPolicy = async (\r\n\tconnection: Connection,\r\n\tdefaultData: {\r\n\t\torg: IOrganization;\r\n\t\temployees: IEmployee[];\r\n\t}\r\n): Promise<ITimeOfPolicy> => {\r\n\tconst defaultTimeOffPolicy = new TimeOffPolicy();\r\n\r\n\tdefaultTimeOffPolicy.name = 'Default Policy';\r\n\tdefaultTimeOffPolicy.organization = defaultData.org;\r\n\tdefaultTimeOffPolicy.tenant = defaultData.org.tenant;\r\n\tdefaultTimeOffPolicy.requiresApproval = false;\r\n\tdefaultTimeOffPolicy.paid = true;\r\n\tdefaultTimeOffPolicy.employees = defaultData.employees;\r\n\r\n\tawait insertDefaultPolicy(connection, defaultTimeOffPolicy);\r\n\treturn defaultTimeOffPolicy;\r\n};\r\n\r\nconst insertDefaultPolicy = async (\r\n\tconnection: Connection,\r\n\tdefaultPolicy: TimeOffPolicy\r\n): Promise<void> => {\r\n\tawait connection\r\n\t\t.createQueryBuilder()\r\n\t\t.insert()\r\n\t\t.into(TimeOffPolicy)\r\n\t\t.values(defaultPolicy)\r\n\t\t.execute();\r\n};\r\n\r\nexport const createRandomTimeOffPolicies = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantOrganizationsMap: Map<Tenant, IOrganization[]>\r\n): Promise<TimeOffPolicy[]> => {\r\n\tconst policies: TimeOffPolicy[] = [];\r\n\t(tenants || []).forEach((tenant) => {\r\n\t\tconst organizations = tenantOrganizationsMap.get(tenant);\r\n\t\t(organizations || []).forEach((organization) => {\r\n\t\t\tDEFAULT_TIMEOFF_POLICIES.forEach((name) => {\r\n\t\t\t\tconst policy = new TimeOffPolicy();\r\n\t\t\t\tpolicy.name = name;\r\n\t\t\t\tpolicy.organization = organization;\r\n\t\t\t\tpolicy.tenant = tenant;\r\n\t\t\t\tpolicy.paid = faker.random.arrayElement([true, false]);\r\n\t\t\t\tpolicy.requiresApproval = faker.random.arrayElement([\r\n\t\t\t\t\ttrue,\r\n\t\t\t\t\tfalse\r\n\t\t\t\t]);\r\n\t\t\t\tpolicies.push(policy);\r\n\t\t\t});\r\n\t\t});\r\n\t});\r\n\r\n\treturn await connection.manager.save(policies);\r\n};\r\n","import { Injectable, BadRequestException } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository, FindManyOptions } from 'typeorm';\r\nimport { TimeOffPolicy } from './time-off-policy.entity';\r\nimport { CrudService } from '../core/crud/crud.service';\r\nimport { IPagination } from '../core';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport {\r\n\tITimeOffPolicyCreateInput,\r\n\tITimeOffPolicyUpdateInput,\r\n\tITimeOffPolicy\r\n} from '@gauzy/models';\r\n\r\n@Injectable()\r\nexport class TimeOffPolicyService extends CrudService<TimeOffPolicy> {\r\n\tconstructor(\r\n\t\t@InjectRepository(TimeOffPolicy)\r\n\t\tprivate readonly policyRepository: Repository<TimeOffPolicy>,\r\n\t\t@InjectRepository(Employee)\r\n\t\tprivate readonly employeeRepository: Repository<Employee>\r\n\t) {\r\n\t\tsuper(policyRepository);\r\n\t}\r\n\r\n\tasync getAllPolicies(\r\n\t\tfilter?: FindManyOptions<TimeOffPolicy>\r\n\t): Promise<IPagination<ITimeOffPolicy>> {\r\n\t\tconst total = await this.repository.count(filter);\r\n\t\tconst items = await this.repository.find(filter);\r\n\r\n\t\treturn { items, total };\r\n\t}\r\n\r\n\tasync create(entity: ITimeOffPolicyCreateInput): Promise<TimeOffPolicy> {\r\n\t\tconst policy = new TimeOffPolicy();\r\n\r\n\t\tpolicy.name = entity.name;\r\n\t\tpolicy.organizationId = entity.organizationId;\r\n\t\tpolicy.tenantId = entity.tenantId;\r\n\t\tpolicy.requiresApproval = entity.requiresApproval;\r\n\t\tpolicy.paid = entity.paid;\r\n\r\n\t\tconst employees = await this.employeeRepository.findByIds(\r\n\t\t\tentity.employees,\r\n\t\t\t{\r\n\t\t\t\trelations: ['user']\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\tpolicy.employees = employees;\r\n\r\n\t\treturn this.policyRepository.save(policy);\r\n\t}\r\n\r\n\tasync update(\r\n\t\tid: string,\r\n\t\tentity: ITimeOffPolicyUpdateInput\r\n\t): Promise<TimeOffPolicy> {\r\n\t\ttry {\r\n\t\t\tawait this.policyRepository.delete(id);\r\n\t\t\tconst policy = new TimeOffPolicy();\r\n\r\n\t\t\tpolicy.name = entity.name;\r\n\t\t\tpolicy.organizationId = entity.organizationId;\r\n\t\t\tpolicy.tenantId = entity.tenantId;\r\n\t\t\tpolicy.requiresApproval = entity.requiresApproval;\r\n\t\t\tpolicy.paid = entity.paid;\r\n\r\n\t\t\tconst employees = await this.employeeRepository.findByIds(\r\n\t\t\t\tentity.employees,\r\n\t\t\t\t{\r\n\t\t\t\t\trelations: ['user']\r\n\t\t\t\t}\r\n\t\t\t);\r\n\r\n\t\t\tpolicy.employees = employees;\r\n\r\n\t\t\treturn this.policyRepository.save(policy);\r\n\t\t} catch (err /*: WriteError*/) {\r\n\t\t\tthrow new BadRequestException(err);\r\n\t\t}\r\n\t}\r\n}\r\n","export { TimeOffStatusCommand } from './time-off.status.command';\r\nexport { TimeOffCreateCommand } from './time-off.create.command';\r\nexport { TimeOffUpdateCommand } from './time-off.update.command';\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { TimeOffRequest } from '../time-off-request.entity';\r\n\r\nexport class TimeOffCreateCommand implements ICommand {\r\n\tstatic readonly type = '[TimeOff] Create';\r\n\r\n\tconstructor(public readonly timeOff: TimeOffRequest) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class TimeOffStatusCommand implements ICommand {\r\n\tstatic readonly type = '[TimeOff] Status';\r\n\r\n\tconstructor(public readonly id: string, public readonly status: string) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { TimeOffRequest } from '../time-off-request.entity';\r\n\r\nexport class TimeOffUpdateCommand implements ICommand {\r\n\tstatic readonly type = '[TimeOff] update';\r\n\r\n\tconstructor(\r\n\t\tpublic readonly id: string,\r\n\t\tpublic readonly timeOff: TimeOffRequest\r\n\t) {}\r\n}\r\n","import {\r\n\tController,\r\n\tUseGuards,\r\n\tHttpStatus,\r\n\tPost,\r\n\tBody,\r\n\tGet,\r\n\tQuery,\r\n\tPut,\r\n\tParam,\r\n\tHttpCode\r\n} from '@nestjs/common';\r\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport { CrudController } from '../core/crud/crud.controller';\r\nimport { TimeOffRequest } from './time-off-request.entity';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { TimeOffRequestService } from './time-off-request.service';\r\nimport { PermissionGuard } from '../shared/guards/auth/permission.guard';\r\nimport { Permissions } from '../shared/decorators/permissions';\r\nimport { ITimeOffCreateInput, StatusTypesEnum } from '@gauzy/models';\r\nimport { ITimeOff, PermissionsEnum } from '@gauzy/models';\r\nimport { IPagination } from '../core';\r\nimport { CommandBus } from '@nestjs/cqrs';\r\nimport { TimeOffStatusCommand } from './commands';\r\nimport { ParseJsonPipe } from '../shared/pipes/parse-json.pipe';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('TimeOffRequest')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class TimeOffRequestController extends CrudController<TimeOffRequest> {\r\n\tconstructor(\r\n\t\tprivate readonly requestService: TimeOffRequestService,\r\n\t\tprivate commandBus: CommandBus\r\n\t) {\r\n\t\tsuper(requestService);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find all time off requests.' })\r\n\t@UseGuards(PermissionGuard)\r\n\t@Get()\r\n\tasync findAllTimeOffRequest(\r\n\t\t@Query('data', ParseJsonPipe) data: any\r\n\t): Promise<IPagination<ITimeOff>> {\r\n\t\tconst { relations, findInput, filterDate } = data;\r\n\t\treturn this.requestService.getAllTimeOffRequests(\r\n\t\t\trelations,\r\n\t\t\tfindInput,\r\n\t\t\tfilterDate\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Create new time off request / holiday record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The new time off request / holiday record created'\r\n\t})\r\n\t@UseGuards(PermissionGuard)\r\n\t@Post()\r\n\tasync createTimeOffRequest(\r\n\t\t@Body() entity: ITimeOffCreateInput,\r\n\t\t...options: any[]\r\n\t): Promise<TimeOffRequest> {\r\n\t\treturn this.requestService.create(entity);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Time off request update' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found request time off',\r\n\t\ttype: TimeOffRequest\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.TIME_OFF_EDIT)\r\n\t@Put(':id')\r\n\tasync timeOffRequestUpdate(\r\n\t\t@Param('id') id: string,\r\n\t\t@Body() entity: ITimeOffCreateInput\r\n\t): Promise<TimeOffRequest> {\r\n\t\treturn this.requestService.updateTimeOffByAdmin(id, entity);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Time off request approved' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found request time off',\r\n\t\ttype: TimeOffRequest\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.TIME_OFF_EDIT)\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.TIME_OFF_EDIT)\r\n\t@Put('approval/:id')\r\n\tasync timeOffRequestApproved(\r\n\t\t@Param('id') id: string\r\n\t): Promise<TimeOffRequest> {\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew TimeOffStatusCommand(id, StatusTypesEnum.APPROVED)\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Time off request denied' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found Time off',\r\n\t\ttype: TimeOffRequest\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.TIME_OFF_EDIT)\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Put('denied/:id')\r\n\tasync timeOffRequestDenied(\r\n\t\t@Param('id') id: string\r\n\t): Promise<TimeOffRequest> {\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew TimeOffStatusCommand(id, StatusTypesEnum.DENIED)\r\n\t\t);\r\n\t}\r\n}\r\n","import {\r\n\tEntity,\r\n\tColumn,\r\n\tJoinColumn,\r\n\tManyToMany,\r\n\tJoinTable,\r\n\tManyToOne\r\n} from 'typeorm';\r\nimport {\r\n\tIEmployee,\r\n\tITimeOff as ITimeOffRequest,\r\n\tITimeOffPolicy,\r\n\tStatusTypesEnum\r\n} from '@gauzy/models';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport {\r\n\tIsString,\r\n\tIsEnum,\r\n\tIsOptional,\r\n\tIsDate,\r\n\tIsBoolean\r\n} from 'class-validator';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { TimeOffPolicy } from '../time-off-policy/time-off-policy.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('time_off_request')\r\nexport class TimeOffRequest\r\n\textends TenantOrganizationBase\r\n\timplements ITimeOffRequest {\r\n\t@ManyToMany((type) => Employee, { cascade: true })\r\n\t@JoinTable({\r\n\t\tname: 'time_off_request_employee'\r\n\t})\r\n\temployees?: IEmployee[];\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsOptional()\r\n\t@Column()\r\n\tdocumentUrl?: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tdescription?: string;\r\n\r\n\t@ApiProperty({ type: TimeOffPolicy })\r\n\t@IsOptional()\r\n\t@ManyToOne((type) => TimeOffPolicy, {\r\n\t\tnullable: false,\r\n\t\tonDelete: 'CASCADE'\r\n\t})\r\n\t@JoinColumn()\r\n\tpolicy?: ITimeOffPolicy;\r\n\r\n\t@ApiProperty({ type: Date })\r\n\t@IsDate()\r\n\t@Column()\r\n\tstart: Date;\r\n\r\n\t@ApiProperty({ type: Date })\r\n\t@IsDate()\r\n\t@Column()\r\n\tend: Date;\r\n\r\n\t@ApiProperty({ type: Date })\r\n\t@IsDate()\r\n\t@Column()\r\n\trequestDate: Date;\r\n\r\n\t@ApiProperty({ type: String, enum: StatusTypesEnum })\r\n\t@IsEnum(StatusTypesEnum)\r\n\t@Column({ nullable: false })\r\n\tstatus?: string;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@IsBoolean()\r\n\t@Column()\r\n\tisHoliday?: boolean;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { TimeOffRequestService } from './time-off-request.service';\r\nimport { TimeOffRequest } from './time-off-request.entity';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { TimeOffRequestController } from './time-off-request.controller';\r\nimport { TimeOffPolicy } from '../time-off-policy/time-off-policy.entity';\r\nimport { User } from '../user/user.entity';\r\nimport { UserService } from '../user/user.service';\r\nimport { RequestApproval } from '../request-approval/request-approval.entity';\r\nimport { ApprovalPolicy } from '../approval-policy/approval-policy.entity';\r\nimport { CqrsModule } from '@nestjs/cqrs';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([\r\n\t\t\tTimeOffRequest,\r\n\t\t\tEmployee,\r\n\t\t\tUser,\r\n\t\t\tTimeOffPolicy,\r\n\t\t\tRequestApproval,\r\n\t\t\tApprovalPolicy\r\n\t\t]),\r\n\t\tCqrsModule,\r\n\t\tTenantModule\r\n\t],\r\n\tcontrollers: [TimeOffRequestController],\r\n\tproviders: [TimeOffRequestService, UserService],\r\n\texports: [TypeOrmModule]\r\n})\r\nexport class TimeOffRequestModule {}\r\n","import { Connection } from 'typeorm';\r\nimport * as faker from 'faker';\r\nimport { TimeOffRequest } from './time-off-request.entity';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { TimeOffPolicy } from '../time-off-policy/time-off-policy.entity';\r\nimport { addDays } from 'date-fns';\r\nimport { StatusTypesEnum } from '@gauzy/models';\r\nimport * as _ from 'underscore';\r\n\r\nconst status = Object.values(StatusTypesEnum);\r\n\r\nexport const createDefaultEmployeeTimeOff = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\torganization: Organization,\r\n\temployees: Employee[],\r\n\tnoOfEmployeeTimeOffRequest: number\r\n): Promise<TimeOffRequest[]> => {\r\n\tlet requests: TimeOffRequest[] = [];\r\n\tconst policies = await connection.manager.find(TimeOffPolicy, {\r\n\t\twhere: [{ organizationId: organization.id }]\r\n\t});\r\n\trequests = await dataOperation(\r\n\t\tconnection,\r\n\t\ttenant,\r\n\t\trequests,\r\n\t\tnoOfEmployeeTimeOffRequest,\r\n\t\torganization,\r\n\t\temployees,\r\n\t\tpolicies\r\n\t);\r\n\treturn requests;\r\n};\r\n\r\nexport const createRandomEmployeeTimeOff = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantOrganizationsMap: Map<Tenant, Organization[]>,\r\n\ttenantEmployeeMap: Map<Tenant, Employee[]>,\r\n\tnoOfEmployeeTimeOffRequest: number\r\n): Promise<TimeOffRequest[]> => {\r\n\tlet requests: TimeOffRequest[] = [];\r\n\tfor (const tenant of tenants) {\r\n\t\tconst employees = tenantEmployeeMap.get(tenant);\r\n\t\tconst organizations = tenantOrganizationsMap.get(tenant);\r\n\t\tfor (const organization of organizations) {\r\n\t\t\tconst policies = await connection.manager.find(TimeOffPolicy, {\r\n\t\t\t\twhere: [{ organizationId: organization.id }]\r\n\t\t\t});\r\n\t\t\trequests = await dataOperation(\r\n\t\t\t\tconnection,\r\n\t\t\t\ttenant,\r\n\t\t\t\trequests,\r\n\t\t\t\tnoOfEmployeeTimeOffRequest,\r\n\t\t\t\torganization,\r\n\t\t\t\temployees,\r\n\t\t\t\tpolicies\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\treturn requests;\r\n};\r\n\r\nconst dataOperation = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\trequests,\r\n\tnoOfEmployeeTimeOffRequest,\r\n\torganization,\r\n\temployees,\r\n\tpolicies\r\n) => {\r\n\tfor (let i = 0; i < noOfEmployeeTimeOffRequest; i++) {\r\n\t\tconst request = new TimeOffRequest();\r\n\t\trequest.organizationId = organization.id;\r\n\t\trequest.tenant = tenant;\r\n\t\trequest.employees = _.chain(employees)\r\n\t\t\t.shuffle()\r\n\t\t\t.take(faker.random.number({ min: 1, max: 3 }))\r\n\t\t\t.values()\r\n\t\t\t.value();\r\n\t\trequest.description = 'Time off';\r\n\t\trequest.isHoliday = faker.random.arrayElement([true, false]);\r\n\t\trequest.start = faker.date.future(0.5);\r\n\t\trequest.end = addDays(request.start, faker.random.number(7));\r\n\t\trequest.policy = faker.random.arrayElement(policies);\r\n\t\trequest.requestDate = faker.date.recent();\r\n\t\trequest.status = faker.random.arrayElement(status);\r\n\t\trequest.documentUrl = '';\r\n\t\trequests.push(request);\r\n\t}\r\n\tawait connection.manager.save(requests);\r\n\treturn requests;\r\n};\r\n","import {\r\n\tInjectable,\r\n\tBadRequestException,\r\n\tNotFoundException,\r\n\tConflictException\r\n} from '@nestjs/common';\r\n\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { TimeOffRequest } from './time-off-request.entity';\r\nimport { CrudService } from '../core/crud/crud.service';\r\nimport {\r\n\tITimeOffCreateInput,\r\n\tRequestApprovalStatusTypesEnum,\r\n\tStatusTypesEnum,\r\n\tStatusTypesMapRequestApprovalEnum,\r\n\tApprovalPolicyTypesStringEnum\r\n} from '@gauzy/models';\r\nimport { RequestApproval } from '../request-approval/request-approval.entity';\r\nimport { RequestContext } from '../core/context';\r\nimport * as moment from 'moment';\r\n@Injectable()\r\nexport class TimeOffRequestService extends CrudService<TimeOffRequest> {\r\n\tconstructor(\r\n\t\t@InjectRepository(TimeOffRequest)\r\n\t\tprivate readonly timeOffRequestRepository: Repository<TimeOffRequest>,\r\n\t\t@InjectRepository(RequestApproval)\r\n\t\tprivate readonly requestApprovalRepository: Repository<RequestApproval>\r\n\t) {\r\n\t\tsuper(timeOffRequestRepository);\r\n\t}\r\n\r\n\tasync create(entity: ITimeOffCreateInput): Promise<TimeOffRequest> {\r\n\t\ttry {\r\n\t\t\tconst request = new TimeOffRequest();\r\n\t\t\tObject.assign(request, entity);\r\n\r\n\t\t\tconst timeOffRequestSaved = await this.timeOffRequestRepository.save(\r\n\t\t\t\trequest\r\n\t\t\t);\r\n\r\n\t\t\tconst requestApproval = new RequestApproval();\r\n\t\t\trequestApproval.requestId = timeOffRequestSaved.id;\r\n\t\t\trequestApproval.requestType =\r\n\t\t\t\tApprovalPolicyTypesStringEnum.TIME_OFF;\r\n\t\t\trequestApproval.status = timeOffRequestSaved.status\r\n\t\t\t\t? StatusTypesMapRequestApprovalEnum[timeOffRequestSaved.status]\r\n\t\t\t\t: RequestApprovalStatusTypesEnum.REQUESTED;\r\n\r\n\t\t\trequestApproval.createdBy = RequestContext.currentUser().id;\r\n\t\t\trequestApproval.createdByName = RequestContext.currentUser().name;\r\n\t\t\trequestApproval.name = 'Request time off';\r\n\t\t\trequestApproval.min_count = 1;\r\n\t\t\trequestApproval.organizationId = timeOffRequestSaved.organizationId;\r\n\t\t\trequestApproval.tenantId = timeOffRequestSaved.tenantId;\r\n\r\n\t\t\tawait this.requestApprovalRepository.save(requestApproval);\r\n\t\t\treturn timeOffRequestSaved;\r\n\t\t} catch (err) {\r\n\t\t\tthrow new BadRequestException(err);\r\n\t\t}\r\n\t}\r\n\r\n\tasync getAllTimeOffRequests(relations, findInput?, filterDate?) {\r\n\t\ttry {\r\n\t\t\tconst tenantId = RequestContext.currentTenantId();\r\n\t\t\tconst query = this.timeOffRequestRepository.createQueryBuilder(\r\n\t\t\t\t'timeoff'\r\n\t\t\t);\r\n\t\t\tquery\r\n\t\t\t\t.leftJoinAndSelect(`${query.alias}.employees`, `employees`)\r\n\t\t\t\t.leftJoinAndSelect(`${query.alias}.policy`, `policy`)\r\n\t\t\t\t.leftJoinAndSelect(`employees.user`, `user`);\r\n\t\t\tquery.where((qb) => {\r\n\t\t\t\tqb.andWhere(\r\n\t\t\t\t\t`\"${query.alias}\".\"organizationId\" = :organizationId`,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\torganizationId: findInput.organizationId\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t\tqb.andWhere(`\"${query.alias}\".\"tenantId\" = :tenantId`, {\r\n\t\t\t\t\ttenantId\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tif (findInput['employeeId']) {\r\n\t\t\t\tconst employeeIds = [findInput['employeeId']];\r\n\t\t\t\tquery.innerJoin(\r\n\t\t\t\t\t`${query.alias}.employees`,\r\n\t\t\t\t\t'employee',\r\n\t\t\t\t\t'employee.id IN (:...employeeIds)',\r\n\t\t\t\t\t{ employeeIds }\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (filterDate) {\r\n\t\t\t\tconst startDate = moment(filterDate)\r\n\t\t\t\t\t.startOf('month')\r\n\t\t\t\t\t.format('YYYY-MM-DD hh:mm:ss');\r\n\t\t\t\tconst endDate = moment(filterDate)\r\n\t\t\t\t\t.endOf('month')\r\n\t\t\t\t\t.format('YYYY-MM-DD hh:mm:ss');\r\n\t\t\t\tquery.andWhere(\r\n\t\t\t\t\t`\"${query.alias}\".\"start\" BETWEEN :begin AND :end`,\r\n\t\t\t\t\t{ begin: startDate, end: endDate }\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tconst items = await query.getMany();\r\n\t\t\treturn { items, total: items.length };\r\n\t\t} catch (err) {\r\n\t\t\tthrow new BadRequestException(err);\r\n\t\t}\r\n\t}\r\n\r\n\tasync updateTimeOffByAdmin(\r\n\t\tid: string,\r\n\t\ttimeOffRequest: ITimeOffCreateInput\r\n\t) {\r\n\t\tawait this.timeOffRequestRepository.delete(id);\r\n\t\treturn await this.timeOffRequestRepository.save(timeOffRequest);\r\n\t}\r\n\r\n\tasync updateStatusTimeOffByAdmin(\r\n\t\tid: string,\r\n\t\tstatus: string\r\n\t): Promise<TimeOffRequest> {\r\n\t\ttry {\r\n\t\t\tconst timeOffRequest = await this.timeOffRequestRepository.findOne(\r\n\t\t\t\tid\r\n\t\t\t);\r\n\r\n\t\t\tif (!timeOffRequest) {\r\n\t\t\t\tthrow new NotFoundException('Request time off not found');\r\n\t\t\t}\r\n\t\t\tif (timeOffRequest.status === StatusTypesEnum.REQUESTED) {\r\n\t\t\t\ttimeOffRequest.status = status;\r\n\t\t\t} else {\r\n\t\t\t\tthrow new ConflictException('Request time off is Conflict');\r\n\t\t\t}\r\n\t\t\treturn await this.timeOffRequestRepository.save(timeOffRequest);\r\n\t\t} catch (err) {\r\n\t\t\tthrow new BadRequestException(err);\r\n\t\t}\r\n\t}\r\n}\r\n","import {\r\n\tEntity,\r\n\tColumn,\r\n\tRelationId,\r\n\tManyToOne,\r\n\tJoinColumn,\r\n\tCreateDateColumn,\r\n\tAfterLoad\r\n} from 'typeorm';\r\nimport {\r\n\tIActivity,\r\n\tActivityType,\r\n\tTimeLogSourceEnum,\r\n\tIURLMetaData,\r\n\tIEmployee,\r\n\tITask,\r\n\tITimeSlot,\r\n\tIOrganizationProject\r\n} from '@gauzy/models';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport {\r\n\tIsString,\r\n\tIsEnum,\r\n\tIsOptional,\r\n\tIsNumber,\r\n\tIsDateString\r\n} from 'class-validator';\r\nimport { TimeSlot } from './time-slot.entity';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { OrganizationProject } from '../organization-projects/organization-projects.entity';\r\nimport { Task } from '../tasks/task.entity';\r\nimport { environment as env } from '@env-api/environment';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('activity')\r\nexport class Activity extends TenantOrganizationBase implements IActivity {\r\n\t@ApiProperty({ type: Employee })\r\n\t@ManyToOne(() => Employee)\r\n\t@JoinColumn()\r\n\temployee?: IEmployee;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@RelationId((activity: Activity) => activity.employee)\r\n\t@Column()\r\n\temployeeId?: string;\r\n\r\n\t@ApiProperty({ type: OrganizationProject })\r\n\t@ManyToOne(() => OrganizationProject, { nullable: true })\r\n\t@JoinColumn()\r\n\tproject?: IOrganizationProject;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@RelationId((activity: Activity) => activity.project)\r\n\t@Column({ nullable: true })\r\n\tprojectId?: string;\r\n\r\n\t@ApiProperty({ type: TimeSlot })\r\n\t@ManyToOne(() => TimeSlot, { nullable: true })\r\n\t@JoinColumn()\r\n\ttimeSlot?: ITimeSlot;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@RelationId((activity: Activity) => activity.timeSlot)\r\n\t@Column({ nullable: true })\r\n\ttimeSlotId?: string;\r\n\r\n\t@ApiProperty({ type: Task })\r\n\t@ManyToOne(() => Task, { nullable: true })\r\n\t@JoinColumn()\r\n\ttask?: ITask;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@RelationId((activity: Activity) => activity.task)\r\n\t@Column({ nullable: true })\r\n\ttaskId?: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@Column()\r\n\ttitle: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@Column({ nullable: true })\r\n\tdescription?: string;\r\n\r\n\t@ApiProperty({ type: 'json' })\r\n\t@IsDateString()\r\n\t@Column({\r\n\t\tnullable: true,\r\n\t\ttype: env.database.type === 'sqlite' ? 'text' : 'json'\r\n\t})\r\n\tmetaData?: string | IURLMetaData;\r\n\r\n\t@ApiProperty({ type: 'date' })\r\n\t@IsDateString()\r\n\t@CreateDateColumn({ type: 'date' })\r\n\tdate: string;\r\n\r\n\t@ApiProperty({ type: 'time' })\r\n\t@IsDateString()\r\n\t@CreateDateColumn({ type: 'time' })\r\n\ttime: string;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@IsNumber()\r\n\t@IsOptional()\r\n\t@Column({ default: 0 })\r\n\tduration?: number;\r\n\r\n\t@ApiProperty({ type: String, enum: ActivityType })\r\n\t@IsEnum(ActivityType)\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\ttype?: string;\r\n\r\n\t@ApiProperty({ type: String, enum: TimeLogSourceEnum })\r\n\t@IsEnum(TimeLogSourceEnum)\r\n\t@IsString()\r\n\t@Column({ default: TimeLogSourceEnum.BROWSER })\r\n\tsource?: string;\r\n\r\n\t@ApiProperty({ type: 'timestamptz' })\r\n\t@IsDateString()\r\n\t@Column({ nullable: true, default: null })\r\n\tdeletedAt?: Date;\r\n\r\n\t@AfterLoad()\r\n\tgetStoppedAt?() {\r\n\t\tif (typeof this.metaData === 'string') {\r\n\t\t\ttry {\r\n\t\t\t\tthis.metaData = JSON.parse(this.metaData);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tthis.metaData = {};\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","import * as faker from 'faker';\r\nimport * as _ from 'underscore';\r\nimport * as moment from 'moment';\r\nimport { ActivityType } from '@gauzy/models';\r\nimport { Activity } from '../activity.entity';\r\nimport { OrganizationProject } from '../../organization-projects/organization-projects.entity';\r\nimport { Connection } from 'typeorm';\r\nimport { Employee } from '../../employee/employee.entity';\r\nimport { Tenant } from '../../tenant/tenant.entity';\r\nimport { TimeSlot } from '../time-slot.entity';\r\n\r\nconst AppsNames: string[] = [\r\n\t'Sublime Text',\r\n\t'Chrome',\r\n\t'Visual Studio Core',\r\n\t'Git Desktop',\r\n\t'Slack',\r\n\t'Skype',\r\n\t'Mail',\r\n\t'Terminal'\r\n];\r\n\r\nexport const createRandomActivities = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\ttimeSlots: TimeSlot[]\r\n): Promise<Activity[]> => {\r\n\tconst employees = await connection.getRepository(Employee).find();\r\n\tconst allActivities: Activity[] = [];\r\n\r\n\tlet query = connection\r\n\t\t.getRepository(OrganizationProject)\r\n\t\t.createQueryBuilder();\r\n\tquery = query.leftJoinAndSelect(`${query.alias}.tasks`, 'tasks');\r\n\tconst projects: OrganizationProject[] = await query.getMany();\r\n\r\n\tconst appNames: string[] = _.shuffle(AppsNames);\r\n\r\n\tfor (let day = 0; day < 5; day++) {\r\n\t\tconst date = moment().subtract(day, 'day').toDate();\r\n\t\tfor await (const employee of employees || []) {\r\n\t\t\tconst employeeTimeSlots = timeSlots.filter(\r\n\t\t\t\t(x) => x.employeeId === employee.id\r\n\t\t\t);\r\n\t\t\tconst activities: Activity[] = [];\r\n\t\t\tfor (\r\n\t\t\t\tlet i = 0;\r\n\t\t\t\ti < faker.random.number({ min: 0, max: appNames.length });\r\n\t\t\t\ti++\r\n\t\t\t) {\r\n\t\t\t\tconst appName = appNames[i];\r\n\t\t\t\tconst project = faker.random.arrayElement(projects);\r\n\t\t\t\tconst task = faker.random.arrayElement(project.tasks);\r\n\t\t\t\tconst timeSlot = faker.random.arrayElement(employeeTimeSlots);\r\n\r\n\t\t\t\tconst activity = new Activity();\r\n\t\t\t\tactivity.organizationId = employee.organizationId;\r\n\t\t\t\tactivity.tenant = tenant;\r\n\t\t\t\tactivity.employee = employee;\r\n\t\t\t\tactivity.project = project;\r\n\t\t\t\tactivity.timeSlot = timeSlot;\r\n\t\t\t\tactivity.task = task;\r\n\t\t\t\tactivity.title = appName;\r\n\t\t\t\tactivity.date = moment(date).format('YYYY-MM-DD');\r\n\t\t\t\tactivity.time = moment(\r\n\t\t\t\t\tfaker.date.between(\r\n\t\t\t\t\t\tmoment(date).startOf('day').toDate(),\r\n\t\t\t\t\t\tmoment(date).endOf('day').toDate()\r\n\t\t\t\t\t)\r\n\t\t\t\t).format('HH:mm:ss');\r\n\t\t\t\tactivity.duration = faker.random.number(100);\r\n\t\t\t\tactivity.type = ActivityType.APP;\r\n\r\n\t\t\t\tactivities.push(activity);\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i = 0; i < faker.random.number({ min: 0, max: 10 }); i++) {\r\n\t\t\t\tconst url = faker.internet.domainName();\r\n\t\t\t\tfor (\r\n\t\t\t\t\tlet j = 0;\r\n\t\t\t\t\tj < faker.random.number({ min: 5, max: 10 });\r\n\t\t\t\t\tj++\r\n\t\t\t\t) {\r\n\t\t\t\t\tconst project = faker.random.arrayElement(projects);\r\n\t\t\t\t\tconst task = faker.random.arrayElement(project.tasks);\r\n\t\t\t\t\tconst timeSlot = faker.random.arrayElement(\r\n\t\t\t\t\t\temployeeTimeSlots\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tconst activity = new Activity();\r\n\t\t\t\t\tactivity.organizationId = employee.organizationId;\r\n\t\t\t\t\tactivity.tenant = tenant;\r\n\t\t\t\t\tactivity.employee = employee;\r\n\t\t\t\t\tactivity.project = project;\r\n\t\t\t\t\tactivity.timeSlot = timeSlot;\r\n\t\t\t\t\tactivity.task = task;\r\n\t\t\t\t\tactivity.title = url;\r\n\t\t\t\t\tactivity.metaData = {\r\n\t\t\t\t\t\ttitle: faker.internet.domainSuffix(),\r\n\t\t\t\t\t\tdescription: faker.lorem.sentence()\r\n\t\t\t\t\t};\r\n\t\t\t\t\tactivity.description = faker.internet.url();\r\n\t\t\t\t\tactivity.date = moment(date).format('YYYY-MM-DD');\r\n\t\t\t\t\tactivity.time = moment(\r\n\t\t\t\t\t\tfaker.date.between(\r\n\t\t\t\t\t\t\tmoment(date).startOf('day').toDate(),\r\n\t\t\t\t\t\t\tmoment(date).endOf('day').toDate()\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t).format('HH:mm:ss');\r\n\t\t\t\t\tactivity.duration = faker.random.number({\r\n\t\t\t\t\t\tmin: 10,\r\n\t\t\t\t\t\tmax: 100\r\n\t\t\t\t\t});\r\n\t\t\t\t\tactivity.type = ActivityType.URL;\r\n\t\t\t\t\tactivities.push(activity);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tawait connection.manager.save(activities);\r\n\t\t\tallActivities.push(...allActivities);\r\n\t\t}\r\n\t}\r\n\treturn allActivities;\r\n};\r\n","import {\r\n\tController,\r\n\tUseGuards,\r\n\tHttpStatus,\r\n\tGet,\r\n\tQuery,\r\n\tPost,\r\n\tBody\r\n} from '@nestjs/common';\r\nimport { Activity } from '../activity.entity';\r\nimport { CrudController } from '../../core/crud/crud.controller';\r\nimport { ActivityService } from './activity.service';\r\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { IGetActivitiesInput, IBulkActivitiesInput } from '@gauzy/models';\r\nimport { TenantPermissionGuard } from '../../shared/guards/auth/tenant-permission.guard';\r\nimport { ActivityMapService } from './activity.map.service';\r\n\r\n@ApiTags('Activity')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller('activity')\r\nexport class ActivityController extends CrudController<Activity> {\r\n\tconstructor(\r\n\t\tprivate readonly activityService: ActivityService,\r\n\t\tprivate readonly activityMapService: ActivityMapService\r\n\t) {\r\n\t\tsuper(activityService);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Get Activities' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@Get('/')\r\n\tasync getActivities(@Query() request: IGetActivitiesInput) {\r\n\t\tconst defaultParams: Partial<IGetActivitiesInput> = {\r\n\t\t\tpage: 0,\r\n\t\t\tlimit: 30\r\n\t\t};\r\n\t\trequest = Object.assign({}, defaultParams, request);\r\n\t\treturn this.activityService.getActivities(request);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Get Daily Activities' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@Get('/daily')\r\n\tasync getDailyActivities(@Query() request: IGetActivitiesInput) {\r\n\t\treturn this.activityService.getDailyActivities(request);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Get Daily Activities' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@Get('/report')\r\n\tasync getDailyActivitiesReport(@Query() request: IGetActivitiesInput) {\r\n\t\tlet activities = await this.activityService.getDailyActivitiesReport(\r\n\t\t\trequest\r\n\t\t);\r\n\r\n\t\tif (request.groupBy === 'date') {\r\n\t\t\tactivities = this.activityMapService.mapByDate(activities);\r\n\t\t} else if (request.groupBy === 'employee') {\r\n\t\t\tactivities = this.activityMapService.mapByEmployee(activities);\r\n\t\t} else if (request.groupBy === 'project') {\r\n\t\t\tactivities = this.activityMapService.mapByProject(activities);\r\n\t\t}\r\n\r\n\t\treturn activities;\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Save bulk Activities' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@Post('/bulk')\r\n\tasync bulkSaveActivities(@Body() entities: IBulkActivitiesInput) {\r\n\t\treturn this.activityService.bulkSave(entities);\r\n\t}\r\n}\r\n","import { IActivity } from '@gauzy/models';\r\nimport { Injectable } from '@nestjs/common';\r\nimport * as moment from 'moment';\r\nimport { chain } from 'underscore';\r\n\r\n@Injectable()\r\nexport class ActivityMapService {\r\n\tconstructor() {}\r\n\r\n\tmapByDate(activities: IActivity[]) {\r\n\t\tconst dailyLogs: any = this.groupByDate(activities).map(\r\n\t\t\t(byDateActivity: IActivity[], date) => {\r\n\t\t\t\tconst sum = this.getDurationSum(byDateActivity);\r\n\t\t\t\tconsole.log({ sum });\r\n\t\t\t\tconst byEmployee = this.groupByEmployee(byDateActivity).map(\r\n\t\t\t\t\t(byEmployeeActivity: IActivity[]) => {\r\n\t\t\t\t\t\tconst byProject = this.groupByProject(\r\n\t\t\t\t\t\t\tbyEmployeeActivity\r\n\t\t\t\t\t\t).map((byProjectActivity: IActivity[]) => {\r\n\t\t\t\t\t\t\tconst project =\r\n\t\t\t\t\t\t\t\tbyProjectActivity.length > 0 &&\r\n\t\t\t\t\t\t\t\tbyProjectActivity[0]\r\n\t\t\t\t\t\t\t\t\t? byProjectActivity[0].project\r\n\t\t\t\t\t\t\t\t\t: null;\r\n\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tproject,\r\n\t\t\t\t\t\t\t\tactivity: byProjectActivity.map((row) =>\r\n\t\t\t\t\t\t\t\t\tthis.mapActivitiesPercentage(row, sum)\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tconst employee =\r\n\t\t\t\t\t\t\tbyEmployeeActivity.length > 0 &&\r\n\t\t\t\t\t\t\tbyEmployeeActivity[0]\r\n\t\t\t\t\t\t\t\t? byEmployeeActivity[0].employee\r\n\t\t\t\t\t\t\t\t: null;\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\temployee,\r\n\t\t\t\t\t\t\tprojects: byProject\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tdate,\r\n\t\t\t\t\temployees: byEmployee\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t);\r\n\t\treturn dailyLogs;\r\n\t}\r\n\r\n\tmapByEmployee(activities: IActivity[]) {\r\n\t\tconst byEmployee: any = this.groupByEmployee(activities).map(\r\n\t\t\t(byEmployeeActivity: IActivity[]) => {\r\n\t\t\t\tconst sum = this.getDurationSum(byEmployeeActivity);\r\n\t\t\t\tconst dailyLogs = this.groupByDate(byEmployeeActivity).map(\r\n\t\t\t\t\t(byDateActivity: IActivity[], date) => {\r\n\t\t\t\t\t\tconst byProject = this.groupByProject(\r\n\t\t\t\t\t\t\tbyDateActivity\r\n\t\t\t\t\t\t).map((byProjectActivity: IActivity[]) => {\r\n\t\t\t\t\t\t\tconst project =\r\n\t\t\t\t\t\t\t\tbyProjectActivity.length > 0 &&\r\n\t\t\t\t\t\t\t\tbyProjectActivity[0]\r\n\t\t\t\t\t\t\t\t\t? byProjectActivity[0].project\r\n\t\t\t\t\t\t\t\t\t: null;\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tproject,\r\n\t\t\t\t\t\t\t\tactivity: byProjectActivity.map((row) =>\r\n\t\t\t\t\t\t\t\t\tthis.mapActivitiesPercentage(row, sum)\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tdate,\r\n\t\t\t\t\t\t\tprojects: byProject\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\r\n\t\t\t\tconst employee =\r\n\t\t\t\t\tbyEmployeeActivity.length > 0 && byEmployeeActivity[0]\r\n\t\t\t\t\t\t? byEmployeeActivity[0].employee\r\n\t\t\t\t\t\t: null;\r\n\t\t\t\treturn {\r\n\t\t\t\t\temployee,\r\n\t\t\t\t\tdates: dailyLogs\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t);\r\n\t\treturn byEmployee;\r\n\t}\r\n\r\n\tmapByProject(activities: IActivity[]) {\r\n\t\tconst byEmployee: any = this.groupByProject(activities).map(\r\n\t\t\t(byProjectActivity: IActivity[]) => {\r\n\t\t\t\tconst sum = this.getDurationSum(byProjectActivity);\r\n\r\n\t\t\t\tconst dailyLogs = this.groupByDate(byProjectActivity).map(\r\n\t\t\t\t\t(byDateActivity: IActivity[], date) => {\r\n\t\t\t\t\t\tconst byProject = this.groupByEmployee(\r\n\t\t\t\t\t\t\tbyDateActivity\r\n\t\t\t\t\t\t).map((byEmployeeActivity: IActivity[]) => {\r\n\t\t\t\t\t\t\tconst employee =\r\n\t\t\t\t\t\t\t\tbyEmployeeActivity.length > 0 &&\r\n\t\t\t\t\t\t\t\tbyEmployeeActivity[0]\r\n\t\t\t\t\t\t\t\t\t? byEmployeeActivity[0].employee\r\n\t\t\t\t\t\t\t\t\t: null;\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\temployee,\r\n\t\t\t\t\t\t\t\tactivity: byEmployeeActivity.map((row) =>\r\n\t\t\t\t\t\t\t\t\tthis.mapActivitiesPercentage(row, sum)\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tdate,\r\n\t\t\t\t\t\t\temployees: byProject\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\r\n\t\t\t\tconst project =\r\n\t\t\t\t\tbyProjectActivity.length > 0 && byProjectActivity[0]\r\n\t\t\t\t\t\t? byProjectActivity[0].project\r\n\t\t\t\t\t\t: null;\r\n\t\t\t\treturn {\r\n\t\t\t\t\tproject,\r\n\t\t\t\t\tdates: dailyLogs\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t);\r\n\t\treturn byEmployee;\r\n\t}\r\n\r\n\tprivate groupByProject(activities: IActivity[]) {\r\n\t\treturn chain(activities).groupBy((activity) => {\r\n\t\t\treturn activity.projectId;\r\n\t\t});\r\n\t}\r\n\r\n\tprivate groupByDate(activities: IActivity[]) {\r\n\t\treturn chain(activities).groupBy((activity) => {\r\n\t\t\treturn moment.utc(activity.date).format('YYYY-MM-DD');\r\n\t\t});\r\n\t}\r\n\r\n\tprivate groupByEmployee(activities: IActivity[]) {\r\n\t\treturn chain(activities).groupBy((activity) => {\r\n\t\t\treturn activity.employeeId;\r\n\t\t});\r\n\t}\r\n\r\n\tprivate mapActivitiesPercentage(activity, sum = 0) {\r\n\t\tactivity.duration_percentage =\r\n\t\t\t(parseInt(activity.duration, 10) * 100) / sum;\r\n\t\treturn activity;\r\n\t}\r\n\r\n\tprivate getDurationSum(activities) {\r\n\t\treturn activities.reduce((iteratee: any, log: any) => {\r\n\t\t\treturn iteratee + parseInt(log.duration, 10);\r\n\t\t}, 0);\r\n\t}\r\n}\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { In, Repository } from 'typeorm';\r\nimport { CrudService } from '../../core/crud/crud.service';\r\nimport { Activity } from '../activity.entity';\r\nimport * as moment from 'moment';\r\nimport { RequestContext } from '../../core/context';\r\nimport {\r\n\tPermissionsEnum,\r\n\tIGetActivitiesInput,\r\n\tIDailyActivity,\r\n\tIBulkActivitiesInput\r\n} from '@gauzy/models';\r\nimport { CommandBus } from '@nestjs/cqrs';\r\nimport { BulkActivitiesSaveCommand } from './commands/bulk-activities-save.command';\r\nimport { Employee } from '../../employee/employee.entity';\r\nimport { OrganizationProject } from '../../organization-projects/organization-projects.entity';\r\nimport { indexBy, pluck } from 'underscore';\r\nimport { environment } from '@env-api/environment';\r\n\r\n@Injectable()\r\nexport class ActivityService extends CrudService<Activity> {\r\n\tconstructor(\r\n\t\t@InjectRepository(Activity)\r\n\t\tprivate readonly activityRepository: Repository<Activity>,\r\n\t\t@InjectRepository(Employee)\r\n\t\tprivate readonly employeeRepository: Repository<Employee>,\r\n\t\t@InjectRepository(OrganizationProject)\r\n\t\tprivate readonly organizationProjectRepository: Repository<\r\n\t\t\tOrganizationProject\r\n\t\t>,\r\n\t\tprivate readonly commandBus: CommandBus\r\n\t) {\r\n\t\tsuper(activityRepository);\r\n\t}\r\n\r\n\tasync getDailyActivities(\r\n\t\trequest: IGetActivitiesInput\r\n\t): Promise<IDailyActivity[]> {\r\n\t\tconst query = this.filterQuery(request);\r\n\t\tquery.select(`COUNT(\"${query.alias}\".\"id\")`, `sessions`);\r\n\t\tquery.addSelect(`SUM(\"${query.alias}\".\"duration\")`, `duration`);\r\n\t\tquery.addSelect(`\"${query.alias}\".\"employeeId\"`, `employeeId`);\r\n\t\tquery.addSelect(`\"${query.alias}\".\"date\"`, `date`);\r\n\t\tif (environment.database.type === 'sqlite') {\r\n\t\t\tquery.addSelect(`time(\"${query.alias}\".\"time\")`, `time`);\r\n\t\t} else {\r\n\t\t\tquery.addSelect(\r\n\t\t\t\t`(to_char(\"${query.alias}\".\"time\", 'HH24') || ':00')::time`,\r\n\t\t\t\t`time`\r\n\t\t\t);\r\n\t\t}\r\n\t\tquery.addSelect(`\"${query.alias}\".\"title\"`, `title`);\r\n\t\tquery.addGroupBy(`\"${query.alias}\".\"date\"`);\r\n\r\n\t\tif (environment.database.type === 'sqlite') {\r\n\t\t\tquery.addGroupBy(`time(\"${query.alias}\".\"time\")`);\r\n\t\t} else {\r\n\t\t\tquery.addGroupBy(\r\n\t\t\t\t`(to_char(\"${query.alias}\".\"time\", 'HH24') || ':00')::time`\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tquery.addGroupBy(`\"${query.alias}\".\"title\"`);\r\n\t\tquery.addGroupBy(`\"${query.alias}\".\"employeeId\"`);\r\n\r\n\t\tquery.orderBy(`time`, 'ASC');\r\n\t\tquery.addOrderBy(`\"duration\"`, 'DESC');\r\n\r\n\t\treturn query.getRawMany();\r\n\t}\r\n\r\n\tasync getDailyActivitiesReport(\r\n\t\trequest: IGetActivitiesInput\r\n\t): Promise<Activity[]> {\r\n\t\tconst query = this.filterQuery(request);\r\n\r\n\t\tquery.select(`COUNT(\"${query.alias}\".\"id\")`, `sessions`);\r\n\t\tquery.addSelect(`SUM(\"${query.alias}\".\"duration\")`, `duration`);\r\n\t\tquery.addSelect(`\"${query.alias}\".\"employeeId\"`, `employeeId`);\r\n\t\tquery.addSelect(`\"${query.alias}\".\"projectId\"`, `projectId`);\r\n\t\tquery.addSelect(`\"${query.alias}\".\"date\"`, `date`);\r\n\t\tquery.addSelect(`\"${query.alias}\".\"title\"`, `title`);\r\n\t\tquery.addGroupBy(`\"${query.alias}\".\"date\"`);\r\n\t\tquery.addGroupBy(`\"${query.alias}\".\"title\"`);\r\n\t\tquery.addGroupBy(`\"${query.alias}\".\"employeeId\"`);\r\n\t\tquery.addGroupBy(`\"${query.alias}\".\"projectId\"`);\r\n\t\tquery.orderBy(`\"duration\"`, 'DESC');\r\n\r\n\t\tquery.limit(200);\r\n\t\tlet activitiesData = await query.getRawMany();\r\n\r\n\t\tconsole.log(query.getQuery());\r\n\r\n\t\tconst projectIds = pluck(activitiesData, 'projectId');\r\n\t\tconst employeeIds = pluck(activitiesData, 'employeeId');\r\n\r\n\t\tlet employeeById: any = {};\r\n\t\tif (employeeIds.length > 0) {\r\n\t\t\tconst employees = await this.employeeRepository.find({\r\n\t\t\t\twhere: {\r\n\t\t\t\t\tid: In(employeeIds)\r\n\t\t\t\t},\r\n\t\t\t\trelations: ['user']\r\n\t\t\t});\r\n\t\t\temployeeById = indexBy(employees, 'id');\r\n\t\t}\r\n\r\n\t\tlet projectById: any = {};\r\n\t\tif (projectIds.length > 0) {\r\n\t\t\tconst projects = await this.organizationProjectRepository.find({\r\n\t\t\t\twhere: {\r\n\t\t\t\t\tid: In(projectIds)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tprojectById = indexBy(projects, 'id');\r\n\t\t}\r\n\r\n\t\tactivitiesData = activitiesData.map((activity) => {\r\n\t\t\tactivity.employee = employeeById[activity.employeeId];\r\n\t\t\tactivity.project = projectById[activity.projectId];\r\n\t\t\treturn activity;\r\n\t\t});\r\n\r\n\t\treturn activitiesData;\r\n\t}\r\n\r\n\tasync getAllActivities(request: IGetActivitiesInput) {\r\n\t\tconst query = this.filterQuery(request);\r\n\r\n\t\treturn await query.getMany();\r\n\t}\r\n\r\n\tasync getActivities(request: IGetActivitiesInput) {\r\n\t\tconst query = this.filterQuery(request);\r\n\t\tif (\r\n\t\t\tRequestContext.hasPermission(\r\n\t\t\t\tPermissionsEnum.CHANGE_SELECTED_EMPLOYEE\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\tquery.leftJoinAndSelect(\r\n\t\t\t\t`${query.alias}.employee`,\r\n\t\t\t\t'activityEmployee'\r\n\t\t\t);\r\n\t\t\tquery.leftJoinAndSelect(\r\n\t\t\t\t`activityEmployee.user`,\r\n\t\t\t\t'activityUser',\r\n\t\t\t\t'\"employee\".\"userId\" = activityUser.id'\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tquery.orderBy(`${query.alias}.duration`, 'DESC');\r\n\r\n\t\treturn await query.getMany();\r\n\t}\r\n\r\n\tbulkSave(input: IBulkActivitiesInput) {\r\n\t\treturn this.commandBus.execute(new BulkActivitiesSaveCommand(input));\r\n\t}\r\n\r\n\tprivate filterQuery(request: IGetActivitiesInput) {\r\n\t\tlet employeeIds: string[];\r\n\r\n\t\tconst query = this.activityRepository.createQueryBuilder();\r\n\t\tif (request.limit > 0) {\r\n\t\t\tquery.take(request.limit);\r\n\t\t\tquery.skip((request.page || 0) * request.limit);\r\n\t\t}\r\n\t\tif (\r\n\t\t\tRequestContext.hasPermission(\r\n\t\t\t\tPermissionsEnum.CHANGE_SELECTED_EMPLOYEE\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\tif (request.employeeIds) {\r\n\t\t\t\temployeeIds = request.employeeIds;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst user = RequestContext.currentUser();\r\n\t\t\temployeeIds = [user.employeeId];\r\n\t\t}\r\n\r\n\t\tquery.innerJoin(`${query.alias}.employee`, 'employee');\r\n\t\tquery.where((qb) => {\r\n\t\t\tif (request.startDate && request.endDate) {\r\n\t\t\t\tconst startDate = moment.utc(request.startDate).toDate();\r\n\t\t\t\tconst endDate = moment.utc(request.endDate).toDate();\r\n\t\t\t\tif (environment.database.type === 'sqlite') {\r\n\t\t\t\t\tqb.andWhere(\r\n\t\t\t\t\t\t`datetime(\"${query.alias}\".\"date\" || ' ' || \"${query.alias}\".\"time\") Between :startDate AND :endDate`,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tstartDate,\r\n\t\t\t\t\t\t\tendDate\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tqb.andWhere(\r\n\t\t\t\t\t\t`concat(\"${query.alias}\".\"date\", ' ', \"${query.alias}\".\"time\")::timestamp Between :startDate AND :endDate`,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tstartDate,\r\n\t\t\t\t\t\t\tendDate\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (employeeIds) {\r\n\t\t\t\tqb.andWhere(\r\n\t\t\t\t\t`\"${query.alias}\".\"employeeId\" IN (:...employeeId)`,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\temployeeId: employeeIds\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tif (request.projectIds) {\r\n\t\t\t\tqb.andWhere(`\"${query.alias}\".\"projectId\" IN (:...projectId)`, {\r\n\t\t\t\t\tprojectId: request.projectIds\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (request.titles) {\r\n\t\t\t\tqb.andWhere(`\"${query.alias}\".\"title\" IN (:...title)`, {\r\n\t\t\t\t\ttitle: request.titles\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (request.organizationId) {\r\n\t\t\t\tqb.andWhere(\r\n\t\t\t\t\t`\"${query.alias}\".\"organizationId\" = :organizationId`,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\torganizationId: request.organizationId\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tqb.andWhere(`\"${query.alias}\".\"tenantId\" = :tenantId`, {\r\n\t\t\t\ttenantId: RequestContext.currentTenantId()\r\n\t\t\t});\r\n\r\n\t\t\tconst sq = qb\r\n\t\t\t\t.subQuery()\r\n\t\t\t\t.select(\r\n\t\t\t\t\t`(\"${qb.alias}\".duration * 100 ) / SUM(\"AvgActivity\".duration)`,\r\n\t\t\t\t\t'per'\r\n\t\t\t\t)\r\n\t\t\t\t.from(Activity, 'AvgActivity')\r\n\t\t\t\t.getQuery();\r\n\r\n\t\t\tif (request.activityLevel) {\r\n\t\t\t\tqb.andWhere(\r\n\t\t\t\t\t`(${sq} BETWEEN :start AND :end)`,\r\n\t\t\t\t\trequest.activityLevel\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tif (request.source) {\r\n\t\t\t\tif (request.source instanceof Array) {\r\n\t\t\t\t\tqb.andWhere(`\"${query.alias}\".\"source\" IN (:...source)`, {\r\n\t\t\t\t\t\tsource: request.source\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tqb.andWhere(`\"${query.alias}\".\"source\" = :source`, {\r\n\t\t\t\t\t\tsource: request.source\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (request.logType) {\r\n\t\t\t\tif (request.logType instanceof Array) {\r\n\t\t\t\t\tqb.andWhere(`\"${query.alias}\".\"logType\" IN (:...logType)`, {\r\n\t\t\t\t\t\tlogType: request.logType\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tqb.andWhere(`\"${query.alias}\".\"logType\" = :logType`, {\r\n\t\t\t\t\t\tlogType: request.logType\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (request.types) {\r\n\t\t\t\tqb.andWhere(`\"${query.alias}\".\"type\" IN (:...type)`, {\r\n\t\t\t\t\ttype: request.types\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn query;\r\n\t}\r\n}\r\n","import { IBulkActivitiesInput } from '@gauzy/models';\r\nimport { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class BulkActivitiesSaveCommand implements ICommand {\r\n\tstatic readonly type = '[Screenshot] Create Screenshot';\r\n\r\n\tconstructor(public readonly input: IBulkActivitiesInput) {}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { BulkActivitiesSaveCommand } from '../bulk-activities-save.command';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Activity } from '../../../activity.entity';\r\nimport { Repository } from 'typeorm';\r\nimport { RequestContext } from 'src/app/core/context';\r\nimport { Employee } from 'src/app/employee/employee.entity';\r\n\r\n@CommandHandler(BulkActivitiesSaveCommand)\r\nexport class BulkActivitiesSaveHandler\r\n\timplements ICommandHandler<BulkActivitiesSaveCommand> {\r\n\tconstructor(\r\n\t\t@InjectRepository(Activity)\r\n\t\tprivate readonly activityRepository: Repository<Activity>,\r\n\t\t@InjectRepository(Employee)\r\n\t\tprivate readonly employeeRepository: Repository<Employee>\r\n\t) {}\r\n\r\n\tpublic async execute(command: BulkActivitiesSaveCommand): Promise<any> {\r\n\t\tconst { input } = command;\r\n\t\tif (!input.organizationId) {\r\n\t\t\tconst user = RequestContext.currentUser();\r\n\t\t\tconst employee = await this.employeeRepository.findOne(\r\n\t\t\t\tuser.employeeId\r\n\t\t\t);\r\n\t\t\tinput.organizationId = employee.organizationId;\r\n\t\t}\r\n\t\tconst insertActivities = input.activities.map((activity) => {\r\n\t\t\tactivity = new Activity({\r\n\t\t\t\temployeeId: input.employeeId,\r\n\t\t\t\torganizationId: input.organizationId,\r\n\t\t\t\ttenantId: RequestContext.currentTenantId(),\r\n\t\t\t\t...(input.projectId ? { projectId: input.projectId } : {}),\r\n\t\t\t\t...activity\r\n\t\t\t});\r\n\t\t\treturn activity;\r\n\t\t});\r\n\r\n\t\tif (insertActivities.length > 0) {\r\n\t\t\tawait this.activityRepository.save(insertActivities);\r\n\t\t\treturn insertActivities;\r\n\t\t} else {\r\n\t\t\treturn [];\r\n\t\t}\r\n\t}\r\n}\r\n","import { BulkActivitiesSaveHandler } from './bulk-activities-save.handler';\r\n\r\nexport const ActivityCommandHandlers = [BulkActivitiesSaveHandler];\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { IActivity } from '@gauzy/models';\r\n\r\nexport class ActivityCreateCommand implements ICommand {\r\n\tstatic readonly type = '[Activity] Create Activity';\r\n\r\n\tconstructor(public readonly input: IActivity) {}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { BadRequestException } from '@nestjs/common';\r\nimport { ActivityCreateCommand } from '../activity-create.command';\r\nimport { ActivityService } from '../../activity/activity.service';\r\n\r\n@CommandHandler(ActivityCreateCommand)\r\nexport class ActivityCreateHandler\r\n\timplements ICommandHandler<ActivityCreateCommand> {\r\n\tconstructor(private _activityService: ActivityService) {}\r\n\r\n\tpublic async execute(command: ActivityCreateCommand): Promise<any> {\r\n\t\ttry {\r\n\t\t\tconst { input } = command;\r\n\t\t\tconst {\r\n\t\t\t\ttitle,\r\n\t\t\t\tduration,\r\n\t\t\t\ttype,\r\n\t\t\t\tprojectId,\r\n\t\t\t\tdate,\r\n\t\t\t\temployeeId,\r\n\t\t\t\ttaskId = null,\r\n\t\t\t\torganizationId\r\n\t\t\t} = input;\r\n\r\n\t\t\treturn await this._activityService.create({\r\n\t\t\t\ttitle,\r\n\t\t\t\tduration,\r\n\t\t\t\ttype,\r\n\t\t\t\tdate,\r\n\t\t\t\tprojectId,\r\n\t\t\t\temployeeId,\r\n\t\t\t\ttaskId,\r\n\t\t\t\torganizationId\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tthrow new BadRequestException('Cant create activity for time slot');\r\n\t\t}\r\n\t}\r\n}\r\n","import { TimeSlotCreateHandler } from './time-slot-create.handler';\r\nimport { TimesheetCreateHandler } from './timesheet-create.handler';\r\nimport { TimesheetGetHandler } from './timesheet-get.handler';\r\nimport { ScreenshotCreateHandler } from './screenshot-create.handler';\r\nimport { ActivityCreateHandler } from './activity-create.handler';\r\n\r\nexport const CommandHandlers = [\r\n\tTimeSlotCreateHandler,\r\n\tTimesheetCreateHandler,\r\n\tTimesheetGetHandler,\r\n\tScreenshotCreateHandler,\r\n\tActivityCreateHandler\r\n];\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { BadRequestException } from '@nestjs/common';\r\nimport * as moment from 'moment';\r\nimport { ScreenshotCreateCommand } from '..';\r\nimport { ScreenshotService } from '../../screenshot/screenshot.service';\r\nimport { TimeSlotService } from '../../time-slot/time-slot.service';\r\n\r\n@CommandHandler(ScreenshotCreateCommand)\r\nexport class ScreenshotCreateHandler\r\n\timplements ICommandHandler<ScreenshotCreateCommand> {\r\n\tconstructor(\r\n\t\tprivate _screenshotService: ScreenshotService,\r\n\t\tprivate _timeSlotService: TimeSlotService\r\n\t) {}\r\n\r\n\tpublic async execute(command: ScreenshotCreateCommand): Promise<any> {\r\n\t\ttry {\r\n\t\t\tconst { input } = command;\r\n\t\t\tconst {\r\n\t\t\t\tfile,\r\n\t\t\t\tthumb,\r\n\t\t\t\trecordedAt,\r\n\t\t\t\tactivityTimestamp,\r\n\t\t\t\temployeeId,\r\n\t\t\t\torganizationId\r\n\t\t\t} = input;\r\n\r\n\t\t\tlet {\r\n\t\t\t\trecord: timeSlot\r\n\t\t\t} = await this._timeSlotService.findOneOrFail({\r\n\t\t\t\twhere: {\r\n\t\t\t\t\tstartedAt: new Date(\r\n\t\t\t\t\t\tmoment(activityTimestamp).format('YYYY-MM-DD HH:mm:ss')\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t//if timeslot not found for this screenshot then create new timeslot\r\n\t\t\tif (!timeSlot) {\r\n\t\t\t\ttimeSlot = await this._timeSlotService.create({\r\n\t\t\t\t\temployeeId,\r\n\t\t\t\t\tduration: 600,\r\n\t\t\t\t\tkeyboard: 0,\r\n\t\t\t\t\tmouse: 0,\r\n\t\t\t\t\toverall: 0,\r\n\t\t\t\t\tstartedAt: new Date(\r\n\t\t\t\t\t\tmoment(activityTimestamp).format('YYYY-MM-DD HH:mm:ss')\r\n\t\t\t\t\t)\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tconst {\r\n\t\t\t\trecord: screenshot\r\n\t\t\t} = await this._screenshotService.findOneOrFail({\r\n\t\t\t\twhere: {\r\n\t\t\t\t\ttimeSlotId: timeSlot\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif (screenshot) {\r\n\t\t\t\tconst { id } = screenshot;\r\n\t\t\t\tawait this._screenshotService.update(id, {\r\n\t\t\t\t\tfile,\r\n\t\t\t\t\tthumb\r\n\t\t\t\t});\r\n\t\t\t\treturn await this._screenshotService.findOne(id);\r\n\t\t\t}\r\n\t\t\treturn await this._screenshotService.create({\r\n\t\t\t\ttimeSlotId: timeSlot,\r\n\t\t\t\tfile,\r\n\t\t\t\tthumb,\r\n\t\t\t\trecordedAt,\r\n\t\t\t\torganizationId\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tthrow new BadRequestException(\r\n\t\t\t\t'Cant create screenshot for time slot'\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n","import { BadRequestException } from '@nestjs/common';\r\nimport { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport * as moment from 'moment';\r\nimport { ITimeSlot } from '@gauzy/models';\r\nimport { TimeSlotCreateCommand } from '../time-slot-create.command';\r\nimport { TimeSlotService } from '../../time-slot/time-slot.service';\r\n\r\n@CommandHandler(TimeSlotCreateCommand)\r\nexport class TimeSlotCreateHandler\r\n\timplements ICommandHandler<TimeSlotCreateCommand> {\r\n\tconstructor(private _timeSlotService: TimeSlotService) {}\r\n\r\n\tpublic async execute(command: TimeSlotCreateCommand): Promise<ITimeSlot> {\r\n\t\ttry {\r\n\t\t\tconst { input } = command;\r\n\t\t\tconst {\r\n\t\t\t\temployeeId,\r\n\t\t\t\tduration,\r\n\t\t\t\tkeyboard,\r\n\t\t\t\tmouse,\r\n\t\t\t\toverall,\r\n\t\t\t\ttime_slot,\r\n\t\t\t\torganizationId\r\n\t\t\t}: ITimeSlot = input;\r\n\r\n\t\t\treturn await this._timeSlotService.create({\r\n\t\t\t\temployeeId,\r\n\t\t\t\tduration,\r\n\t\t\t\tkeyboard,\r\n\t\t\t\tmouse,\r\n\t\t\t\toverall,\r\n\t\t\t\tstartedAt: new Date(\r\n\t\t\t\t\tmoment(time_slot).format('YYYY-MM-DD HH:mm:ss')\r\n\t\t\t\t),\r\n\t\t\t\torganizationId\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tthrow new BadRequestException('Cant create time slot');\r\n\t\t}\r\n\t}\r\n}\r\n","import { ITimesheet } from '@gauzy/models';\r\nimport { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { TimesheetCreateCommand } from '..';\r\nimport { TimeSheetService } from '../../timesheet/timesheet.service';\r\nimport { BadRequestException } from '@nestjs/common';\r\nimport { RequestContext } from '../../../core/context';\r\n\r\n@CommandHandler(TimesheetCreateCommand)\r\nexport class TimesheetCreateHandler\r\n\timplements ICommandHandler<TimesheetCreateCommand> {\r\n\tconstructor(private _timesheetService: TimeSheetService) {}\r\n\r\n\tpublic async execute(command: TimesheetCreateCommand): Promise<ITimesheet> {\r\n\t\ttry {\r\n\t\t\tconst { input } = command;\r\n\t\t\tconst {\r\n\t\t\t\temployeeId,\r\n\t\t\t\tduration,\r\n\t\t\t\tkeyboard,\r\n\t\t\t\tmouse,\r\n\t\t\t\toverall,\r\n\t\t\t\tstartedAt,\r\n\t\t\t\torganizationId\r\n\t\t\t} = input;\r\n\r\n\t\t\tconst tenantId = RequestContext.currentTenantId();\r\n\t\t\treturn await this._timesheetService.create({\r\n\t\t\t\temployeeId,\r\n\t\t\t\tduration,\r\n\t\t\t\tkeyboard,\r\n\t\t\t\tmouse,\r\n\t\t\t\toverall,\r\n\t\t\t\tstartedAt,\r\n\t\t\t\torganizationId,\r\n\t\t\t\ttenantId\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tthrow new BadRequestException('Cant create timesheet');\r\n\t\t}\r\n\t}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { TimeSheetService } from '../../timesheet/timesheet.service';\r\nimport { ITimesheet } from '@gauzy/models';\r\nimport { TimesheetGetCommand } from '..';\r\n\r\n@CommandHandler(TimesheetGetCommand)\r\nexport class TimesheetGetHandler\r\n\timplements ICommandHandler<TimesheetGetCommand> {\r\n\tconstructor(private readonly _timesheetService: TimeSheetService) {}\r\n\r\n\tpublic async execute(command: TimesheetGetCommand): Promise<ITimesheet> {\r\n\t\tconst { input } = command;\r\n\r\n\t\tconst { record } = await this._timesheetService.findOneOrFail(input);\r\n\t\treturn record;\r\n\t}\r\n}\r\n","export * from './time-slot-create.command';\r\nexport * from './timesheet-create.command';\r\nexport * from './timesheet-get.command';\r\nexport * from './screenshot-create.command';\r\nexport * from './activity-create.command';\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { ICreateScreenshotInput } from '@gauzy/models';\r\n\r\nexport class ScreenshotCreateCommand implements ICommand {\r\n\tstatic readonly type = '[Screenshot] Create Screenshot';\r\n\r\n\tconstructor(public readonly input: ICreateScreenshotInput) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { ITimeSlotCreateInput } from '@gauzy/models';\r\n\r\nexport class TimeSlotCreateCommand implements ICommand {\r\n\tstatic readonly type = '[TimeSlot] Create TimeSlot';\r\n\r\n\tconstructor(public readonly input: ITimeSlotCreateInput) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { ITimesheetCreateInput } from '@gauzy/models';\r\n\r\nexport class TimesheetCreateCommand implements ICommand {\r\n\tstatic readonly type = '[Timesheet] Create Timesheet';\r\n\r\n\tconstructor(public readonly input: ITimesheetCreateInput) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { FindOneOptions } from 'typeorm';\r\n\r\nexport class TimesheetGetCommand implements ICommand {\r\n\tstatic readonly type = '[Timesheet] Get';\r\n\r\n\tconstructor(public readonly input: FindOneOptions) {}\r\n}\r\n","import {\r\n\tEntity,\r\n\tColumn,\r\n\tRelationId,\r\n\tManyToOne,\r\n\tJoinColumn,\r\n\tAfterLoad\r\n} from 'typeorm';\r\nimport { IScreenshot, ITimeSlot } from '@gauzy/models';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsString, IsOptional, IsNumber, IsDateString } from 'class-validator';\r\nimport { TimeSlot } from './time-slot.entity';\r\nimport { FileStorage } from '../core/file-storage';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('screenshot')\r\nexport class Screenshot extends TenantOrganizationBase implements IScreenshot {\r\n\t@ApiProperty({ type: TimeSlot })\r\n\t@ManyToOne(() => TimeSlot, (timeSlot) => timeSlot.screenshots, {\r\n\t\tonDelete: 'CASCADE'\r\n\t})\r\n\t@JoinColumn()\r\n\ttimeSlot?: ITimeSlot;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@RelationId((screenshot: Screenshot) => screenshot.timeSlot)\r\n\t@Column({ nullable: true })\r\n\treadonly timeSlotId?: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@Column()\r\n\tfile: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsOptional()\r\n\t@Column({ default: null, nullable: true })\r\n\tthumb?: string;\r\n\r\n\t@ApiProperty({ type: 'timestamptz' })\r\n\t@IsNumber()\r\n\t@IsOptional()\r\n\t@Column({ default: null, nullable: true })\r\n\trecordedAt?: Date;\r\n\r\n\t@ApiProperty({ type: 'timestamptz' })\r\n\t@IsDateString()\r\n\t@Column({ nullable: true, default: null })\r\n\tdeletedAt?: Date;\r\n\r\n\tfullUrl?: string;\r\n\tthumbUrl?: string;\r\n\r\n\t@AfterLoad()\r\n\tafterLoad?() {\r\n\t\tthis.fullUrl = new FileStorage().getProvider().url(this.file);\r\n\t\tthis.thumbUrl = new FileStorage().getProvider().url(this.thumb);\r\n\t}\r\n}\r\n","import {\r\n\tController,\r\n\tUseGuards,\r\n\tHttpStatus,\r\n\tPost,\r\n\tBody,\r\n\tUseInterceptors\r\n} from '@nestjs/common';\r\nimport { Screenshot } from '../screenshot.entity';\r\nimport { CrudController } from '../../core/crud/crud.controller';\r\nimport { ScreenshotService } from './screenshot.service';\r\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { FileInterceptor } from '@nestjs/platform-express';\r\nimport * as path from 'path';\r\nimport * as moment from 'moment';\r\nimport * as sharp from 'sharp';\r\nimport { FileStorage } from '../../core/file-storage';\r\nimport { UploadedFileStorage } from '../../core/file-storage/uploaded-file-storage';\r\nimport * as fs from 'fs';\r\nimport { tempFile } from '../../core/utils';\r\nimport { TenantPermissionGuard } from '../../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('Screenshot')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller('screenshot')\r\nexport class ScreenshotController extends CrudController<Screenshot> {\r\n\tconstructor(private readonly screenshotService: ScreenshotService) {\r\n\t\tsuper(screenshotService);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Add manual time' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'The timer has been successfully On/Off.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@Post('/')\r\n\t@UseInterceptors(\r\n\t\tFileInterceptor('file', {\r\n\t\t\tstorage: new FileStorage().storage({\r\n\t\t\t\tdest: () => {\r\n\t\t\t\t\treturn path.join(\r\n\t\t\t\t\t\t'screenshots',\r\n\t\t\t\t\t\tmoment().format('YYYY/MM/DD')\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t\tprefix: 'screenshots'\r\n\t\t\t})\r\n\t\t})\r\n\t)\r\n\tasync upload(\r\n\t\t@Body() entity: Screenshot,\r\n\t\t@UploadedFileStorage()\r\n\t\tfile\r\n\t): Promise<Screenshot> {\r\n\t\tlet thumb;\r\n\r\n\t\ttry {\r\n\t\t\tconst fileContent = await new FileStorage()\r\n\t\t\t\t.getProvider()\r\n\t\t\t\t.getFile(file.key);\r\n\r\n\t\t\tconst inputFile = await tempFile('screenshot-thumb');\r\n\t\t\tconst outputFile = await tempFile('screenshot-thumb');\r\n\t\t\tawait fs.promises.writeFile(inputFile, fileContent);\r\n\t\t\tawait new Promise((resolve, reject) => {\r\n\t\t\t\tsharp(inputFile)\r\n\t\t\t\t\t.resize(250, 150)\r\n\t\t\t\t\t.toFile(outputFile, (error: any, data: any) => {\r\n\t\t\t\t\t\tif (error) {\r\n\t\t\t\t\t\t\treject(error);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tresolve(data);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tconst thumbName = `thumb-${file.filename}`;\r\n\t\t\tconst thumbDir = path.dirname(file.key);\r\n\t\t\tconst data = await fs.promises.readFile(outputFile);\r\n\t\t\tawait fs.promises.unlink(inputFile);\r\n\t\t\tawait fs.promises.unlink(outputFile);\r\n\r\n\t\t\tthumb = await new FileStorage()\r\n\t\t\t\t.getProvider()\r\n\t\t\t\t.putFile(data, path.join(thumbDir, thumbName));\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\r\n\t\tentity.file = file.key;\r\n\t\tentity.thumb = thumb.key;\r\n\t\tentity.recordedAt = entity.recordedAt ? entity.recordedAt : new Date();\r\n\t\tconst screenshot = await this.screenshotService.create(entity);\r\n\r\n\t\treturn this.screenshotService.findOne(screenshot.id);\r\n\t}\r\n}\r\n","import * as fs from 'fs';\r\nimport * as path from 'path';\r\nimport * as faker from 'faker';\r\nimport { TimeSlot } from '../time-slot.entity';\r\nimport { Screenshot } from '../screenshot.entity';\r\nimport * as moment from 'moment';\r\nimport { environment as env } from '@env-api/environment';\r\nimport { Tenant } from '../../tenant/tenant.entity';\r\n\r\nlet fileList: string[] = [];\r\n\r\nlet dir: string;\r\nlet baseDir: string;\r\nif (env.isElectron) {\r\n\tdir = path.join(\r\n\t\tpath.resolve(env.gauzyUserPath, ...['src', 'assets', 'seed']),\r\n\t\t'screenshots'\r\n\t);\r\n\tbaseDir = path.join(path.resolve(env.gauzyUserPath));\r\n} else {\r\n\tdir = path.join(\r\n\t\tpath.resolve('.', ...['apps', 'api', 'src', 'assets', 'seed']),\r\n\t\t'screenshots'\r\n\t);\r\n\tbaseDir = path.join(path.resolve('.', ...['apps']), 'api');\r\n}\r\n\r\nconst fileDir = path.join('screenshots', moment().format('YYYY/MM/DD'));\r\n\r\nconst destDir = path.join('public', fileDir);\r\n\r\nexport const createRandomScreenshot = async (\r\n\ttimeSlot: TimeSlot,\r\n\ttenant: Tenant\r\n): Promise<Screenshot[]> => {\r\n\tawait getList();\r\n\r\n\tconst screenshots: Screenshot[] = [];\r\n\tfor (\r\n\t\tlet index = 0;\r\n\t\tindex < faker.random.number({ min: 1, max: 2 });\r\n\t\tindex++\r\n\t) {\r\n\t\tconst sourceFile = faker.random.arrayElement(fileList);\r\n\t\tconst sourceName =\r\n\t\t\t'screenshot-' + moment().unix() + faker.random.number(999) + '.jpg';\r\n\r\n\t\tconst destFile = path.join(destDir, sourceName);\r\n\r\n\t\tfs.mkdirSync(path.join(baseDir, destDir), { recursive: true });\r\n\r\n\t\tconst file = await new Promise<string>((resolve, reject) => {\r\n\t\t\tconst sourceFilePath = path.join(dir, sourceFile);\r\n\t\t\tconst destFilePath = path.join(baseDir, destFile);\r\n\r\n\t\t\tfs.copyFile(sourceFilePath, destFilePath, (err) => {\r\n\t\t\t\tif (err) {\r\n\t\t\t\t\tresolve('');\r\n\t\t\t\t}\r\n\t\t\t\tresolve(path.join(fileDir, sourceName));\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tif (file) {\r\n\t\t\tconst screenshot = new Screenshot();\r\n\t\t\tscreenshot.tenant = tenant;\r\n\t\t\tscreenshot.organizationId = timeSlot.organizationId;\r\n\r\n\t\t\tscreenshot.fullUrl = file;\r\n\t\t\tscreenshot.file = file;\r\n\t\t\tscreenshot.thumb = file;\r\n\t\t\tscreenshot.timeSlot = timeSlot;\r\n\t\t\tscreenshot.thumbUrl = file;\r\n\t\t\tscreenshot.recordedAt = faker.date.between(\r\n\t\t\t\ttimeSlot.startedAt,\r\n\t\t\t\ttimeSlot.stoppedAt\r\n\t\t\t);\r\n\t\t\tscreenshot.deletedAt = null;\r\n\t\t\tscreenshots.push(screenshot);\r\n\t\t}\r\n\t}\r\n\r\n\treturn screenshots;\r\n};\r\n\r\nconst getList = () => {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tfs.readdir(dir, (err, items) => {\r\n\t\t\tif (err) {\r\n\t\t\t\treject();\r\n\t\t\t} else {\r\n\t\t\t\tfileList = items;\r\n\t\t\t\tresolve(items);\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { TenantAwareCrudService } from '../../core/crud/tenant-aware-crud.service';\r\nimport { Screenshot } from '../screenshot.entity';\r\n\r\n@Injectable()\r\nexport class ScreenshotService extends TenantAwareCrudService<Screenshot> {\r\n\tconstructor(\r\n\t\t@InjectRepository(Screenshot)\r\n\t\tprivate readonly screenShotRepository: Repository<Screenshot>\r\n\t) {\r\n\t\tsuper(screenShotRepository);\r\n\t}\r\n}\r\n","import { Controller, UseGuards, HttpStatus, Get, Query } from '@nestjs/common';\r\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { StatisticService } from './statistic.service';\r\nimport {\r\n\tIGetMembersStatistics,\r\n\tIGetProjectsStatistics,\r\n\tIGetTasksStatistics,\r\n\tIGetTimeSlotStatistics,\r\n\tIGetActivitiesStatistics,\r\n\tIGetCountsStatistics,\r\n\tIGetManualTimesStatistics\r\n} from '@gauzy/models';\r\nimport { TenantPermissionGuard } from '../../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('TimesheetStatistic')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller('statistics')\r\nexport class StatisticController {\r\n\tconstructor(private readonly statisticService: StatisticService) {}\r\n\r\n\t@ApiOperation({ summary: 'Statistics - members' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Statistics - members'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@Get('/counts')\r\n\tasync counts(@Query() request: IGetCountsStatistics) {\r\n\t\treturn await this.statisticService.getCounts(request);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Statistics - members' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Statistics - members'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@Get('/members')\r\n\tasync members(@Query() request: IGetMembersStatistics) {\r\n\t\treturn await this.statisticService.getMembers(request);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Statistics - projects' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Statistics - projects'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@Get('/projects')\r\n\tasync projects(@Query() request: IGetProjectsStatistics) {\r\n\t\treturn await this.statisticService.getProjects(request);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Statistics - tasks' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Statistics - tasks'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@Get('/tasks')\r\n\tasync tasks(@Query() request: IGetTasksStatistics) {\r\n\t\treturn await this.statisticService.getTasks(request);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Statistics - Manual Times' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Statistics - Manual Times'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@Get('/manual-times')\r\n\tasync manualTimes(@Query() request: IGetManualTimesStatistics) {\r\n\t\treturn await this.statisticService.manualTimes(request);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Statistics - employee time-slots' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Statistics - employee time-slots'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@Get('/time-slots')\r\n\tasync employeeTimeslots(@Query() request: IGetTimeSlotStatistics) {\r\n\t\treturn await this.statisticService.getEmployeeTimeSlots(request);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Statistics - activities' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Statistics - activities'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@Get('/activities')\r\n\tasync activities(@Query() request: IGetActivitiesStatistics) {\r\n\t\treturn await this.statisticService.getActivites(request);\r\n\t}\r\n}\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository, In, Between } from 'typeorm';\r\nimport * as _ from 'underscore';\r\nimport {\r\n\tPermissionsEnum,\r\n\tIGetActivitiesStatistics,\r\n\tIGetTimeSlotStatistics,\r\n\tIGetTasksStatistics,\r\n\tIGetProjectsStatistics,\r\n\tIGetMembersStatistics,\r\n\tIGetCountsStatistics,\r\n\tICountsStatistics,\r\n\tIMembersStatistics,\r\n\tIActivitiesStatistics,\r\n\tITimeSlotStatistics,\r\n\tIProjectsStatistics,\r\n\tIGetManualTimesStatistics,\r\n\tIManualTimesStatistics,\r\n\tTimeLogType\r\n} from '@gauzy/models';\r\nimport { TimeSlot } from '../time-slot.entity';\r\nimport { Employee } from '../../employee/employee.entity';\r\nimport { RequestContext } from '../../core/context';\r\nimport { OrganizationProject } from '../../organization-projects/organization-projects.entity';\r\nimport { Task } from '../../tasks/task.entity';\r\nimport { Activity } from '../activity.entity';\r\nimport * as moment from 'moment';\r\nimport { TimeLog } from '../time-log.entity';\r\nimport { environment } from '@env-api/environment';\r\n\r\n@Injectable()\r\nexport class StatisticService {\r\n\tconstructor(\r\n\t\t@InjectRepository(OrganizationProject)\r\n\t\tprivate readonly organizationProjectsRepository: Repository<\r\n\t\t\tOrganizationProject\r\n\t\t>,\r\n\t\t@InjectRepository(Task)\r\n\t\tprivate readonly taskRepository: Repository<Task>,\r\n\t\t@InjectRepository(TimeSlot)\r\n\t\tprivate readonly timeSlotRepository: Repository<TimeSlot>,\r\n\t\t@InjectRepository(Employee)\r\n\t\tprivate readonly employeeRepository: Repository<Employee>,\r\n\t\t@InjectRepository(Activity)\r\n\t\tprivate readonly activityRepository: Repository<Activity>,\r\n\t\t@InjectRepository(TimeLog)\r\n\t\tprivate readonly timeLogRepository: Repository<TimeLog>\r\n\t) {}\r\n\r\n\tasync getCounts(request: IGetCountsStatistics): Promise<ICountsStatistics> {\r\n\t\tlet start;\r\n\t\tlet end;\r\n\t\tif (request.startDate) {\r\n\t\t\tstart = moment(request.startDate).utc().format();\r\n\t\t\tend = moment(request.endDate).utc().format();\r\n\t\t} else {\r\n\t\t\tconst date = request.date || new Date();\r\n\t\t\tstart = moment.utc(date).startOf('week').format();\r\n\t\t\tend = moment.utc(date).endOf('week').format();\r\n\t\t}\r\n\t\tconst user = RequestContext.currentUser();\r\n\t\tconst tenantId = user.tenantId;\r\n\t\t/*\r\n\t\t *  Get employees id of the organization or get current employee id\r\n\t\t */\r\n\t\tlet employeeIds = [];\r\n\t\tif (\r\n\t\t\t(user.employeeId && request.onlyMe) ||\r\n\t\t\t!RequestContext.hasPermission(\r\n\t\t\t\tPermissionsEnum.CHANGE_SELECTED_EMPLOYEE\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\temployeeIds = [user.employeeId];\r\n\t\t} else {\r\n\t\t\temployeeIds = await this.getEmployeesIds(\r\n\t\t\t\trequest.organizationId,\r\n\t\t\t\ttenantId\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\t/*\r\n\t\t *  Get employees count who worked in this week.\r\n\t\t */\r\n\t\tconst employeesCountQuery = this.employeeRepository.createQueryBuilder();\r\n\t\temployeesCountQuery.innerJoin(\r\n\t\t\t`${employeesCountQuery.alias}.timeLogs`,\r\n\t\t\t'timeLogs'\r\n\t\t);\r\n\t\tif (employeeIds.length) {\r\n\t\t\temployeesCountQuery\r\n\t\t\t\t.where({\r\n\t\t\t\t\tid: In(employeeIds)\r\n\t\t\t\t})\r\n\t\t\t\t.andWhere(`\"timeLogs\".\"startedAt\" BETWEEN :start AND :end`, {\r\n\t\t\t\t\tstart,\r\n\t\t\t\t\tend\r\n\t\t\t\t});\r\n\t\t}\r\n\t\tconst employeesCount = await employeesCountQuery\r\n\t\t\t.andWhere(`\"${employeesCountQuery.alias}\".\"tenantId\" = :tenantId`, {\r\n\t\t\t\ttenantId\r\n\t\t\t})\r\n\t\t\t.getCount();\r\n\r\n\t\t/*\r\n\t\t *  Get projects count who worked in this week.\r\n\t\t */\r\n\t\tconst projectsCountQuery = this.organizationProjectsRepository.createQueryBuilder();\r\n\t\tprojectsCountQuery.innerJoin(\r\n\t\t\t`${projectsCountQuery.alias}.timeLogs`,\r\n\t\t\t'timeLogs'\r\n\t\t);\r\n\t\tif (employeeIds.length) {\r\n\t\t\tprojectsCountQuery\r\n\t\t\t\t.where(`\"timeLogs\".\"employeeId\" IN (:...employeeId)`, {\r\n\t\t\t\t\temployeeId: employeeIds\r\n\t\t\t\t})\r\n\t\t\t\t.andWhere(`\"timeLogs\".\"startedAt\" BETWEEN :start AND :end`, {\r\n\t\t\t\t\tstart,\r\n\t\t\t\t\tend\r\n\t\t\t\t});\r\n\t\t}\r\n\t\tconst projectsCount = await projectsCountQuery\r\n\t\t\t.andWhere(`\"${projectsCountQuery.alias}\".\"tenantId\" = :tenantId`, {\r\n\t\t\t\ttenantId\r\n\t\t\t})\r\n\t\t\t.getCount();\r\n\r\n\t\t/*\r\n\t\t * Get average activity and total duration of the work for the week.\r\n\t\t */\r\n\t\tlet weekActivities = {\r\n\t\t\toverall: 0,\r\n\t\t\tduration: 0\r\n\t\t};\r\n\t\tif (employeeIds.length > 0) {\r\n\t\t\tconst activitiesQuery = await this.timeSlotRepository\r\n\t\t\t\t.createQueryBuilder()\r\n\t\t\t\t.select('AVG(overall)', 'overall')\r\n\t\t\t\t.addSelect('SUM(duration)', 'duration')\r\n\t\t\t\t.where({\r\n\t\t\t\t\temployeeId: In(employeeIds),\r\n\t\t\t\t\tstartedAt: Between(start, end),\r\n\t\t\t\t\ttenantId\r\n\t\t\t\t});\r\n\t\t\tweekActivities = await activitiesQuery.getRawOne();\r\n\t\t}\r\n\r\n\t\t/*\r\n\t\t * Get average activity and total duration of the work for today.\r\n\t\t */\r\n\t\tlet todayActivities = {\r\n\t\t\toverall: 0,\r\n\t\t\tduration: 0\r\n\t\t};\r\n\t\tif (employeeIds.length > 0) {\r\n\t\t\tconst activitiesQuery = await this.timeSlotRepository\r\n\t\t\t\t.createQueryBuilder()\r\n\t\t\t\t.select('AVG(overall)', 'overall')\r\n\t\t\t\t.addSelect('SUM(duration)', 'duration')\r\n\t\t\t\t.where({\r\n\t\t\t\t\temployeeId: In(employeeIds),\r\n\t\t\t\t\tstartedAt: Between(\r\n\t\t\t\t\t\tmoment().startOf('day').format(),\r\n\t\t\t\t\t\tmoment().endOf('day').format()\r\n\t\t\t\t\t),\r\n\t\t\t\t\ttenantId\r\n\t\t\t\t});\r\n\t\t\ttodayActivities = await activitiesQuery.getRawOne();\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\temployeesCount,\r\n\t\t\tprojectsCount,\r\n\t\t\tweekActivities: parseFloat(\r\n\t\t\t\tparseFloat(weekActivities.overall + '').toFixed(1)\r\n\t\t\t),\r\n\t\t\tweekDuration: weekActivities.duration,\r\n\t\t\ttodayActivities: parseFloat(\r\n\t\t\t\tparseFloat(todayActivities.overall + '').toFixed(1)\r\n\t\t\t),\r\n\t\t\ttodayDuration: todayActivities.duration\r\n\t\t};\r\n\t}\r\n\r\n\tasync getMembers(request: IGetMembersStatistics) {\r\n\t\tconst date = request.date || new Date();\r\n\t\tconst start = moment.utc(date).startOf('week').format();\r\n\t\tconst end = moment.utc(date).endOf('week').format();\r\n\t\tconst tenantId = RequestContext.currentTenantId();\r\n\r\n\t\tconst query = this.employeeRepository.createQueryBuilder();\r\n\t\tconst employees: IMembersStatistics[] = await query\r\n\t\t\t.select(`\"${query.alias}\".id`)\r\n\t\t\t.addSelect(\r\n\t\t\t\t`(\"user\".\"firstName\" || ' ' ||  \"user\".\"lastName\")`,\r\n\t\t\t\t'user_name'\r\n\t\t\t)\r\n\t\t\t.addSelect(`\"user\".\"imageUrl\"`, 'user_image_url')\r\n\t\t\t.addSelect(\r\n\t\t\t\t`${\r\n\t\t\t\t\tenvironment.database.type === 'sqlite'\r\n\t\t\t\t\t\t? 'SUM((julianday(\"timeLogs\".\"stoppedAt\") - julianday(\"timeLogs\".\"startedAt\")) * 86400)'\r\n\t\t\t\t\t\t: 'SUM(extract(epoch from (\"timeLogs\".\"stoppedAt\" - \"timeLogs\".\"startedAt\")))'\r\n\t\t\t\t}`,\r\n\t\t\t\t`duration`\r\n\t\t\t)\r\n\t\t\t.innerJoin(`${query.alias}.user`, 'user')\r\n\t\t\t.innerJoin(`${query.alias}.timeLogs`, 'timeLogs')\r\n\t\t\t.where(`\"${query.alias}\".\"organizationId\" = :organizationId`, {\r\n\t\t\t\torganizationId: request.organizationId\r\n\t\t\t})\r\n\t\t\t.andWhere(`\"${query.alias}\".\"tenantId\" = :tenantId`, { tenantId })\r\n\t\t\t.andWhere(`\"timeLogs\".\"startedAt\" BETWEEN :start AND :end`, {\r\n\t\t\t\tstart,\r\n\t\t\t\tend\r\n\t\t\t})\r\n\t\t\t.addGroupBy(`\"${query.alias}\".\"id\"`)\r\n\t\t\t.addGroupBy(`\"user\".\"id\"`)\r\n\t\t\t.orderBy('duration', 'DESC')\r\n\t\t\t.limit(5)\r\n\t\t\t.getRawMany();\r\n\r\n\t\tif (employees.length > 0) {\r\n\t\t\tlet weekTimeSlots: any = await this.timeSlotRepository\r\n\t\t\t\t.createQueryBuilder()\r\n\t\t\t\t.select('SUM(duration)', 'duration')\r\n\t\t\t\t.addSelect('AVG(overall)', 'overall')\r\n\t\t\t\t.addSelect('\"employeeId\"', 'employeeId')\r\n\t\t\t\t.where({\r\n\t\t\t\t\temployeeId: In(_.pluck(employees, 'id')),\r\n\t\t\t\t\tstartedAt: Between(start, end),\r\n\t\t\t\t\ttenantId\r\n\t\t\t\t})\r\n\t\t\t\t.groupBy('\"employeeId\"')\r\n\t\t\t\t.getRawMany();\r\n\r\n\t\t\tweekTimeSlots = _.chain(weekTimeSlots)\r\n\t\t\t\t.map((weekTimeSlot: any) => {\r\n\t\t\t\t\tif (weekTimeSlot && weekTimeSlot.overall) {\r\n\t\t\t\t\t\tweekTimeSlot.overall = parseFloat(\r\n\t\t\t\t\t\t\tweekTimeSlot.overall as string\r\n\t\t\t\t\t\t).toFixed(1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn weekTimeSlot;\r\n\t\t\t\t})\r\n\t\t\t\t.indexBy('employeeId')\r\n\t\t\t\t.value();\r\n\r\n\t\t\tlet dayTimeSlots: any = await this.timeSlotRepository\r\n\t\t\t\t.createQueryBuilder()\r\n\t\t\t\t.select('AVG(overall)', 'overall')\r\n\t\t\t\t.addSelect('SUM(duration)', 'duration')\r\n\t\t\t\t.addSelect('\"employeeId\"', 'employeeId')\r\n\t\t\t\t.where({\r\n\t\t\t\t\temployeeId: In(_.pluck(employees, 'id')),\r\n\t\t\t\t\tstartedAt: Between(\r\n\t\t\t\t\t\tmoment().startOf('day').format(),\r\n\t\t\t\t\t\tmoment().endOf('day').format()\r\n\t\t\t\t\t),\r\n\t\t\t\t\ttenantId\r\n\t\t\t\t})\r\n\t\t\t\t.groupBy('\"employeeId\"')\r\n\t\t\t\t.getRawMany();\r\n\r\n\t\t\tdayTimeSlots = _.chain(dayTimeSlots)\r\n\t\t\t\t.map((dayTimeSlot: any) => {\r\n\t\t\t\t\tif (dayTimeSlot && dayTimeSlot.overall) {\r\n\t\t\t\t\t\tdayTimeSlot.overall = parseFloat(\r\n\t\t\t\t\t\t\tdayTimeSlot.overall as string\r\n\t\t\t\t\t\t).toFixed(1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn dayTimeSlot;\r\n\t\t\t\t})\r\n\t\t\t\t.indexBy('employeeId')\r\n\t\t\t\t.value();\r\n\r\n\t\t\tfor (let index = 0; index < employees.length; index++) {\r\n\t\t\t\tconst member = employees[index];\r\n\r\n\t\t\t\tmember.weekTime = weekTimeSlots[member.id];\r\n\t\t\t\tmember.todayTime = dayTimeSlots[member.id];\r\n\r\n\t\t\t\tmember.user = {\r\n\t\t\t\t\tname: member.user_name,\r\n\t\t\t\t\timageUrl: member.user_image_url\r\n\t\t\t\t};\r\n\r\n\t\t\t\tdelete member.user_name;\r\n\t\t\t\tdelete member.user_image_url;\r\n\r\n\t\t\t\tconst weekHoursQuery = this.employeeRepository.createQueryBuilder();\r\n\t\t\t\tmember.weekHours = await weekHoursQuery\r\n\t\t\t\t\t.select(\r\n\t\t\t\t\t\t`${\r\n\t\t\t\t\t\t\tenvironment.database.type === 'sqlite'\r\n\t\t\t\t\t\t\t\t? 'SUM((julianday(\"timeLogs\".\"stoppedAt\") - julianday(\"timeLogs\".\"startedAt\")) * 86400)'\r\n\t\t\t\t\t\t\t\t: 'SUM(extract(epoch from (\"timeLogs\".\"stoppedAt\" - \"timeLogs\".\"startedAt\")))'\r\n\t\t\t\t\t\t}`,\r\n\t\t\t\t\t\t`duration`\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.addSelect(\r\n\t\t\t\t\t\t`${\r\n\t\t\t\t\t\t\tenvironment.database.type === 'sqlite'\r\n\t\t\t\t\t\t\t\t? `(strftime('%w', timeLogs.startedAt))`\r\n\t\t\t\t\t\t\t\t: 'EXTRACT(DOW FROM \"timeLogs\".\"startedAt\")'\r\n\t\t\t\t\t\t}`,\r\n\t\t\t\t\t\t'day'\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.where({ id: member.id })\r\n\t\t\t\t\t.andWhere(\r\n\t\t\t\t\t\t`\"timeLogs\".\"startedAt\" BETWEEN :start AND :end`,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tstart,\r\n\t\t\t\t\t\t\tend\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.andWhere(\r\n\t\t\t\t\t\t`\"${weekHoursQuery.alias}\".\"tenantId\" = :tenantId`,\r\n\t\t\t\t\t\t{ tenantId }\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.innerJoin(`${weekHoursQuery.alias}.timeLogs`, 'timeLogs')\r\n\t\t\t\t\t.addGroupBy(\r\n\t\t\t\t\t\t`${\r\n\t\t\t\t\t\t\tenvironment.database.type === 'sqlite'\r\n\t\t\t\t\t\t\t\t? `(strftime('%w', timeLogs.startedAt))`\r\n\t\t\t\t\t\t\t\t: 'EXTRACT(DOW FROM \"timeLogs\".\"startedAt\")'\r\n\t\t\t\t\t\t}`\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.getRawMany();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn employees;\r\n\t}\r\n\r\n\tasync getProjects(request: IGetProjectsStatistics) {\r\n\t\tconst query = this.organizationProjectsRepository.createQueryBuilder();\r\n\t\tconst date = request.date || new Date();\r\n\t\tconst start = moment.utc(date).startOf('week').format();\r\n\t\tconst end = moment.utc(date).endOf('week').format();\r\n\t\tconst user = RequestContext.currentUser();\r\n\t\tconst tenantId = user.tenantId;\r\n\r\n\t\tquery\r\n\t\t\t.select(`\"${query.alias}\".*`)\r\n\t\t\t.addSelect(\r\n\t\t\t\t`${\r\n\t\t\t\t\tenvironment.database.type === 'sqlite'\r\n\t\t\t\t\t\t? 'SUM((julianday(\"timeLogs\".\"stoppedAt\") - julianday(\"timeLogs\".\"startedAt\")) * 86400)'\r\n\t\t\t\t\t\t: 'SUM(extract(epoch from (\"timeLogs\".\"stoppedAt\" - \"timeLogs\".\"startedAt\")))'\r\n\t\t\t\t}`,\r\n\t\t\t\t`duration`\r\n\t\t\t)\r\n\t\t\t.innerJoin(`${query.alias}.timeLogs`, 'timeLogs');\r\n\r\n\t\tif (\r\n\t\t\t(user.employeeId && request.onlyMe) ||\r\n\t\t\t!RequestContext.hasPermission(\r\n\t\t\t\tPermissionsEnum.CHANGE_SELECTED_EMPLOYEE\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\tconst employeeId = user.employeeId;\r\n\t\t\tquery.leftJoin(`${query.alias}.members`, 'members');\r\n\t\t\tquery.where(`members.id = :employeeId`, { employeeId });\r\n\t\t} else {\r\n\t\t\tquery.where(`\"${query.alias}\".\"organizationId\" = :organizationId`, {\r\n\t\t\t\torganizationId: request.organizationId\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tquery\r\n\t\t\t.andWhere(`\"timeLogs\".\"startedAt\" BETWEEN :start AND :end`, {\r\n\t\t\t\tstart,\r\n\t\t\t\tend\r\n\t\t\t})\r\n\t\t\t.andWhere(`\"${query.alias}\".\"tenantId\" = :tenantId`, {\r\n\t\t\t\ttenantId\r\n\t\t\t})\r\n\t\t\t.orderBy('duration', 'DESC')\r\n\t\t\t.addGroupBy(`\"${query.alias}\".\"id\"`)\r\n\t\t\t.limit(5);\r\n\r\n\t\tlet projects: IProjectsStatistics[] = await query.getRawMany();\r\n\r\n\t\tconst totalDurationQuery = this.organizationProjectsRepository.createQueryBuilder();\r\n\t\ttotalDurationQuery\r\n\t\t\t.select(\r\n\t\t\t\t`${\r\n\t\t\t\t\tenvironment.database.type === 'sqlite'\r\n\t\t\t\t\t\t? 'SUM((julianday(\"timeLogs\".\"stoppedAt\") - julianday(\"timeLogs\".\"startedAt\")) * 86400)'\r\n\t\t\t\t\t\t: 'SUM(extract(epoch from (\"timeLogs\".\"stoppedAt\" - \"timeLogs\".\"startedAt\")))'\r\n\t\t\t\t}`,\r\n\t\t\t\t`duration`\r\n\t\t\t)\r\n\t\t\t.innerJoin(`${query.alias}.timeLogs`, 'timeLogs')\r\n\t\t\t.where(\r\n\t\t\t\t`\"${totalDurationQuery.alias}\".\"organizationId\" = :organizationId`,\r\n\t\t\t\t{\r\n\t\t\t\t\torganizationId: request.organizationId\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\t.andWhere(`\"${query.alias}\".\"tenantId\" = :tenantId`, {\r\n\t\t\t\ttenantId\r\n\t\t\t});\r\n\r\n\t\tif (\r\n\t\t\t(user.employeeId && request.onlyMe) ||\r\n\t\t\t!RequestContext.hasPermission(\r\n\t\t\t\tPermissionsEnum.CHANGE_SELECTED_EMPLOYEE\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\tconst employeeId = user.employeeId;\r\n\t\t\ttotalDurationQuery.leftJoin(\r\n\t\t\t\t`${totalDurationQuery.alias}.members`,\r\n\t\t\t\t'members'\r\n\t\t\t);\r\n\t\t\ttotalDurationQuery.where(`members.id = :employeeId`, {\r\n\t\t\t\temployeeId\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\ttotalDurationQuery.where(\r\n\t\t\t\t`\"${totalDurationQuery.alias}\".\"organizationId\" = :organizationId`,\r\n\t\t\t\t{\r\n\t\t\t\t\torganizationId: request.organizationId\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\ttotalDurationQuery.andWhere(\r\n\t\t\t`\"timeLogs\".\"startedAt\" BETWEEN :start AND :end`,\r\n\t\t\t{\r\n\t\t\t\tstart,\r\n\t\t\t\tend\r\n\t\t\t}\r\n\t\t);\r\n\t\tconst totalDueration = await totalDurationQuery.getRawOne();\r\n\r\n\t\tprojects = projects.map((project) => {\r\n\t\t\tproject.durationPercentage =\r\n\t\t\t\t(project.duration * 100) / totalDueration.duration;\r\n\t\t\treturn project;\r\n\t\t});\r\n\r\n\t\treturn projects;\r\n\t}\r\n\r\n\tasync getTasks(request: IGetTasksStatistics) {\r\n\t\tconst date = request.date || new Date();\r\n\t\tconst start = moment.utc(date).startOf('week').format();\r\n\t\tconst end = moment.utc(date).endOf('week').format();\r\n\t\tconst user = RequestContext.currentUser();\r\n\t\tconst tenantId = user.tenantId;\r\n\t\t/*\r\n\t\t *  Get employees id of the orginization or get current employe id\r\n\t\t */\r\n\t\tlet employeeIds = [];\r\n\t\tif (\r\n\t\t\t(user.employeeId && request.onlyMe) ||\r\n\t\t\t!RequestContext.hasPermission(\r\n\t\t\t\tPermissionsEnum.CHANGE_SELECTED_EMPLOYEE\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\temployeeIds = [user.employeeId];\r\n\t\t} else {\r\n\t\t\temployeeIds = await this.getEmployeesIds(\r\n\t\t\t\trequest.organizationId,\r\n\t\t\t\ttenantId\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tif (employeeIds.length > 0) {\r\n\t\t\tconst query = this.taskRepository.createQueryBuilder();\r\n\t\t\tlet tasks = await query\r\n\t\t\t\t.innerJoin(`${query.alias}.project`, 'project')\r\n\t\t\t\t.select(`\"${query.alias}\".*`)\r\n\t\t\t\t.addSelect(\r\n\t\t\t\t\t`${\r\n\t\t\t\t\t\tenvironment.database.type === 'sqlite'\r\n\t\t\t\t\t\t\t? 'SUM((julianday(\"timeLogs\".\"stoppedAt\") - julianday(\"timeLogs\".\"startedAt\")) * 86400)'\r\n\t\t\t\t\t\t\t: 'SUM(extract(epoch from (\"timeLogs\".\"stoppedAt\" - \"timeLogs\".\"startedAt\")))'\r\n\t\t\t\t\t}`,\r\n\t\t\t\t\t`duration`\r\n\t\t\t\t)\r\n\t\t\t\t.innerJoin(`${query.alias}.timeLogs`, 'timeLogs')\r\n\t\t\t\t.andWhere(`\"timeLogs\".\"employeeId\" IN(:...employeeId)`, {\r\n\t\t\t\t\temployeeId: employeeIds\r\n\t\t\t\t})\r\n\t\t\t\t.andWhere(`\"timeLogs\".\"startedAt\" BETWEEN :start AND :end`, {\r\n\t\t\t\t\tstart,\r\n\t\t\t\t\tend\r\n\t\t\t\t})\r\n\t\t\t\t.andWhere(`\"${query.alias}\".\"tenantId\" = :tenantId`, {\r\n\t\t\t\t\ttenantId\r\n\t\t\t\t})\r\n\t\t\t\t.orderBy('duration', 'DESC')\r\n\t\t\t\t.addGroupBy(`\"${query.alias}\".\"id\"`)\r\n\t\t\t\t.limit(5)\r\n\t\t\t\t.getRawMany();\r\n\r\n\t\t\tconst totalDurationQuery = this.taskRepository.createQueryBuilder();\r\n\t\t\tconst totalDuration = await totalDurationQuery\r\n\t\t\t\t.select(\r\n\t\t\t\t\t`${\r\n\t\t\t\t\t\tenvironment.database.type === 'sqlite'\r\n\t\t\t\t\t\t\t? 'SUM((julianday(\"timeLogs\".\"stoppedAt\") - julianday(\"timeLogs\".\"startedAt\")) * 86400)'\r\n\t\t\t\t\t\t\t: 'SUM(extract(epoch from (\"timeLogs\".\"stoppedAt\" - \"timeLogs\".\"startedAt\")))'\r\n\t\t\t\t\t}`,\r\n\t\t\t\t\t`duration`\r\n\t\t\t\t)\r\n\t\t\t\t.innerJoin(`${totalDurationQuery.alias}.timeLogs`, 'timeLogs')\r\n\t\t\t\t.andWhere(`\"timeLogs\".\"employeeId\" IN(:...employeeId)`, {\r\n\t\t\t\t\temployeeId: employeeIds\r\n\t\t\t\t})\r\n\t\t\t\t.andWhere(`\"timeLogs\".\"startedAt\" BETWEEN :start AND :end`, {\r\n\t\t\t\t\tstart,\r\n\t\t\t\t\tend\r\n\t\t\t\t})\r\n\t\t\t\t.getRawOne();\r\n\t\t\ttasks = tasks.map((task) => {\r\n\t\t\t\ttask.durationPercentage =\r\n\t\t\t\t\t(task.duration * 100) / totalDuration.duration;\r\n\t\t\t\treturn task;\r\n\t\t\t});\r\n\r\n\t\t\treturn tasks;\r\n\t\t} else {\r\n\t\t\treturn [];\r\n\t\t}\r\n\t}\r\n\r\n\tasync manualTimes(request: IGetManualTimesStatistics) {\r\n\t\tconst date = request.date || new Date();\r\n\t\tconst start = moment.utc(date).startOf('week').format();\r\n\t\tconst end = moment.utc(date).endOf('week').format();\r\n\t\tconst user = RequestContext.currentUser();\r\n\t\tconst tenantId = user.tenantId;\r\n\t\t/*\r\n\t\t *  Get employees id of the orginization or get current employe id\r\n\t\t */\r\n\t\tlet employeeIds = [];\r\n\t\tif (\r\n\t\t\t(user.employeeId && request.onlyMe) ||\r\n\t\t\t!RequestContext.hasPermission(\r\n\t\t\t\tPermissionsEnum.CHANGE_SELECTED_EMPLOYEE\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\temployeeIds = [user.employeeId];\r\n\t\t} else {\r\n\t\t\temployeeIds = await this.getEmployeesIds(\r\n\t\t\t\trequest.organizationId,\r\n\t\t\t\ttenantId\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tif (employeeIds.length > 0) {\r\n\t\t\tconst timeLogs = await this.timeLogRepository.find({\r\n\t\t\t\trelations: ['project', 'employee', 'employee.user'],\r\n\t\t\t\twhere: {\r\n\t\t\t\t\temployeeId: In(employeeIds),\r\n\t\t\t\t\tlogType: TimeLogType.MANUAL,\r\n\t\t\t\t\tstartedAt: Between(start, end),\r\n\t\t\t\t\ttenantId\r\n\t\t\t\t},\r\n\t\t\t\ttake: 5,\r\n\t\t\t\torder: {\r\n\t\t\t\t\tstartedAt: 'DESC'\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tconst mapedTimeLogs: IManualTimesStatistics[] = timeLogs.map(\r\n\t\t\t\t(timeLog) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid: timeLog.id,\r\n\t\t\t\t\t\tstartedAt: timeLog.startedAt,\r\n\t\t\t\t\t\tduration: timeLog.duration,\r\n\t\t\t\t\t\tuser: _.pick(timeLog.employee.user, [\r\n\t\t\t\t\t\t\t'name',\r\n\t\t\t\t\t\t\t'imageUrl'\r\n\t\t\t\t\t\t]),\r\n\t\t\t\t\t\tproject: _.pick(timeLog.employee.user, ['name'])\r\n\t\t\t\t\t} as IManualTimesStatistics;\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\treturn mapedTimeLogs;\r\n\t\t} else {\r\n\t\t\treturn [];\r\n\t\t}\r\n\t}\r\n\r\n\tasync getActivites(request: IGetActivitiesStatistics) {\r\n\t\tconst date = request.date || new Date();\r\n\t\tconst start = moment.utc(date).startOf('week').format();\r\n\t\tconst end = moment.utc(date).endOf('week').format();\r\n\t\tconst user = RequestContext.currentUser();\r\n\t\tconst tenantId = user.tenantId;\r\n\r\n\t\t/*\r\n\t\t *  Get employees id of the orginization or get current employe id\r\n\t\t */\r\n\t\tlet employeeIds = [];\r\n\t\tif (\r\n\t\t\t(user.employeeId && request.onlyMe) ||\r\n\t\t\t!RequestContext.hasPermission(\r\n\t\t\t\tPermissionsEnum.CHANGE_SELECTED_EMPLOYEE\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\temployeeIds = [user.employeeId];\r\n\t\t} else {\r\n\t\t\temployeeIds = await this.getEmployeesIds(\r\n\t\t\t\trequest.organizationId,\r\n\t\t\t\ttenantId\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tif (employeeIds.length > 0) {\r\n\t\t\tconst query = this.activityRepository.createQueryBuilder();\r\n\t\t\tquery\r\n\t\t\t\t.select(`COUNT(\"${query.alias}\".\"id\")`, `sessions`)\r\n\t\t\t\t.addSelect(`SUM(\"${query.alias}\".\"duration\")`, `duration`)\r\n\t\t\t\t.addSelect(`\"${query.alias}\".\"title\"`, `title`)\r\n\t\t\t\t.addGroupBy(`\"${query.alias}\".\"title\"`)\r\n\t\t\t\t.andWhere(`\"${query.alias}\".\"date\" BETWEEN :start AND :end`, {\r\n\t\t\t\t\tstart,\r\n\t\t\t\t\tend\r\n\t\t\t\t})\r\n\t\t\t\t.andWhere(`\"${query.alias}\".\"employeeId\" IN(:...employeeId)`, {\r\n\t\t\t\t\temployeeId: employeeIds\r\n\t\t\t\t})\r\n\t\t\t\t.andWhere(`\"${query.alias}\".\"tenantId\" = :tenantId`, {\r\n\t\t\t\t\ttenantId\r\n\t\t\t\t})\r\n\t\t\t\t.orderBy(`\"duration\"`, 'DESC')\r\n\t\t\t\t.limit(5);\r\n\r\n\t\t\tlet activities: IActivitiesStatistics[] = await query.getRawMany();\r\n\r\n\t\t\t/*\r\n\t\t\t * Fetch total duration of the week for calculate duration percentage\r\n\t\t\t */\r\n\t\t\tconst totalDurationQuery = this.activityRepository.createQueryBuilder();\r\n\t\t\tconst totalDueration = await totalDurationQuery\r\n\t\t\t\t.select(\r\n\t\t\t\t\t`SUM(\"${totalDurationQuery.alias}\".\"duration\")`,\r\n\t\t\t\t\t`duration`\r\n\t\t\t\t)\r\n\t\t\t\t.andWhere(\r\n\t\t\t\t\t`\"${totalDurationQuery.alias}\".\"employeeId\" IN(:...employeeId)`,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\temployeeId: employeeIds\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t\t.andWhere(`\"${query.alias}\".\"date\" BETWEEN :start AND :end`, {\r\n\t\t\t\t\tstart,\r\n\t\t\t\t\tend\r\n\t\t\t\t})\r\n\t\t\t\t.andWhere(`\"${query.alias}\".\"tenantId\" = :tenantId`, {\r\n\t\t\t\t\ttenantId\r\n\t\t\t\t})\r\n\t\t\t\t.getRawOne();\r\n\r\n\t\t\tactivities = activities.map((activity) => {\r\n\t\t\t\tactivity.durationPercentage =\r\n\t\t\t\t\t(activity.duration * 100) / totalDueration.duration;\r\n\t\t\t\treturn activity;\r\n\t\t\t});\r\n\r\n\t\t\treturn activities;\r\n\t\t} else {\r\n\t\t\treturn [];\r\n\t\t}\r\n\t}\r\n\r\n\tasync getEmployeeTimeSlots(request: IGetTimeSlotStatistics) {\r\n\t\tlet employees: ITimeSlotStatistics[] = [];\r\n\r\n\t\tconst date = request.date || new Date();\r\n\t\tconst start = moment.utc(date).startOf('week').format();\r\n\t\tconst end = moment.utc(date).endOf('week').format();\r\n\t\tconst user = RequestContext.currentUser();\r\n\t\tconst tenantId = user.tenantId;\r\n\r\n\t\tconst query = this.employeeRepository.createQueryBuilder();\r\n\t\tquery\r\n\t\t\t.select(`\"${query.alias}\".*`)\r\n\t\t\t.addSelect('MAX(timeLogs.startedAt)', 'startedAt')\r\n\t\t\t.addSelect(\r\n\t\t\t\t`(\"user\".\"firstName\" || ' ' ||  \"user\".\"lastName\")`,\r\n\t\t\t\t'user_name'\r\n\t\t\t)\r\n\t\t\t.addSelect(`\"user\".\"imageUrl\"`, 'user_image_url')\r\n\t\t\t.innerJoin(`${query.alias}.timeLogs`, 'timeLogs')\r\n\t\t\t.innerJoin(`${query.alias}.user`, 'user')\r\n\t\t\t.andWhere(`\"timeLogs\".\"startedAt\" BETWEEN :start AND :end`, {\r\n\t\t\t\tstart,\r\n\t\t\t\tend\r\n\t\t\t})\r\n\t\t\t.groupBy(`\"${query.alias}\".id`)\r\n\t\t\t.addGroupBy('user.id')\r\n\t\t\t.orderBy('\"startedAt\"', 'DESC')\r\n\t\t\t.limit(3);\r\n\r\n\t\tif (\r\n\t\t\t(user.employeeId && request.onlyMe) ||\r\n\t\t\t!RequestContext.hasPermission(\r\n\t\t\t\tPermissionsEnum.CHANGE_SELECTED_EMPLOYEE\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\tconst employeeId = user.employeeId;\r\n\t\t\tquery.andWhere(`\"${query.alias}\".id = :employeeId`, { employeeId });\r\n\t\t} else {\r\n\t\t\tquery.andWhere(\r\n\t\t\t\t`\"${query.alias}\".\"organizationId\" = :organizationId`,\r\n\t\t\t\t{\r\n\t\t\t\t\torganizationId: request.organizationId\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\temployees = await query\r\n\t\t\t.andWhere(`\"${query.alias}\".\"tenantId\" = :tenantId`, {\r\n\t\t\t\ttenantId\r\n\t\t\t})\r\n\t\t\t.getRawMany();\r\n\r\n\t\tfor (let index = 0; index < employees.length; index++) {\r\n\t\t\tconst employee = employees[index];\r\n\t\t\temployee.user = {\r\n\t\t\t\timageUrl: employee.user_image_url,\r\n\t\t\t\tname: employee.user_name\r\n\t\t\t};\r\n\t\t\tdelete employee.user_image_url;\r\n\t\t\tdelete employee.user_name;\r\n\r\n\t\t\temployee.timeSlots = await this.timeSlotRepository.find({\r\n\t\t\t\trelations: ['screenshots'],\r\n\t\t\t\twhere: {\r\n\t\t\t\t\temployeeId: employee.id,\r\n\t\t\t\t\ttenantId\r\n\t\t\t\t},\r\n\t\t\t\ttake: 3,\r\n\t\t\t\torder: {\r\n\t\t\t\t\tstartedAt: 'DESC'\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn employees;\r\n\t}\r\n\r\n\tprivate async getEmployeesIds(organizationId: string, tenantId: string) {\r\n\t\tconst employees = await this.employeeRepository\r\n\t\t\t.createQueryBuilder()\r\n\t\t\t.select(['id'])\r\n\t\t\t.andWhere('\"organizationId\" = :organizationId', { organizationId })\r\n\t\t\t.andWhere('\"tenantId\" = :tenantId', { tenantId })\r\n\t\t\t.getRawMany();\r\n\t\treturn _.pluck(employees, 'id');\r\n\t}\r\n}\r\n","import {\r\n\tEntity,\r\n\tColumn,\r\n\tRelationId,\r\n\tManyToOne,\r\n\tJoinColumn,\r\n\tAfterLoad,\r\n\tManyToMany,\r\n\tJoinTable\r\n} from 'typeorm';\r\nimport {\r\n\tITimeLog,\r\n\tTimeLogType,\r\n\tTimeLogSourceEnum,\r\n\tITimesheet,\r\n\tIEmployee,\r\n\tITask,\r\n\tIOrganizationProject,\r\n\tIOrganizationContact,\r\n\tITimeSlot\r\n} from '@gauzy/models';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsString, IsBoolean, IsDateString, IsEnum } from 'class-validator';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { Timesheet } from './timesheet.entity';\r\nimport { OrganizationProject } from '../organization-projects/organization-projects.entity';\r\nimport { OrganizationContact } from '../organization-contact/organization-contact.entity';\r\nimport { Task } from '../tasks/task.entity';\r\nimport * as moment from 'moment';\r\nimport { TimeSlot } from './time-slot.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('time_log')\r\nexport class TimeLog extends TenantOrganizationBase implements ITimeLog {\r\n\t@ApiProperty({ type: Employee })\r\n\t@ManyToOne(() => Employee, { nullable: true })\r\n\t@JoinColumn()\r\n\temployee: IEmployee;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@RelationId((timeLog: TimeLog) => timeLog.employee)\r\n\t@Column()\r\n\treadonly employeeId: string;\r\n\r\n\t@ApiProperty({ type: Timesheet })\r\n\t@ManyToOne(() => Timesheet, { nullable: true, onDelete: 'CASCADE' })\r\n\t@JoinColumn()\r\n\ttimesheet?: ITimesheet;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@RelationId((timeLog: TimeLog) => timeLog.timesheet)\r\n\t@Column({ nullable: true })\r\n\treadonly timesheetId?: string;\r\n\r\n\t@ManyToMany(() => TimeSlot, (timeLogs) => timeLogs.timeLogs, {\r\n\t\tcascade: true\r\n\t})\r\n\t@JoinTable({\r\n\t\tname: 'time_slot_time_logs'\r\n\t})\r\n\ttimeSlots?: ITimeSlot[];\r\n\r\n\t@ApiProperty({ type: OrganizationProject })\r\n\t@ManyToOne(() => OrganizationProject, { nullable: true })\r\n\t@JoinColumn()\r\n\tproject?: IOrganizationProject;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@RelationId((timeLog: TimeLog) => timeLog.project)\r\n\t@Column({ nullable: true })\r\n\treadonly projectId?: string;\r\n\r\n\t@ApiProperty({ type: Task })\r\n\t@ManyToOne(() => Task, { nullable: true })\r\n\t@JoinColumn()\r\n\ttask?: ITask;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@RelationId((timeLog: TimeLog) => timeLog.task)\r\n\t@Column({ nullable: true })\r\n\treadonly taskId?: string;\r\n\r\n\t@ApiProperty({ type: OrganizationContact })\r\n\t@ManyToOne(() => OrganizationContact, { nullable: true })\r\n\t@JoinColumn()\r\n\torganizationContact?: IOrganizationContact;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@RelationId((timeLog: TimeLog) => timeLog.organizationContact)\r\n\t@Column({ nullable: true })\r\n\treadonly organizationContactId?: string;\r\n\r\n\t@ApiProperty({ type: 'timestamptz' })\r\n\t@IsDateString()\r\n\t@Column({ nullable: true, default: null })\r\n\tstartedAt?: Date;\r\n\r\n\t@ApiProperty({ type: 'timestamptz' })\r\n\t@IsDateString()\r\n\t@Column({ nullable: true, default: null })\r\n\tstoppedAt?: Date;\r\n\r\n\t@ApiProperty({ type: String, enum: TimeLogType })\r\n\t@IsEnum(TimeLogType)\r\n\t@IsString()\r\n\t@Column({ default: TimeLogType.TRACKED })\r\n\tlogType: string;\r\n\r\n\t@ApiProperty({ type: String, enum: TimeLogSourceEnum })\r\n\t@IsEnum(TimeLogSourceEnum)\r\n\t@IsString()\r\n\t@Column({ default: TimeLogSourceEnum.BROWSER })\r\n\tsource?: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsBoolean()\r\n\t@Column({ default: null, nullable: true })\r\n\tdescription?: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsBoolean()\r\n\t@Column({ default: null, nullable: true })\r\n\treason?: string;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@IsBoolean()\r\n\t@Column({ default: false })\r\n\tisBillable: boolean;\r\n\r\n\t@ApiProperty({ type: 'timestamptz' })\r\n\t@IsDateString()\r\n\t@Column({ nullable: true, default: null })\r\n\tdeletedAt?: Date;\r\n\r\n\tduration: number;\r\n\r\n\t@AfterLoad()\r\n\tgetDuration?() {\r\n\t\tconst end = this.stoppedAt ? this.stoppedAt : new Date();\r\n\t\tthis.duration = moment(end).diff(moment(this.startedAt), 'seconds');\r\n\t}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { TimeLog } from '../../time-log.entity';\r\nimport { IDateRange } from '@gauzy/models';\r\n\r\nexport class DeleteTimeSpanCommand implements ICommand {\r\n\tstatic readonly type = '[TimeLog] delete time span';\r\n\r\n\tconstructor(\r\n\t\tpublic readonly newTime: IDateRange,\r\n\t\tpublic readonly timeLog: TimeLog\r\n\t) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { IGetTimeLogConflictInput } from '@gauzy/models';\r\n\r\nexport class IGetConflictTimeLogCommand implements ICommand {\r\n\tstatic readonly type = '[TimeLog] get conflict';\r\n\r\n\tconstructor(public readonly input: IGetTimeLogConflictInput) {}\r\n}\r\n","import { ITimeLog } from '@gauzy/models';\r\nimport { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class GetTimeLogGroupByClientCommand implements ICommand {\r\n\tstatic readonly type = '[TimeLog] group by client';\r\n\r\n\tconstructor(public readonly timeLogs: ITimeLog[]) {}\r\n}\r\n","import { ITimeLog } from '@gauzy/models';\r\nimport { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class GetTimeLogGroupByDateCommand implements ICommand {\r\n\tstatic readonly type = '[TimeLog] group by date';\r\n\r\n\tconstructor(public readonly timeLogs: ITimeLog[]) {}\r\n}\r\n","import { ITimeLog } from '@gauzy/models';\r\nimport { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class GetTimeLogGroupByEmployeeCommand implements ICommand {\r\n\tstatic readonly type = '[TimeLog] group by employee';\r\n\r\n\tconstructor(public readonly timeLogs: ITimeLog[]) {}\r\n}\r\n","import { ITimeLog } from '@gauzy/models';\r\nimport { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class GetTimeLogGroupByProjectCommand implements ICommand {\r\n\tstatic readonly type = '[TimeLog] group by project';\r\n\r\n\tconstructor(public readonly timeLogs: ITimeLog[]) {}\r\n}\r\n","import { ICommandHandler, CommandBus, CommandHandler } from '@nestjs/cqrs';\r\nimport { TimeLog } from '../../../time-log.entity';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { TimeSlotService } from '../../../time-slot/time-slot.service';\r\nimport * as _ from 'underscore';\r\nimport { DeleteTimeSpanCommand } from '../delete-time-span.command';\r\nimport { TimeLogUpdateCommand } from '../time-log-update.command';\r\nimport { TimeLogDeleteCommand } from '../time-log-delete.command';\r\nimport { moment } from '../../../../core/moment-extend';\r\n\r\n@CommandHandler(DeleteTimeSpanCommand)\r\nexport class DeleteTimeSpanHandler\r\n\timplements ICommandHandler<DeleteTimeSpanCommand> {\r\n\tconstructor(\r\n\t\t@InjectRepository(TimeLog)\r\n\t\tprivate readonly timeLogRepository: Repository<TimeLog>,\r\n\t\tprivate readonly commandBus: CommandBus,\r\n\t\tprivate readonly timeSlotService: TimeSlotService\r\n\t) {}\r\n\r\n\tpublic async execute(command: DeleteTimeSpanCommand) {\r\n\t\tconst { newTime, timeLog } = command;\r\n\r\n\t\tconst { start, end } = newTime;\r\n\r\n\t\tconst newTimeRange = moment.range(start, end);\r\n\t\tconst dbTimeRange = moment.range(timeLog.startedAt, timeLog.stoppedAt);\r\n\r\n\t\t/* Check is overlaping time or not.\r\n\t\t */\r\n\t\tif (!newTimeRange.overlaps(dbTimeRange, { adjacent: false })) {\r\n\t\t\tconsole.log('not overlaping', newTimeRange, dbTimeRange);\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\tmoment(timeLog.startedAt).isBetween(\r\n\t\t\t\tmoment(start),\r\n\t\t\t\tmoment(end),\r\n\t\t\t\tnull,\r\n\t\t\t\t'[]'\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\tif (\r\n\t\t\t\tmoment(timeLog.stoppedAt).isBetween(\r\n\t\t\t\t\tmoment(start),\r\n\t\t\t\t\tmoment(end),\r\n\t\t\t\t\tnull,\r\n\t\t\t\t\t'[]'\r\n\t\t\t\t)\r\n\t\t\t) {\r\n\t\t\t\t/* Delete time log because overlap entire time.\r\n\t\t\t\t * New Start time\t\t\t\t\t\t\tNew Stop time\r\n\t\t\t\t *  |----------------------------------------------|\r\n\t\t\t\t * \t\tDB Start Time\t\t\t\tDB Stop Time\r\n\t\t\t\t *  \t\t\t|----------------------------|\r\n\t\t\t\t */\r\n\t\t\t\tconsole.log('Delete time log because overlap entire time');\r\n\r\n\t\t\t\tawait this.commandBus.execute(\r\n\t\t\t\t\tnew TimeLogDeleteCommand(timeLog, true)\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\t/* Update start time\r\n\t\t\t\t * New Start time\t\t\t\t\t\t\tNew Stop time\r\n\t\t\t\t *  |----------------------------------------------|\r\n\t\t\t\t * \t\t\t\t\t\tDB Start Time\t\t\t\t\t\t\tDB Stop Time\r\n\t\t\t\t *  \t\t\t\t\t\t\t|---------------------------------------|\r\n\t\t\t\t */\r\n\t\t\t\tconsole.log('Update start time');\r\n\t\t\t\tconst reamingDueration = moment(timeLog.stoppedAt).diff(\r\n\t\t\t\t\tmoment(end),\r\n\t\t\t\t\t'seconds'\r\n\t\t\t\t);\r\n\t\t\t\tif (reamingDueration > 0) {\r\n\t\t\t\t\tawait this.commandBus.execute(\r\n\t\t\t\t\t\tnew TimeLogUpdateCommand(\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tstartedAt: end\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\ttimeLog\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t/* Delete if reaming dueration 0 seconds */\r\n\t\t\t\t\tawait this.commandBus.execute(\r\n\t\t\t\t\t\tnew TimeLogDeleteCommand(timeLog, true)\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (\r\n\t\t\t\tmoment(timeLog.stoppedAt).isBetween(\r\n\t\t\t\t\tmoment(start),\r\n\t\t\t\t\tmoment(end),\r\n\t\t\t\t\tnull,\r\n\t\t\t\t\t'[]'\r\n\t\t\t\t)\r\n\t\t\t) {\r\n\t\t\t\t/* Update stopped time\r\n\t\t\t\t * \t\t\tNew Start time\t\t\t\t\t\t\tNew Stop time\r\n\t\t\t\t *  \t\t\t|----------------------------------------------|\r\n\t\t\t\t * DB Start Time\t\t\tDB Stop Time\r\n\t\t\t\t *  \t|-----------------------|\r\n\t\t\t\t */\r\n\t\t\t\tconsole.log('Update stopped time');\r\n\t\t\t\tconst reamingDueration = moment(end).diff(\r\n\t\t\t\t\tmoment(timeLog.startedAt),\r\n\t\t\t\t\t'seconds'\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (reamingDueration > 0) {\r\n\t\t\t\t\tawait this.commandBus.execute(\r\n\t\t\t\t\t\tnew TimeLogUpdateCommand(\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tstoppedAt: start\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\ttimeLog\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t/* Delete if reaming dueration 0 seconds */\r\n\t\t\t\t\tawait this.commandBus.execute(\r\n\t\t\t\t\t\tnew TimeLogDeleteCommand(timeLog)\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t/* Split database time in two entries.\r\n\t\t\t\t * \t\tNew Start time (start)\t\t\tNew Stop time (end)\r\n\t\t\t\t *  \t\t\t|----------------------------|\r\n\t\t\t\t * DB Start Time (startedAt)\t\t\t\t\tDB Stop Time (stoppedAt)\r\n\t\t\t\t *  |--------------------------------------------------|\r\n\t\t\t\t */\r\n\t\t\t\tconsole.log('Split database time in two entries');\r\n\t\t\t\tconst reamingDueration = moment(start).diff(\r\n\t\t\t\t\tmoment(timeLog.startedAt),\r\n\t\t\t\t\t'seconds'\r\n\t\t\t\t);\r\n\t\t\t\tconst timeLogClone: TimeLog = _.omit(timeLog, [\r\n\t\t\t\t\t'createdAt',\r\n\t\t\t\t\t'updatedAt',\r\n\t\t\t\t\t'id'\r\n\t\t\t\t]);\r\n\r\n\t\t\t\tif (reamingDueration > 0) {\r\n\t\t\t\t\ttimeLog.stoppedAt = start;\r\n\r\n\t\t\t\t\ttimeLog.timeSlots = await this.timeSlotService.getTimeSlots(\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tstartDate: timeLog.startedAt,\r\n\t\t\t\t\t\t\tendDate: moment(timeLog.stoppedAt)\r\n\t\t\t\t\t\t\t\t.subtract(1, 'second')\r\n\t\t\t\t\t\t\t\t.toDate()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tawait this.timeLogRepository.save(timeLog);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t/* Delete if reaming dueration 0 seconds */\r\n\t\t\t\t\tawait this.commandBus.execute(\r\n\t\t\t\t\t\tnew TimeLogDeleteCommand(timeLog, true)\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.timeSlotService.rangeDelete(\r\n\t\t\t\t\ttimeLog.employeeId,\r\n\t\t\t\t\tstart,\r\n\t\t\t\t\tend\r\n\t\t\t\t);\r\n\r\n\t\t\t\tconst newLog = timeLogClone;\r\n\t\t\t\tnewLog.startedAt = end;\r\n\r\n\t\t\t\t// const range = moment.range(newLog.startedAt, newLog.stoppedAt)\r\n\t\t\t\t// console.log(range, Array.from(range.by('minutes', { step: 10, excludeEnd: true })).map(m => m.format('YYYY-MM-DD HH:mm:ss')));\r\n\r\n\t\t\t\tnewLog.timeSlots = await this.timeSlotService.getTimeSlots({\r\n\t\t\t\t\tstartDate: newLog.startedAt,\r\n\t\t\t\t\tendDate: moment(newLog.stoppedAt)\r\n\t\t\t\t\t\t.subtract(1, 'second')\r\n\t\t\t\t\t\t.toDate()\r\n\t\t\t\t});\r\n\r\n\t\t\t\tconst newLogReamingDueration = moment(newLog.stoppedAt).diff(\r\n\t\t\t\t\tmoment(newLog.startedAt),\r\n\t\t\t\t\t'seconds'\r\n\t\t\t\t);\r\n\r\n\t\t\t\t/* Insert if reaming dueration is more 0 seconds */\r\n\t\t\t\tif (newLogReamingDueration > 0) {\r\n\t\t\t\t\tawait this.timeLogRepository.save(newLog);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n}\r\n","import { ICommandHandler, CommandHandler } from '@nestjs/cqrs';\r\nimport { TimeLog } from '../../../time-log.entity';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport * as moment from 'moment';\r\nimport { IGetConflictTimeLogCommand } from '../get-conflict-time-log.command';\r\nimport { environment as env } from '@env-api/environment';\r\n\r\n@CommandHandler(IGetConflictTimeLogCommand)\r\nexport class GetConflictTimeLogHandler\r\n\timplements ICommandHandler<IGetConflictTimeLogCommand> {\r\n\tconstructor(\r\n\t\t@InjectRepository(TimeLog)\r\n\t\tprivate readonly timeLogRepository: Repository<TimeLog>\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: IGetConflictTimeLogCommand\r\n\t): Promise<TimeLog[]> {\r\n\t\tconst { input } = command;\r\n\r\n\t\tconst startedAt = moment.utc(input.startDate).toISOString();\r\n\t\tconst stoppedAt = moment.utc(input.endDate).toISOString();\r\n\t\tlet conflictQuery = this.timeLogRepository.createQueryBuilder();\r\n\r\n\t\tconflictQuery = conflictQuery\r\n\t\t\t.where(`\"${conflictQuery.alias}\".\"employeeId\" = :employeeId`, {\r\n\t\t\t\temployeeId: input.employeeId\r\n\t\t\t})\r\n\t\t\t.andWhere(`\"${conflictQuery.alias}\".\"deletedAt\" IS null`)\r\n\t\t\t.andWhere(\r\n\t\t\t\tenv.database.type === 'sqlite'\r\n\t\t\t\t\t? `'${startedAt}' >= \"${conflictQuery.alias}\".\"startedAt\" and '${startedAt}' <= \"${conflictQuery.alias}\".\"stoppedAt\"`\r\n\t\t\t\t\t: `(\"${conflictQuery.alias}\".\"startedAt\", \"${conflictQuery.alias}\".\"stoppedAt\") OVERLAPS (timestamptz '${startedAt}', timestamptz '${stoppedAt}')`\r\n\t\t\t);\r\n\r\n\t\tif (input.relations) {\r\n\t\t\tinput.relations.forEach((relation) => {\r\n\t\t\t\tconflictQuery = conflictQuery.leftJoinAndSelect(\r\n\t\t\t\t\t`${conflictQuery.alias}.${relation}`,\r\n\t\t\t\t\trelation\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (input.ignoreId) {\r\n\t\t\tconflictQuery = conflictQuery.andWhere(\r\n\t\t\t\t`${conflictQuery.alias}.id NOT IN (:...id)`,\r\n\t\t\t\t{\r\n\t\t\t\t\tid:\r\n\t\t\t\t\t\tinput.ignoreId instanceof Array\r\n\t\t\t\t\t\t\t? input.ignoreId\r\n\t\t\t\t\t\t\t: [input.ignoreId]\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn await conflictQuery.getMany();\r\n\t}\r\n}\r\n","import { ICommandHandler, CommandHandler } from '@nestjs/cqrs';\r\nimport { chain } from 'underscore';\r\nimport * as moment from 'moment';\r\nimport { IReportDayGroupByClient, ITimeLog, ITimeSlot } from '@gauzy/models';\r\nimport { GetTimeLogGroupByClientCommand } from '../get-time-log-group-by-client.command';\r\n\r\n@CommandHandler(GetTimeLogGroupByClientCommand)\r\nexport class GetTimeLogGroupByClientHandler\r\n\timplements ICommandHandler<GetTimeLogGroupByClientCommand> {\r\n\tconstructor() {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: GetTimeLogGroupByClientCommand\r\n\t): Promise<IReportDayGroupByClient> {\r\n\t\tconst { timeLogs } = command;\r\n\r\n\t\tconst dailyLogs: any = chain(timeLogs)\r\n\t\t\t.groupBy((log) =>\r\n\t\t\t\tlog.project ? log.project.organizationContactId : null\r\n\t\t\t)\r\n\t\t\t.map((byClientLogs: ITimeLog[]) => {\r\n\t\t\t\tconst log = byClientLogs.length > 0 ? byClientLogs[0] : null;\r\n\t\t\t\tlet client = null;\r\n\t\t\t\tif (log && log.project && log.project.organizationContact) {\r\n\t\t\t\t\tclient = log.project.organizationContact;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst byClient = chain(byClientLogs)\r\n\t\t\t\t\t.groupBy((log) => log.projectId)\r\n\t\t\t\t\t.map((byProjectLogs: ITimeLog[]) => {\r\n\t\t\t\t\t\tconst project =\r\n\t\t\t\t\t\t\tbyProjectLogs.length > 0\r\n\t\t\t\t\t\t\t\t? byProjectLogs[0].project\r\n\t\t\t\t\t\t\t\t: null;\r\n\r\n\t\t\t\t\t\tconst byDate = chain(byProjectLogs)\r\n\t\t\t\t\t\t\t.groupBy((log) =>\r\n\t\t\t\t\t\t\t\tmoment(log.startedAt).format('YYYY-MM-DD')\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t.map((byDateLogs: ITimeLog[], date) => {\r\n\t\t\t\t\t\t\t\tconst byEmployee = chain(byDateLogs)\r\n\t\t\t\t\t\t\t\t\t.groupBy('employeeId')\r\n\t\t\t\t\t\t\t\t\t.map((byEmployeeLogs: ITimeLog[]) => {\r\n\t\t\t\t\t\t\t\t\t\tconst employee =\r\n\t\t\t\t\t\t\t\t\t\t\tbyEmployeeLogs.length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t? byEmployeeLogs[0].employee\r\n\t\t\t\t\t\t\t\t\t\t\t\t: null;\r\n\r\n\t\t\t\t\t\t\t\t\t\tconst sum = byEmployeeLogs.reduce(\r\n\t\t\t\t\t\t\t\t\t\t\t(iteratee: any, log: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn iteratee + log.duration;\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t0\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t\t\t\tconst timeSlots: ITimeSlot[] = chain(\r\n\t\t\t\t\t\t\t\t\t\t\tbyEmployeeLogs\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t.pluck('timeSlots')\r\n\t\t\t\t\t\t\t\t\t\t\t.flatten(true)\r\n\t\t\t\t\t\t\t\t\t\t\t.value();\r\n\r\n\t\t\t\t\t\t\t\t\t\tconst activitiesSum =\r\n\t\t\t\t\t\t\t\t\t\t\tbyEmployeeLogs.reduce(\r\n\t\t\t\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\titeratee: any,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttimeSlot: any\r\n\t\t\t\t\t\t\t\t\t\t\t\t) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\titeratee +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttimeSlot.overall\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t0\r\n\t\t\t\t\t\t\t\t\t\t\t) || 0;\r\n\r\n\t\t\t\t\t\t\t\t\t\tconst task =\r\n\t\t\t\t\t\t\t\t\t\t\tbyEmployeeLogs.length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t? byEmployeeLogs[0].task\r\n\t\t\t\t\t\t\t\t\t\t\t\t: null;\r\n\r\n\t\t\t\t\t\t\t\t\t\tconst activity =\r\n\t\t\t\t\t\t\t\t\t\t\tactivitiesSum / timeSlots.length;\r\n\r\n\t\t\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\t\t\ttask,\r\n\t\t\t\t\t\t\t\t\t\t\temployee,\r\n\t\t\t\t\t\t\t\t\t\t\tsum,\r\n\t\t\t\t\t\t\t\t\t\t\tactivity: activity\r\n\t\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t.value();\r\n\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\tdate,\r\n\t\t\t\t\t\t\t\t\tprojectLogs: byEmployee\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.value();\r\n\r\n\t\t\t\t\t\treturn { project, logs: byDate };\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.value();\r\n\r\n\t\t\t\treturn { client, logs: byClient };\r\n\t\t\t});\r\n\r\n\t\treturn dailyLogs;\r\n\t}\r\n}\r\n","import { ICommandHandler, CommandHandler } from '@nestjs/cqrs';\r\nimport { GetTimeLogGroupByDateCommand } from '../get-time-log-group-by-date.command';\r\nimport { chain } from 'underscore';\r\nimport * as moment from 'moment';\r\nimport { IReportDayGroupByDate, ITimeLog, ITimeSlot } from '@gauzy/models';\r\n\r\n@CommandHandler(GetTimeLogGroupByDateCommand)\r\nexport class GetTimeLogGroupByDateHandler\r\n\timplements ICommandHandler<GetTimeLogGroupByDateCommand> {\r\n\tconstructor() {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: GetTimeLogGroupByDateCommand\r\n\t): Promise<IReportDayGroupByDate> {\r\n\t\tconst { timeLogs } = command;\r\n\r\n\t\tconst dailyLogs: any = chain(timeLogs)\r\n\t\t\t.groupBy((log) => moment(log.startedAt).format('YYYY-MM-DD'))\r\n\t\t\t.map((byDateLogs: ITimeLog[], date: string) => {\r\n\t\t\t\tconst byProject = chain(byDateLogs)\r\n\t\t\t\t\t.groupBy('projectId')\r\n\t\t\t\t\t.map((byProjectLogs: ITimeLog[]) => {\r\n\t\t\t\t\t\tconst project =\r\n\t\t\t\t\t\t\tbyProjectLogs.length > 0\r\n\t\t\t\t\t\t\t\t? byProjectLogs[0].project\r\n\t\t\t\t\t\t\t\t: null;\r\n\r\n\t\t\t\t\t\tconst byEmployee = chain(byProjectLogs)\r\n\t\t\t\t\t\t\t.groupBy('employeeId')\r\n\t\t\t\t\t\t\t.map((byEmployeeLogs: ITimeLog[]) => {\r\n\t\t\t\t\t\t\t\tconst sum = byEmployeeLogs.reduce(\r\n\t\t\t\t\t\t\t\t\t(iteratee: any, log: any) => {\r\n\t\t\t\t\t\t\t\t\t\treturn iteratee + log.duration;\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t0\r\n\t\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t\tconst timeSlots: ITimeSlot[] = chain(\r\n\t\t\t\t\t\t\t\t\tbyEmployeeLogs\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t.pluck('timeSlots')\r\n\t\t\t\t\t\t\t\t\t.flatten(true)\r\n\t\t\t\t\t\t\t\t\t.value();\r\n\r\n\t\t\t\t\t\t\t\tconst activitiesSum =\r\n\t\t\t\t\t\t\t\t\tbyEmployeeLogs.reduce(\r\n\t\t\t\t\t\t\t\t\t\t(iteratee: any, timeSlot: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn iteratee + timeSlot.overall;\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t0\r\n\t\t\t\t\t\t\t\t\t) || 0;\r\n\r\n\t\t\t\t\t\t\t\tconst activity =\r\n\t\t\t\t\t\t\t\t\tactivitiesSum / timeSlots.length;\r\n\r\n\t\t\t\t\t\t\t\tconst employee =\r\n\t\t\t\t\t\t\t\t\tbyEmployeeLogs.length > 0\r\n\t\t\t\t\t\t\t\t\t\t? byEmployeeLogs[0].employee\r\n\t\t\t\t\t\t\t\t\t\t: null;\r\n\r\n\t\t\t\t\t\t\t\tconst task =\r\n\t\t\t\t\t\t\t\t\tbyEmployeeLogs.length > 0\r\n\t\t\t\t\t\t\t\t\t\t? byEmployeeLogs[0].task\r\n\t\t\t\t\t\t\t\t\t\t: null;\r\n\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\temployee,\r\n\t\t\t\t\t\t\t\t\tsum: sum,\r\n\t\t\t\t\t\t\t\t\ttask,\r\n\t\t\t\t\t\t\t\t\tactivity\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.value();\r\n\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tproject,\r\n\t\t\t\t\t\t\temployeeLogs: byEmployee\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.value();\r\n\r\n\t\t\t\treturn { date, logs: byProject };\r\n\t\t\t})\r\n\t\t\t.value();\r\n\r\n\t\treturn dailyLogs;\r\n\t}\r\n}\r\n","import { ICommandHandler, CommandHandler } from '@nestjs/cqrs';\r\nimport { chain } from 'underscore';\r\nimport * as moment from 'moment';\r\nimport { IReportDayGroupByEmployee, ITimeLog, ITimeSlot } from '@gauzy/models';\r\nimport { GetTimeLogGroupByEmployeeCommand } from '../get-time-log-group-by-employee.command';\r\n\r\n@CommandHandler(GetTimeLogGroupByEmployeeCommand)\r\nexport class GetTimeLogGroupByEmployeeHandler\r\n\timplements ICommandHandler<GetTimeLogGroupByEmployeeCommand> {\r\n\tconstructor() {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: GetTimeLogGroupByEmployeeCommand\r\n\t): Promise<IReportDayGroupByEmployee> {\r\n\t\tconst { timeLogs } = command;\r\n\r\n\t\tconst dailyLogs: any = chain(timeLogs)\r\n\t\t\t.groupBy((log) => log.employeeId)\r\n\t\t\t.map((byEmployeeLogs: ITimeLog[]) => {\r\n\t\t\t\tconst employee =\r\n\t\t\t\t\tbyEmployeeLogs.length > 0\r\n\t\t\t\t\t\t? byEmployeeLogs[0].employee\r\n\t\t\t\t\t\t: null;\r\n\r\n\t\t\t\tconst byDate = chain(byEmployeeLogs)\r\n\t\t\t\t\t.groupBy((log) =>\r\n\t\t\t\t\t\tmoment(log.startedAt).format('YYYY-MM-DD')\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.map((byDateLogs: ITimeLog[], date) => {\r\n\t\t\t\t\t\tconst byProject = chain(byDateLogs)\r\n\t\t\t\t\t\t\t.groupBy('projectId')\r\n\t\t\t\t\t\t\t.map((byProjectLogs: ITimeLog[]) => {\r\n\t\t\t\t\t\t\t\tconst sum = byProjectLogs.reduce(\r\n\t\t\t\t\t\t\t\t\t(iteratee: any, log: any) => {\r\n\t\t\t\t\t\t\t\t\t\treturn iteratee + log.duration;\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t0\r\n\t\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t\tconst timeSlots: ITimeSlot[] = chain(\r\n\t\t\t\t\t\t\t\t\tbyProjectLogs\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t.pluck('timeSlots')\r\n\t\t\t\t\t\t\t\t\t.flatten(true)\r\n\t\t\t\t\t\t\t\t\t.value();\r\n\r\n\t\t\t\t\t\t\t\tconst activitiesSum =\r\n\t\t\t\t\t\t\t\t\tbyProjectLogs.reduce(\r\n\t\t\t\t\t\t\t\t\t\t(iteratee: any, timeSlot: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn iteratee + timeSlot.overall;\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t0\r\n\t\t\t\t\t\t\t\t\t) || 0;\r\n\r\n\t\t\t\t\t\t\t\tconst activity =\r\n\t\t\t\t\t\t\t\t\tactivitiesSum / timeSlots.length;\r\n\r\n\t\t\t\t\t\t\t\tconst project =\r\n\t\t\t\t\t\t\t\t\tbyProjectLogs.length > 0\r\n\t\t\t\t\t\t\t\t\t\t? byProjectLogs[0].project\r\n\t\t\t\t\t\t\t\t\t\t: null;\r\n\r\n\t\t\t\t\t\t\t\tconst task =\r\n\t\t\t\t\t\t\t\t\tbyProjectLogs.length > 0\r\n\t\t\t\t\t\t\t\t\t\t? byProjectLogs[0].task\r\n\t\t\t\t\t\t\t\t\t\t: null;\r\n\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\ttask,\r\n\t\t\t\t\t\t\t\t\tproject,\r\n\t\t\t\t\t\t\t\t\tsum,\r\n\t\t\t\t\t\t\t\t\tactivity: activity\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.value();\r\n\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tdate,\r\n\t\t\t\t\t\t\tprojectLogs: byProject\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.value();\r\n\r\n\t\t\t\treturn { employee, logs: byDate };\r\n\t\t\t})\r\n\t\t\t.value();\r\n\r\n\t\treturn dailyLogs;\r\n\t}\r\n}\r\n","import { ICommandHandler, CommandHandler } from '@nestjs/cqrs';\r\nimport { chain } from 'underscore';\r\nimport * as moment from 'moment';\r\nimport { IReportDayGroupByProject, ITimeLog, ITimeSlot } from '@gauzy/models';\r\nimport { GetTimeLogGroupByProjectCommand } from '../get-time-log-group-by-project.command';\r\n\r\n@CommandHandler(GetTimeLogGroupByProjectCommand)\r\nexport class GetTimeLogGroupByProjectHandler\r\n\timplements ICommandHandler<GetTimeLogGroupByProjectCommand> {\r\n\tconstructor() {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: GetTimeLogGroupByProjectCommand\r\n\t): Promise<IReportDayGroupByProject> {\r\n\t\tconst { timeLogs } = command;\r\n\r\n\t\tconst dailyLogs: any = chain(timeLogs)\r\n\t\t\t.groupBy((log) => log.projectId)\r\n\t\t\t.map((byProjectLogs: ITimeLog[]) => {\r\n\t\t\t\tconst project =\r\n\t\t\t\t\tbyProjectLogs.length > 0 ? byProjectLogs[0].project : null;\r\n\r\n\t\t\t\tconst byDate = chain(byProjectLogs)\r\n\t\t\t\t\t.groupBy((log) =>\r\n\t\t\t\t\t\tmoment(log.startedAt).format('YYYY-MM-DD')\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.map((byDateLogs: ITimeLog[], date) => {\r\n\t\t\t\t\t\tconst byEmployee = chain(byDateLogs)\r\n\t\t\t\t\t\t\t.groupBy('employeeId')\r\n\t\t\t\t\t\t\t.map((byEmployeeLogs: ITimeLog[]) => {\r\n\t\t\t\t\t\t\t\tconst sum = byEmployeeLogs.reduce(\r\n\t\t\t\t\t\t\t\t\t(iteratee: any, log: any) => {\r\n\t\t\t\t\t\t\t\t\t\treturn iteratee + log.duration;\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t0\r\n\t\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t\tconst timeSlots: ITimeSlot[] = chain(\r\n\t\t\t\t\t\t\t\t\tbyEmployeeLogs\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t.pluck('timeSlots')\r\n\t\t\t\t\t\t\t\t\t.flatten(true)\r\n\t\t\t\t\t\t\t\t\t.value();\r\n\r\n\t\t\t\t\t\t\t\tconst activitiesSum =\r\n\t\t\t\t\t\t\t\t\tbyEmployeeLogs.reduce(\r\n\t\t\t\t\t\t\t\t\t\t(iteratee: any, timeSlot: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn iteratee + timeSlot.overall;\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t0\r\n\t\t\t\t\t\t\t\t\t) || 0;\r\n\r\n\t\t\t\t\t\t\t\tconst activity =\r\n\t\t\t\t\t\t\t\t\tactivitiesSum / timeSlots.length;\r\n\r\n\t\t\t\t\t\t\t\tconst task =\r\n\t\t\t\t\t\t\t\t\tbyEmployeeLogs.length > 0\r\n\t\t\t\t\t\t\t\t\t\t? byEmployeeLogs[0].task\r\n\t\t\t\t\t\t\t\t\t\t: null;\r\n\r\n\t\t\t\t\t\t\t\tconst employee =\r\n\t\t\t\t\t\t\t\t\tbyEmployeeLogs.length > 0\r\n\t\t\t\t\t\t\t\t\t\t? byEmployeeLogs[0].employee\r\n\t\t\t\t\t\t\t\t\t\t: null;\r\n\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\ttask,\r\n\t\t\t\t\t\t\t\t\temployee,\r\n\t\t\t\t\t\t\t\t\tsum,\r\n\t\t\t\t\t\t\t\t\tactivity\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.value();\r\n\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tdate,\r\n\t\t\t\t\t\t\temployeeLogs: byEmployee\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.value();\r\n\r\n\t\t\t\treturn { project, logs: byDate };\r\n\t\t\t})\r\n\t\t\t.value();\r\n\r\n\t\treturn dailyLogs;\r\n\t}\r\n}\r\n","import { TimeLogCreateHandler } from './time-log-create.handler';\r\nimport { TimeLogUpdateHandler } from './time-log-update.handler';\r\nimport { TimeLogDeleteHandler } from './time-log-delete.handler';\r\nimport { DeleteTimeSpanHandler } from './delete-time-span.handler';\r\nimport { GetConflictTimeLogHandler } from './get-conflict-time-log.handler';\r\nimport { GetTimeLogGroupByDateHandler } from './get-time-log-group-by-date.handler';\r\nimport { GetTimeLogGroupByEmployeeHandler } from './get-time-log-group-by-employee.handler';\r\nimport { GetTimeLogGroupByProjectHandler } from './get-time-log-group-by-project.handler';\r\nimport { GetTimeLogGroupByClientHandler } from './get-time-log-group-by-client.handler';\r\n\r\nexport const TimeLogCommandHandlers = [\r\n\tTimeLogCreateHandler,\r\n\tTimeLogUpdateHandler,\r\n\tTimeLogDeleteHandler,\r\n\tGetConflictTimeLogHandler,\r\n\tDeleteTimeSpanHandler,\r\n\tGetTimeLogGroupByDateHandler,\r\n\tGetTimeLogGroupByProjectHandler,\r\n\tGetTimeLogGroupByEmployeeHandler,\r\n\tGetTimeLogGroupByClientHandler\r\n];\r\n","import { ICommandHandler, CommandBus, CommandHandler } from '@nestjs/cqrs';\r\nimport { TimeLog } from '../../../time-log.entity';\r\nimport { TimeLogType, TimeLogSourceEnum } from '@gauzy/models';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { TimeLogCreateCommand } from '../time-log-create.command';\r\nimport { Repository } from 'typeorm';\r\nimport { TimeSlotService } from '../../../time-slot/time-slot.service';\r\nimport { TimesheetFirstOrCreateCommand } from '../../../timesheet/commands/timesheet-first-or-create.command';\r\nimport { TimesheetRecalculateCommand } from '../../../timesheet/commands/timesheet-recalculate.command';\r\nimport * as moment from 'moment';\r\nimport { UpdateEmployeeTotalWorkedHoursCommand } from 'src/app/employee/commands';\r\nimport { RequestContext } from 'src/app/core/context';\r\n\r\n@CommandHandler(TimeLogCreateCommand)\r\nexport class TimeLogCreateHandler\r\n\timplements ICommandHandler<TimeLogCreateCommand> {\r\n\tconstructor(\r\n\t\t@InjectRepository(TimeLog)\r\n\t\tprivate readonly timeLogRepository: Repository<TimeLog>,\r\n\t\tprivate readonly commandBus: CommandBus,\r\n\t\tprivate readonly timeSlotService: TimeSlotService\r\n\t) {}\r\n\r\n\tpublic async execute(command: TimeLogCreateCommand): Promise<TimeLog> {\r\n\t\tconst { input } = command;\r\n\r\n\t\tconst timesheet = await this.commandBus.execute(\r\n\t\t\tnew TimesheetFirstOrCreateCommand(input.startedAt, input.employeeId)\r\n\t\t);\r\n\r\n\t\tconst newTimeLog = new TimeLog({\r\n\t\t\tstartedAt: moment.utc(input.startedAt).toDate(),\r\n\t\t\t...(input.stoppedAt\r\n\t\t\t\t? { stoppedAt: moment.utc(input.stoppedAt).toDate() }\r\n\t\t\t\t: {}),\r\n\t\t\ttimesheetId: timesheet.id,\r\n\t\t\torganizationId: input.organizationId,\r\n\t\t\temployeeId: input.employeeId,\r\n\t\t\tprojectId: input.projectId || null,\r\n\t\t\ttaskId: input.taskId || null,\r\n\t\t\torganizationContactId: input.organizationContactId || null,\r\n\t\t\tlogType: input.logType || TimeLogType.MANUAL,\r\n\t\t\tdescription: input.description || '',\r\n\t\t\treason: input.reason || '',\r\n\t\t\tisBillable: input.isBillable || false,\r\n\t\t\tsource: input.source || TimeLogSourceEnum.BROWSER\r\n\t\t});\r\n\r\n\t\tlet timeSlots = [];\r\n\t\tif (input.stoppedAt) {\r\n\t\t\ttimeSlots = this.timeSlotService.generateTimeSlots(\r\n\t\t\t\tinput.startedAt,\r\n\t\t\t\tinput.stoppedAt\r\n\t\t\t);\r\n\t\t\ttimeSlots = timeSlots.map((slot) => ({\r\n\t\t\t\t...slot,\r\n\t\t\t\temployeeId: input.employeeId,\r\n\t\t\t\tkeyboard: 0,\r\n\t\t\t\tmouse: 0,\r\n\t\t\t\toverall: 0\r\n\t\t\t}));\r\n\t\t}\r\n\r\n\t\tif (input.timeSlots) {\r\n\t\t\t/*\r\n\t\t\t * Merge blank timeslot if missing in request.\r\n\t\t\t * I.e\r\n\t\t\t * Time Logs is : 04:00:00 to  05:00:00 and pass time slots for 04:00:00, 04:20:00, 04:30:00, 04:40:00\r\n\t\t\t * then it will add  04:10:00,  04:50:00 as blank time slots in array to instert\r\n\t\t\t */\r\n\t\t\tinput.timeSlots = input.timeSlots.map((timeSlot) => {\r\n\t\t\t\ttimeSlot.startedAt = moment.utc(input.startedAt).toDate();\r\n\t\t\t\ttimeSlot.employeeId = input.employeeId;\r\n\t\t\t\treturn timeSlot;\r\n\t\t\t});\r\n\r\n\t\t\ttimeSlots = timeSlots.map((blankTimeSlot) => {\r\n\t\t\t\tlet timeSlot = input.timeSlots.find((requestTimeSlot) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\tmoment\r\n\t\t\t\t\t\t\t.utc(requestTimeSlot.startedAt)\r\n\t\t\t\t\t\t\t.format('YYYY-MM-DD HH:mm') ===\r\n\t\t\t\t\t\tmoment\r\n\t\t\t\t\t\t\t.utc(blankTimeSlot.startedAt)\r\n\t\t\t\t\t\t\t.format('YYYY-MM-DD HH:mm')\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\r\n\t\t\t\ttimeSlot = timeSlot ? timeSlot : blankTimeSlot;\r\n\t\t\t\ttimeSlot.employeeId = input.employeeId;\r\n\r\n\t\t\t\treturn timeSlot;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tnewTimeLog.timeSlots = await this.timeSlotService.bulkCreate(timeSlots);\r\n\r\n\t\tnewTimeLog.tenantId = RequestContext.currentTenantId();\r\n\r\n\t\tawait this.timeLogRepository.save(newTimeLog);\r\n\r\n\t\tawait this.commandBus.execute(\r\n\t\t\tnew TimesheetRecalculateCommand(timesheet.id)\r\n\t\t);\r\n\r\n\t\tawait this.commandBus.execute(\r\n\t\t\tnew UpdateEmployeeTotalWorkedHoursCommand(newTimeLog.employeeId)\r\n\t\t);\r\n\r\n\t\treturn newTimeLog;\r\n\t}\r\n}\r\n","import { ICommandHandler, CommandBus, CommandHandler } from '@nestjs/cqrs';\r\nimport { TimeLog } from '../../../time-log.entity';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository, In, DeleteResult } from 'typeorm';\r\nimport { TimeSlotService } from '../../../time-slot/time-slot.service';\r\nimport { TimesheetRecalculateCommand } from '../../../timesheet/commands/timesheet-recalculate.command';\r\nimport { TimeLogDeleteCommand } from '../time-log-delete.command';\r\nimport * as _ from 'underscore';\r\nimport { UpdateEmployeeTotalWorkedHoursCommand } from 'src/app/employee/commands';\r\n\r\n@CommandHandler(TimeLogDeleteCommand)\r\nexport class TimeLogDeleteHandler\r\n\timplements ICommandHandler<TimeLogDeleteCommand> {\r\n\tconstructor(\r\n\t\t@InjectRepository(TimeLog)\r\n\t\tprivate readonly timeLogRepository: Repository<TimeLog>,\r\n\t\tprivate readonly commandBus: CommandBus,\r\n\t\tprivate readonly timeSlotService: TimeSlotService\r\n\t) {}\r\n\r\n\tpublic async execute(command: TimeLogDeleteCommand): Promise<DeleteResult> {\r\n\t\tconst { ids, forceDelete } = command;\r\n\r\n\t\tlet timeLogs: TimeLog[];\r\n\t\tif (typeof ids === 'string') {\r\n\t\t\ttimeLogs = await this.timeLogRepository.find({ id: ids });\r\n\t\t} else if (ids instanceof Array && typeof ids[0] === 'string') {\r\n\t\t\ttimeLogs = await this.timeLogRepository.find({\r\n\t\t\t\tid: In(ids as string[])\r\n\t\t\t});\r\n\t\t} else if (ids instanceof TimeLog) {\r\n\t\t\ttimeLogs = [ids];\r\n\t\t} else {\r\n\t\t\ttimeLogs = ids as TimeLog[];\r\n\t\t}\r\n\t\tfor (let index = 0; index < timeLogs.length; index++) {\r\n\t\t\tconst timeLog = timeLogs[index];\r\n\t\t\tawait this.timeSlotService.rangeDelete(\r\n\t\t\t\ttimeLog.employeeId,\r\n\t\t\t\ttimeLog.startedAt,\r\n\t\t\t\ttimeLog.stoppedAt\r\n\t\t\t);\r\n\t\t}\r\n\t\tlet deleteResult;\r\n\t\tif (forceDelete) {\r\n\t\t\tdeleteResult = await this.timeLogRepository.delete({\r\n\t\t\t\tid: In(_.pluck(timeLogs, 'id'))\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tdeleteResult = await this.timeLogRepository.update(\r\n\t\t\t\t{ id: In(_.pluck(timeLogs, 'id')) },\r\n\t\t\t\t{ deletedAt: new Date() }\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tconst timesheetPromises = _.chain(timeLogs)\r\n\t\t\t.pluck('timesheetId')\r\n\t\t\t.uniq()\r\n\t\t\t.map(\r\n\t\t\t\tasync (timesheetId) =>\r\n\t\t\t\t\tawait this.commandBus.execute(\r\n\t\t\t\t\t\tnew TimesheetRecalculateCommand(timesheetId)\r\n\t\t\t\t\t)\r\n\t\t\t)\r\n\t\t\t.value();\r\n\r\n\t\tconst totalWorkedHoursPromises = _.chain(timeLogs)\r\n\t\t\t.pluck('employeeId')\r\n\t\t\t.uniq()\r\n\t\t\t.map(\r\n\t\t\t\tasync (employeeId) =>\r\n\t\t\t\t\tawait this.commandBus.execute(\r\n\t\t\t\t\t\tnew UpdateEmployeeTotalWorkedHoursCommand(employeeId)\r\n\t\t\t\t\t)\r\n\t\t\t)\r\n\t\t\t.value();\r\n\r\n\t\ttry {\r\n\t\t\tawait Promise.all(timesheetPromises);\r\n\t\t\tawait Promise.all(totalWorkedHoursPromises);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('TimeLogDeleteHandler', { error });\r\n\t\t}\r\n\r\n\t\treturn deleteResult;\r\n\t}\r\n}\r\n","import { ICommandHandler, CommandBus, CommandHandler } from '@nestjs/cqrs';\r\nimport { TimeLog } from '../../../time-log.entity';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { TimeLogUpdateCommand } from '../time-log-update.command';\r\nimport { Repository, In } from 'typeorm';\r\nimport { TimeSlotService } from '../../../time-slot/time-slot.service';\r\nimport { TimesheetFirstOrCreateCommand } from '../../../timesheet/commands/timesheet-first-or-create.command';\r\nimport { TimesheetRecalculateCommand } from '../../../timesheet/commands/timesheet-recalculate.command';\r\nimport { Timesheet } from '../../../timesheet.entity';\r\nimport { UpdateEmployeeTotalWorkedHoursCommand } from 'src/app/employee/commands';\r\n\r\n@CommandHandler(TimeLogUpdateCommand)\r\nexport class TimeLogUpdateHandler\r\n\timplements ICommandHandler<TimeLogUpdateCommand> {\r\n\tconstructor(\r\n\t\t@InjectRepository(TimeLog)\r\n\t\tprivate readonly timeLogRepository: Repository<TimeLog>,\r\n\t\tprivate readonly commandBus: CommandBus,\r\n\t\tprivate readonly timeSlotService: TimeSlotService\r\n\t) {}\r\n\r\n\tpublic async execute(command: TimeLogUpdateCommand): Promise<TimeLog> {\r\n\t\tconst { id, input, manualTimeSlot } = command;\r\n\t\tlet timeLog: TimeLog;\r\n\t\tif (id instanceof TimeLog) {\r\n\t\t\ttimeLog = id;\r\n\t\t} else {\r\n\t\t\ttimeLog = await this.timeLogRepository.findOne(id);\r\n\t\t}\r\n\r\n\t\tconst updatedTimeLog = Object.assign({}, timeLog, input);\r\n\r\n\t\tconst timeSlots = this.timeSlotService.generateTimeSlots(\r\n\t\t\ttimeLog.startedAt,\r\n\t\t\ttimeLog.stoppedAt\r\n\t\t);\r\n\r\n\t\tlet timesheet: Timesheet;\r\n\t\tlet updateTimeSlots = [];\r\n\t\tlet needToUpdateTimeSlots = false;\r\n\t\tif (input.startedAt || input.stoppedAt) {\r\n\t\t\tneedToUpdateTimeSlots = true;\r\n\t\t}\r\n\r\n\t\tif (needToUpdateTimeSlots) {\r\n\t\t\ttimesheet = await this.commandBus.execute(\r\n\t\t\t\tnew TimesheetFirstOrCreateCommand(\r\n\t\t\t\t\tinput.startedAt,\r\n\t\t\t\t\ttimeLog.employeeId\r\n\t\t\t\t)\r\n\t\t\t);\r\n\r\n\t\t\tupdateTimeSlots = this.timeSlotService.generateTimeSlots(\r\n\t\t\t\tupdatedTimeLog.startedAt,\r\n\t\t\t\tupdatedTimeLog.stoppedAt\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tawait this.timeLogRepository.update(timeLog.id, {\r\n\t\t\t...input,\r\n\t\t\t...(timesheet ? { timesheetId: timesheet.id } : {})\r\n\t\t});\r\n\r\n\t\ttimeLog = await this.timeLogRepository.findOne(timeLog.id);\r\n\r\n\t\tif (needToUpdateTimeSlots) {\r\n\t\t\tconst startTimes = timeSlots\r\n\t\t\t\t.filter((timeslot) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\tupdateTimeSlots.filter(\r\n\t\t\t\t\t\t\t(newSlot) =>\r\n\t\t\t\t\t\t\t\tnewSlot.startedAt.getTime() ===\r\n\t\t\t\t\t\t\t\ttimeslot.startedAt.getTime()\r\n\t\t\t\t\t\t).length === 0\r\n\t\t\t\t\t);\r\n\t\t\t\t})\r\n\t\t\t\t.map((timeslot) => new Date(timeslot.startedAt));\r\n\r\n\t\t\tif (startTimes.length > 0) {\r\n\t\t\t\tawait this.timeSlotService.delete({\r\n\t\t\t\t\temployeeId: timeLog.employeeId,\r\n\t\t\t\t\tstartedAt: In(startTimes)\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tupdateTimeSlots = updateTimeSlots.map((slot) => ({\r\n\t\t\t\t...slot,\r\n\t\t\t\temployeeId: timeLog.employeeId,\r\n\t\t\t\tkeyboard: 0,\r\n\t\t\t\tmouse: 0,\r\n\t\t\t\toverall: 0\r\n\t\t\t}));\r\n\t\t\tif (!manualTimeSlot) {\r\n\t\t\t\tupdateTimeSlots = await this.timeSlotService.bulkCreate(\r\n\t\t\t\t\tupdateTimeSlots\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\ttimeLog.timeSlots = updateTimeSlots;\r\n\t\t\tthis.timeLogRepository.save(timeLog);\r\n\r\n\t\t\tawait this.commandBus.execute(\r\n\t\t\t\tnew TimesheetRecalculateCommand(timeLog.timesheetId)\r\n\t\t\t);\r\n\r\n\t\t\tawait this.commandBus.execute(\r\n\t\t\t\tnew UpdateEmployeeTotalWorkedHoursCommand(timeLog.employeeId)\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn timeLog;\r\n\t}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { TimeLog } from '../../time-log.entity';\r\n\r\nexport class TimeLogCreateCommand implements ICommand {\r\n\tstatic readonly type = '[TimeLog] create';\r\n\r\n\tconstructor(public readonly input: Partial<TimeLog>) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { TimeLog } from '../../time-log.entity';\r\n\r\nexport class TimeLogDeleteCommand implements ICommand {\r\n\tstatic readonly type = '[TimeLog] delete';\r\n\r\n\tconstructor(\r\n\t\tpublic readonly ids: string | string[] | TimeLog | TimeLog[],\r\n\t\tpublic readonly forceDelete = false\r\n\t) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { TimeLog } from '../../time-log.entity';\r\n\r\nexport class TimeLogUpdateCommand implements ICommand {\r\n\tstatic readonly type = '[TimeLog] update';\r\n\r\n\tconstructor(\r\n\t\tpublic readonly input: Partial<TimeLog>,\r\n\t\tpublic readonly id: string | TimeLog,\r\n\t\tpublic readonly manualTimeSlot?: boolean | null\r\n\t) {}\r\n}\r\n","import {\r\n\tController,\r\n\tHttpStatus,\r\n\tPost,\r\n\tBody,\r\n\tPut,\r\n\tParam,\r\n\tGet,\r\n\tQuery,\r\n\tUseGuards,\r\n\tDelete\r\n} from '@nestjs/common';\r\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\r\nimport {\r\n\tIManualTimeInput,\r\n\tITimeLog,\r\n\tIGetTimeLogInput,\r\n\tOrganizationPermissionsEnum,\r\n\tPermissionsEnum,\r\n\tIGetTimeLogConflictInput,\r\n\tIGetTimeLogReportInput,\r\n\tIGetTimeLimitReportInput,\r\n\tIProjectBudgetLimitReportInput,\r\n\tIClientBudgetLimitReportInput\r\n} from '@gauzy/models';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { TimeLogService } from './time-log.service';\r\nimport { Permissions } from '../../shared/decorators/permissions';\r\nimport { OrganizationPermissionGuard } from '../../shared/guards/auth/organization-permission.guard';\r\nimport { RequestContext } from '../../core/context';\r\nimport { CrudController } from '../../core';\r\nimport { FindOneOptions } from 'typeorm';\r\nimport { TenantBaseGuard } from '../../shared/guards/auth/tenant-base.guard ';\r\n\r\n@ApiTags('TimeLog')\r\n@UseGuards(AuthGuard('jwt'), TenantBaseGuard)\r\n@Controller('time-log')\r\nexport class TimeLogController extends CrudController<ITimeLog> {\r\n\tconstructor(private readonly timeLogService: TimeLogService) {\r\n\t\tsuper(timeLogService);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Get Timer Logs' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@Get('/')\r\n\tasync getLogs(@Query() entity: IGetTimeLogInput): Promise<ITimeLog[]> {\r\n\t\treturn this.timeLogService.getTimeLogs(entity);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Get Timer Logs Conflict' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@Get('/conflict')\r\n\tasync getConflict(\r\n\t\t@Query() entity: IGetTimeLogConflictInput\r\n\t): Promise<ITimeLog[]> {\r\n\t\treturn this.timeLogService.checkConflictTime(entity);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find Timer Log by id' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found one record' /*, type: T*/\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get('report/daily')\r\n\tasync getDailyReport(@Query() options: IGetTimeLogReportInput) {\r\n\t\treturn this.timeLogService.getDailyReport(options);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find Timer Log by id' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found one record' /*, type: T*/\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get('report/daily-chart')\r\n\tasync getDailyReportChartData(@Query() options: IGetTimeLogReportInput) {\r\n\t\treturn this.timeLogService.getDailyReportChartData(options);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Get Owed Amount Report' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Get report data'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@Get('/report/owed-report')\r\n\tasync getOwedAmountReport(\r\n\t\t@Query() entity: IGetTimeLogReportInput\r\n\t): Promise<any> {\r\n\t\treturn this.timeLogService.getOwedAmountReport(entity);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Get Owed Amount Report Chart Data' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Get report chart data'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@Get('/report/owed-chart-data')\r\n\tasync getOwedAmountReportChartData(\r\n\t\t@Query() entity: IGetTimeLogReportInput\r\n\t): Promise<any> {\r\n\t\treturn this.timeLogService.getOwedAmountReportChartData(entity);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find Timer Log by id' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found one record' /*, type: T*/\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get('report/weekly')\r\n\tasync getWeeklyReport(@Query() options: IGetTimeLogReportInput) {\r\n\t\treturn this.timeLogService.getWeeklyReport(options);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find Timer Log by id' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found one record' /*, type: T*/\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@ApiOperation({ summary: 'Time Limit' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found records'\r\n\t})\r\n\t@UseGuards(AuthGuard('jwt'))\r\n\t@Get('time-limit')\r\n\tasync weeklyLimit(@Query() request?: IGetTimeLimitReportInput) {\r\n\t\treturn this.timeLogService.getTimeLimit(request);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Budget limit' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found one record'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@ApiOperation({ summary: 'Time Limit' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found records'\r\n\t})\r\n\t@UseGuards(AuthGuard('jwt'))\r\n\t@Get('project-budget-limit')\r\n\tasync projectBudgetLimit(\r\n\t\t@Query() request?: IProjectBudgetLimitReportInput\r\n\t) {\r\n\t\treturn this.timeLogService.projectBudgetLimit(request);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Budget limit' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found one record'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@ApiOperation({ summary: 'Time Limit' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found records'\r\n\t})\r\n\t@UseGuards(AuthGuard('jwt'))\r\n\t@Get('client-budget-limit')\r\n\tasync clientBudgetLimit(@Query() request?: IClientBudgetLimitReportInput) {\r\n\t\treturn this.timeLogService.clientBudgetLimit(request);\r\n\t}\r\n\r\n\t@Get(':id')\r\n\tasync findOne(\r\n\t\t@Param('id') id: string,\r\n\t\t@Query() options: FindOneOptions\r\n\t): Promise<ITimeLog> {\r\n\t\treturn this.timeLogService.findOne(id, options);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Add manual time' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'The timer has been successfully On/Off.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@Post('/')\r\n\t@UseGuards(OrganizationPermissionGuard)\r\n\t@Permissions(OrganizationPermissionsEnum.ALLOW_MANUAL_TIME)\r\n\tasync addManualTime(@Body() entity: IManualTimeInput): Promise<ITimeLog> {\r\n\t\tlet employeeId: string;\r\n\t\tif (\r\n\t\t\tRequestContext.hasPermission(\r\n\t\t\t\tPermissionsEnum.CHANGE_SELECTED_EMPLOYEE\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\tif (entity.employeeId) {\r\n\t\t\t\temployeeId = entity.employeeId;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!employeeId) {\r\n\t\t\tconst user = RequestContext.currentUser();\r\n\t\t\temployeeId = user.employeeId;\r\n\t\t}\r\n\t\tentity.employeeId = employeeId;\r\n\r\n\t\treturn this.timeLogService.addManualTime(entity);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Update time log' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'The timer has been successfully On/Off.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@Put('/:id')\r\n\t@UseGuards(OrganizationPermissionGuard)\r\n\t@Permissions(OrganizationPermissionsEnum.ALLOW_MODIFY_TIME)\r\n\tasync updateManualTime(\r\n\t\t@Param('id') id: string,\r\n\t\t@Body() entity: IManualTimeInput\r\n\t): Promise<ITimeLog> {\r\n\t\treturn this.timeLogService.updateTime(id, entity);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Delete time log' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'The timer has been successfully On/Off.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@Delete('/')\r\n\t@UseGuards(OrganizationPermissionGuard)\r\n\t@Permissions(OrganizationPermissionsEnum.ALLOW_DELETE_TIME)\r\n\tasync deleteTimeTime(@Query() query): Promise<any> {\r\n\t\treturn this.timeLogService.deleteTimeLog(query.logIds);\r\n\t}\r\n}\r\n","import { Connection, In } from 'typeorm';\r\nimport * as faker from 'faker';\r\nimport * as _ from 'underscore';\r\nimport {\r\n\tTimeLogSourceEnum,\r\n\tTimeLogType,\r\n\tITimeSlot,\r\n\tIOrganizationProject\r\n} from '@gauzy/models';\r\nimport * as moment from 'moment';\r\nimport { TimeLog } from '../time-log.entity';\r\nimport { Timesheet } from '../timesheet.entity';\r\nimport { OrganizationProject } from '../../organization-projects/organization-projects.entity';\r\nimport { createRandomScreenshot } from '../screenshot/screenshot.seed';\r\nimport { createTimeSlots } from '../time-slot/time-slot.seed';\r\nimport { Screenshot } from '../screenshot.entity';\r\nimport { Tenant } from '../../tenant/tenant.entity';\r\n\r\nexport const createRandomTimeLogs = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\ttimeSheets: Timesheet[],\r\n\tdefaultProjects: IOrganizationProject[],\r\n\tnoOfTimeLogsPerTimeSheet\r\n) => {\r\n\tlet query = connection\r\n\t\t.getRepository(OrganizationProject)\r\n\t\t.createQueryBuilder()\r\n\t\t.where({\r\n\t\t\tid: In(_.pluck(defaultProjects, 'id'))\r\n\t\t});\r\n\tquery = query.leftJoinAndSelect(`${query.alias}.tasks`, 'tasks');\r\n\tconst projects = await query.getMany();\r\n\r\n\tconst timeSheetChunk = _.chunk(timeSheets, 5) as Array<Timesheet[]>;\r\n\tconst allTimeSlots: ITimeSlot[] = [];\r\n\r\n\tfor (\r\n\t\tlet timeSheetChunkIndex = 0;\r\n\t\ttimeSheetChunkIndex < timeSheetChunk.length;\r\n\t\ttimeSheetChunkIndex++\r\n\t) {\r\n\t\tlet timeSlots: ITimeSlot[] = [];\r\n\t\tconst timeLogs: TimeLog[] = [];\r\n\t\tconst screenshotsPromise: Promise<Screenshot[]>[] = [];\r\n\r\n\t\tfor (\r\n\t\t\tlet timeSheetIndex = 0;\r\n\t\t\ttimeSheetIndex < timeSheetChunk[timeSheetChunkIndex].length;\r\n\t\t\ttimeSheetIndex++\r\n\t\t) {\r\n\t\t\tconst timesheet =\r\n\t\t\t\ttimeSheetChunk[timeSheetChunkIndex][timeSheetIndex];\r\n\r\n\t\t\tconst randomDays = _.chain([0, 1, 2, 3, 4, 5, 6])\r\n\t\t\t\t.shuffle()\r\n\t\t\t\t.take(faker.random.number({ min: 3, max: 5 }))\r\n\t\t\t\t.values()\r\n\t\t\t\t.value();\r\n\r\n\t\t\tfor (let index = 0; index <= randomDays.length; index++) {\r\n\t\t\t\tconst day = randomDays[index];\r\n\t\t\t\tconst date = moment(timesheet.startedAt)\r\n\t\t\t\t\t.add(day, 'day')\r\n\t\t\t\t\t.toDate();\r\n\r\n\t\t\t\tconst range = dateRanges(\r\n\t\t\t\t\tmoment(date).startOf('day').toDate(),\r\n\t\t\t\t\tmoment(date).endOf('day').toDate()\r\n\t\t\t\t);\r\n\r\n\t\t\t\tfor (\r\n\t\t\t\t\tlet rangeIndex = 0;\r\n\t\t\t\t\trangeIndex < range.length;\r\n\t\t\t\t\trangeIndex++\r\n\t\t\t\t) {\r\n\t\t\t\t\tconst { startedAt, stoppedAt } = range[rangeIndex];\r\n\r\n\t\t\t\t\tconst project = faker.random.arrayElement(projects);\r\n\t\t\t\t\tconst task = faker.random.arrayElement(project.tasks);\r\n\r\n\t\t\t\t\tconst source: TimeLogSourceEnum = faker.random.arrayElement(\r\n\t\t\t\t\t\tObject.keys(TimeLogSourceEnum)\r\n\t\t\t\t\t) as TimeLogSourceEnum;\r\n\r\n\t\t\t\t\tconst timeLog = new TimeLog({\r\n\t\t\t\t\t\temployeeId: timesheet.employeeId\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tlet logType: TimeLogType = TimeLogType.TRACKED;\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tsource === TimeLogSourceEnum.WEB_TIMER ||\r\n\t\t\t\t\t\tsource === TimeLogSourceEnum.BROWSER\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tlogType = TimeLogType.MANUAL;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst newTimeSlot = createTimeSlots(\r\n\t\t\t\t\t\tstartedAt,\r\n\t\t\t\t\t\tstoppedAt\r\n\t\t\t\t\t).map((timeSlot) => {\r\n\t\t\t\t\t\ttimeSlot.employeeId = timesheet.employeeId;\r\n\t\t\t\t\t\ttimeSlot.organizationId = timesheet.organizationId;\r\n\t\t\t\t\t\ttimeSlot.tenant = tenant;\r\n\t\t\t\t\t\treturn timeSlot;\r\n\t\t\t\t\t});\r\n\t\t\t\t\ttimeSlots = timeSlots.concat(newTimeSlot);\r\n\r\n\t\t\t\t\ttimeLog.timesheet = timesheet;\r\n\t\t\t\t\ttimeLog.timeSlots = newTimeSlot;\r\n\t\t\t\t\ttimeLog.project = project;\r\n\t\t\t\t\ttimeLog.task = task;\r\n\t\t\t\t\ttimeLog.organizationContact = project.organizationContact;\r\n\t\t\t\t\ttimeLog.startedAt = startedAt;\r\n\t\t\t\t\ttimeLog.stoppedAt = stoppedAt;\r\n\t\t\t\t\ttimeLog.logType = logType;\r\n\t\t\t\t\ttimeLog.source = source;\r\n\t\t\t\t\ttimeLog.description = faker.lorem.sentence(\r\n\t\t\t\t\t\tfaker.random.number(10)\r\n\t\t\t\t\t);\r\n\t\t\t\t\ttimeLog.isBillable = faker.random.arrayElement([\r\n\t\t\t\t\t\ttrue,\r\n\t\t\t\t\t\ttrue,\r\n\t\t\t\t\t\tfalse\r\n\t\t\t\t\t]);\r\n\t\t\t\t\ttimeLog.deletedAt = null;\r\n\t\t\t\t\t(timeLog.organizationId = timesheet.organizationId),\r\n\t\t\t\t\t\t(timeLog.tenantId = timesheet.tenantId);\r\n\t\t\t\t\ttimeLogs.push(timeLog);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst savedTimeSlots = await connection.manager.save(timeSlots);\r\n\t\tconst savedTimeLogs = await connection.manager.save(timeLogs);\r\n\r\n\t\tallTimeSlots.push(...savedTimeSlots);\r\n\r\n\t\tfor await (const timeLog of savedTimeLogs) {\r\n\t\t\tif (timeLog.logType === TimeLogType.TRACKED) {\r\n\t\t\t\tconst filterTimeSlots = savedTimeSlots.filter(\r\n\t\t\t\t\t(x) => x.employeeId === timeLog.employeeId\r\n\t\t\t\t);\r\n\t\t\t\tfor await (const timeSlot of filterTimeSlots) {\r\n\t\t\t\t\tfor (let i = 0; i < noOfTimeLogsPerTimeSheet; i++) {\r\n\t\t\t\t\t\tscreenshotsPromise.push(\r\n\t\t\t\t\t\t\tcreateRandomScreenshot(timeSlot, tenant)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tawait Promise.all(screenshotsPromise)\r\n\t\t\t.then(async (data) => {\r\n\t\t\t\tconst screenshots: Screenshot[] = [];\r\n\t\t\t\tdata.forEach((row) => {\r\n\t\t\t\t\tscreenshots.push(...row);\r\n\t\t\t\t});\r\n\t\t\t\tawait connection.manager.save(screenshots);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log({ err });\r\n\t\t\t});\r\n\t}\r\n\treturn allTimeSlots;\r\n};\r\n\r\nfunction dateRanges(start: Date, stop: Date) {\r\n\tconst range = [];\r\n\tconst startedAt = faker.date.between(start, stop);\r\n\tconst stoppedAt = faker.date.between(\r\n\t\tstartedAt,\r\n\t\tmoment(startedAt).add(2, 'hours').toDate()\r\n\t);\r\n\trange.push({ startedAt, stoppedAt });\r\n\treturn range;\r\n}\r\n","import { Injectable, BadRequestException } from '@nestjs/common';\r\nimport { TimeLog } from '../time-log.entity';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository, In, SelectQueryBuilder } from 'typeorm';\r\nimport { RequestContext } from '../../core/context';\r\nimport {\r\n\tIManualTimeInput,\r\n\tIGetTimeLogInput,\r\n\tPermissionsEnum,\r\n\tIGetTimeLogConflictInput,\r\n\tIDateRange,\r\n\tIGetTimeLogReportInput,\r\n\tITimeLog,\r\n\tTimeLogType,\r\n\tIAmountOwedReport,\r\n\tIGetTimeLimitReportInput,\r\n\tITimeLimitReport,\r\n\tIProjectBudgetLimitReport,\r\n\tOrganizationProjectBudgetTypeEnum,\r\n\tIProjectBudgetLimitReportInput,\r\n\tIClientBudgetLimitReportInput,\r\n\tOrganizationContactBudgetTypeEnum,\r\n\tIClientBudgetLimitReport\r\n} from '@gauzy/models';\r\nimport * as moment from 'moment';\r\nimport { CrudService } from '../../core';\r\nimport { Organization } from '../../organization/organization.entity';\r\nimport { Employee } from '../../employee/employee.entity';\r\nimport { CommandBus } from '@nestjs/cqrs';\r\nimport { TimeLogCreateCommand } from './commands/time-log-create.command';\r\nimport { TimeLogUpdateCommand } from './commands/time-log-update.command';\r\nimport { TimeLogDeleteCommand } from './commands/time-log-delete.command';\r\nimport { DeleteTimeSpanCommand } from './commands/delete-time-span.command';\r\nimport { IGetConflictTimeLogCommand } from './commands/get-conflict-time-log.command';\r\nimport * as _ from 'underscore';\r\nimport { GetTimeLogGroupByDateCommand } from './commands/get-time-log-group-by-date.command';\r\nimport { GetTimeLogGroupByEmployeeCommand } from './commands/get-time-log-group-by-employee.command';\r\nimport { GetTimeLogGroupByProjectCommand } from './commands/get-time-log-group-by-project.command';\r\nimport { GetTimeLogGroupByClientCommand } from './commands/get-time-log-group-by-client.command';\r\nimport { chain, pluck } from 'underscore';\r\nimport { OrganizationContact } from '../../organization-contact/organization-contact.entity';\r\nimport { OrganizationProject } from '../../organization-projects/organization-projects.entity';\r\n\r\n@Injectable()\r\nexport class TimeLogService extends CrudService<TimeLog> {\r\n\tconstructor(\r\n\t\tprivate commandBus: CommandBus,\r\n\r\n\t\t@InjectRepository(TimeLog)\r\n\t\tprivate readonly timeLogRepository: Repository<TimeLog>,\r\n\r\n\t\t@InjectRepository(Employee)\r\n\t\tprivate readonly employeeRepository: Repository<Employee>,\r\n\r\n\t\t@InjectRepository(OrganizationContact)\r\n\t\tprivate readonly organizationContactsRepository: Repository<OrganizationContact>,\r\n\r\n\t\t@InjectRepository(OrganizationProject)\r\n\t\tprivate readonly organizationProjectRepository: Repository<OrganizationProject>\r\n\t) {\r\n\t\tsuper(timeLogRepository);\r\n\t}\r\n\r\n\tasync getTimeLogs(request: IGetTimeLogInput) {\r\n\t\tconst logs = await this.timeLogRepository.find({\r\n\t\t\tjoin: {\r\n\t\t\t\talias: 'timeLogs',\r\n\t\t\t\tinnerJoin: {\r\n\t\t\t\t\temployee: 'timeLogs.employee'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\trelations: [\r\n\t\t\t\t'project',\r\n\t\t\t\t'task',\r\n\t\t\t\t'organizationContact',\r\n\t\t\t\t...(RequestContext.hasPermission(\r\n\t\t\t\t\tPermissionsEnum.CHANGE_SELECTED_EMPLOYEE\r\n\t\t\t\t)\r\n\t\t\t\t\t? ['employee', 'employee.organization', 'employee.user']\r\n\t\t\t\t\t: [])\r\n\t\t\t],\r\n\t\t\torder: {\r\n\t\t\t\tstartedAt: 'ASC'\r\n\t\t\t},\r\n\t\t\twhere: (qb: SelectQueryBuilder<TimeLog>) => {\r\n\t\t\t\tthis.getFilterTimeLogQuery(qb, request);\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn logs;\r\n\t}\r\n\r\n\tasync getWeeklyReport(request: IGetTimeLogReportInput) {\r\n\t\tconst logs = await this.timeLogRepository.find({\r\n\t\t\tjoin: {\r\n\t\t\t\talias: 'timeLogs',\r\n\t\t\t\tinnerJoin: {\r\n\t\t\t\t\temployee: 'timeLogs.employee'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\trelations: [\r\n\t\t\t\t'project',\r\n\t\t\t\t'task',\r\n\t\t\t\t'organizationContact',\r\n\t\t\t\t...(RequestContext.hasPermission(\r\n\t\t\t\t\tPermissionsEnum.CHANGE_SELECTED_EMPLOYEE\r\n\t\t\t\t)\r\n\t\t\t\t\t? ['employee', 'employee.organization', 'employee.user']\r\n\t\t\t\t\t: [])\r\n\t\t\t],\r\n\t\t\torder: {\r\n\t\t\t\tstartedAt: 'ASC'\r\n\t\t\t},\r\n\t\t\twhere: (qb: SelectQueryBuilder<TimeLog>) => {\r\n\t\t\t\tthis.getFilterTimeLogQuery(qb, request);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tlet dayList = [];\r\n\t\tconst range = {};\r\n\t\tlet i = 0;\r\n\t\tconst start = moment(request.startDate);\r\n\t\twhile (start.isSameOrBefore(request.endDate) && i < 7) {\r\n\t\t\tconst date = start.format('YYYY-MM-DD');\r\n\t\t\trange[date] = null;\r\n\t\t\tstart.add(1, 'day');\r\n\t\t\ti++;\r\n\t\t}\r\n\t\tdayList = Object.keys(range);\r\n\r\n\t\tconst weeklyLogs = _.chain(logs)\r\n\t\t\t.groupBy('employeeId')\r\n\t\t\t.map((innerLogs: ITimeLog[], _projectId) => {\r\n\t\t\t\tconst byDate = _.chain(innerLogs)\r\n\t\t\t\t\t.groupBy((log) =>\r\n\t\t\t\t\t\tmoment(log.startedAt).format('YYYY-MM-DD')\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.mapObject((res: ITimeLog[]) => {\r\n\t\t\t\t\t\tconst sum = res.reduce((iteratee: any, log: any) => {\r\n\t\t\t\t\t\t\treturn iteratee + log.duration;\r\n\t\t\t\t\t\t}, 0);\r\n\t\t\t\t\t\treturn { sum, logs: res };\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.value();\r\n\r\n\t\t\t\tconst employee =\r\n\t\t\t\t\tinnerLogs.length > 0 ? innerLogs[0].employee : null;\r\n\t\t\t\tconst dates: any = {};\r\n\t\t\t\tdayList.forEach((date) => {\r\n\t\t\t\t\tdates[date] = byDate[date] || 0;\r\n\t\t\t\t});\r\n\t\t\t\treturn { employee, dates };\r\n\t\t\t})\r\n\t\t\t.value();\r\n\r\n\t\treturn weeklyLogs;\r\n\t}\r\n\r\n\tasync getDailyReportChartData(request: IGetTimeLogReportInput) {\r\n\t\tconst logs = await this.timeLogRepository.find({\r\n\t\t\tjoin: {\r\n\t\t\t\talias: 'timeLogs',\r\n\t\t\t\tinnerJoin: {\r\n\t\t\t\t\temployee: 'timeLogs.employee'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\torder: {\r\n\t\t\t\tstartedAt: 'ASC'\r\n\t\t\t},\r\n\t\t\twhere: (qb: SelectQueryBuilder<TimeLog>) => {\r\n\t\t\t\tthis.getFilterTimeLogQuery(qb, request);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tlet dayList = [];\r\n\t\tconst range = {};\r\n\t\tlet i = 0;\r\n\t\tconst start = moment(request.startDate);\r\n\t\twhile (start.isSameOrBefore(request.endDate) && i < 7) {\r\n\t\t\tconst date = start.format('YYYY-MM-DD');\r\n\t\t\trange[date] = null;\r\n\t\t\tstart.add(1, 'day');\r\n\t\t\ti++;\r\n\t\t}\r\n\t\tdayList = Object.keys(range);\r\n\r\n\t\tconst byDate = chain(logs)\r\n\t\t\t.groupBy((log) => moment(log.startedAt).format('YYYY-MM-DD'))\r\n\t\t\t.mapObject((logs: ITimeLog[], date) => {\r\n\t\t\t\tconst tacked = logs\r\n\t\t\t\t\t.filter((log) => log.logType === TimeLogType.TRACKED)\r\n\t\t\t\t\t.reduce((iteratee: any, log: any) => {\r\n\t\t\t\t\t\treturn iteratee + log.duration;\r\n\t\t\t\t\t}, 0);\r\n\t\t\t\tconst manual = logs\r\n\t\t\t\t\t.filter((log) => log.logType === TimeLogType.MANUAL)\r\n\t\t\t\t\t.reduce((iteratee: any, log: any) => {\r\n\t\t\t\t\t\treturn iteratee + log.duration;\r\n\t\t\t\t\t}, 0);\r\n\t\t\t\treturn {\r\n\t\t\t\t\tdate,\r\n\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\t[TimeLogType.TRACKED]: parseFloat(\r\n\t\t\t\t\t\t\t(tacked / 3600).toFixed(1)\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\t[TimeLogType.MANUAL]: parseFloat(\r\n\t\t\t\t\t\t\t(manual / 3600).toFixed(1)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t})\r\n\t\t\t.value();\r\n\r\n\t\tconst dates = dayList.map((date) => {\r\n\t\t\tif (byDate[date]) {\r\n\t\t\t\treturn byDate[date];\r\n\t\t\t} else {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tdate: date,\r\n\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\t[TimeLogType.TRACKED]: 0,\r\n\t\t\t\t\t\t[TimeLogType.MANUAL]: 0\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn dates;\r\n\t}\r\n\r\n\tasync getDailyReport(request: IGetTimeLogReportInput) {\r\n\t\tconst logs = await this.timeLogRepository.find({\r\n\t\t\tjoin: {\r\n\t\t\t\talias: 'timeLogs',\r\n\t\t\t\tinnerJoin: {\r\n\t\t\t\t\temployee: 'timeLogs.employee'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\trelations: [\r\n\t\t\t\t'project',\r\n\t\t\t\t'task',\r\n\t\t\t\t'timeSlots',\r\n\t\t\t\t'organizationContact',\r\n\t\t\t\t...(RequestContext.hasPermission(\r\n\t\t\t\t\tPermissionsEnum.CHANGE_SELECTED_EMPLOYEE\r\n\t\t\t\t)\r\n\t\t\t\t\t? ['employee', 'employee.organization', 'employee.user']\r\n\t\t\t\t\t: [])\r\n\t\t\t],\r\n\t\t\torder: {\r\n\t\t\t\tstartedAt: 'ASC'\r\n\t\t\t},\r\n\t\t\twhere: (qb: SelectQueryBuilder<TimeLog>) => {\r\n\t\t\t\tthis.getFilterTimeLogQuery(qb, request);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tlet dailyLogs;\r\n\t\tswitch (request.groupBy) {\r\n\t\t\tcase 'employee':\r\n\t\t\t\tdailyLogs = await this.commandBus.execute(\r\n\t\t\t\t\tnew GetTimeLogGroupByEmployeeCommand(logs)\r\n\t\t\t\t);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'project':\r\n\t\t\t\tdailyLogs = await this.commandBus.execute(\r\n\t\t\t\t\tnew GetTimeLogGroupByProjectCommand(logs)\r\n\t\t\t\t);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'client':\r\n\t\t\t\tdailyLogs = await this.commandBus.execute(\r\n\t\t\t\t\tnew GetTimeLogGroupByClientCommand(logs)\r\n\t\t\t\t);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tdailyLogs = await this.commandBus.execute(\r\n\t\t\t\t\tnew GetTimeLogGroupByDateCommand(logs)\r\n\t\t\t\t);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn dailyLogs;\r\n\t}\r\n\r\n\tasync getOwedAmountReport(\r\n\t\trequest: IGetTimeLogReportInput\r\n\t): Promise<IAmountOwedReport[]> {\r\n\t\tconst timeLogs = await this.timeLogRepository.find({\r\n\t\t\trelations: ['employee', 'employee.user'],\r\n\t\t\torder: {\r\n\t\t\t\tstartedAt: 'ASC'\r\n\t\t\t},\r\n\t\t\twhere: (qb: SelectQueryBuilder<TimeLog>) => {\r\n\t\t\t\tthis.getFilterTimeLogQuery(qb, request);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst dailyLogs: any = chain(timeLogs)\r\n\t\t\t.groupBy((log) => moment(log.startedAt).format('YYYY-MM-DD'))\r\n\t\t\t.map((byDateLogs: ITimeLog[], date: string) => {\r\n\t\t\t\tconst byEmployee = chain(byDateLogs)\r\n\t\t\t\t\t.groupBy('employeeId')\r\n\t\t\t\t\t.map((byEmployeeLogs: ITimeLog[]) => {\r\n\t\t\t\t\t\tconst durationSum = byEmployeeLogs.reduce(\r\n\t\t\t\t\t\t\t(iteratee: any, log: any) => {\r\n\t\t\t\t\t\t\t\treturn iteratee + log.duration;\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t0\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tconst employee =\r\n\t\t\t\t\t\t\tbyEmployeeLogs.length > 0\r\n\t\t\t\t\t\t\t\t? byEmployeeLogs[0].employee\r\n\t\t\t\t\t\t\t\t: null;\r\n\r\n\t\t\t\t\t\tconst amount =\r\n\t\t\t\t\t\t\temployee?.billRateValue * (durationSum / 3600);\r\n\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\temployee,\r\n\t\t\t\t\t\t\tamount: parseFloat(amount.toFixed(1)),\r\n\t\t\t\t\t\t\tduration: durationSum\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.value();\r\n\r\n\t\t\t\treturn { date, employees: byEmployee };\r\n\t\t\t})\r\n\t\t\t.value();\r\n\r\n\t\treturn dailyLogs;\r\n\t}\r\n\r\n\tasync getOwedAmountReportChartData(request: IGetTimeLogReportInput) {\r\n\t\tconst timeLogs = await this.timeLogRepository.find({\r\n\t\t\trelations: ['employee', 'employee.user'],\r\n\t\t\torder: {\r\n\t\t\t\tstartedAt: 'ASC'\r\n\t\t\t},\r\n\t\t\twhere: (qb: SelectQueryBuilder<TimeLog>) => {\r\n\t\t\t\tthis.getFilterTimeLogQuery(qb, request);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tlet dayList = [];\r\n\t\tconst range = {};\r\n\t\tlet i = 0;\r\n\t\tconst start = moment(request.startDate);\r\n\t\twhile (start.isSameOrBefore(request.endDate) && i < 7) {\r\n\t\t\tconst date = start.format('YYYY-MM-DD');\r\n\t\t\trange[date] = null;\r\n\t\t\tstart.add(1, 'day');\r\n\t\t\ti++;\r\n\t\t}\r\n\t\tdayList = Object.keys(range);\r\n\r\n\t\tconst byDate: any = chain(timeLogs)\r\n\t\t\t.groupBy((log) => moment(log.startedAt).format('YYYY-MM-DD'))\r\n\t\t\t.mapObject((byDateLogs: ITimeLog[], date) => {\r\n\t\t\t\tconst byEmployee = chain(byDateLogs)\r\n\t\t\t\t\t.groupBy('employeeId')\r\n\t\t\t\t\t.map((byEmployeeLogs: ITimeLog[]) => {\r\n\t\t\t\t\t\tconst durationSum = byEmployeeLogs.reduce(\r\n\t\t\t\t\t\t\t(iteratee: any, log: any) => {\r\n\t\t\t\t\t\t\t\treturn iteratee + log.duration;\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t0\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tconst employee =\r\n\t\t\t\t\t\t\tbyEmployeeLogs.length > 0\r\n\t\t\t\t\t\t\t\t? byEmployeeLogs[0].employee\r\n\t\t\t\t\t\t\t\t: null;\r\n\r\n\t\t\t\t\t\tconst amount =\r\n\t\t\t\t\t\t\temployee?.billRateValue * (durationSum / 3600);\r\n\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\temployee,\r\n\t\t\t\t\t\t\tamount: parseFloat(amount.toFixed(1)),\r\n\t\t\t\t\t\t\tduration: durationSum\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.value();\r\n\r\n\t\t\t\tconst value = byEmployee.reduce((iteratee: any, obj: any) => {\r\n\t\t\t\t\treturn iteratee + obj.amount;\r\n\t\t\t\t}, 0);\r\n\r\n\t\t\t\treturn { date, value };\r\n\t\t\t})\r\n\t\t\t.value();\r\n\r\n\t\tconst dates = dayList.map((date) => {\r\n\t\t\tif (byDate[date]) {\r\n\t\t\t\treturn byDate[date];\r\n\t\t\t} else {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tdate: date,\r\n\t\t\t\t\tvalue: 0\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn dates;\r\n\t}\r\n\r\n\tasync getTimeLimit(request: IGetTimeLimitReportInput) {\r\n\t\tif (!request.duration) {\r\n\t\t\trequest.duration = 'day';\r\n\t\t}\r\n\t\tconst timeLogs = await this.timeLogRepository.find({\r\n\t\t\trelations: ['employee', 'employee.user'],\r\n\t\t\torder: {\r\n\t\t\t\tstartedAt: 'ASC'\r\n\t\t\t},\r\n\t\t\twhere: (qb: SelectQueryBuilder<TimeLog>) => {\r\n\t\t\t\tthis.getFilterTimeLogQuery(qb, request);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tlet dayList = [];\r\n\t\tconst range = {};\r\n\t\tlet i = 0;\r\n\t\tconst start = moment(request.startDate);\r\n\t\twhile (start.isSameOrBefore(request.endDate) && i < 7) {\r\n\t\t\tconst date = start.format('YYYY-MM-DD');\r\n\t\t\trange[date] = null;\r\n\t\t\tstart.add(1, request.duration);\r\n\t\t\ti++;\r\n\t\t}\r\n\t\tdayList = Object.keys(range);\r\n\r\n\t\t// const employees = await this.employeeRepository.find({\r\n\t\t// \torganizationId: request.organizationId\r\n\t\t// });\r\n\r\n\t\tconst byDate: any = chain(timeLogs)\r\n\t\t\t.groupBy((log) => {\r\n\t\t\t\treturn moment(log.startedAt)\r\n\t\t\t\t\t.startOf(request.duration)\r\n\t\t\t\t\t.format('YYYY-MM-DD');\r\n\t\t\t})\r\n\t\t\t.mapObject((byDateLogs: ITimeLog[], date) => {\r\n\t\t\t\tconst byEmployee = chain(byDateLogs)\r\n\t\t\t\t\t.groupBy('employeeId')\r\n\t\t\t\t\t.map((byEmployeeLogs: ITimeLog[]) => {\r\n\t\t\t\t\t\tconst durationSum = byEmployeeLogs.reduce(\r\n\t\t\t\t\t\t\t(iteratee: any, log: any) => {\r\n\t\t\t\t\t\t\t\treturn iteratee + log.duration;\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t0\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tconst employee =\r\n\t\t\t\t\t\t\tbyEmployeeLogs.length > 0\r\n\t\t\t\t\t\t\t\t? byEmployeeLogs[0].employee\r\n\t\t\t\t\t\t\t\t: null;\r\n\r\n\t\t\t\t\t\tlet limit = employee.reWeeklyLimit * 60 * 60;\r\n\t\t\t\t\t\tif (request.duration === 'day') {\r\n\t\t\t\t\t\t\tlimit = limit / 5;\r\n\t\t\t\t\t\t} else if (request.duration === 'month') {\r\n\t\t\t\t\t\t\tlimit = limit * 4;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst durationPercentage = (durationSum * 100) / limit;\r\n\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\temployee,\r\n\t\t\t\t\t\t\tduration: durationSum,\r\n\t\t\t\t\t\t\tdurationPercentage: durationPercentage.toFixed(2),\r\n\t\t\t\t\t\t\tlimit\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.value();\r\n\r\n\t\t\t\treturn { date, employees: byEmployee };\r\n\t\t\t})\r\n\t\t\t.value();\r\n\r\n\t\tconst dates = dayList.map((date) => {\r\n\t\t\tif (byDate[date]) {\r\n\t\t\t\treturn byDate[date];\r\n\t\t\t} else {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tdate: date,\r\n\t\t\t\t\temployees: []\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn dates as ITimeLimitReport[];\r\n\t}\r\n\r\n\tasync projectBudgetLimit(request: IProjectBudgetLimitReportInput) {\r\n\t\t// const timeLogs = await this.timeLogRepository.find({\r\n\t\t// \trelations: [\r\n\t\t// \t\t'project',\r\n\t\t// \t],\r\n\t\t// \torder: {\r\n\t\t// \t\tstartedAt: 'ASC'\r\n\t\t// \t},\r\n\t\t// \twhere: (qb: SelectQueryBuilder<TimeLog>) => {\r\n\t\t// \t\tthis.getFilterTimeLogQuery(qb, request);\r\n\t\t// \t}\r\n\t\t// });\r\n\r\n\t\tconst projects = await this.organizationProjectRepository.find({\r\n\t\t\trelations: ['timeLogs', 'timeLogs.employee'],\r\n\t\t\twhere: {\r\n\t\t\t\torganizationId: request.organizationId\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst projectTimeLogs = projects.map(\r\n\t\t\t(project): IProjectBudgetLimitReport => {\r\n\t\t\t\tlet spent = 0;\r\n\t\t\t\tlet spentPercentage = 0;\r\n\r\n\t\t\t\tif (\r\n\t\t\t\t\tproject.budgetType ==\r\n\t\t\t\t\tOrganizationProjectBudgetTypeEnum.HOURS\r\n\t\t\t\t) {\r\n\t\t\t\t\tspent = project.timeLogs.reduce(\r\n\t\t\t\t\t\t(iteratee: any, log: any) => {\r\n\t\t\t\t\t\t\treturn iteratee + log.duration;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t0\r\n\t\t\t\t\t);\r\n\t\t\t\t\tspentPercentage = (spent * 100) / project.budget;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tspent = project.timeLogs.reduce(\r\n\t\t\t\t\t\t(iteratee: any, log: any) => {\r\n\t\t\t\t\t\t\tlet amount = 0;\r\n\t\t\t\t\t\t\tif (log.employee) {\r\n\t\t\t\t\t\t\t\tamount =\r\n\t\t\t\t\t\t\t\t\tlog.duration *\r\n\t\t\t\t\t\t\t\t\t60 *\r\n\t\t\t\t\t\t\t\t\t60 *\r\n\t\t\t\t\t\t\t\t\tlog.employee.billRateValue;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn iteratee + amount;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t0\r\n\t\t\t\t\t);\r\n\t\t\t\t\tspentPercentage = (spent * 100) / project.budget;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst reamingBudget = Math.max(project.budget - spent, 0);\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tproject,\r\n\t\t\t\t\tbudgetType: project.budgetType,\r\n\t\t\t\t\tbudget: project.budget,\r\n\t\t\t\t\tspent: spent,\r\n\t\t\t\t\treamingBudget,\r\n\t\t\t\t\tspentPercentage: parseFloat(spentPercentage.toFixed(2))\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\treturn projectTimeLogs;\r\n\t}\r\n\r\n\tasync clientBudgetLimit(request: IClientBudgetLimitReportInput) {\r\n\t\tconst organizationContacts = await this.organizationContactsRepository.find(\r\n\t\t\t{\r\n\t\t\t\twhere: {\r\n\t\t\t\t\torganizationId: request.organizationId\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\tconst clientProjects = await this.organizationProjectRepository.find({\r\n\t\t\trelations: ['timeLogs', 'timeLogs.employee'],\r\n\t\t\twhere: {\r\n\t\t\t\torganizationContactId: pluck(organizationContacts, 'id')\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst projects = clientProjects.map(\r\n\t\t\t(project): IClientBudgetLimitReport => {\r\n\t\t\t\tconst organizationContact = project.organizationContact;\r\n\r\n\t\t\t\tlet spent = 0;\r\n\t\t\t\tlet spentPercentage = 0;\r\n\t\t\t\tif (\r\n\t\t\t\t\torganizationContact.budgetType ==\r\n\t\t\t\t\tOrganizationContactBudgetTypeEnum.HOURS\r\n\t\t\t\t) {\r\n\t\t\t\t\tspent = project.timeLogs.reduce(\r\n\t\t\t\t\t\t(iteratee: any, log: any) => {\r\n\t\t\t\t\t\t\treturn iteratee + log.duration;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t0\r\n\t\t\t\t\t);\r\n\t\t\t\t\tspentPercentage =\r\n\t\t\t\t\t\t(spent * 100) / organizationContact.budget;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tspent = project.timeLogs.reduce(\r\n\t\t\t\t\t\t(iteratee: any, log: any) => {\r\n\t\t\t\t\t\t\tlet amount = 0;\r\n\t\t\t\t\t\t\tif (log.employee) {\r\n\t\t\t\t\t\t\t\tamount =\r\n\t\t\t\t\t\t\t\t\tlog.duration *\r\n\t\t\t\t\t\t\t\t\t60 *\r\n\t\t\t\t\t\t\t\t\t60 *\r\n\t\t\t\t\t\t\t\t\tlog.employee.billRateValue;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn iteratee + amount;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t0\r\n\t\t\t\t\t);\r\n\t\t\t\t\tspentPercentage =\r\n\t\t\t\t\t\t(spent * 100) / organizationContact.budget;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst reamingBudget = Math.max(\r\n\t\t\t\t\torganizationContact.budget - spent,\r\n\t\t\t\t\t0\r\n\t\t\t\t);\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\torganizationContact,\r\n\t\t\t\t\tbudgetType: organizationContact.budgetType,\r\n\t\t\t\t\tbudget: organizationContact.budget,\r\n\t\t\t\t\tspent: spent,\r\n\t\t\t\t\treamingBudget,\r\n\t\t\t\t\tspentPercentage: parseFloat(spentPercentage.toFixed(2))\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\treturn projects;\r\n\t}\r\n\r\n\tgetFilterTimeLogQuery(\r\n\t\tqb: SelectQueryBuilder<TimeLog>,\r\n\t\trequest: IGetTimeLogInput\r\n\t) {\r\n\t\tlet employeeIds: string[];\r\n\r\n\t\tif (\r\n\t\t\tRequestContext.hasPermission(\r\n\t\t\t\tPermissionsEnum.CHANGE_SELECTED_EMPLOYEE\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\tif (request.employeeIds) {\r\n\t\t\t\temployeeIds = request.employeeIds;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst user = RequestContext.currentUser();\r\n\t\t\temployeeIds = [user.employeeId];\r\n\t\t}\r\n\r\n\t\tqb.where({\r\n\t\t\tdeletedAt: null\r\n\t\t});\r\n\t\tif (request.timesheetId) {\r\n\t\t\tqb.andWhere('\"timesheetId\" = :timesheetId', {\r\n\t\t\t\ttimesheetId: request.timesheetId\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (request.startDate && request.endDate) {\r\n\t\t\tconst startDate = moment.utc(request.startDate).format();\r\n\t\t\tconst endDate = moment.utc(request.endDate).format();\r\n\t\t\tconsole.log({ startDate, endDate });\r\n\t\t\tqb.andWhere(\r\n\t\t\t\t`\"${qb.alias}\".\"startedAt\" Between :startDate AND :endDate`,\r\n\t\t\t\t{\r\n\t\t\t\t\tstartDate,\r\n\t\t\t\t\tendDate\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tif (employeeIds) {\r\n\t\t\tqb.andWhere(`\"${qb.alias}\".\"employeeId\" IN (:...employeeId)`, {\r\n\t\t\t\temployeeId: employeeIds\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (request.projectIds) {\r\n\t\t\tqb.andWhere(`\"${qb.alias}\".\"projectId\" IN (:...projectIds)`, {\r\n\t\t\t\tprojectIds: request.projectIds\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (request.activityLevel) {\r\n\t\t\t// qb.andWhere('\"overall\" BETWEEN :start AND :end', request.activityLevel);\r\n\t\t}\r\n\t\tif (request.source) {\r\n\t\t\tif (request.source instanceof Array) {\r\n\t\t\t\tqb.andWhere(`\"${qb.alias}\".\"source\" IN (:...source)`, {\r\n\t\t\t\t\tsource: request.source\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tqb.andWhere(`\"${qb.alias}\".\"source\" = :source`, {\r\n\t\t\t\t\tsource: request.source\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (request.logType) {\r\n\t\t\tif (request.logType instanceof Array) {\r\n\t\t\t\tqb.andWhere(`\"${qb.alias}\".\"logType\" IN (:...logType)`, {\r\n\t\t\t\t\tlogType: request.logType\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tqb.andWhere(`\"${qb.alias}\".\"logType\" = :logType`, {\r\n\t\t\t\t\tlogType: request.logType\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// check organization and tenant for timelogs\r\n\t\tif (request.organizationId) {\r\n\t\t\tqb.andWhere(`\"${qb.alias}\".\"organizationId\" = :organizationId`, {\r\n\t\t\t\torganizationId: request.organizationId\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tconst tenantId = RequestContext.currentTenantId();\r\n\t\tif (tenantId) {\r\n\t\t\tqb.andWhere(`\"${qb.alias}\".\"tenantId\" = :tenantId`, {\r\n\t\t\t\ttenantId\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn qb;\r\n\t}\r\n\r\n\tasync addManualTime(request: IManualTimeInput): Promise<TimeLog> {\r\n\t\tif (!request.startedAt || !request.stoppedAt) {\r\n\t\t\tthrow new BadRequestException(\r\n\t\t\t\t'Please select valid Date, start time and end time'\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tconst employee = await this.employeeRepository.findOne(\r\n\t\t\trequest.employeeId,\r\n\t\t\t{ relations: ['organization'] }\r\n\t\t);\r\n\r\n\t\tconst isDateAllow = this.allowDate(\r\n\t\t\trequest.startedAt,\r\n\t\t\trequest.stoppedAt,\r\n\t\t\temployee.organization\r\n\t\t);\r\n\t\tif (!isDateAllow) {\r\n\t\t\tthrow new BadRequestException(\r\n\t\t\t\t'Please select valid Date, start time and end time'\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tconst conflict = await this.checkConflictTime({\r\n\t\t\temployeeId: request.employeeId,\r\n\t\t\tstartDate: request.startedAt,\r\n\t\t\tendDate: request.stoppedAt,\r\n\t\t\t...(request.id ? { ignoreId: request.id } : {})\r\n\t\t});\r\n\r\n\t\tconst times: IDateRange = {\r\n\t\t\tstart: new Date(request.startedAt),\r\n\t\t\tend: new Date(request.stoppedAt)\r\n\t\t};\r\n\r\n\t\tfor (let index = 0; index < conflict.length; index++) {\r\n\t\t\tawait this.commandBus.execute(\r\n\t\t\t\tnew DeleteTimeSpanCommand(times, conflict[index])\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tconst timeLog = await this.commandBus.execute(\r\n\t\t\tnew TimeLogCreateCommand(request)\r\n\t\t);\r\n\r\n\t\treturn timeLog;\r\n\t}\r\n\r\n\tasync updateTime(id: string, request: IManualTimeInput): Promise<TimeLog> {\r\n\t\tif (!request.startedAt || !request.stoppedAt) {\r\n\t\t\tthrow new BadRequestException(\r\n\t\t\t\t'Please select valid Date start and end time'\r\n\t\t\t);\r\n\t\t}\r\n\t\tconst employee = await this.employeeRepository.findOne(\r\n\t\t\trequest.employeeId,\r\n\t\t\t{ relations: ['organization'] }\r\n\t\t);\r\n\t\tconst isDateAllow = this.allowDate(\r\n\t\t\trequest.startedAt,\r\n\t\t\trequest.stoppedAt,\r\n\t\t\temployee.organization\r\n\t\t);\r\n\r\n\t\tif (!isDateAllow) {\r\n\t\t\tthrow new BadRequestException(\r\n\t\t\t\t'Please select valid Date start and end time'\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tconst timeLog = await this.timeLogRepository.findOne(request.id);\r\n\t\tif (request.startedAt || request.stoppedAt) {\r\n\t\t\tconst conflict = await this.checkConflictTime({\r\n\t\t\t\temployeeId: timeLog.employeeId,\r\n\t\t\t\tstartDate: request.startedAt || timeLog.startedAt,\r\n\t\t\t\tendDate: request.stoppedAt || timeLog.stoppedAt,\r\n\t\t\t\t...(id ? { ignoreId: id } : {})\r\n\t\t\t});\r\n\r\n\t\t\tconst times: IDateRange = {\r\n\t\t\t\tstart: new Date(request.startedAt),\r\n\t\t\t\tend: new Date(request.stoppedAt)\r\n\t\t\t};\r\n\r\n\t\t\tfor (let index = 0; index < conflict.length; index++) {\r\n\t\t\t\tawait this.commandBus.execute(\r\n\t\t\t\t\tnew DeleteTimeSpanCommand(times, conflict[index])\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tawait this.commandBus.execute(\r\n\t\t\tnew TimeLogUpdateCommand(request, timeLog)\r\n\t\t);\r\n\r\n\t\treturn await this.timeLogRepository.findOne(request.id);\r\n\t}\r\n\r\n\tasync deleteTimeLog(ids: string | string[]): Promise<any> {\r\n\t\tconst user = RequestContext.currentUser();\r\n\t\tif (typeof ids === 'string') {\r\n\t\t\tids = [ids];\r\n\t\t}\r\n\r\n\t\tconst timeLogs = await this.timeLogRepository.find({\r\n\t\t\t...(RequestContext.hasPermission(\r\n\t\t\t\tPermissionsEnum.CHANGE_SELECTED_EMPLOYEE\r\n\t\t\t)\r\n\t\t\t\t? {}\r\n\t\t\t\t: { employeeId: user.employeeId }),\r\n\t\t\tid: In(ids)\r\n\t\t});\r\n\r\n\t\treturn await this.commandBus.execute(\r\n\t\t\tnew TimeLogDeleteCommand(timeLogs)\r\n\t\t);\r\n\t}\r\n\r\n\tasync checkConflictTime(request: IGetTimeLogConflictInput) {\r\n\t\treturn await this.commandBus.execute(\r\n\t\t\tnew IGetConflictTimeLogCommand(request)\r\n\t\t);\r\n\t}\r\n\r\n\tprivate allowDate(start: Date, end: Date, organization: Organization) {\r\n\t\tif (!moment.utc(start).isBefore(moment.utc(end))) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (organization.futureDateAllowed) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn moment(end).isSameOrBefore(moment());\r\n\t}\r\n}\r\n","import {\r\n\tEntity,\r\n\tColumn,\r\n\tRelationId,\r\n\tManyToOne,\r\n\tJoinColumn,\r\n\tUnique\r\n} from 'typeorm';\r\nimport { ITimeSlotMinute } from '@gauzy/models';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsNumber, IsDateString } from 'class-validator';\r\nimport { TimeSlot } from './time-slot.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('time_slot_minute')\r\n@Unique(['timeSlotId', 'datetime'])\r\nexport class TimeSlotMinute extends TenantOrganizationBase\r\n\timplements ITimeSlotMinute {\r\n\t@ApiProperty({ type: TimeSlot })\r\n\t@ManyToOne(() => TimeSlot, { nullable: true, onDelete: 'CASCADE' })\r\n\t@JoinColumn()\r\n\ttimeSlot?: TimeSlot;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@RelationId((activity: TimeSlotMinute) => activity.timeSlot)\r\n\t@Column()\r\n\ttimeSlotId?: string;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@IsNumber()\r\n\t@Column({ default: 0 })\r\n\tkeyboard?: number;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@IsNumber()\r\n\t@Column({ default: 0 })\r\n\tmouse?: number;\r\n\r\n\t@ApiProperty({ type: 'timestamptz' })\r\n\t@IsDateString()\r\n\t@Column()\r\n\tdatetime?: Date;\r\n}\r\n","import {\r\n\tEntity,\r\n\tColumn,\r\n\tRelationId,\r\n\tManyToOne,\r\n\tJoinColumn,\r\n\tAfterLoad,\r\n\tOneToMany,\r\n\tManyToMany\r\n} from 'typeorm';\r\nimport {\r\n\tITimeSlot,\r\n\tITimeSlotMinute,\r\n\tIActivity,\r\n\tIScreenshot,\r\n\tIEmployee,\r\n\tITimeLog\r\n} from '@gauzy/models';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsNumber, IsDateString } from 'class-validator';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport * as moment from 'moment';\r\nimport { Screenshot } from './screenshot.entity';\r\nimport { TimeSlotMinute } from './time-slot-minute.entity';\r\nimport { TimeLog } from './time-log.entity';\r\nimport { Activity } from './activity.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('time_slot')\r\n// @Unique(['employeeId', 'startedAt'])\r\nexport class TimeSlot extends TenantOrganizationBase implements ITimeSlot {\r\n\t@ApiProperty({ type: Employee })\r\n\t@ManyToOne(() => Employee)\r\n\t@JoinColumn()\r\n\temployee?: IEmployee;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@RelationId((timeSlot: TimeSlot) => timeSlot.employee)\r\n\t@Column()\r\n\temployeeId: string;\r\n\r\n\t@ApiProperty({ type: Screenshot })\r\n\t@OneToMany(() => Screenshot, (screenshot) => screenshot.timeSlot, {\r\n\t\tcascade: true,\r\n\t\tonDelete: 'CASCADE'\r\n\t})\r\n\t@JoinColumn()\r\n\tscreenshots?: IScreenshot[];\r\n\r\n\t@ApiProperty({ type: Activity })\r\n\t@OneToMany(() => Activity, (activities) => activities.timeSlot, {\r\n\t\tcascade: true,\r\n\t\tonDelete: 'CASCADE'\r\n\t})\r\n\t@JoinColumn()\r\n\tactivities?: IActivity[];\r\n\r\n\t@ApiProperty({ type: TimeSlotMinute })\r\n\t@OneToMany(\r\n\t\t() => TimeSlotMinute,\r\n\t\t(timeSlotMinute) => timeSlotMinute.timeSlot,\r\n\t\t{\r\n\t\t\tcascade: true,\r\n\t\t\tonDelete: 'CASCADE'\r\n\t\t}\r\n\t)\r\n\t@JoinColumn()\r\n\ttimeSlotMinutes?: ITimeSlotMinute[];\r\n\r\n\t@ManyToMany(() => TimeLog, (timeLogs) => timeLogs.timeSlots)\r\n\ttimeLogs?: ITimeLog[];\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@IsNumber()\r\n\t@Column({ default: 0 })\r\n\tduration?: number;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@IsNumber()\r\n\t@Column({ default: 0 })\r\n\tkeyboard?: number;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@IsNumber()\r\n\t@Column({ default: 0 })\r\n\tmouse?: number;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@IsNumber()\r\n\t@Column({ default: 0 })\r\n\toverall?: number;\r\n\r\n\t@ApiProperty({ type: 'timestamptz' })\r\n\t@IsDateString()\r\n\t@Column()\r\n\tstartedAt: Date;\r\n\r\n\tstoppedAt?: Date;\r\n\t@AfterLoad()\r\n\tgetStoppedAt?() {\r\n\t\tthis.stoppedAt = moment(this.startedAt).add(10, 'minutes').toDate();\r\n\t}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { ITimeSlotMinute } from '@gauzy/models';\r\n\r\nexport class CreateTimeSlotMinutesCommand implements ICommand {\r\n\tstatic readonly type = '[TimeSlotMinutes] create';\r\n\r\n\tconstructor(public readonly input: ITimeSlotMinute) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { ITimeSlot } from '@gauzy/models';\r\n\r\nexport class CreateTimeSlotCommand implements ICommand {\r\n\tstatic readonly type = '[TimeSlot] create';\r\n\r\n\tconstructor(public readonly input: ITimeSlot) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class DeleteTimeSlotCommand implements ICommand {\r\n\tstatic readonly type = '[TimeSlot] delete';\r\n\r\n\tconstructor(public readonly ids: string[]) {}\r\n}\r\n","import { CommandHandler, ICommandHandler, CommandBus } from '@nestjs/cqrs';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { CreateTimeSlotMinutesCommand } from '../create-time-slot-minutes.command';\r\nimport { TimeSlotMinute } from '../../../time-slot-minute.entity';\r\nimport { UpdateTimeSlotMinutesCommand } from '../update-time-slot-minutes.command';\r\nimport { RequestContext } from 'src/app/core/context';\r\n\r\n@CommandHandler(CreateTimeSlotMinutesCommand)\r\nexport class CreateTimeSlotMinutesHandler\r\n\timplements ICommandHandler<CreateTimeSlotMinutesCommand> {\r\n\tconstructor(\r\n\t\t@InjectRepository(TimeSlotMinute)\r\n\t\tprivate readonly timeSlotMinuteRepository: Repository<TimeSlotMinute>,\r\n\t\tprivate readonly commandBus: CommandBus\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: CreateTimeSlotMinutesCommand\r\n\t): Promise<TimeSlotMinute> {\r\n\t\tconst { input } = command;\r\n\r\n\t\tconst timeMinute = await this.timeSlotMinuteRepository.findOne({\r\n\t\t\twhere: {\r\n\t\t\t\ttimeSlot: input.timeSlot,\r\n\t\t\t\tdatetime: input.datetime\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (timeMinute) {\r\n\t\t\treturn this.commandBus.execute(\r\n\t\t\t\tnew UpdateTimeSlotMinutesCommand(timeMinute.id, {\r\n\t\t\t\t\t...input,\r\n\t\t\t\t\ttimeSlotId: timeMinute.id\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tinput.tenantId = RequestContext.currentTenantId();\r\n\t\t\treturn this.timeSlotMinuteRepository.save(input);\r\n\t\t}\r\n\t}\r\n}\r\n","import { CommandBus, CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { In, Repository } from 'typeorm';\r\nimport { PermissionsEnum } from '@gauzy/models';\r\nimport { RequestContext } from 'src/app/core/context';\r\nimport * as moment from 'moment';\r\nimport { CreateTimeSlotCommand } from '../create-time-slot.command';\r\nimport { TimeSlot } from '../../../time-slot.entity';\r\nimport { TimeLog } from '../../../time-log.entity';\r\nimport * as _ from 'underscore';\r\nimport { Employee } from 'src/app/employee/employee.entity';\r\nimport { BulkActivitiesSaveCommand } from '../../../activity/commands/bulk-activities-save.command';\r\n\r\n@CommandHandler(CreateTimeSlotCommand)\r\nexport class CreateTimeSlotHandler\r\n\timplements ICommandHandler<CreateTimeSlotCommand> {\r\n\tconstructor(\r\n\t\t@InjectRepository(TimeSlot)\r\n\t\tprivate readonly timeSlotRepository: Repository<TimeSlot>,\r\n\t\t@InjectRepository(TimeLog)\r\n\t\tprivate readonly timeLogRepository: Repository<TimeLog>,\r\n\t\t@InjectRepository(Employee)\r\n\t\tprivate readonly employeeRepository: Repository<Employee>,\r\n\t\tprivate readonly commandBus: CommandBus\r\n\t) {}\r\n\r\n\tpublic async execute(command: CreateTimeSlotCommand): Promise<TimeSlot> {\r\n\t\tconst { input } = command;\r\n\r\n\t\tif (\r\n\t\t\t!RequestContext.hasPermission(\r\n\t\t\t\tPermissionsEnum.CHANGE_SELECTED_EMPLOYEE\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\tconst user = RequestContext.currentUser();\r\n\t\t\tinput.employeeId = user.employeeId;\r\n\t\t}\r\n\t\tinput.startedAt = moment(input.startedAt)\r\n\t\t\t//.set('minute', 0)\r\n\t\t\t.set('millisecond', 0)\r\n\t\t\t.toDate();\r\n\r\n\t\tlet timeSlot = await this.timeSlotRepository.findOne({\r\n\t\t\twhere: {\r\n\t\t\t\temployeeId: input.employeeId,\r\n\t\t\t\tstartedAt: input.startedAt\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (!timeSlot) {\r\n\t\t\ttimeSlot = new TimeSlot(_.omit(input, ['timeLogId']));\r\n\t\t\t// await this.timeSlotRepository.update(timeSlot.id, input);\r\n\t\t}\r\n\r\n\t\tif (input.timeLogId) {\r\n\t\t\tlet timeLogIds = [];\r\n\t\t\tif (input.timeLogId instanceof Array) {\r\n\t\t\t\ttimeLogIds = input.timeLogId;\r\n\t\t\t} else {\r\n\t\t\t\ttimeLogIds = [input.timeLogId];\r\n\t\t\t}\r\n\t\t\ttimeSlot.timeLogs = await this.timeLogRepository.find({\r\n\t\t\t\tid: In(timeLogIds)\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\ttimeSlot.timeLogs = await this.timeLogRepository\r\n\t\t\t\t.createQueryBuilder()\r\n\t\t\t\t.where(`:startedAt BETWEEN \"startedAt\" AND \"stoppedAt\"`, {\r\n\t\t\t\t\tstartedAt: timeSlot.startedAt\r\n\t\t\t\t})\r\n\t\t\t\t.orWhere('\"startedAt\" <= :startedAt AND \"stoppedAt\" IS NULL', {\r\n\t\t\t\t\tstartedAt: timeSlot.startedAt\r\n\t\t\t\t})\r\n\t\t\t\t.getMany();\r\n\t\t}\r\n\r\n\t\tif (input.activities) {\r\n\t\t\ttimeSlot.activities = await this.commandBus.execute(\r\n\t\t\t\tnew BulkActivitiesSaveCommand({\r\n\t\t\t\t\temployeeId: timeSlot.employeeId,\r\n\t\t\t\t\tprojectId:\r\n\t\t\t\t\t\ttimeSlot.timeLogs && timeSlot.timeLogs.length > 0\r\n\t\t\t\t\t\t\t? timeSlot.timeLogs[0].projectId\r\n\t\t\t\t\t\t\t: null,\r\n\t\t\t\t\tactivities: input.activities\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t\ttimeSlot.tenantId = RequestContext.currentTenantId();\r\n\t\tif (!timeSlot.organizationId) {\r\n\t\t\tconst employee = await this.employeeRepository.findOne(\r\n\t\t\t\tinput.employeeId\r\n\t\t\t);\r\n\t\t\ttimeSlot.organizationId = employee.organizationId;\r\n\t\t}\r\n\r\n\t\tconsole.log({ timeSlot });\r\n\r\n\t\tawait this.timeSlotRepository.save(timeSlot);\r\n\r\n\t\ttimeSlot = await this.timeSlotRepository.findOne(timeSlot.id, {\r\n\t\t\trelations: ['timeLogs', 'screenshots']\r\n\t\t});\r\n\t\treturn timeSlot;\r\n\t}\r\n}\r\n","import { CommandHandler, ICommandHandler, CommandBus } from '@nestjs/cqrs';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository, In } from 'typeorm';\r\nimport { TimeSlot } from '../../../time-slot.entity';\r\nimport { DeleteTimeSpanCommand } from '../../../time-log/commands/delete-time-span.command';\r\nimport { DeleteTimeSlotCommand } from '../delete-time-slot.command';\r\n\r\n@CommandHandler(DeleteTimeSlotCommand)\r\nexport class DeleteTimeSlotHandler\r\n\timplements ICommandHandler<DeleteTimeSlotCommand> {\r\n\tconstructor(\r\n\t\t@InjectRepository(TimeSlot)\r\n\t\tprivate readonly timeSlotRepository: Repository<TimeSlot>,\r\n\t\tprivate readonly commandBus: CommandBus\r\n\t) {}\r\n\r\n\tpublic async execute(command: DeleteTimeSlotCommand): Promise<boolean> {\r\n\t\tconst { ids } = command;\r\n\r\n\t\tconst timeSlots = await this.timeSlotRepository.find({\r\n\t\t\twhere: { id: In(ids) }\r\n\t\t});\r\n\t\tfor (let i = 0; i < ids.length; i++) {\r\n\t\t\tconst timeSlot = await this.timeSlotRepository.findOne({\r\n\t\t\t\twhere: {\r\n\t\t\t\t\tstartedAt: timeSlots[i].startedAt\r\n\t\t\t\t},\r\n\t\t\t\trelations: ['timeLogs']\r\n\t\t\t});\r\n\t\t\tif (timeSlot && timeSlot.timeLogs.length > 0) {\r\n\t\t\t\tconst deleteSlotPromise = timeSlot.timeLogs.map(\r\n\t\t\t\t\tasync (timeLog) => {\r\n\t\t\t\t\t\tawait this.commandBus.execute(\r\n\t\t\t\t\t\t\tnew DeleteTimeSpanCommand(\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tstart: timeSlot.startedAt,\r\n\t\t\t\t\t\t\t\t\tend: timeSlot.stoppedAt\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\ttimeLog\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\r\n\t\t\t\tawait Promise.all(deleteSlotPromise);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n}\r\n","import { CreateTimeSlotHandler } from './create-time-slot.handler';\r\nimport { UpdateTimeSlotHandler } from './update-time-slot.handler';\r\nimport { CreateTimeSlotMinutesHandler } from './create-time-slot-minutes.handler';\r\nimport { UpdateTimeSlotMinutesHandler } from './update-time-slot-minutes.handler';\r\nimport { TimeSlotBulkCreateOrUpdateHandler } from './time-slot-bulk-create-or-update.handler';\r\nimport { TimeSlotBulkCreateHandler } from './time-slot-bulk-create.handler';\r\nimport { DeleteTimeSlotHandler } from './delete-time-slot.handler';\r\nimport { TimeSlotRangeDeleteHandler } from './time-slot-range-delete.handler';\r\nimport { TimeSlotMergeHandler } from './time-slot-merge.handler';\r\n\r\nexport const TimeSlotCommandHandlers = [\r\n\tCreateTimeSlotHandler,\r\n\tUpdateTimeSlotHandler,\r\n\tDeleteTimeSlotHandler,\r\n\tTimeSlotBulkCreateOrUpdateHandler,\r\n\tTimeSlotBulkCreateHandler,\r\n\tCreateTimeSlotMinutesHandler,\r\n\tUpdateTimeSlotMinutesHandler,\r\n\tTimeSlotRangeDeleteHandler,\r\n\tTimeSlotMergeHandler\r\n];\r\n","import { CommandBus, CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository, In } from 'typeorm';\r\nimport * as moment from 'moment';\r\nimport { TimeSlot } from '../../../time-slot.entity';\r\nimport * as _ from 'underscore';\r\nimport { TimeSlotBulkCreateOrUpdateCommand } from '../time-slot-bulk-create-or-update.command';\r\nimport { RequestContext } from 'src/app/core/context';\r\nimport { Employee } from 'src/app/employee/employee.entity';\r\nimport { TimeLog } from '../../../time-log.entity';\r\nimport { TimeSlotMergeCommand } from '../time-slot-merge.command';\r\n\r\n@CommandHandler(TimeSlotBulkCreateOrUpdateCommand)\r\nexport class TimeSlotBulkCreateOrUpdateHandler\r\n\timplements ICommandHandler<TimeSlotBulkCreateOrUpdateCommand> {\r\n\tconstructor(\r\n\t\t@InjectRepository(TimeLog)\r\n\t\tprivate readonly timeLogRepository: Repository<TimeLog>,\r\n\t\t@InjectRepository(TimeSlot)\r\n\t\tprivate readonly timeSlotRepository: Repository<TimeSlot>,\r\n\t\t@InjectRepository(Employee)\r\n\t\tprivate readonly employeeRepository: Repository<Employee>,\r\n\t\tprivate readonly commandBus: CommandBus\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: TimeSlotBulkCreateOrUpdateCommand\r\n\t): Promise<TimeSlot[]> {\r\n\t\tlet { slots } = command;\r\n\r\n\t\tif (slots.length === 0) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tslots = slots.map((slot) => {\r\n\t\t\tslot.startedAt = moment.utc(slot.startedAt).toDate();\r\n\t\t\treturn slot;\r\n\t\t});\r\n\t\tconst insertedSlots = await this.timeSlotRepository.find({\r\n\t\t\twhere: {\r\n\t\t\t\tstartedAt: In(_.pluck(slots, 'startedAt'))\r\n\t\t\t},\r\n\t\t\trelations: ['timeLogs']\r\n\t\t});\r\n\r\n\t\tlet organizationId;\r\n\t\tif (!slots[0].organizationId) {\r\n\t\t\tconst employee = await this.employeeRepository.findOne(\r\n\t\t\t\tslots[0].employeeId\r\n\t\t\t);\r\n\t\t\torganizationId = employee.organizationId;\r\n\t\t} else {\r\n\t\t\torganizationId = slots[0].organizationId;\r\n\t\t}\r\n\r\n\t\tconst newSlotsTimeLogIds: any = _.chain(slots)\r\n\t\t\t.map((slot) => _.pluck(slot.timeLogs, 'id'))\r\n\t\t\t.flatten()\r\n\t\t\t.value();\r\n\t\tconst oldSlotsTimeLogIds: any = _.chain(insertedSlots)\r\n\t\t\t.map((slot) => _.pluck(slot.timeLogs, 'id'))\r\n\t\t\t.flatten()\r\n\t\t\t.value();\r\n\r\n\t\tconst timeLogIds = _.chain(oldSlotsTimeLogIds)\r\n\t\t\t.concat(newSlotsTimeLogIds)\r\n\t\t\t.uniq()\r\n\t\t\t.values()\r\n\t\t\t.value();\r\n\r\n\t\tconst timeLogs = await this.timeLogRepository.find({\r\n\t\t\twhere: {\r\n\t\t\t\tid: In(timeLogIds)\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (insertedSlots.length > 0) {\r\n\t\t\tslots = slots.map((slot) => {\r\n\t\t\t\tconst oldSlot = insertedSlots.find(\r\n\t\t\t\t\t(insertedSlot) =>\r\n\t\t\t\t\t\tmoment(insertedSlot.startedAt).format(\r\n\t\t\t\t\t\t\t'YYYY-MM-DD HH:mm'\r\n\t\t\t\t\t\t) === moment(slot.startedAt).format('YYYY-MM-DD HH:mm')\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (oldSlot) {\r\n\t\t\t\t\toldSlot.keyboard = oldSlot.keyboard + slot.keyboard;\r\n\t\t\t\t\toldSlot.mouse = oldSlot.mouse + slot.mouse;\r\n\t\t\t\t\toldSlot.overall = oldSlot.overall + slot.overall;\r\n\t\t\t\t\tconst foundTimeLogs = _.where(timeLogs, {\r\n\t\t\t\t\t\tid: oldSlotsTimeLogIds\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif (foundTimeLogs.length > 0) {\r\n\t\t\t\t\t\toldSlot.timeLogs = oldSlot.timeLogs.concat(\r\n\t\t\t\t\t\t\tfoundTimeLogs\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\toldSlot.timeLogs = _.uniq(oldSlot.timeLogs, 'id');\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn oldSlot;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (!slot.organizationId) {\r\n\t\t\t\t\t\tslot.organizationId = organizationId;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tslot.tenantId = RequestContext.currentTenantId();\r\n\t\t\t\t\treturn slot;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tawait this.timeSlotRepository.save(slots);\r\n\r\n\t\tconst dates = slots.map((slot) => moment.utc(slot.startedAt).toDate());\r\n\t\tconst mnDate = dates.reduce(function (a, b) {\r\n\t\t\treturn a < b ? a : b;\r\n\t\t});\r\n\t\tconst mxDate = dates.reduce(function (a, b) {\r\n\t\t\treturn a > b ? a : b;\r\n\t\t});\r\n\t\treturn await this.commandBus.execute(\r\n\t\t\tnew TimeSlotMergeCommand(slots[0].employeeId, mnDate, mxDate)\r\n\t\t);\r\n\t}\r\n}\r\n","import { CommandBus, CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository, In } from 'typeorm';\r\nimport * as moment from 'moment';\r\nimport { TimeSlot } from '../../../time-slot.entity';\r\nimport * as _ from 'underscore';\r\nimport { TimeSlotBulkCreateCommand } from '../time-slot-bulk-create.command';\r\nimport { RequestContext } from 'src/app/core/context';\r\nimport { Employee } from 'src/app/employee/employee.entity';\r\nimport { TimeLog } from '../../../time-log.entity';\r\nimport { TimeSlotMergeCommand } from '../time-slot-merge.command';\r\n\r\n@CommandHandler(TimeSlotBulkCreateCommand)\r\nexport class TimeSlotBulkCreateHandler\r\n\timplements ICommandHandler<TimeSlotBulkCreateCommand> {\r\n\tconstructor(\r\n\t\t@InjectRepository(TimeLog)\r\n\t\tprivate readonly timeLogRepository: Repository<TimeLog>,\r\n\t\t@InjectRepository(TimeSlot)\r\n\t\tprivate readonly timeSlotRepository: Repository<TimeSlot>,\r\n\t\t@InjectRepository(Employee)\r\n\t\tprivate readonly employeeRepository: Repository<Employee>,\r\n\t\tprivate readonly commandBus: CommandBus\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: TimeSlotBulkCreateCommand\r\n\t): Promise<TimeSlot[]> {\r\n\t\tlet { slots } = command;\r\n\r\n\t\tif (slots.length === 0) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tslots = slots.map((slot) => {\r\n\t\t\tslot.startedAt = moment.utc(slot.startedAt).toDate();\r\n\t\t\treturn slot;\r\n\t\t});\r\n\r\n\t\tconst insertedSlots = await this.timeSlotRepository.find({\r\n\t\t\twhere: {\r\n\t\t\t\tstartedAt: In(_.pluck(slots, 'startedAt')),\r\n\t\t\t\t...(slots[0].employeeId\r\n\t\t\t\t\t? { employeeId: slots[0].employeeId }\r\n\t\t\t\t\t: {})\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (insertedSlots.length > 0) {\r\n\t\t\tslots = slots.filter(\r\n\t\t\t\t(slot) =>\r\n\t\t\t\t\t!insertedSlots.find(\r\n\t\t\t\t\t\t(insertedSlot) =>\r\n\t\t\t\t\t\t\tmoment(insertedSlot.startedAt).format(\r\n\t\t\t\t\t\t\t\t'YYYY-MM-DD HH:mm'\r\n\t\t\t\t\t\t\t) ===\r\n\t\t\t\t\t\t\tmoment(slot.startedAt).format('YYYY-MM-DD HH:mm')\r\n\t\t\t\t\t)\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tif (slots.length === 0) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tlet organizationId;\r\n\t\tif (!slots[0].organizationId) {\r\n\t\t\tconst employee = await this.employeeRepository.findOne(\r\n\t\t\t\tslots[0].employeeId\r\n\t\t\t);\r\n\t\t\torganizationId = employee.organizationId;\r\n\t\t} else {\r\n\t\t\torganizationId = slots[0].organizationId;\r\n\t\t}\r\n\r\n\t\tconst timeLogs = await this.timeLogRepository.find({\r\n\t\t\twhere: {\r\n\t\t\t\tid: In(_.chain(slots).pluck('timeLogId').flatten().value())\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tslots = slots.map((slot) => {\r\n\t\t\tlet timeLogIds: any;\r\n\t\t\tif (slot.timeLogId instanceof Array) {\r\n\t\t\t\ttimeLogIds = slot.timeLogId;\r\n\t\t\t} else {\r\n\t\t\t\ttimeLogIds = [slot.timeLogId];\r\n\t\t\t}\r\n\t\t\tslot.timeLogs = _.where(timeLogs, { id: timeLogIds });\r\n\r\n\t\t\tif (!slot.organizationId) {\r\n\t\t\t\tslot.organizationId = organizationId;\r\n\t\t\t}\r\n\t\t\tslot.tenantId = RequestContext.currentTenantId();\r\n\t\t\treturn slot;\r\n\t\t});\r\n\r\n\t\tif (slots.length > 0) {\r\n\t\t\tawait this.timeSlotRepository.save(slots);\r\n\t\t}\r\n\t\tslots = insertedSlots.concat(slots);\r\n\r\n\t\tconst dates = slots.map((slot) => moment(slot.startedAt).toDate());\r\n\t\tconst mnDate = dates.reduce(function (a, b) {\r\n\t\t\treturn a < b ? a : b;\r\n\t\t});\r\n\t\tconst mxDate = dates.reduce(function (a, b) {\r\n\t\t\treturn a > b ? a : b;\r\n\t\t});\r\n\t\treturn await this.commandBus.execute(\r\n\t\t\tnew TimeSlotMergeCommand(slots[0].employeeId, mnDate, mxDate)\r\n\t\t);\r\n\t}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository, Between, In, SelectQueryBuilder } from 'typeorm';\r\nimport * as moment from 'moment';\r\nimport { TimeSlot } from '../../../time-slot.entity';\r\nimport * as _ from 'underscore';\r\nimport { TimeSlotMergeCommand } from '../time-slot-merge.command';\r\nimport { Screenshot } from '../../../screenshot.entity';\r\nimport { TimeLog } from '../../../time-log.entity';\r\n\r\n@CommandHandler(TimeSlotMergeCommand)\r\nexport class TimeSlotMergeHandler\r\n\timplements ICommandHandler<TimeSlotMergeCommand> {\r\n\tconstructor(\r\n\t\t@InjectRepository(TimeSlot)\r\n\t\tprivate readonly timeSlotRepository: Repository<TimeSlot>,\r\n\t\t@InjectRepository(Screenshot)\r\n\t\tprivate readonly screenshotRepository: Repository<Screenshot>\r\n\t) {}\r\n\r\n\tpublic async execute(command: TimeSlotMergeCommand) {\r\n\t\tlet { employeeId, start, end } = command;\r\n\r\n\t\tlet startMinute = moment(start).get('minute');\r\n\t\tstartMinute = startMinute - (startMinute % 10);\r\n\t\tstart = moment(start)\r\n\t\t\t.set('minute', startMinute)\r\n\t\t\t.set('millisecond', 0)\r\n\t\t\t.toDate();\r\n\r\n\t\tlet endMinute = moment(end).get('minute');\r\n\t\tendMinute = endMinute - (endMinute % 10);\r\n\t\tend = moment(end)\r\n\t\t\t.set('minute', endMinute + 10)\r\n\t\t\t.set('millisecond', 0)\r\n\t\t\t.toDate();\r\n\r\n\t\tconst timerSlots = await this.timeSlotRepository.find({\r\n\t\t\twhere: (qb: SelectQueryBuilder<TimeSlot>) => {\r\n\t\t\t\tqb.where(\r\n\t\t\t\t\t`\"${qb.alias}\".\"startedAt\" >= :start AND \"${qb.alias}\".\"startedAt\" <= :end`,\r\n\t\t\t\t\t{ start, end }\r\n\t\t\t\t).andWhere(`\"${qb.alias}\".\"employeeId\" >= :employeeId`, {\r\n\t\t\t\t\temployeeId\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\trelations: ['timeLogs', 'screenshots']\r\n\t\t});\r\n\r\n\t\tif (timerSlots.length > 0) {\r\n\t\t\tconst savePromises = _.chain(timerSlots)\r\n\t\t\t\t.groupBy((timeSlots) => {\r\n\t\t\t\t\tlet date = moment.utc(timeSlots.startedAt);\r\n\t\t\t\t\tconst minutes = date.get('minute');\r\n\t\t\t\t\tdate = date\r\n\t\t\t\t\t\t.set('minute', minutes - (minutes % 10))\r\n\t\t\t\t\t\t.set('second', 0)\r\n\t\t\t\t\t\t.set('millisecond', 0);\r\n\t\t\t\t\treturn date.format('YYYY-MM-DD HH:mm:ss');\r\n\t\t\t\t})\r\n\t\t\t\t.mapObject(async (timeSlots, slotStart) => {\r\n\t\t\t\t\tlet timeLogs: TimeLog[] = [];\r\n\t\t\t\t\tlet screenshots: Screenshot[] = [];\r\n\t\t\t\t\tlet duration = 0;\r\n\t\t\t\t\tfor (let index = 0; index < timeSlots.length; index++) {\r\n\t\t\t\t\t\tconst timeSlot = timeSlots[index];\r\n\t\t\t\t\t\tduration =\r\n\t\t\t\t\t\t\tduration + parseInt(timeSlot.duration + '', 10);\r\n\t\t\t\t\t\tscreenshots = screenshots.concat(timeSlot.screenshots);\r\n\t\t\t\t\t\ttimeLogs = timeLogs.concat(timeSlot.timeLogs);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tscreenshots = screenshots.map(\r\n\t\t\t\t\t\t(screenshot) =>\r\n\t\t\t\t\t\t\tnew Screenshot(_.omit(screenshot, ['timeSlotId']))\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tconst newTimeSlot = new TimeSlot({\r\n\t\t\t\t\t\t..._.omit(timeSlots[0]),\r\n\t\t\t\t\t\tduration,\r\n\t\t\t\t\t\tscreenshots,\r\n\t\t\t\t\t\ttimeLogs,\r\n\t\t\t\t\t\tstartedAt: moment.utc(slotStart).toDate()\r\n\t\t\t\t\t});\r\n\t\t\t\t\t// await this.screenshotRepository.save(screenshots);\r\n\t\t\t\t\tawait this.timeSlotRepository.save(newTimeSlot);\r\n\t\t\t\t\tconst ids = _.pluck(timeSlots, 'id');\r\n\t\t\t\t\tids.splice(0, 1);\r\n\t\t\t\t\tif (ids.length > 0) {\r\n\t\t\t\t\t\tawait this.timeSlotRepository.delete({\r\n\t\t\t\t\t\t\tid: In(ids)\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.values()\r\n\t\t\t\t.value();\r\n\t\t\tawait Promise.all(savePromises);\r\n\t\t}\r\n\t}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository, Between } from 'typeorm';\r\nimport { TimeSlot } from '../../../time-slot.entity';\r\nimport { TimeSlotRangeDeleteCommand } from '../time-slot-range-delete.command';\r\nimport * as moment from 'moment';\r\n\r\n@CommandHandler(TimeSlotRangeDeleteCommand)\r\nexport class TimeSlotRangeDeleteHandler\r\n\timplements ICommandHandler<TimeSlotRangeDeleteCommand> {\r\n\tconstructor(\r\n\t\t@InjectRepository(TimeSlot)\r\n\t\tprivate readonly timeSlotRepository: Repository<TimeSlot>\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: TimeSlotRangeDeleteCommand\r\n\t): Promise<boolean> {\r\n\t\tconst { employeeId, start, stop } = command;\r\n\r\n\t\tconst mStart = moment(start);\r\n\t\tmStart.set(\r\n\t\t\t'minute',\r\n\t\t\tmStart.get('minute') - (mStart.get('minute') % 10)\r\n\t\t);\r\n\t\tmStart.set('second', 0);\r\n\t\tmStart.set('millisecond', 0);\r\n\r\n\t\tconst mEnd = moment(stop);\r\n\t\tmEnd.set('minute', mEnd.get('minute') + (mEnd.get('minute') % 10) - 1);\r\n\t\tmEnd.set('second', 59);\r\n\t\tmEnd.set('millisecond', 0);\r\n\r\n\t\tawait this.timeSlotRepository.delete({\r\n\t\t\temployeeId: employeeId,\r\n\t\t\tstartedAt: Between(mStart.toDate(), mEnd.toDate())\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { TimeSlotMinute } from '../../../time-slot-minute.entity';\r\nimport { UpdateTimeSlotMinutesCommand } from '../update-time-slot-minutes.command';\r\n\r\n@CommandHandler(UpdateTimeSlotMinutesCommand)\r\nexport class UpdateTimeSlotMinutesHandler\r\n\timplements ICommandHandler<UpdateTimeSlotMinutesCommand> {\r\n\tconstructor(\r\n\t\t@InjectRepository(TimeSlotMinute)\r\n\t\tprivate readonly timeSlotMinuteRepository: Repository<TimeSlotMinute>\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: UpdateTimeSlotMinutesCommand\r\n\t): Promise<TimeSlotMinute> {\r\n\t\tconst { input, id } = command;\r\n\r\n\t\tlet timeMinute = await this.timeSlotMinuteRepository.findOne({\r\n\t\t\twhere: {\r\n\t\t\t\tid: id\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (timeMinute) {\r\n\t\t\tdelete input.timeSlotId;\r\n\t\t\tawait this.timeSlotMinuteRepository.update(id, input);\r\n\r\n\t\t\ttimeMinute = await this.timeSlotMinuteRepository.findOne(id, {\r\n\t\t\t\trelations: ['timeSlot']\r\n\t\t\t});\r\n\t\t\treturn timeMinute;\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { PermissionsEnum } from '@gauzy/models';\r\nimport { RequestContext } from 'src/app/core/context';\r\nimport * as moment from 'moment';\r\nimport { Activity } from '../../../activity.entity';\r\nimport { UpdateTimeSlotCommand } from '../update-time-slot.command';\r\nimport { TimeSlot } from '../../../time-slot.entity';\r\n\r\n@CommandHandler(UpdateTimeSlotCommand)\r\nexport class UpdateTimeSlotHandler\r\n\timplements ICommandHandler<UpdateTimeSlotCommand> {\r\n\tconstructor(\r\n\t\t@InjectRepository(TimeSlot)\r\n\t\tprivate readonly timeSlotRepository: Repository<TimeSlot>,\r\n\t\t@InjectRepository(Activity)\r\n\t\tprivate readonly activityRepository: Repository<Activity>\r\n\t) {}\r\n\r\n\tpublic async execute(command: UpdateTimeSlotCommand): Promise<TimeSlot> {\r\n\t\tconst { input, id } = command;\r\n\r\n\t\tlet employeeId = input.employeeId;\r\n\t\tif (\r\n\t\t\t!RequestContext.hasPermission(\r\n\t\t\t\tPermissionsEnum.CHANGE_SELECTED_EMPLOYEE\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\tconst user = RequestContext.currentUser();\r\n\t\t\temployeeId = user.employeeId;\r\n\t\t}\r\n\r\n\t\tlet timeSlot = await this.timeSlotRepository.findOne({\r\n\t\t\twhere: {\r\n\t\t\t\t...(employeeId ? { employeeId: employeeId } : {}),\r\n\t\t\t\tid: id\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (timeSlot) {\r\n\t\t\tif (input.startedAt) {\r\n\t\t\t\tinput.startedAt = moment(input.startedAt)\r\n\t\t\t\t\t//.set('minute', 0)\r\n\t\t\t\t\t.set('millisecond', 0)\r\n\t\t\t\t\t.toDate();\r\n\t\t\t}\r\n\r\n\t\t\tlet newActivites = [];\r\n\t\t\tif (input.activities) {\r\n\t\t\t\tnewActivites = input.activities.map((activity) => {\r\n\t\t\t\t\tactivity = new Activity(activity);\r\n\t\t\t\t\tactivity.employeeId = timeSlot.employeeId;\r\n\t\t\t\t\tactivity.tenantId = RequestContext.currentTenantId();\r\n\t\t\t\t\treturn activity;\r\n\t\t\t\t});\r\n\t\t\t\tawait this.activityRepository.save(newActivites);\r\n\t\t\t\tinput.activities = (timeSlot.activities || []).concat(\r\n\t\t\t\t\tnewActivites\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tawait this.timeSlotRepository.update(id, input);\r\n\r\n\t\t\ttimeSlot = await this.timeSlotRepository.findOne(id, {\r\n\t\t\t\trelations: ['timeLogs', 'screenshots', 'activities']\r\n\t\t\t});\r\n\t\t\treturn timeSlot;\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { ITimeSlot } from '@gauzy/models';\r\n\r\nexport class TimeSlotBulkCreateOrUpdateCommand implements ICommand {\r\n\tstatic readonly type = '[TimeSlot] bulk create / update';\r\n\r\n\tconstructor(public readonly slots: ITimeSlot[]) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { ITimeSlot } from '@gauzy/models';\r\n\r\nexport class TimeSlotBulkCreateCommand implements ICommand {\r\n\tstatic readonly type = '[TimeSlot] bulk create';\r\n\r\n\tconstructor(public readonly slots: ITimeSlot[]) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class TimeSlotMergeCommand implements ICommand {\r\n\tstatic readonly type = '[TimeSlot] mearge';\r\n\r\n\tconstructor(\r\n\t\tpublic readonly employeeId: string,\r\n\t\tpublic readonly start: Date,\r\n\t\tpublic readonly end: Date\r\n\t) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class TimeSlotRangeDeleteCommand implements ICommand {\r\n\tstatic readonly type = '[TimeSlot] delete';\r\n\r\n\tconstructor(\r\n\t\tpublic readonly employeeId: string,\r\n\t\tpublic readonly start: Date,\r\n\t\tpublic readonly stop: Date\r\n\t) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { ITimeSlotMinute } from '@gauzy/models';\r\n\r\nexport class UpdateTimeSlotMinutesCommand implements ICommand {\r\n\tstatic readonly type = '[TimeSlotMinutes] update';\r\n\r\n\tconstructor(\r\n\t\tpublic readonly id: string,\r\n\t\tpublic readonly input: ITimeSlotMinute\r\n\t) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { ITimeSlot } from '@gauzy/models';\r\n\r\nexport class UpdateTimeSlotCommand implements ICommand {\r\n\tstatic readonly type = '[TimeSlot] update';\r\n\r\n\tconstructor(public readonly id: string, public readonly input: ITimeSlot) {}\r\n}\r\n","import {\r\n\tController,\r\n\tUseGuards,\r\n\tGet,\r\n\tQuery,\r\n\tHttpStatus,\r\n\tDelete,\r\n\tParam,\r\n\tPost,\r\n\tBody,\r\n\tPut\r\n} from '@nestjs/common';\r\nimport { TimeSlot } from '../time-slot.entity';\r\nimport { CrudController } from '../../core/crud/crud.controller';\r\nimport { TimeSlotService } from './time-slot.service';\r\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { IGetTimeSlotInput } from '@gauzy/models';\r\nimport { FindOneOptions } from 'typeorm';\r\nimport { TenantPermissionGuard } from '../../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('TimeSlot')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller('time-slot')\r\nexport class TimeSlotController extends CrudController<TimeSlot> {\r\n\tconstructor(private readonly timeSlotService: TimeSlotService) {\r\n\t\tsuper(timeSlotService);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Get Time Slots' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@Get('/')\r\n\tasync getAll(@Query() entity: IGetTimeSlotInput): Promise<TimeSlot[]> {\r\n\t\treturn this.timeSlotService.getTimeSlots(entity);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Get Time Slots' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@Get('/:id')\r\n\tasync getOne(\r\n\t\t@Param() { id },\r\n\t\t@Query() option: FindOneOptions\r\n\t): Promise<TimeSlot> {\r\n\t\treturn this.timeSlotService.findOne(id, option);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Create or Update Time Slot' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@Post('/')\r\n\tasync create(@Body() entity: TimeSlot): Promise<TimeSlot> {\r\n\t\treturn this.timeSlotService.create(entity);\r\n\t}\r\n\r\n\t@Put('/:id')\r\n\tasync update(@Param() params, @Body() entity: TimeSlot): Promise<TimeSlot> {\r\n\t\treturn this.timeSlotService.update(params.id, entity);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Delete TimeSlot' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@Delete('/')\r\n\tasync deleteTimeSlot(@Query() { ids }) {\r\n\t\treturn this.timeSlotService.deleteTimeSlot(ids);\r\n\t}\r\n}\r\n","import * as faker from 'faker';\r\nimport { TimeSlot } from '../time-slot.entity';\r\nimport { generateTimeSlots } from './utils';\r\n\r\nexport function createTimeSlots(start, end) {\r\n\tconst timeSlots: TimeSlot[] = generateTimeSlots(start, end).map(\r\n\t\t(timeSlot) => {\r\n\t\t\tconst keyboard = faker.random.number(100);\r\n\t\t\tconst mouse = faker.random.number(100);\r\n\t\t\tconst overall = (keyboard + mouse) / 2;\r\n\r\n\t\t\tconst slot = new TimeSlot();\r\n\t\t\tslot.startedAt = timeSlot.startedAt;\r\n\t\t\tslot.stoppedAt = timeSlot.stoppedAt;\r\n\t\t\tslot.duration = timeSlot.duration;\r\n\t\t\tslot.screenshots = [];\r\n\t\t\tslot.timeSlotMinutes = [];\r\n\t\t\tslot.keyboard = keyboard;\r\n\t\t\tslot.mouse = mouse;\r\n\t\t\tslot.overall = Math.ceil(overall);\r\n\t\t\treturn slot;\r\n\t\t}\r\n\t);\r\n\r\n\treturn timeSlots;\r\n}\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository, SelectQueryBuilder } from 'typeorm';\r\nimport { CrudService } from '../../core/crud/crud.service';\r\nimport { TimeSlot } from '../time-slot.entity';\r\nimport { moment } from '../../core/moment-extend';\r\nimport { RequestContext } from '../../core/context/request-context';\r\nimport { PermissionsEnum, IGetTimeSlotInput } from '@gauzy/models';\r\nimport { TimeSlotMinute } from '../time-slot-minute.entity';\r\nimport { generateTimeSlots } from './utils';\r\nimport { CommandBus } from '@nestjs/cqrs';\r\nimport { CreateTimeSlotCommand } from './commands/create-time-slot.command';\r\nimport { UpdateTimeSlotCommand } from './commands/update-time-slot.command';\r\nimport { TimeSlotBulkCreateOrUpdateCommand } from './commands/time-slot-bulk-create-or-update.command';\r\nimport { TimeSlotBulkCreateCommand } from './commands/time-slot-bulk-create.command';\r\nimport { CreateTimeSlotMinutesCommand } from './commands/create-time-slot-minutes.command';\r\nimport { UpdateTimeSlotMinutesCommand } from './commands/update-time-slot-minutes.command';\r\nimport { DeleteTimeSlotCommand } from './commands/delete-time-slot.command';\r\nimport { TimeSlotRangeDeleteCommand } from './commands/time-slot-range-delete.command';\r\n\r\n@Injectable()\r\nexport class TimeSlotService extends CrudService<TimeSlot> {\r\n\tconstructor(\r\n\t\t@InjectRepository(TimeSlot)\r\n\t\tprivate readonly timeSlotRepository: Repository<TimeSlot>,\r\n\t\tprivate readonly commandBus: CommandBus\r\n\t) {\r\n\t\tsuper(timeSlotRepository);\r\n\t}\r\n\r\n\tasync getTimeSlots(request: IGetTimeSlotInput) {\r\n\t\tlet employeeIds: string[];\r\n\r\n\t\tif (\r\n\t\t\tRequestContext.hasPermission(\r\n\t\t\t\tPermissionsEnum.CHANGE_SELECTED_EMPLOYEE\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\tif (request.employeeIds) {\r\n\t\t\t\temployeeIds = request.employeeIds;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst user = RequestContext.currentUser();\r\n\t\t\temployeeIds = [user.employeeId];\r\n\t\t}\r\n\r\n\t\tconst logs = await this.timeSlotRepository.find({\r\n\t\t\tjoin: {\r\n\t\t\t\talias: 'time_slots',\r\n\t\t\t\tleftJoin: {\r\n\t\t\t\t\temployee: 'time_slots.employee',\r\n\t\t\t\t\ttimeLog: 'time_slots.timeLogs'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\trelations: [\r\n\t\t\t\t...(RequestContext.hasPermission(\r\n\t\t\t\t\tPermissionsEnum.CHANGE_SELECTED_EMPLOYEE\r\n\t\t\t\t)\r\n\t\t\t\t\t? ['employee', 'employee.user']\r\n\t\t\t\t\t: []),\r\n\t\t\t\t...(request.relations ? request.relations : [])\r\n\t\t\t],\r\n\t\t\twhere: (qb: SelectQueryBuilder<TimeSlot>) => {\r\n\t\t\t\tif (request.startDate && request.endDate) {\r\n\t\t\t\t\tconst startDate = moment\r\n\t\t\t\t\t\t.utc(request.startDate)\r\n\t\t\t\t\t\t.format('YYYY-MM-DD HH:mm:ss');\r\n\t\t\t\t\tconst endDate = moment\r\n\t\t\t\t\t\t.utc(request.endDate)\r\n\t\t\t\t\t\t.format('YYYY-MM-DD HH:mm:ss');\r\n\t\t\t\t\tqb.andWhere(\r\n\t\t\t\t\t\t`\"${qb.alias}\".\"startedAt\" Between :startDate AND :endDate`,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tstartDate,\r\n\t\t\t\t\t\t\tendDate\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tif (employeeIds) {\r\n\t\t\t\t\tqb.andWhere(\r\n\t\t\t\t\t\t`\"${qb.alias}\".\"employeeId\" IN (:...employeeId)`,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\temployeeId: employeeIds\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//check organization and tenant for timelogs\r\n\t\t\t\tif (request.organizationId) {\r\n\t\t\t\t\tqb.andWhere(\r\n\t\t\t\t\t\t`\"${qb.alias}\".\"organizationId\" = :organizationId`,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\torganizationId: request.organizationId\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tconst tenantId = RequestContext.currentTenantId();\r\n\t\t\t\tif (tenantId) {\r\n\t\t\t\t\tqb.andWhere(`\"${qb.alias}\".\"tenantId\" = :tenantId`, {\r\n\t\t\t\t\t\ttenantId\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (request.projectIds) {\r\n\t\t\t\t\tqb.andWhere('\"timeLog\".\"projectId\" IN (:...projectIds)', {\r\n\t\t\t\t\t\tprojectIds: request.projectIds\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif (request.activityLevel) {\r\n\t\t\t\t\tqb.andWhere(\r\n\t\t\t\t\t\t`\"${qb.alias}\".\"overall\" BETWEEN :start AND :end`,\r\n\t\t\t\t\t\trequest.activityLevel\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tif (request.source) {\r\n\t\t\t\t\tif (request.source instanceof Array) {\r\n\t\t\t\t\t\tqb.andWhere('\"timeLog\".\"source\" IN (:...source)', {\r\n\t\t\t\t\t\t\tsource: request.source\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tqb.andWhere('\"timeLog\".\"source\" = :source', {\r\n\t\t\t\t\t\t\tsource: request.source\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (request.logType) {\r\n\t\t\t\t\tif (request.logType instanceof Array) {\r\n\t\t\t\t\t\tqb.andWhere('\"timeLog\".\"logType\" IN (:...logType)', {\r\n\t\t\t\t\t\t\tlogType: request.logType\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tqb.andWhere('\"timeLog\".\"logType\" = :logType', {\r\n\t\t\t\t\t\t\tlogType: request.logType\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn logs;\r\n\t}\r\n\r\n\tasync bulkCreateOrUpdate(slots) {\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew TimeSlotBulkCreateOrUpdateCommand(slots)\r\n\t\t);\r\n\t}\r\n\r\n\tasync bulkCreate(slots) {\r\n\t\treturn this.commandBus.execute(new TimeSlotBulkCreateCommand(slots));\r\n\t}\r\n\r\n\tasync rangeDelete(employeeId: string, start: Date, stop: Date) {\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew TimeSlotRangeDeleteCommand(employeeId, start, stop)\r\n\t\t);\r\n\t}\r\n\r\n\tgenerateTimeSlots(start: Date, end: Date) {\r\n\t\treturn generateTimeSlots(start, end);\r\n\t}\r\n\r\n\tasync create(request: TimeSlot) {\r\n\t\treturn this.commandBus.execute(new CreateTimeSlotCommand(request));\r\n\t}\r\n\r\n\tasync update(id: string, request: TimeSlot) {\r\n\t\treturn this.commandBus.execute(new UpdateTimeSlotCommand(id, request));\r\n\t}\r\n\r\n\t/*\r\n\t *create time slot minute activity for specific timeslot\r\n\t */\r\n\tasync createTimeSlotMinute(request: TimeSlotMinute) {\r\n\t\t// const { keyboard, mouse, datetime, timeSlot } = request;\r\n\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew CreateTimeSlotMinutesCommand(request)\r\n\t\t);\r\n\t}\r\n\r\n\t/*\r\n\t * Update timeslot minute activity for specific timeslot\r\n\t */\r\n\tasync updateTimeSlotMinute(id: string, request: TimeSlotMinute) {\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew UpdateTimeSlotMinutesCommand(id, request)\r\n\t\t);\r\n\t}\r\n\r\n\tasync deleteTimeSlot(ids: string[]) {\r\n\t\treturn this.commandBus.execute(new DeleteTimeSlotCommand(ids));\r\n\t}\r\n}\r\n","import * as moment from 'moment';\r\n\r\nexport function generateTimeSlots(start: Date, end: Date) {\r\n\tlet mStart = moment(start);\r\n\tconst mEnd = moment(end);\r\n\r\n\tconst slots = [];\r\n\twhile (mStart.isBefore(mEnd)) {\r\n\t\tlet tempEnd: moment.Moment;\r\n\t\tlet duration = 0;\r\n\r\n\t\t/* Check start time is Rounded 10 minutes slot I.E 10:20, false if 10:14 */\r\n\t\tif (mStart.get('minute') % 10 === 0) {\r\n\t\t\ttempEnd = mStart.clone().add(10, 'minute');\r\n\t\t\tif (tempEnd.isBefore(mEnd)) {\r\n\t\t\t\tduration = tempEnd.diff(mStart, 'seconds');\r\n\t\t\t} else {\r\n\t\t\t\tduration = mEnd.diff(mStart, 'seconds');\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t/* Calculate duearion for without round time IE. 10:14-10:20 */\r\n\t\t\tconst tempStart = mStart\r\n\t\t\t\t.clone()\r\n\t\t\t\t.set('minute', mStart.get('minute') - (mStart.minutes() % 10));\r\n\r\n\t\t\t/* Added 10 min for next slot */\r\n\t\t\ttempEnd = tempStart.clone().add(10, 'minute');\r\n\r\n\t\t\tif (mEnd.isBefore(tempEnd)) {\r\n\t\t\t\tduration = mEnd.diff(mStart, 'seconds');\r\n\t\t\t} else {\r\n\t\t\t\tduration = tempEnd.diff(mStart, 'seconds');\r\n\t\t\t}\r\n\t\t\tmStart = tempStart;\r\n\t\t}\r\n\r\n\t\tmStart.set('second', 0);\r\n\t\tmStart.set('second', 0);\r\n\t\tmEnd.set('millisecond', 0);\r\n\t\tmEnd.set('millisecond', 0);\r\n\r\n\t\tslots.push({\r\n\t\t\tstartedAt: mStart.toDate(),\r\n\t\t\tstoppedAt: tempEnd.toDate(),\r\n\t\t\tduration: Math.abs(duration)\r\n\t\t});\r\n\r\n\t\tmStart = tempEnd.clone();\r\n\t}\r\n\treturn slots;\r\n}\r\n","import {\r\n\tController,\r\n\tUseGuards,\r\n\tHttpStatus,\r\n\tPost,\r\n\tBody,\r\n\tGet,\r\n\tQuery\r\n} from '@nestjs/common';\r\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport {\r\n\tITimerToggleInput,\r\n\tITimeLog,\r\n\tITimerStatus,\r\n\tITimerStatusInput\r\n} from '@gauzy/models';\r\nimport { TimerService } from './timer.service';\r\nimport { TenantPermissionGuard } from '../../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('Timer')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller('timer')\r\nexport class TimerController {\r\n\tconstructor(private readonly timerService: TimerService) {}\r\n\r\n\t@ApiOperation({ summary: 'Toggle timer' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'The timer has been successfully On/Off.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@Get('/status')\r\n\tasync getTimerStatus(\r\n\t\t@Query() require: ITimerStatusInput\r\n\t): Promise<ITimerStatus> {\r\n\t\treturn this.timerService.getTimerStatus(require);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Toggle timer' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'The timer has been successfully On/Off.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@Post('/toggle')\r\n\tasync toggleTimer(@Body() entity: ITimerToggleInput): Promise<ITimeLog> {\r\n\t\treturn this.timerService.toggleTimeLog(entity);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Start timer' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'The timer has been successfully On.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@Post('/start')\r\n\tasync startTimer(@Body() entity: ITimerToggleInput): Promise<ITimeLog> {\r\n\t\treturn this.timerService.startTimer(entity);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Stop timer' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'The timer has been successfully Off.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@Post('/stop')\r\n\tasync stopTimer(@Body() entity: ITimerToggleInput): Promise<ITimeLog> {\r\n\t\treturn this.timerService.stopTimer(entity);\r\n\t}\r\n}\r\n","import { Injectable, BadRequestException } from '@nestjs/common';\r\nimport { TimeLog } from '../time-log.entity';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository, IsNull, Between } from 'typeorm';\r\nimport { RequestContext } from '../../core/context';\r\nimport { Employee } from '../../employee/employee.entity';\r\nimport {\r\n\tTimeLogType,\r\n\tITimerStatus,\r\n\tIGetTimeLogConflictInput,\r\n\tITimerToggleInput,\r\n\tIDateRange,\r\n\tTimeLogSourceEnum,\r\n\tITimerStatusInput\r\n} from '@gauzy/models';\r\nimport * as moment from 'moment';\r\nimport { CommandBus } from '@nestjs/cqrs';\r\nimport { IGetConflictTimeLogCommand } from '../time-log/commands/get-conflict-time-log.command';\r\nimport { TimeLogCreateCommand } from '../time-log/commands/time-log-create.command';\r\nimport { DeleteTimeSpanCommand } from '../time-log/commands/delete-time-span.command';\r\nimport { TimeLogUpdateCommand } from '../time-log/commands/time-log-update.command';\r\n\r\n@Injectable()\r\nexport class TimerService {\r\n\tconstructor(\r\n\t\t@InjectRepository(TimeLog)\r\n\t\tprivate readonly timeLogRepository: Repository<TimeLog>,\r\n\r\n\t\t@InjectRepository(Employee)\r\n\t\tprivate readonly employeeRepository: Repository<Employee>,\r\n\t\tprivate readonly commandBus: CommandBus\r\n\t) {}\r\n\r\n\tasync getTimerStatus(request: ITimerStatusInput): Promise<ITimerStatus> {\r\n\t\tconst user = RequestContext.currentUser();\r\n\t\tconst { tenantId } = user;\r\n\t\tconst employee = await this.employeeRepository.findOne({\r\n\t\t\tuserId: user.id,\r\n\t\t\ttenantId\r\n\t\t});\r\n\r\n\t\tif (!employee) {\r\n\t\t\tthrow new BadRequestException('Employee not found.');\r\n\t\t}\r\n\r\n\t\tconst todayLog = await this.timeLogRepository.find({\r\n\t\t\twhere: {\r\n\t\t\t\tdeletedAt: IsNull(),\r\n\t\t\t\temployeeId: employee.id,\r\n\t\t\t\tsource: request.source || TimeLogSourceEnum.BROWSER,\r\n\t\t\t\tstartedAt: Between(\r\n\t\t\t\t\tmoment().startOf('day'),\r\n\t\t\t\t\tmoment().endOf('day')\r\n\t\t\t\t),\r\n\t\t\t\ttenantId\r\n\t\t\t},\r\n\t\t\torder: {\r\n\t\t\t\tstartedAt: 'DESC'\r\n\t\t\t}\r\n\t\t});\r\n\t\tconst status: ITimerStatus = {\r\n\t\t\tduration: 0,\r\n\t\t\trunning: false,\r\n\t\t\tlastLog: null\r\n\t\t};\r\n\t\tif (todayLog.length > 0) {\r\n\t\t\tconst lastLog = todayLog[0];\r\n\t\t\tstatus.lastLog = lastLog;\r\n\r\n\t\t\tif (lastLog.stoppedAt) {\r\n\t\t\t\tstatus.running = false;\r\n\t\t\t} else {\r\n\t\t\t\tstatus.running = true;\r\n\t\t\t\tstatus.duration = Math.abs(\r\n\t\t\t\t\t(lastLog.startedAt.getTime() - new Date().getTime()) / 1000\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tfor (let index = 0; index < todayLog.length; index++) {\r\n\t\t\t\tstatus.duration += todayLog[index].duration;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn status;\r\n\t}\r\n\r\n\tasync startTimer(request: ITimerToggleInput): Promise<TimeLog> {\r\n\t\tconst user = RequestContext.currentUser();\r\n\t\tconst lastLog = await this.timeLogRepository.findOne({\r\n\t\t\twhere: {\r\n\t\t\t\tdeletedAt: IsNull(),\r\n\t\t\t\temployeeId: user.employeeId,\r\n\t\t\t\tstoppedAt: IsNull()\r\n\t\t\t},\r\n\t\t\torder: {\r\n\t\t\t\tstartedAt: 'DESC'\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (lastLog) {\r\n\t\t\tawait this.stopTimer(request);\r\n\t\t}\r\n\r\n\t\tlet organizationId;\r\n\t\tif (!request.organizationId) {\r\n\t\t\tconst employee = await this.employeeRepository.findOne(\r\n\t\t\t\tuser.employeeId\r\n\t\t\t);\r\n\t\t\torganizationId = employee.organizationId;\r\n\t\t} else {\r\n\t\t\torganizationId = request.organizationId;\r\n\t\t}\r\n\r\n\t\tconst newTimeLogInput = {\r\n\t\t\torganizationId,\r\n\t\t\ttenantId: RequestContext.currentTenantId(),\r\n\t\t\tstartedAt: moment.utc().toDate(),\r\n\t\t\tduration: 0,\r\n\t\t\temployeeId: user.employeeId,\r\n\t\t\tsource: request.source || TimeLogSourceEnum.BROWSER,\r\n\t\t\tprojectId: request.projectId || null,\r\n\t\t\ttaskId: request.taskId || null,\r\n\t\t\torganizationContactId: request.organizationContactId || null,\r\n\t\t\tlogType: request.logType || TimeLogType.TRACKED,\r\n\t\t\tdescription: request.description || '',\r\n\t\t\tisBillable: request.isBillable || false\r\n\t\t};\r\n\r\n\t\treturn await this.commandBus.execute(\r\n\t\t\tnew TimeLogCreateCommand(newTimeLogInput)\r\n\t\t);\r\n\t}\r\n\r\n\tasync stopTimer(request: ITimerToggleInput): Promise<TimeLog> {\r\n\t\tconst user = RequestContext.currentUser();\r\n\t\tlet lastLog = await this.timeLogRepository.findOne({\r\n\t\t\twhere: {\r\n\t\t\t\tdeletedAt: IsNull(),\r\n\t\t\t\temployeeId: user.employeeId,\r\n\t\t\t\tstoppedAt: IsNull()\r\n\t\t\t},\r\n\t\t\torder: {\r\n\t\t\t\tstartedAt: 'DESC'\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst stoppedAt = new Date();\r\n\t\tif (lastLog.startedAt === stoppedAt) {\r\n\t\t\tawait this.timeLogRepository.delete(lastLog.id);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlastLog = await this.commandBus.execute(\r\n\t\t\tnew TimeLogUpdateCommand(\r\n\t\t\t\t{ stoppedAt },\r\n\t\t\t\tlastLog.id,\r\n\t\t\t\trequest.manualTimeSlot\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tconst conflictInput: IGetTimeLogConflictInput = {\r\n\t\t\tignoreId: lastLog.id,\r\n\t\t\tstartDate: lastLog.startedAt,\r\n\t\t\tendDate: lastLog.stoppedAt,\r\n\t\t\temployeeId: lastLog.employeeId\r\n\t\t};\r\n\r\n\t\tconst conflict = await this.commandBus.execute(\r\n\t\t\tnew IGetConflictTimeLogCommand(conflictInput)\r\n\t\t);\r\n\r\n\t\tconst times: IDateRange = {\r\n\t\t\tstart: new Date(lastLog.startedAt),\r\n\t\t\tend: new Date(lastLog.stoppedAt)\r\n\t\t};\r\n\r\n\t\tfor (let index = 0; index < conflict.length; index++) {\r\n\t\t\tawait this.commandBus.execute(\r\n\t\t\t\tnew DeleteTimeSpanCommand(times, conflict[index])\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn lastLog;\r\n\t}\r\n\r\n\tasync toggleTimeLog(request: ITimerToggleInput): Promise<TimeLog> {\r\n\t\tconst user = RequestContext.currentUser();\r\n\t\tconst lastLog = await this.timeLogRepository.findOne({\r\n\t\t\twhere: {\r\n\t\t\t\tdeletedAt: IsNull(),\r\n\t\t\t\temployeeId: user.employeeId,\r\n\t\t\t\tstoppedAt: IsNull()\r\n\t\t\t},\r\n\t\t\torder: {\r\n\t\t\t\tstartedAt: 'DESC'\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (!lastLog) {\r\n\t\t\treturn this.startTimer(request);\r\n\t\t} else {\r\n\t\t\treturn this.stopTimer(request);\r\n\t\t}\r\n\t}\r\n}\r\n","import {\r\n\tEntity,\r\n\tColumn,\r\n\tRelationId,\r\n\tManyToOne,\r\n\tJoinColumn,\r\n\tOneToMany\r\n} from 'typeorm';\r\nimport { ITimesheet, TimesheetStatus } from '@gauzy/models';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport {\r\n\tIsString,\r\n\tIsBoolean,\r\n\tIsNumber,\r\n\tIsDateString,\r\n\tIsEnum\r\n} from 'class-validator';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { TimeLog } from './time-log.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('timesheet')\r\nexport class Timesheet extends TenantOrganizationBase implements ITimesheet {\r\n\t@ApiProperty({ type: Employee })\r\n\t@ManyToOne(() => Employee, { nullable: true })\r\n\t@JoinColumn()\r\n\temployee: Employee;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@RelationId((timesheet: Timesheet) => timesheet.employee)\r\n\t@Column()\r\n\treadonly employeeId?: string;\r\n\r\n\t@ApiProperty({ type: Employee })\r\n\t@ManyToOne(() => Employee, { nullable: true })\r\n\t@JoinColumn()\r\n\tapprovedBy?: Employee;\r\n\r\n\t@ApiProperty({ type: String, readOnly: true })\r\n\t@RelationId((timesheet: Timesheet) => timesheet.approvedBy)\r\n\t@Column({ nullable: true })\r\n\treadonly approvedById?: string;\r\n\r\n\t@ApiProperty({ type: TimeLog })\r\n\t@OneToMany(() => TimeLog, (timeLog) => timeLog.timesheet)\r\n\t@JoinColumn()\r\n\ttimeLogs?: TimeLog[];\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@IsNumber()\r\n\t@Column({ default: 0 })\r\n\tduration?: number;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@IsNumber()\r\n\t@Column({ default: 0 })\r\n\tkeyboard?: number;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@IsNumber()\r\n\t@Column({ default: 0 })\r\n\tmouse?: number;\r\n\r\n\t@ApiProperty({ type: Number })\r\n\t@IsNumber()\r\n\t@Column({ default: 0 })\r\n\toverall?: number;\r\n\r\n\t@ApiProperty({ type: 'timestamptz' })\r\n\t@IsDateString()\r\n\t@Column({ nullable: true, default: null })\r\n\tstartedAt?: Date;\r\n\r\n\t@ApiProperty({ type: 'timestamptz' })\r\n\t@IsDateString()\r\n\t@Column({ nullable: true, default: null })\r\n\tstoppedAt?: Date;\r\n\r\n\t@ApiProperty({ type: 'timestamptz' })\r\n\t@IsDateString()\r\n\t@Column({ nullable: true, default: null })\r\n\tapprovedAt?: Date;\r\n\r\n\t@ApiProperty({ type: 'timestamptz' })\r\n\t@IsDateString()\r\n\t@Column({ nullable: true, default: null })\r\n\tsubmittedAt?: Date;\r\n\r\n\t@ApiProperty({ type: 'timestamptz' })\r\n\t@IsDateString()\r\n\t@Column({ nullable: true, default: null })\r\n\tlockedAt?: Date;\r\n\r\n\t@ApiProperty({ type: Boolean })\r\n\t@IsBoolean()\r\n\t@Column({ default: false })\r\n\tisBilled?: boolean;\r\n\r\n\t@ApiProperty({ type: String, enum: TimesheetStatus })\r\n\t@IsEnum(TimesheetStatus)\r\n\t@IsString()\r\n\t@Column({ default: TimesheetStatus.PENDING })\r\n\tstatus: string;\r\n\r\n\t@ApiProperty({ type: 'timestamptz' })\r\n\t@IsDateString()\r\n\t@Column({ nullable: true, default: null })\r\n\tdeletedAt?: Date;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { Timesheet } from './timesheet.entity';\r\nimport { TimeSlot } from './time-slot.entity';\r\nimport { Activity } from './activity.entity';\r\nimport { Screenshot } from './screenshot.entity';\r\nimport { TimeLog } from './time-log.entity';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { TimerController } from './timer/timer.controller';\r\nimport { TimerService } from './timer/timer.service';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { TimeSlotMinute } from './time-slot-minute.entity';\r\nimport { TimeSheetService } from './timesheet/timesheet.service';\r\nimport { ActivityService } from './activity/activity.service';\r\nimport { ScreenshotService } from './screenshot/screenshot.service';\r\nimport { TimeSlotService } from './time-slot/time-slot.service';\r\nimport { TimeLogController } from './time-log/time-log.controller';\r\nimport { TimeLogService } from './time-log/time-log.service';\r\nimport { CqrsModule } from '@nestjs/cqrs';\r\nimport { CommandHandlers } from './commands/handlers';\r\nimport { TimeSheetController } from './timesheet/timesheet.controller';\r\nimport { TimeSlotController } from './time-slot/time-slot.controller';\r\nimport { ScreenshotController } from './screenshot/screenshot.controller';\r\nimport { ActivityController } from './activity/activity.controller';\r\nimport { TimesheetCommandHandlers } from './timesheet/commands/handlers';\r\nimport { TimeLogCommandHandlers } from './time-log/commands/handlers';\r\nimport { StatisticService } from './statistic/statistic.service';\r\nimport { StatisticController } from './statistic/statistic.controller';\r\nimport { OrganizationProject } from '../organization-projects/organization-projects.entity';\r\nimport { Task } from '../tasks/task.entity';\r\nimport { EmailTemplate } from '../email-template/email-template.entity';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { Email } from '../email/email.entity';\r\nimport { EmailService } from '../email/email.service';\r\nimport { EmailModule } from '../email';\r\nimport { TimeSlotCommandHandlers } from './time-slot/commands/handlers';\r\nimport { ActivityCommandHandlers } from './activity/commands/handlers';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\nimport { ActivityMapService } from './activity/activity.map.service';\r\nimport { OrganizationContact } from '../organization-contact/organization-contact.entity';\r\n\r\n@Module({\r\n\tcontrollers: [\r\n\t\tTimerController,\r\n\t\tActivityController,\r\n\t\tTimeLogController,\r\n\t\tTimeSlotController,\r\n\t\tScreenshotController,\r\n\t\tStatisticController,\r\n\t\tTimeSheetController\r\n\t],\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([\r\n\t\t\tTimeSlot,\r\n\t\t\tActivity,\r\n\t\t\tScreenshot,\r\n\t\t\tTimeLog,\r\n\t\t\tTimesheet,\r\n\t\t\tEmployee,\r\n\t\t\tTimeSlotMinute,\r\n\t\t\tOrganizationProject,\r\n\t\t\tTask,\r\n\t\t\tEmail,\r\n\t\t\tEmailTemplate,\r\n\t\t\tOrganization,\r\n\t\t\tOrganizationContact\r\n\t\t]),\r\n\t\tCqrsModule,\r\n\t\tEmailModule,\r\n\t\tTenantModule\r\n\t],\r\n\tproviders: [\r\n\t\tTimerService,\r\n\t\tTimeSheetService,\r\n\t\tActivityService,\r\n\t\tScreenshotService,\r\n\t\tTimeLogService,\r\n\t\tTimeSlotService,\r\n\t\tStatisticService,\r\n\t\tEmailService,\r\n\t\tActivityMapService,\r\n\t\t...TimeLogCommandHandlers,\r\n\t\t...TimesheetCommandHandlers,\r\n\t\t...TimeSlotCommandHandlers,\r\n\t\t...ActivityCommandHandlers,\r\n\t\t...CommandHandlers\r\n\t],\r\n\texports: [\r\n\t\tTimeSheetService,\r\n\t\tActivityService,\r\n\t\tScreenshotService,\r\n\t\tTimeLogService,\r\n\t\tTimeSlotService,\r\n\t\tStatisticService\r\n\t]\r\n})\r\nexport class TimesheetModule {}\r\n","import { TimesheetRecalculateHandler } from './timesheet-recalculate.handler';\r\nimport { TimesheetFirstOrCreateHandler } from './timesheet-first-or-create.handler';\r\nimport { TimesheetUpdateStatusHandler } from './timesheet-update-status.handler';\r\nimport { TimesheetSubmitHandler } from './timesheet-submit.handler';\r\n\r\nexport const TimesheetCommandHandlers = [\r\n\tTimesheetRecalculateHandler,\r\n\tTimesheetFirstOrCreateHandler,\r\n\tTimesheetUpdateStatusHandler,\r\n\tTimesheetSubmitHandler\r\n];\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Between, Repository } from 'typeorm';\r\nimport { TimesheetFirstOrCreateCommand } from '../timesheet-first-or-create.command';\r\nimport { Timesheet } from '../../../timesheet.entity';\r\nimport * as moment from 'moment';\r\nimport { RequestContext } from 'src/app/core/context';\r\nimport { Employee } from 'src/app/employee/employee.entity';\r\n\r\n@CommandHandler(TimesheetFirstOrCreateCommand)\r\nexport class TimesheetFirstOrCreateHandler\r\n\timplements ICommandHandler<TimesheetFirstOrCreateCommand> {\r\n\tconstructor(\r\n\t\t@InjectRepository(Timesheet)\r\n\t\tprivate readonly timeSheetRepository: Repository<Timesheet>,\r\n\t\t@InjectRepository(Employee)\r\n\t\tprivate readonly employeeRepository: Repository<Employee>\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: TimesheetFirstOrCreateCommand\r\n\t): Promise<Timesheet> {\r\n\t\tconst { date, employeeId } = command;\r\n\r\n\t\tconst from_date = moment(date).startOf('week');\r\n\t\tconst to_date = moment(date).endOf('week');\r\n\r\n\t\tlet timesheet = await this.timeSheetRepository.findOne({\r\n\t\t\twhere: {\r\n\t\t\t\tstartedAt: Between(from_date, to_date),\r\n\t\t\t\temployeeId: employeeId\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tlet organizationId: string;\r\n\t\tif (!command.organizationId) {\r\n\t\t\tconst employee = await this.employeeRepository.findOne(employeeId);\r\n\t\t\torganizationId = employee.organizationId;\r\n\t\t} else {\r\n\t\t\torganizationId = command.organizationId;\r\n\t\t}\r\n\r\n\t\tif (!timesheet) {\r\n\t\t\ttimesheet = await this.timeSheetRepository.save({\r\n\t\t\t\ttenantId: RequestContext.currentTenantId(),\r\n\t\t\t\temployeeId: employeeId,\r\n\t\t\t\torganizationId,\r\n\t\t\t\tstartedAt: from_date.toISOString(),\r\n\t\t\t\tstoppedAt: to_date.toISOString()\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn timesheet;\r\n\t}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { TimeSheetService } from '../../timesheet.service';\r\nimport { ITimesheet } from '@gauzy/models';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { TimeSlot } from '../../../time-slot.entity';\r\nimport { Between, Repository } from 'typeorm';\r\nimport { TimesheetRecalculateCommand } from '../timesheet-recalculate.command';\r\n\r\n@CommandHandler(TimesheetRecalculateCommand)\r\nexport class TimesheetRecalculateHandler\r\n\timplements ICommandHandler<TimesheetRecalculateCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly timesheetService: TimeSheetService,\r\n\t\t@InjectRepository(TimeSlot)\r\n\t\tprivate readonly timeSlotRepository: Repository<TimeSlot>\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: TimesheetRecalculateCommand\r\n\t): Promise<ITimesheet> {\r\n\t\tconst { id } = command;\r\n\r\n\t\tconst timesheet = await this.timesheetService.findOne(id);\r\n\r\n\t\tconst timeslotsData = await this.timeSlotRepository\r\n\t\t\t.createQueryBuilder()\r\n\t\t\t.select('SUM(duration)', 'duration')\r\n\t\t\t.addSelect('AVG(keyboard)', 'keyboard')\r\n\t\t\t.addSelect('AVG(mouse)', 'mouse')\r\n\t\t\t.addSelect('AVG(overall)', 'overall')\r\n\t\t\t.where({\r\n\t\t\t\tstartedAt: Between(timesheet.startedAt, timesheet.stoppedAt),\r\n\t\t\t\temployeeId: timesheet.employeeId\r\n\t\t\t})\r\n\t\t\t.getRawOne();\r\n\r\n\t\tawait this.timesheetService.update(id, {\r\n\t\t\tduration: Math.round(timeslotsData.duration),\r\n\t\t\tkeyboard: Math.round(timeslotsData.keyboard),\r\n\t\t\tmouse: Math.round(timeslotsData.mouse),\r\n\t\t\toverall: Math.round(timeslotsData.overall)\r\n\t\t});\r\n\r\n\t\treturn timesheet;\r\n\t}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository, In } from 'typeorm';\r\nimport { Timesheet } from '../../../timesheet.entity';\r\nimport { EmailService } from 'src/app/email/email.service';\r\nimport { TimesheetSubmitCommand } from '../timesheet-submit.command';\r\n\r\n@CommandHandler(TimesheetSubmitCommand)\r\nexport class TimesheetSubmitHandler\r\n\timplements ICommandHandler<TimesheetSubmitCommand> {\r\n\tconstructor(\r\n\t\t@InjectRepository(Timesheet)\r\n\t\tprivate readonly timeSheetRepository: Repository<Timesheet>,\r\n\t\tprivate readonly emailService: EmailService\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: TimesheetSubmitCommand\r\n\t): Promise<Timesheet[]> {\r\n\t\tlet { ids, status } = command.input;\r\n\r\n\t\tif (typeof ids === 'string') {\r\n\t\t\tids = [ids];\r\n\t\t}\r\n\t\tawait this.timeSheetRepository.update(\r\n\t\t\t{\r\n\t\t\t\tid: In(ids)\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tsubmittedAt: status === 'submit' ? new Date() : null\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\tconst timesheets = await this.timeSheetRepository.find({\r\n\t\t\trelations: ['employee', 'employee.user'],\r\n\t\t\twhere: {\r\n\t\t\t\tid: In(ids)\r\n\t\t\t}\r\n\t\t});\r\n\t\ttimesheets.forEach((timesheet) => {\r\n\t\t\tif (status === 'submit') {\r\n\t\t\t\tif (timesheet.employee && timesheet.employee.user) {\r\n\t\t\t\t\tthis.emailService.timesheetSubmit(\r\n\t\t\t\t\t\ttimesheet.employee.user.email,\r\n\t\t\t\t\t\ttimesheet\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn timesheets;\r\n\t}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { TimesheetStatus } from '@gauzy/models';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository, In } from 'typeorm';\r\nimport { TimesheetUpdateStatusCommand } from '../timesheet-update-status.command';\r\nimport { RequestContext } from 'src/app/core/context';\r\nimport { Timesheet } from '../../../timesheet.entity';\r\nimport { EmailService } from 'src/app/email/email.service';\r\n\r\n@CommandHandler(TimesheetUpdateStatusCommand)\r\nexport class TimesheetUpdateStatusHandler\r\n\timplements ICommandHandler<TimesheetUpdateStatusCommand> {\r\n\tconstructor(\r\n\t\t@InjectRepository(Timesheet)\r\n\t\tprivate readonly timeSheetRepository: Repository<Timesheet>,\r\n\t\tprivate readonly emailService: EmailService\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: TimesheetUpdateStatusCommand\r\n\t): Promise<Timesheet[]> {\r\n\t\tlet { ids, status } = command.input;\r\n\r\n\t\tif (typeof ids === 'string') {\r\n\t\t\tids = [ids];\r\n\t\t}\r\n\r\n\t\tlet approvedBy: string = null;\r\n\t\tif (status === TimesheetStatus.APPROVED) {\r\n\t\t\tconst user = RequestContext.currentUser();\r\n\t\t\tapprovedBy = user.employeeId;\r\n\t\t}\r\n\r\n\t\tawait this.timeSheetRepository.update(\r\n\t\t\t{\r\n\t\t\t\tid: In(ids)\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tstatus: status,\r\n\t\t\t\tapprovedById: approvedBy,\r\n\t\t\t\tapprovedAt:\r\n\t\t\t\t\tstatus === TimesheetStatus.APPROVED ? new Date() : null\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\tconst timesheets = await this.timeSheetRepository.find({\r\n\t\t\trelations: ['employee', 'employee.user'],\r\n\t\t\twhere: {\r\n\t\t\t\tid: In(ids)\r\n\t\t\t}\r\n\t\t});\r\n\t\ttimesheets.forEach((timesheet) => {\r\n\t\t\tif (timesheet.employee && timesheet.employee.user) {\r\n\t\t\t\tthis.emailService.setTimesheetAction(\r\n\t\t\t\t\ttimesheet.employee.user.email,\r\n\t\t\t\t\ttimesheet\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn timesheets;\r\n\t}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class TimesheetFirstOrCreateCommand implements ICommand {\r\n\tstatic readonly type = '[Timesheet] first-or-create';\r\n\r\n\tconstructor(\r\n\t\tpublic readonly date: Date,\r\n\t\tpublic readonly employeeId: string,\r\n\t\tpublic readonly organizationId?: string\r\n\t) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\n\r\nexport class TimesheetRecalculateCommand implements ICommand {\r\n\tstatic readonly type = '[Timesheet] recalculate';\r\n\r\n\tconstructor(public readonly id: string) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { ISubmitTimesheetInput } from '@gauzy/models';\r\n\r\nexport class TimesheetSubmitCommand implements ICommand {\r\n\tstatic readonly type = '[Timesheet] update-status';\r\n\r\n\tconstructor(public readonly input: ISubmitTimesheetInput) {}\r\n}\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { IUpdateTimesheetStatusInput } from '@gauzy/models';\r\n\r\nexport class TimesheetUpdateStatusCommand implements ICommand {\r\n\tstatic readonly type = '[Timesheet] update-status';\r\n\r\n\tconstructor(public readonly input: IUpdateTimesheetStatusInput) {}\r\n}\r\n","import {\r\n\tController,\r\n\tUseGuards,\r\n\tPut,\r\n\tHttpStatus,\r\n\tBody,\r\n\tGet,\r\n\tQuery\r\n} from '@nestjs/common';\r\nimport { Timesheet } from '../timesheet.entity';\r\nimport { CrudController } from '../../core/crud/crud.controller';\r\nimport { TimeSheetService } from './timesheet.service';\r\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport {\r\n\tIUpdateTimesheetStatusInput,\r\n\tIGetTimesheetInput,\r\n\tISubmitTimesheetInput,\r\n\tLanguagesEnum\r\n} from '@gauzy/models';\r\nimport { I18nLang } from 'nestjs-i18n';\r\nimport { TenantPermissionGuard } from '../../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('TimeSheet')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class TimeSheetController extends CrudController<Timesheet> {\r\n\tconstructor(private readonly timeSheetService: TimeSheetService) {\r\n\t\tsuper(timeSheetService);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Get timesheet' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Get timesheet'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@Get('/')\r\n\t// @UseGuards(OrganizationPermissionGuard)\r\n\t// @Permissions(OrganizationPermissionsEnum.ALLOW_MODIFY_TIME)\r\n\tasync get(@Query() entity: IGetTimesheetInput): Promise<any> {\r\n\t\treturn this.timeSheetService.getTimeSheets(entity);\r\n\t}\r\n\t@ApiOperation({ summary: 'Get timesheet Count' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Get timesheet Count'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@Get('/count')\r\n\tasync getCount(@Query() entity: IGetTimesheetInput): Promise<any> {\r\n\t\treturn this.timeSheetService.getTimeSheetCount(entity);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Update timesheet' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'The timesheet has been successfully updated.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@Put('/status')\r\n\t// @UseGuards(OrganizationPermissionGuard)\r\n\t// @Permissions(OrganizationPermissionsEnum.ALLOW_MODIFY_TIME)\r\n\tasync updateStatus(\r\n\t\t@Body() entity: IUpdateTimesheetStatusInput,\r\n\t\t@I18nLang() i18nLang: LanguagesEnum\r\n\t): Promise<any> {\r\n\t\tconsole.log({ i18nLang });\r\n\t\treturn this.timeSheetService.updateStatus(entity);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Submit timesheet' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'The timesheet has been successfully submit.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@Put('/submit')\r\n\tasync submitTimeheet(@Body() entity: ISubmitTimesheetInput): Promise<any> {\r\n\t\treturn this.timeSheetService.submitTimeheet(entity);\r\n\t}\r\n}\r\n","import { Connection } from 'typeorm';\r\nimport * as faker from 'faker';\r\nimport {\r\n\tTimesheetStatus,\r\n\tIOrganizationProject,\r\n\tITimeSlot\r\n} from '@gauzy/models';\r\nimport { Timesheet } from '../timesheet.entity';\r\nimport { Employee } from '../../employee/employee.entity';\r\nimport * as moment from 'moment';\r\nimport * as _ from 'underscore';\r\nimport { createRandomTimeLogs } from '../time-log/time-log.seed';\r\nimport { createRandomActivities } from '../activity/activities.seed';\r\nimport chalk from 'chalk';\r\nimport { Tenant } from '../../tenant/tenant.entity';\r\n\r\nexport const createDefaultTimeSheet = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\temployees: Employee[],\r\n\tdefaultProjects: IOrganizationProject[] | void,\r\n\tnoOfTimeLogsPerTimeSheet\r\n) => {\r\n\tif (!defaultProjects) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: defaultProjects not found, RandomTimesheet will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst timesheets: Timesheet[] = [];\r\n\r\n\tfor (let index = 0; index < 2; index++) {\r\n\t\tconst date = moment().subtract(index, 'week').toDate();\r\n\t\tconst startedAt = moment(date).startOf('week').toDate();\r\n\t\tconst stoppedAt = moment(date).endOf('week').toDate();\r\n\r\n\t\tfor (const employee of employees) {\r\n\t\t\tconst status = faker.random.arrayElement(\r\n\t\t\t\tObject.keys(TimesheetStatus)\r\n\t\t\t);\r\n\r\n\t\t\tlet isBilled = false;\r\n\t\t\tlet approvedAt: Date = null;\r\n\t\t\tlet submittedAt: Date = null;\r\n\r\n\t\t\tif (TimesheetStatus[status] === TimesheetStatus.PENDING) {\r\n\t\t\t\tapprovedAt = null;\r\n\t\t\t\tsubmittedAt = faker.date.past();\r\n\t\t\t} else if (TimesheetStatus[status] === TimesheetStatus.IN_REVIEW) {\r\n\t\t\t\tapprovedAt = null;\r\n\t\t\t\tsubmittedAt = faker.date.between(startedAt, new Date());\r\n\t\t\t} else if (TimesheetStatus[status] === TimesheetStatus.APPROVED) {\r\n\t\t\t\tisBilled = faker.random.arrayElement([true, false]);\r\n\t\t\t\tapprovedAt = faker.date.between(startedAt, new Date());\r\n\t\t\t\tsubmittedAt = faker.date.between(startedAt, approvedAt);\r\n\t\t\t}\r\n\t\t\tconst timesheet = new Timesheet();\r\n\t\t\ttimesheet.employee = employee;\r\n\t\t\ttimesheet.organization = employee.organization;\r\n\t\t\ttimesheet.tenant = tenant;\r\n\t\t\ttimesheet.approvedBy = null;\r\n\t\t\ttimesheet.startedAt = startedAt;\r\n\t\t\ttimesheet.stoppedAt = stoppedAt;\r\n\t\t\ttimesheet.duration = 0;\r\n\t\t\ttimesheet.keyboard = 0;\r\n\t\t\ttimesheet.mouse = 0;\r\n\t\t\ttimesheet.overall = 0;\r\n\t\t\ttimesheet.approvedAt = approvedAt;\r\n\t\t\ttimesheet.submittedAt = submittedAt;\r\n\t\t\ttimesheet.lockedAt = null;\r\n\t\t\ttimesheet.isBilled = isBilled;\r\n\t\t\ttimesheet.status = TimesheetStatus[status];\r\n\t\t\ttimesheet.deletedAt = null;\r\n\t\t\ttimesheets.push(timesheet);\r\n\t\t}\r\n\t}\r\n\r\n\tawait connection.getRepository(Timesheet).save(timesheets);\r\n\r\n\tconst createdTimesheets = await connection.getRepository(Timesheet).find();\r\n\tlet timeSlots: ITimeSlot[];\r\n\ttry {\r\n\t\tconsole.log(chalk.green(`SEEDING Default TimeLogs`));\r\n\t\ttimeSlots = await createRandomTimeLogs(\r\n\t\t\tconnection,\r\n\t\t\ttenant,\r\n\t\t\tcreatedTimesheets,\r\n\t\t\tdefaultProjects,\r\n\t\t\tnoOfTimeLogsPerTimeSheet\r\n\t\t);\r\n\t} catch (error) {\r\n\t\tconsole.log(chalk.red(`SEEDING Default TimeLogs`, error));\r\n\t}\r\n\r\n\ttry {\r\n\t\tconsole.log(chalk.green(`SEEDING Default Activities`));\r\n\t\tawait createRandomActivities(connection, tenant, timeSlots);\r\n\t} catch (error) {\r\n\t\tconsole.log(chalk.red(`SEEDING Default Activities`, error));\r\n\t}\r\n\r\n\treturn createdTimesheets;\r\n};\r\n\r\nexport const createRandomTimesheet = async (\r\n\tconnection: Connection,\r\n\ttenant: Tenant,\r\n\tdefaultProjects: IOrganizationProject[] | void,\r\n\tnoOfTimeLogsPerTimeSheet\r\n) => {\r\n\tif (!defaultProjects) {\r\n\t\tconsole.warn(\r\n\t\t\t'Warning: defaultProjects not found, RandomTimesheet will not be created'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst timesheets: Timesheet[] = [];\r\n\tconst employees = await connection.getRepository(Employee).find({\r\n\t\trelations: ['organization']\r\n\t});\r\n\r\n\tfor (let index = 0; index < 2; index++) {\r\n\t\tconst date = moment().subtract(index, 'week').toDate();\r\n\t\tconst startedAt = moment(date).startOf('week').toDate();\r\n\t\tconst stoppedAt = moment(date).endOf('week').toDate();\r\n\r\n\t\t_.chain(employees)\r\n\t\t\t.shuffle()\r\n\t\t\t.take(faker.random.number(employees.length))\r\n\t\t\t.each((employee) => {\r\n\t\t\t\tconst status = faker.random.arrayElement(\r\n\t\t\t\t\tObject.keys(TimesheetStatus)\r\n\t\t\t\t);\r\n\r\n\t\t\t\tlet isBilled = false;\r\n\t\t\t\tlet approvedAt: Date = null;\r\n\t\t\t\tlet submittedAt: Date = null;\r\n\r\n\t\t\t\tif (TimesheetStatus[status] === TimesheetStatus.PENDING) {\r\n\t\t\t\t\tapprovedAt = null;\r\n\t\t\t\t\tsubmittedAt = faker.date.past();\r\n\t\t\t\t} else if (\r\n\t\t\t\t\tTimesheetStatus[status] === TimesheetStatus.IN_REVIEW\r\n\t\t\t\t) {\r\n\t\t\t\t\tapprovedAt = null;\r\n\t\t\t\t\tsubmittedAt = faker.date.between(startedAt, new Date());\r\n\t\t\t\t} else if (\r\n\t\t\t\t\tTimesheetStatus[status] === TimesheetStatus.APPROVED\r\n\t\t\t\t) {\r\n\t\t\t\t\tisBilled = faker.random.arrayElement([true, false]);\r\n\t\t\t\t\tapprovedAt = faker.date.between(startedAt, new Date());\r\n\t\t\t\t\tsubmittedAt = faker.date.between(startedAt, approvedAt);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst timesheet = new Timesheet();\r\n\t\t\t\ttimesheet.employee = employee;\r\n\t\t\t\ttimesheet.organization = employee.organization;\r\n\t\t\t\ttimesheet.tenant = tenant;\r\n\t\t\t\ttimesheet.approvedBy = null;\r\n\t\t\t\ttimesheet.startedAt = startedAt;\r\n\t\t\t\ttimesheet.stoppedAt = stoppedAt;\r\n\t\t\t\ttimesheet.duration = 0;\r\n\t\t\t\ttimesheet.keyboard = 0;\r\n\t\t\t\ttimesheet.mouse = 0;\r\n\t\t\t\ttimesheet.overall = 0;\r\n\t\t\t\ttimesheet.approvedAt = approvedAt;\r\n\t\t\t\ttimesheet.submittedAt = submittedAt;\r\n\t\t\t\ttimesheet.lockedAt = null;\r\n\t\t\t\ttimesheet.isBilled = isBilled;\r\n\t\t\t\ttimesheet.status = TimesheetStatus[status];\r\n\t\t\t\ttimesheet.deletedAt = null;\r\n\t\t\t\ttimesheets.push(timesheet);\r\n\t\t\t});\r\n\t}\r\n\r\n\tawait connection.getRepository(Timesheet).save(timesheets);\r\n\r\n\tconst createdTimesheets = await connection.getRepository(Timesheet).find();\r\n\tlet timeSlots: ITimeSlot[];\r\n\ttry {\r\n\t\tconsole.log(chalk.green(`SEEDING Random TimeLogs`));\r\n\t\ttimeSlots = await createRandomTimeLogs(\r\n\t\t\tconnection,\r\n\t\t\ttenant,\r\n\t\t\tcreatedTimesheets,\r\n\t\t\tdefaultProjects,\r\n\t\t\tnoOfTimeLogsPerTimeSheet\r\n\t\t);\r\n\t} catch (error) {\r\n\t\tconsole.log(chalk.red(`SEEDING Random TimeLogs`, error));\r\n\t}\r\n\r\n\ttry {\r\n\t\tconsole.log(chalk.green(`SEEDING Random Activities`));\r\n\t\tawait createRandomActivities(connection, tenant, timeSlots);\r\n\t} catch (error) {\r\n\t\tconsole.log(chalk.red(`SEEDING Random Activities`, error));\r\n\t}\r\n\r\n\treturn createdTimesheets;\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository, Between, In, SelectQueryBuilder } from 'typeorm';\r\nimport { CrudService } from '../../core/crud/crud.service';\r\nimport { Timesheet } from '../timesheet.entity';\r\nimport * as moment from 'moment';\r\nimport {\r\n\tIUpdateTimesheetStatusInput,\r\n\tIGetTimesheetInput,\r\n\tISubmitTimesheetInput,\r\n\tPermissionsEnum\r\n} from '@gauzy/models';\r\nimport { RequestContext } from '../../core/context';\r\nimport { CommandBus } from '@nestjs/cqrs';\r\nimport { TimesheetFirstOrCreateCommand } from './commands/timesheet-first-or-create.command';\r\nimport { TimesheetUpdateStatusCommand } from './commands/timesheet-update-status.command';\r\nimport { TimesheetSubmitCommand } from './commands/timesheet-submit.command';\r\n\r\n@Injectable()\r\nexport class TimeSheetService extends CrudService<Timesheet> {\r\n\tconstructor(\r\n\t\t@InjectRepository(Timesheet)\r\n\t\tprivate readonly timeSheetRepository: Repository<Timesheet>,\r\n\t\tprivate readonly commandBus: CommandBus\r\n\t) {\r\n\t\tsuper(timeSheetRepository);\r\n\t}\r\n\r\n\tasync createOrFindTimeSheet(employeeId, date: Date = new Date()) {\r\n\t\tconst timesheet = await this.commandBus.execute(\r\n\t\t\tnew TimesheetFirstOrCreateCommand(date, employeeId)\r\n\t\t);\r\n\r\n\t\treturn timesheet;\r\n\t}\r\n\r\n\tsubmitTimeheet(input: ISubmitTimesheetInput) {\r\n\t\treturn this.commandBus.execute(new TimesheetSubmitCommand(input));\r\n\t}\r\n\r\n\tupdateStatus(input: IUpdateTimesheetStatusInput) {\r\n\t\treturn this.commandBus.execute(new TimesheetUpdateStatusCommand(input));\r\n\t}\r\n\r\n\tasync getTimeSheetCount(request: IGetTimesheetInput) {\r\n\t\tconst timesheets = await this.getTimeSheets(request);\r\n\t\treturn timesheets.length;\r\n\t}\r\n\tasync getTimeSheets(request: IGetTimesheetInput) {\r\n\t\tlet employeeIds: string[];\r\n\t\tconst startDate = moment(request.startDate).format(\r\n\t\t\t'YYYY-MM-DD HH:mm:ss'\r\n\t\t);\r\n\t\tconst endDate = moment(request.endDate).format('YYYY-MM-DD HH:mm:ss');\r\n\r\n\t\tif (\r\n\t\t\tRequestContext.hasPermission(\r\n\t\t\t\tPermissionsEnum.CHANGE_SELECTED_EMPLOYEE\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\tif (request.employeeIds) {\r\n\t\t\t\temployeeIds = request.employeeIds;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst user = RequestContext.currentUser();\r\n\t\t\temployeeIds = [user.employeeId];\r\n\t\t}\r\n\r\n\t\tconst timesheet = await this.timeSheetRepository.find({\r\n\t\t\tjoin: {\r\n\t\t\t\talias: 'timesheet',\r\n\t\t\t\tinnerJoin: {\r\n\t\t\t\t\temployee: 'timesheet.employee',\r\n\t\t\t\t\ttimeLogs: 'timesheet.timeLogs'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\trelations: [\r\n\t\t\t\t...(RequestContext.hasPermission(\r\n\t\t\t\t\tPermissionsEnum.CHANGE_SELECTED_EMPLOYEE\r\n\t\t\t\t)\r\n\t\t\t\t\t? ['employee', 'employee.organization', 'employee.user']\r\n\t\t\t\t\t: [])\r\n\t\t\t],\r\n\t\t\twhere: (qb: SelectQueryBuilder<Timesheet>) => {\r\n\t\t\t\tqb.where({\r\n\t\t\t\t\tstartedAt: Between(startDate, endDate),\r\n\t\t\t\t\t...(employeeIds ? { employeeId: In(employeeIds) } : {})\r\n\t\t\t\t});\r\n\t\t\t\tqb.andWhere(\r\n\t\t\t\t\t`\"${qb.alias}\".\"startedAt\" Between :startDate AND :endDate`,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tstartDate,\r\n\t\t\t\t\t\tendDate\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t\tqb.andWhere(`\"${qb.alias}\".\"deletedAt\" IS NULL`);\r\n\t\t\t\t//check organization and tenant for timelogs\r\n\t\t\t\tconst { organizationId = null } = request;\r\n\t\t\t\tif (typeof organizationId === 'string') {\r\n\t\t\t\t\tqb.andWhere(\r\n\t\t\t\t\t\t`\"${qb.alias}\".\"organizationId\" = :organizationId`,\r\n\t\t\t\t\t\t{ organizationId: request.organizationId }\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//check organization and tenant for timelogs\r\n\t\t\t\tlet { tenantId = null } = request;\r\n\t\t\t\t//if not found tenantId then get from current user session\r\n\t\t\t\tif (typeof tenantId !== 'string') {\r\n\t\t\t\t\tconst user = RequestContext.currentUser();\r\n\t\t\t\t\ttenantId = user.tenantId;\r\n\t\t\t\t}\r\n\t\t\t\tif (tenantId) {\r\n\t\t\t\t\tqb.andWhere(`\"${qb.alias}\".\"tenantId\" = :tenantId`, {\r\n\t\t\t\t\t\ttenantId\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn timesheet;\r\n\t}\r\n}\r\n","import { Injectable, BadRequestException } from '@nestjs/common';\r\nimport { CommandBus } from '@nestjs/cqrs';\r\nimport { EmployeeService } from '../employee/employee.service';\r\nimport { UserService } from '../user/user.service';\r\nimport * as fs from 'fs';\r\nimport * as fse from 'fs-extra';\r\nimport * as csv from 'csv-parser';\r\nimport { IncomeCreateCommand } from '../income/commands/income.create.command';\r\nimport { ExpenseCreateCommand } from '../expense/commands/expense.create.command';\r\nimport { OrganizationVendorsService } from '../organization-vendors/organization-vendors.service';\r\nimport { OrganizationContactService } from '../organization-contact/organization-contact.service';\r\nimport { ExpenseCategoriesService } from '../expense-categories/expense-categories.service';\r\nimport {\r\n\tOrganizationVendorEnum,\r\n\tExpenseCategoriesEnum,\r\n\tIncomeTypeEnum\r\n} from '@gauzy/models';\r\nimport { Expense } from '../expense/expense.entity';\r\nimport { Income } from '../income/income.entity';\r\nimport { reflect } from '../core';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { RequestContext } from '../core/context';\r\n\r\n@Injectable()\r\nexport class UpworkTransactionService {\r\n\tprivate commandBusMapper = {\r\n\t\t[IncomeTypeEnum.HOURLY]: {\r\n\t\t\tcommand: ({ dto, client }) =>\r\n\t\t\t\tnew IncomeCreateCommand({\r\n\t\t\t\t\t...dto,\r\n\t\t\t\t\tclientName: client.name,\r\n\t\t\t\t\tclientId: client.id\r\n\t\t\t\t})\r\n\t\t},\r\n\t\t[ExpenseCategoriesEnum.SERVICE_FEE]: {\r\n\t\t\tcommand: ({ dto, category, vendor }) =>\r\n\t\t\t\tnew ExpenseCreateCommand({\r\n\t\t\t\t\t...dto,\r\n\t\t\t\t\tvendor,\r\n\t\t\t\t\tcategory\r\n\t\t\t\t})\r\n\t\t}\r\n\t};\r\n\tconstructor(\r\n\t\tprivate _userService: UserService,\r\n\t\tprivate _employeeService: EmployeeService,\r\n\t\tprivate _orgVendorService: OrganizationVendorsService,\r\n\t\tprivate _orgClientService: OrganizationContactService,\r\n\t\tprivate _expenseCategoryService: ExpenseCategoriesService,\r\n\t\tprivate commandBus: CommandBus\r\n\t) {}\r\n\r\n\tasync handleTransactions(file, { organizationId }) {\r\n\t\tconst uuid = uuidv4();\r\n\t\tconst dirPath = `src/app/integrations/upwork/csv/${uuid}`;\r\n\t\tconst csvData = file.buffer.toString();\r\n\t\tconst filePath = `${dirPath}/${file.originalname}`;\r\n\t\tlet results = [];\r\n\r\n\t\tfs.mkdirSync(dirPath, { recursive: true });\r\n\t\tfs.writeFileSync(filePath, csvData);\r\n\r\n\t\tconst csvReader = fs\r\n\t\t\t.createReadStream(filePath)\r\n\t\t\t.pipe(csv())\r\n\t\t\t.on('data', (data) => (results = results.concat(data)));\r\n\r\n\t\tconst tenantId = RequestContext.currentTenantId();\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tcsvReader.on('end', async () => {\r\n\t\t\t\tfse.removeSync(dirPath);\r\n\t\t\t\tconst transactions = results\r\n\t\t\t\t\t.filter(\r\n\t\t\t\t\t\t(result) =>\r\n\t\t\t\t\t\t\tresult.Type === IncomeTypeEnum.HOURLY ||\r\n\t\t\t\t\t\t\tresult.Type === ExpenseCategoriesEnum.SERVICE_FEE\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.map(async (result) => {\r\n\t\t\t\t\t\tconst {\r\n\t\t\t\t\t\t\tDate: date,\r\n\t\t\t\t\t\t\tAmount,\r\n\t\t\t\t\t\t\tFreelancer,\r\n\t\t\t\t\t\t\tCurrency,\r\n\t\t\t\t\t\t\tTeam\r\n\t\t\t\t\t\t} = result;\r\n\t\t\t\t\t\tconst [firstName, lastName] = Freelancer.split(' ');\r\n\r\n\t\t\t\t\t\tconst { record: user } = await this._findRecordOrThrow(\r\n\t\t\t\t\t\t\tthis._userService,\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\twhere: {\r\n\t\t\t\t\t\t\t\t\tfirstName,\r\n\t\t\t\t\t\t\t\t\tlastName\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t`User: ${Freelancer} not found`\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tconst {\r\n\t\t\t\t\t\t\trecord: employee\r\n\t\t\t\t\t\t} = await this._findRecordOrThrow(\r\n\t\t\t\t\t\t\tthis._employeeService,\r\n\t\t\t\t\t\t\t{ where: { user, organizationId, tenantId } },\r\n\t\t\t\t\t\t\t`Employee ${Freelancer} not found`\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tconst {\r\n\t\t\t\t\t\t\trecord: category\r\n\t\t\t\t\t\t} = await this._findRecordOrThrow(\r\n\t\t\t\t\t\t\tthis._expenseCategoryService,\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\twhere: {\r\n\t\t\t\t\t\t\t\t\tname: ExpenseCategoriesEnum.SERVICE_FEE,\r\n\t\t\t\t\t\t\t\t\torganizationId,\r\n\t\t\t\t\t\t\t\t\ttenantId\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t`Category: ${ExpenseCategoriesEnum.SERVICE_FEE} not found`\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tconst {\r\n\t\t\t\t\t\t\trecord: vendor\r\n\t\t\t\t\t\t} = await this._findRecordOrThrow(\r\n\t\t\t\t\t\t\tthis._orgVendorService,\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\twhere: {\r\n\t\t\t\t\t\t\t\t\tname: OrganizationVendorEnum.UPWORK,\r\n\t\t\t\t\t\t\t\t\torganizationId,\r\n\t\t\t\t\t\t\t\t\ttenantId\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t`Vendor: ${OrganizationVendorEnum.UPWORK} not found`\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tconst {\r\n\t\t\t\t\t\t\trecord: client\r\n\t\t\t\t\t\t} = await this._findRecordOrThrow(\r\n\t\t\t\t\t\t\tthis._orgClientService,\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\twhere: { name: Team, organizationId, tenantId }\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t`Client: ${Team} not found`\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tconst dto = {\r\n\t\t\t\t\t\t\tamount: Amount as number,\r\n\t\t\t\t\t\t\treference: result['Ref ID'],\r\n\t\t\t\t\t\t\tvalueDate: new Date(date),\r\n\t\t\t\t\t\t\temployeeId: employee.id,\r\n\t\t\t\t\t\t\tcurrency: Currency,\r\n\t\t\t\t\t\t\torganizationId\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\tconst cmd = this.commandBusMapper[result.Type];\r\n\r\n\t\t\t\t\t\treturn await this.commandBus.execute(\r\n\t\t\t\t\t\t\tcmd.command({\r\n\t\t\t\t\t\t\t\tdto,\r\n\t\t\t\t\t\t\t\tclient,\r\n\t\t\t\t\t\t\t\tvendor,\r\n\t\t\t\t\t\t\t\tcategory\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\tconst processedTransactions = await Promise.all(\r\n\t\t\t\t\ttransactions.map(reflect)\r\n\t\t\t\t);\r\n\t\t\t\tconst {\r\n\t\t\t\t\trejectedTransactions,\r\n\t\t\t\t\ttotalExpenses,\r\n\t\t\t\t\ttotalIncomes\r\n\t\t\t\t} = this._proccessTransactions(processedTransactions);\r\n\r\n\t\t\t\tif (rejectedTransactions.length) {\r\n\t\t\t\t\tconst errors = rejectedTransactions.map(\r\n\t\t\t\t\t\t({ error }) => error.response.message\r\n\t\t\t\t\t);\r\n\t\t\t\t\tconst message = this._formatErrorMesage(\r\n\t\t\t\t\t\t[...new Set(errors)],\r\n\t\t\t\t\t\ttotalExpenses,\r\n\t\t\t\t\t\ttotalIncomes\r\n\t\t\t\t\t);\r\n\t\t\t\t\treject(new BadRequestException(message));\r\n\t\t\t\t}\r\n\t\t\t\tresolve({ totalExpenses, totalIncomes });\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tprivate _formatErrorMesage(errors, totalExpenses, totalIncomes): string {\r\n\t\treturn `Total succeed expenses transactions: ${totalExpenses}.\r\n\t\t\tTotal succeed incomes transactions: ${totalIncomes}.\r\n\t\t\tFailed transactions: ${errors.join(', ')}\r\n\t\t`;\r\n\t}\r\n\r\n\tprivate _proccessTransactions(processedTransactions) {\r\n\t\tconst {\r\n\t\t\trejectedTransactions,\r\n\t\t\ttotalExpenses,\r\n\t\t\ttotalIncomes\r\n\t\t} = processedTransactions.reduce(\r\n\t\t\t(prev, current) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\trejectedTransactions:\r\n\t\t\t\t\t\tcurrent.status === 'rejected'\r\n\t\t\t\t\t\t\t? prev.rejectedTransactions.concat(current)\r\n\t\t\t\t\t\t\t: prev.rejectedTransactions,\r\n\t\t\t\t\ttotalExpenses:\r\n\t\t\t\t\t\tcurrent.item instanceof Expense\r\n\t\t\t\t\t\t\t? (prev.totalExpenses++, prev.totalExpenses)\r\n\t\t\t\t\t\t\t: prev.totalExpenses,\r\n\t\t\t\t\ttotalIncomes:\r\n\t\t\t\t\t\tcurrent.item instanceof Income\r\n\t\t\t\t\t\t\t? (prev.totalIncomes++, prev.totalIncomes)\r\n\t\t\t\t\t\t\t: prev.totalIncomes\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\trejectedTransactions: [],\r\n\t\t\t\ttotalExpenses: 0,\r\n\t\t\t\ttotalIncomes: 0\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\treturn {\r\n\t\t\trejectedTransactions,\r\n\t\t\ttotalExpenses,\r\n\t\t\ttotalIncomes\r\n\t\t};\r\n\t}\r\n\r\n\tprivate async _findRecordOrThrow(service, condition, errorMsg) {\r\n\t\tconst response = await service.findOneOrFail(condition);\r\n\t\tif (response.success) {\r\n\t\t\treturn { record: response.record };\r\n\t\t}\r\n\r\n\t\tthrow new BadRequestException(errorMsg);\r\n\t}\r\n}\r\n","import {\r\n\tController,\r\n\tPost,\r\n\tBody,\r\n\tUploadedFile,\r\n\tUseInterceptors,\r\n\tHttpStatus,\r\n\tUseGuards,\r\n\tGet,\r\n\tQuery,\r\n\tParam\r\n} from '@nestjs/common';\r\nimport { FileInterceptor } from '@nestjs/platform-express';\r\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { UpworkTransactionService } from './upwork-transaction.service';\r\nimport { UpworkService } from './upwork.service';\r\nimport {\r\n\tIAccessToken,\r\n\tIAccessTokenSecretPair,\r\n\tIAccessTokenDto,\r\n\tIGetWorkDiaryDto,\r\n\tIGetContractsDto,\r\n\tIEngagement,\r\n\tIUpworkApiConfig,\r\n\tIUpworkClientSecretPair\r\n} from '@gauzy/models';\r\nimport { Expense } from '../expense/expense.entity';\r\nimport { Income } from '../income/income.entity';\r\nimport { IPagination } from '../core';\r\n\r\n@ApiTags('Integrations')\r\n@UseGuards(AuthGuard('jwt'))\r\n@Controller()\r\nexport class UpworkController {\r\n\tconstructor(\r\n\t\tprivate _upworkTransactionService: UpworkTransactionService,\r\n\t\tprivate _upworkService: UpworkService\r\n\t) {}\r\n\r\n\t@ApiOperation({ summary: 'Upload Upwork transaction.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'Uploaded transaction'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription: 'Freelancer not found'\r\n\t})\r\n\t@Post('/transactions')\r\n\t@UseInterceptors(FileInterceptor('file'))\r\n\tasync create(@UploadedFile() file, @Body() organizationDto): Promise<any> {\r\n\t\treturn await this._upworkTransactionService.handleTransactions(\r\n\t\t\tfile,\r\n\t\t\torganizationDto\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Authorize Upwork.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'Authorized Upwork'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription: 'Cannot Authorize'\r\n\t})\r\n\t@Post('/token-secret-pair/:organizationId')\r\n\tasync getAccessTokenSecretPair(\r\n\t\t@Body() config: IUpworkClientSecretPair,\r\n\t\t@Param('organizationId') organizationId: string\r\n\t): Promise<IAccessTokenSecretPair> {\r\n\t\treturn await this._upworkService.getAccessTokenSecretPair(\r\n\t\t\tconfig,\r\n\t\t\torganizationId\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Get Access Token.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'Get Access Token'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription: 'Invalid request'\r\n\t})\r\n\t@Post('/access-token/:organizationId')\r\n\tasync getAccessToken(\r\n\t\t@Body() accessTokenDto: IAccessTokenDto,\r\n\t\t@Param('organizationId') organizationId: string\r\n\t): Promise<IAccessToken> {\r\n\t\treturn await this._upworkService.getAccessToken(\r\n\t\t\taccessTokenDto,\r\n\t\t\torganizationId\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Get Work Diary.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'Get Work Diary'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription: 'Invalid request'\r\n\t})\r\n\t@Get('work-diary')\r\n\tasync getWorkDiary(@Query('data') data: string): Promise<any> {\r\n\t\tconst getWorkDiaryDto: IGetWorkDiaryDto = JSON.parse(data);\r\n\t\treturn await this._upworkService.getWorkDiary(getWorkDiaryDto);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Get Contracts.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'Get Contracts'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription: 'Invalid request'\r\n\t})\r\n\t@Get('freelancer-contracts')\r\n\tasync getContracts(@Query('data') data: string): Promise<IEngagement[]> {\r\n\t\tconst getContractsDto: IGetContractsDto = JSON.parse(data);\r\n\t\treturn await this._upworkService.getContractsForFreelancer(\r\n\t\t\tgetContractsDto\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Get Config.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'Get Config'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription: 'Invalid request'\r\n\t})\r\n\t@Get('config/:integrationId')\r\n\tasync getConfig(\r\n\t\t@Param('integrationId') integrationId: string,\r\n\t\t@Query('data') data: string\r\n\t): Promise<IUpworkApiConfig> {\r\n\t\tconst { filter } = JSON.parse(data);\r\n\t\treturn await this._upworkService.getConfig(integrationId, filter);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Sync Contracts.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'Sync Contracts'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription: 'Invalid request'\r\n\t})\r\n\t@Post('sync-contracts')\r\n\tasync syncContracts(@Body() syncContractsDto: any): Promise<any> {\r\n\t\treturn await this._upworkService.syncContracts(syncContractsDto);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Sync Contracts Related Data.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'Sync Contracts Related Data'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription: 'Invalid request'\r\n\t})\r\n\t@Post('sync-contracts-related-data')\r\n\tasync syncContractsRelatedData(@Body() dto): Promise<any> {\r\n\t\treturn await this._upworkService.syncContractsRelatedData(dto);\r\n\t}\r\n\r\n\t@ApiOperation({\r\n\t\tsummary: 'Find all expense and income for logged upwork user.'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found income & expense',\r\n\t\ttype: Income || Expense\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription: 'Invalid request'\r\n\t})\r\n\t@Get('report/:integrationId')\r\n\tasync getReports(\r\n\t\t@Param('integrationId') integrationId: string,\r\n\t\t@Query('data') data: string\r\n\t): Promise<IPagination<any>> {\r\n\t\tconst { relations, filter } = JSON.parse(data);\r\n\t\treturn await this._upworkService.getReportListByIntegration(\r\n\t\t\tintegrationId,\r\n\t\t\tfilter,\r\n\t\t\trelations\r\n\t\t);\r\n\t}\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { User } from '../user/user.entity';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { OrganizationVendor } from '../organization-vendors/organization-vendors.entity';\r\nimport { OrganizationVendorsService } from '../organization-vendors/organization-vendors.service';\r\nimport { OrganizationContact } from '../organization-contact/organization-contact.entity';\r\nimport { CqrsModule } from '@nestjs/cqrs';\r\nimport { ExpenseCategory } from '../expense-categories/expense-category.entity';\r\nimport { ExpenseCategoriesService } from '../expense-categories/expense-categories.service';\r\nimport { UserService } from '../user/user.service';\r\nimport { UpworkTransactionService } from './upwork-transaction.service';\r\nimport { EmployeeService } from '../employee/employee.service';\r\nimport { OrganizationContactService } from '../organization-contact/organization-contact.service';\r\nimport { UpworkController } from './upwork.controller';\r\nimport { UpworkService } from './upwork.service';\r\nimport { IntegrationMap } from '../integration-map/integration-map.entity';\r\nimport { IntegrationMapService } from '../integration-map/integration-map.service';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { OrganizationService } from '../organization/organization.service';\r\nimport { Role } from '../role/role.entity';\r\nimport { RoleService } from '../role/role.service';\r\nimport { TimeSlotService } from '../timesheet/time-slot/time-slot.service';\r\nimport { TimeSlot } from '../timesheet/time-slot.entity';\r\nimport { TimeSlotMinute } from '../timesheet/time-slot-minute.entity';\r\nimport { ExportAllModule } from '../export_import/export-all.module';\r\nimport { Activity } from '../timesheet/activity.entity';\r\nimport { TimeLog } from '../timesheet/time-log.entity';\r\nimport {\r\n\tUpworkJobService,\r\n\tUpworkOffersService\r\n} from '@gauzy/integration-upwork';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tTypeOrmModule.forFeature([\r\n\t\t\tUser,\r\n\t\t\tEmployee,\r\n\t\t\tOrganizationVendor,\r\n\t\t\tOrganizationContact,\r\n\t\t\tExpenseCategory,\r\n\t\t\tIntegrationMap,\r\n\t\t\tOrganization,\r\n\t\t\tRole,\r\n\t\t\tTimeSlot,\r\n\t\t\tActivity,\r\n\t\t\tTimeLog,\r\n\t\t\tTimeSlotMinute\r\n\t\t]),\r\n\t\tCqrsModule,\r\n\t\tExportAllModule\r\n\t],\r\n\tcontrollers: [UpworkController],\r\n\tproviders: [\r\n\t\tUpworkJobService,\r\n\t\tUpworkOffersService,\r\n\t\tUpworkTransactionService,\r\n\t\tUpworkService,\r\n\t\tUserService,\r\n\t\tEmployeeService,\r\n\t\tOrganizationVendorsService,\r\n\t\tOrganizationContactService,\r\n\t\tExpenseCategoriesService,\r\n\t\tIntegrationMapService,\r\n\t\tOrganizationService,\r\n\t\tRoleService,\r\n\t\tTimeSlotService\r\n\t]\r\n})\r\nexport class UpworkModule {}\r\n","import { Injectable, BadRequestException } from '@nestjs/common';\r\nimport { In, Between } from 'typeorm';\r\nimport { CommandBus } from '@nestjs/cqrs';\r\nimport * as UpworkApi from 'upwork-api';\r\nimport * as _ from 'underscore';\r\nimport { environment } from '@env-api/environment';\r\nimport {\r\n\tIAccessTokenSecretPair,\r\n\tIAccessToken,\r\n\tIAccessTokenDto,\r\n\tIntegrationEnum,\r\n\tIGetContractsDto,\r\n\tIGetWorkDiaryDto,\r\n\tIEngagement,\r\n\tIUpworkApiConfig,\r\n\tIIntegrationMap,\r\n\tCurrenciesEnum,\r\n\tProjectBillingEnum,\r\n\tTimeLogType,\r\n\tIntegrationEntity,\r\n\tRolesEnum,\r\n\tExpenseCategoriesEnum,\r\n\tOrganizationVendorEnum,\r\n\tIUpworkOfferStatusEnum,\r\n\tIUpworkProposalStatusEnum,\r\n\tIUpworkDateRange,\r\n\tContactType,\r\n\tTimeLogSourceEnum,\r\n\tIUpworkClientSecretPair\r\n} from '@gauzy/models';\r\nimport {\r\n\tIntegrationTenantCreateCommand,\r\n\tIntegrationTenantGetCommand\r\n} from '../integration-tenant/commands';\r\nimport {\r\n\tIntegrationSettingGetCommand,\r\n\tIntegrationSettingGetManyCommand,\r\n\tIntegrationSettingCreateCommand\r\n} from '../integration-setting/commands';\r\nimport { arrayToObject, unixTimestampToDate } from '../core';\r\nimport { Engagements } from 'upwork-api/lib/routers/hr/engagements.js';\r\nimport { Workdiary } from 'upwork-api/lib/routers/workdiary.js';\r\nimport { Snapshot } from 'upwork-api/lib/routers/snapshot.js';\r\nimport { Auth } from 'upwork-api/lib/routers/auth.js';\r\nimport { Users } from 'upwork-api/lib/routers/organization/users.js';\r\nimport { IntegrationMapSyncEntityCommand } from '../integration-map/commands';\r\nimport {\r\n\tTimeSlotCreateCommand,\r\n\tScreenshotCreateCommand\r\n} from '../timesheet/commands';\r\nimport * as moment from 'moment';\r\nimport { OrganizationProjectCreateCommand } from '../organization-projects/commands/organization-project.create.command';\r\nimport { EmployeeGetCommand } from '../employee/commands/employee.get.command';\r\nimport { EmployeeCreateCommand } from '../employee/commands';\r\nimport { IntegrationMapService } from '../integration-map/integration-map.service';\r\nimport { UserService } from '../user/user.service';\r\nimport { OrganizationService } from '../organization/organization.service';\r\nimport { OrganizationVendorsService } from '../organization-vendors/organization-vendors.service';\r\nimport { RoleService } from '../role/role.service';\r\nimport { TimeSlotService } from '../timesheet/time-slot/time-slot.service';\r\nimport { ExpenseService } from '../expense/expense.service';\r\nimport { ExpenseCategoriesService } from '../expense-categories/expense-categories.service';\r\nimport { IncomeService } from '../income/income.service';\r\nimport { OrganizationContactService } from '../organization-contact/organization-contact.service';\r\nimport { IncomeCreateCommand } from '../income/commands/income.create.command';\r\nimport { ExpenseCreateCommand } from '../expense/commands/expense.create.command';\r\nimport { OrganizationContactCreateCommand } from '../organization-contact/commands/organization-contact-create.command';\r\nimport { IPagination } from '../core';\r\nimport {\r\n\tUpworkJobService,\r\n\tUpworkOffersService,\r\n\tUpworkReportService\r\n} from '@gauzy/integration-upwork';\r\nimport { TimesheetFirstOrCreateCommand } from '../timesheet/timesheet/commands/timesheet-first-or-create.command';\r\nimport { TimeLogCreateCommand } from '../timesheet/time-log/commands/time-log-create.command';\r\nimport { OrganizationContact } from '../organization-contact/organization-contact.entity';\r\nimport { ProposalCreateCommand } from '../proposal/commands/proposal-create.command';\r\nimport { OrganizationProjectUpdateCommand } from '../organization-projects/commands/organization-project.update.command';\r\nimport { CreateTimeSlotMinutesCommand } from '../timesheet/time-slot/commands/create-time-slot-minutes.command';\r\nimport { RequestContext } from '../core/context';\r\nimport { environment as env } from '@env-api/environment';\r\n\r\n@Injectable()\r\nexport class UpworkService {\r\n\tprivate _upworkApi: UpworkApi;\r\n\r\n\tconstructor(\r\n\t\tprivate readonly _expenseService: ExpenseService,\r\n\t\tprivate _expenseCategoryService: ExpenseCategoriesService,\r\n\t\tprivate readonly _incomeService: IncomeService,\r\n\t\tprivate _integrationMapService: IntegrationMapService,\r\n\t\tprivate _userService: UserService,\r\n\t\tprivate _roleService: RoleService,\r\n\t\tprivate _organizationService: OrganizationService,\r\n\t\tprivate _orgVendorService: OrganizationVendorsService,\r\n\t\tprivate _orgClientService: OrganizationContactService,\r\n\t\tprivate _timeSlotService: TimeSlotService,\r\n\t\tprivate readonly _upworkReportService: UpworkReportService,\r\n\t\tprivate readonly _upworkJobService: UpworkJobService,\r\n\t\tprivate readonly _upworkOfferService: UpworkOffersService,\r\n\t\tprivate commandBus: CommandBus\r\n\t) {}\r\n\r\n\tprivate async _consumerHasAccessToken(\r\n\t\tconfig: IUpworkClientSecretPair,\r\n\t\torganizationId: string\r\n\t) {\r\n\t\tconst integrationSetting = await this.commandBus.execute(\r\n\t\t\tnew IntegrationSettingGetCommand({\r\n\t\t\t\twhere: {\r\n\t\t\t\t\tsettingsValue: config.consumerKey,\r\n\t\t\t\t\torganizationId: organizationId\r\n\t\t\t\t},\r\n\t\t\t\trelations: ['integration']\r\n\t\t\t})\r\n\t\t);\r\n\t\tif (!integrationSetting) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tconst integrationSettings = await this.commandBus.execute(\r\n\t\t\tnew IntegrationSettingGetManyCommand({\r\n\t\t\t\twhere: {\r\n\t\t\t\t\tintegration: integrationSetting.integration,\r\n\t\t\t\t\torganizationId\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\t\tif (!integrationSettings.length) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tconst integrationSettingMap = arrayToObject(\r\n\t\t\tintegrationSettings,\r\n\t\t\t'settingsName',\r\n\t\t\t'settingsValue'\r\n\t\t);\r\n\t\tif (\r\n\t\t\tintegrationSettingMap.accessToken &&\r\n\t\t\tintegrationSettingMap.accessTokenSecret\r\n\t\t) {\r\n\t\t\treturn {\r\n\t\t\t\tintegrationId: integrationSetting.integration.id,\r\n\t\t\t\t...integrationSettingMap\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tasync getAccessTokenSecretPair(\r\n\t\tconfig: IUpworkClientSecretPair,\r\n\t\torganizationId: string\r\n\t): Promise<IAccessTokenSecretPair> {\r\n\t\tconst consumerAccessToken = await this._consumerHasAccessToken(\r\n\t\t\tconfig,\r\n\t\t\torganizationId\r\n\t\t);\r\n\r\n\t\t// access token live forever, if user already registered app, return the access token;\r\n\t\tif (consumerAccessToken) {\r\n\t\t\tconsole.log('consumerAccessToken already exits and will be reused');\r\n\t\t\treturn consumerAccessToken;\r\n\t\t}\r\n\r\n\t\tthis._upworkApi = new UpworkApi(config);\r\n\r\n\t\tconst authUrl = environment.upworkConfig.callbackUrl;\r\n\r\n\t\tconsole.log(`Upwork callback URL: ${authUrl}`);\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tthis._upworkApi.getAuthorizationUrl(\r\n\t\t\t\tauthUrl,\r\n\t\t\t\tasync (error, url, requestToken, requestTokenSecret) => {\r\n\t\t\t\t\tif (error)\r\n\t\t\t\t\t\treject(`can't get authorization url, error: ${error}`);\r\n\r\n\t\t\t\t\tawait this.commandBus.execute(\r\n\t\t\t\t\t\tnew IntegrationTenantCreateCommand({\r\n\t\t\t\t\t\t\torganizationId,\r\n\t\t\t\t\t\t\tname: IntegrationEnum.UPWORK,\r\n\t\t\t\t\t\t\tentitySettings: [],\r\n\t\t\t\t\t\t\tsettings: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tsettingsName: 'consumerKey',\r\n\t\t\t\t\t\t\t\t\tsettingsValue: config.consumerKey\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tsettingsName: 'consumerSecret',\r\n\t\t\t\t\t\t\t\t\tsettingsValue: config.consumerSecret\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tsettingsName: 'requestToken',\r\n\t\t\t\t\t\t\t\t\tsettingsValue: requestToken\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tsettingsName: 'requestTokenSecret',\r\n\t\t\t\t\t\t\t\t\tsettingsValue: requestTokenSecret\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t].map((setting) => {\r\n\t\t\t\t\t\t\t\treturn { organizationId, ...setting };\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t);\r\n\t\t\t\t\treturn resolve({\r\n\t\t\t\t\t\turl,\r\n\t\t\t\t\t\trequestToken,\r\n\t\t\t\t\t\trequestTokenSecret,\r\n\t\t\t\t\t\torganizationId\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\tgetAccessToken(\r\n\t\t{ requestToken, verifier }: IAccessTokenDto,\r\n\t\torganizationId: string\r\n\t): Promise<IAccessToken> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\tconst { integration } = await this.commandBus.execute(\r\n\t\t\t\tnew IntegrationSettingGetCommand({\r\n\t\t\t\t\twhere: {\r\n\t\t\t\t\t\tsettingsValue: requestToken,\r\n\t\t\t\t\t\torganizationId\r\n\t\t\t\t\t},\r\n\t\t\t\t\trelations: ['integration']\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\tconst integrationSettings = await this.commandBus.execute(\r\n\t\t\t\tnew IntegrationSettingGetManyCommand({\r\n\t\t\t\t\twhere: {\r\n\t\t\t\t\t\tintegration,\r\n\t\t\t\t\t\torganizationId\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\tconst integrationSetting = arrayToObject(\r\n\t\t\t\tintegrationSettings,\r\n\t\t\t\t'settingsName',\r\n\t\t\t\t'settingsValue'\r\n\t\t\t);\r\n\r\n\t\t\tthis._upworkApi.getAccessToken(\r\n\t\t\t\trequestToken,\r\n\t\t\t\tintegrationSetting.requestTokenSecret,\r\n\t\t\t\tverifier,\r\n\t\t\t\tasync (error, accessToken, accessTokenSecret) => {\r\n\t\t\t\t\tif (error) reject(new Error(error));\r\n\t\t\t\t\tawait this.commandBus.execute(\r\n\t\t\t\t\t\tnew IntegrationSettingCreateCommand({\r\n\t\t\t\t\t\t\tintegration,\r\n\t\t\t\t\t\t\tsettingsName: 'accessToken',\r\n\t\t\t\t\t\t\tsettingsValue: accessToken,\r\n\t\t\t\t\t\t\torganizationId\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t);\r\n\t\t\t\t\tawait this.commandBus.execute(\r\n\t\t\t\t\t\tnew IntegrationSettingCreateCommand({\r\n\t\t\t\t\t\t\tintegration,\r\n\t\t\t\t\t\t\tsettingsName: 'accessTokenSecret',\r\n\t\t\t\t\t\t\tsettingsValue: accessTokenSecret,\r\n\t\t\t\t\t\t\torganizationId\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tresolve({\r\n\t\t\t\t\t\tintegrationId: integration.id,\r\n\t\t\t\t\t\taccessToken,\r\n\t\t\t\t\t\taccessTokenSecret\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\tasync getConfig(integrationId: string, filter): Promise<IUpworkApiConfig> {\r\n\t\tconst { organizationId, tenantId } = filter;\r\n\t\tconst integration = await this.commandBus.execute(\r\n\t\t\tnew IntegrationTenantGetCommand({\r\n\t\t\t\twhere: {\r\n\t\t\t\t\tid: integrationId,\r\n\t\t\t\t\ttenant: {\r\n\t\t\t\t\t\tid: tenantId\r\n\t\t\t\t\t},\r\n\t\t\t\t\torganizationId\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\t\tconst integrationSettings = await this.commandBus.execute(\r\n\t\t\tnew IntegrationSettingGetManyCommand({\r\n\t\t\t\twhere: {\r\n\t\t\t\t\tintegration,\r\n\t\t\t\t\torganizationId\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\t\tconst {\r\n\t\t\taccessToken,\r\n\t\t\tconsumerKey,\r\n\t\t\tconsumerSecret,\r\n\t\t\taccessTokenSecret: accessSecret\r\n\t\t} = arrayToObject(integrationSettings, 'settingsName', 'settingsValue');\r\n\r\n\t\treturn { accessToken, consumerKey, consumerSecret, accessSecret };\r\n\t}\r\n\r\n\t// engagement has access to contract ID, this is a project in gauzy\r\n\tasync getContractsForFreelancer(\r\n\t\tgetEngagementsDto: IGetContractsDto\r\n\t): Promise<IEngagement[]> {\r\n\t\t// console.log(`Call Upwork API using accessToken: ${getEngagementsDto.config.accessToken}, accessSecret: ${getEngagementsDto.config.accessSecret}`);\r\n\r\n\t\tconst api = new UpworkApi(getEngagementsDto.config);\r\n\t\tconst engagements = new Engagements(api);\r\n\t\tconst params = {};\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tapi.setAccessToken(\r\n\t\t\t\tgetEngagementsDto.config.accessToken,\r\n\t\t\t\tgetEngagementsDto.config.accessSecret,\r\n\t\t\t\t() => {\r\n\t\t\t\t\tengagements.getList(params, (error, data) => {\r\n\t\t\t\t\t\tif (error) {\r\n\t\t\t\t\t\t\treject(error);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tconst {\r\n\t\t\t\t\t\t\t\tengagements: { engagement }\r\n\t\t\t\t\t\t\t} = data;\r\n\t\t\t\t\t\t\tresolve(engagement);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\t/*\r\n\t * Get specific contract using contractId\r\n\t */\r\n\tprivate async _getContractByContractId(\r\n\t\tconfig: IUpworkApiConfig,\r\n\t\tcontractId\r\n\t): Promise<IEngagement> {\r\n\t\tconst api = new UpworkApi(config);\r\n\t\tconst engagements = new Engagements(api);\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tapi.setAccessToken(config.accessToken, config.accessSecret, () => {\r\n\t\t\t\tengagements.getSpecific(contractId, (error, data) => {\r\n\t\t\t\t\tif (error) {\r\n\t\t\t\t\t\treject(error);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst { engagement } = data;\r\n\t\t\t\t\t\tresolve(engagement);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tasync syncContracts({\r\n\t\tintegrationId,\r\n\t\torganizationId,\r\n\t\tcontracts\r\n\t}): Promise<IIntegrationMap[]> {\r\n\t\treturn await Promise.all(\r\n\t\t\tawait contracts.map(\r\n\t\t\t\tasync ({\r\n\t\t\t\t\tjob__title: name,\r\n\t\t\t\t\treference: sourceId,\r\n\t\t\t\t\tengagement_start_date,\r\n\t\t\t\t\tengagement_end_date,\r\n\t\t\t\t\tactive_milestone\r\n\t\t\t\t}) => {\r\n\t\t\t\t\tconst payload = {\r\n\t\t\t\t\t\tname,\r\n\t\t\t\t\t\torganizationId,\r\n\t\t\t\t\t\tpublic: true,\r\n\t\t\t\t\t\tcurrency: env.defaultCurrency as CurrenciesEnum\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tif (typeof active_milestone === 'object') {\r\n\t\t\t\t\t\tpayload['billing'] = ProjectBillingEnum.MILESTONES;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpayload['billing'] = ProjectBillingEnum.RATE;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// contract start date\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\ttypeof engagement_start_date === 'string' &&\r\n\t\t\t\t\t\tengagement_start_date.length > 0\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tpayload['startDate'] = new Date(\r\n\t\t\t\t\t\t\tunixTimestampToDate(engagement_start_date)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// contract end date\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\ttypeof engagement_end_date === 'string' &&\r\n\t\t\t\t\t\tengagement_end_date.length > 0\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tpayload['endDate'] = new Date(\r\n\t\t\t\t\t\t\tunixTimestampToDate(engagement_end_date)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst tenantId = RequestContext.currentTenantId();\r\n\t\t\t\t\tconst {\r\n\t\t\t\t\t\trecord: integrationMap\r\n\t\t\t\t\t} = await this._integrationMapService.findOneOrFail({\r\n\t\t\t\t\t\twhere: {\r\n\t\t\t\t\t\t\tsourceId,\r\n\t\t\t\t\t\t\tentity: IntegrationEntity.PROJECT,\r\n\t\t\t\t\t\t\torganizationId,\r\n\t\t\t\t\t\t\ttenantId\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\t//if project already integrated then only update model/entity\r\n\t\t\t\t\tif (integrationMap) {\r\n\t\t\t\t\t\tawait this.commandBus.execute(\r\n\t\t\t\t\t\t\tnew OrganizationProjectUpdateCommand(\r\n\t\t\t\t\t\t\t\tObject.assign(payload, {\r\n\t\t\t\t\t\t\t\t\tid: integrationMap.gauzyId\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\treturn integrationMap;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst project = await this.commandBus.execute(\r\n\t\t\t\t\t\tnew OrganizationProjectCreateCommand(\r\n\t\t\t\t\t\t\tObject.assign({}, payload)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t);\r\n\t\t\t\t\treturn await this.commandBus.execute(\r\n\t\t\t\t\t\tnew IntegrationMapSyncEntityCommand({\r\n\t\t\t\t\t\t\tgauzyId: project.id,\r\n\t\t\t\t\t\t\tintegrationId,\r\n\t\t\t\t\t\t\tsourceId,\r\n\t\t\t\t\t\t\tentity: IntegrationEntity.PROJECT,\r\n\t\t\t\t\t\t\torganizationId\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n\r\n\t// work diary holds information for time slots and time logs\r\n\tasync getWorkDiary(getWorkDiaryDto: IGetWorkDiaryDto): Promise<any> {\r\n\t\tconst api = new UpworkApi(getWorkDiaryDto.config);\r\n\t\tconst workdiary = new Workdiary(api);\r\n\t\tconst params = {\r\n\t\t\toffset: 0\r\n\t\t};\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tapi.setAccessToken(\r\n\t\t\t\tgetWorkDiaryDto.config.accessToken,\r\n\t\t\t\tgetWorkDiaryDto.config.accessSecret,\r\n\t\t\t\t() => {\r\n\t\t\t\t\tworkdiary.getByContract(\r\n\t\t\t\t\t\tgetWorkDiaryDto.contractId,\r\n\t\t\t\t\t\tmoment(getWorkDiaryDto.forDate).format('YYYYMMDD'),\r\n\t\t\t\t\t\tparams,\r\n\t\t\t\t\t\t(err, data) => (err ? reject(err) : resolve(data))\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\tasync syncTimeLog(timeLog) {\r\n\t\tconst organizationId = timeLog.organizationId;\r\n\t\tconst timesheet = await this.commandBus.execute(\r\n\t\t\tnew TimesheetFirstOrCreateCommand(\r\n\t\t\t\tmoment(timeLog.startDate).toDate(),\r\n\t\t\t\ttimeLog.employeeId,\r\n\t\t\t\torganizationId\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\t// if (!timesheet) {\r\n\t\t// \ttimesheet = await this.commandBus.execute(\r\n\t\t// \t\tnew TimesheetCreateCommand({\r\n\t\t// \t\t\tstartedAt: timeLog.startDate,\r\n\t\t// \t\t\temployeeId: timeLog.employeeId,\r\n\t\t// \t\t\tmouse: timeLog.mouse_events_count,\r\n\t\t// \t\t\tkeyboard: timeLog.keyboard_events_count,\r\n\t\t// \t\t\tduration: timeLog.duration\r\n\t\t// \t\t})\r\n\t\t// \t);\r\n\t\t// }\r\n\r\n\t\tconst gauzyTimeLog = await this.commandBus.execute(\r\n\t\t\tnew TimeLogCreateCommand({\r\n\t\t\t\tprojectId: timeLog.projectId,\r\n\t\t\t\temployeeId: timeLog.employeeId,\r\n\t\t\t\tlogType: timeLog.logType,\r\n\t\t\t\tstartedAt: timeLog.startDate,\r\n\t\t\t\tstoppedAt: moment(timeLog.startedAt)\r\n\t\t\t\t\t.add(timeLog.duration, 'seconds')\r\n\t\t\t\t\t.toDate(),\r\n\t\t\t\ttimesheetId: timesheet.id,\r\n\t\t\t\tsource: TimeLogSourceEnum.UPWORK,\r\n\t\t\t\torganizationId\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tawait this.commandBus.execute(\r\n\t\t\tnew IntegrationMapSyncEntityCommand({\r\n\t\t\t\tgauzyId: gauzyTimeLog.id,\r\n\t\t\t\tintegrationId: timeLog.integrationId,\r\n\t\t\t\tsourceId: timeLog.sourceId,\r\n\t\t\t\tentity: IntegrationEntity.TIME_LOG,\r\n\t\t\t\torganizationId\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\treturn gauzyTimeLog;\r\n\t}\r\n\r\n\tasync syncTimeSlots({\r\n\t\ttimeSlots,\r\n\t\temployeeId,\r\n\t\tintegrationId,\r\n\t\tsourceId,\r\n\t\torganizationId\r\n\t}) {\r\n\t\tlet integratedTimeSlots = [];\r\n\r\n\t\tfor await (const timeSlot of timeSlots) {\r\n\t\t\tconst multiply = 10;\r\n\t\t\tconst durtion = 600;\r\n\t\t\tconst {\r\n\t\t\t\tkeyboard_events_count,\r\n\t\t\t\tmouse_events_count,\r\n\t\t\t\tcell_time,\r\n\t\t\t\tactivity\r\n\t\t\t} = timeSlot;\r\n\t\t\tconst gauzyTimeSlot = await this.commandBus.execute(\r\n\t\t\t\tnew TimeSlotCreateCommand({\r\n\t\t\t\t\temployeeId,\r\n\t\t\t\t\tstartedAt: new Date(\r\n\t\t\t\t\t\tmoment.unix(cell_time).format('YYYY-MM-DD HH:mm:ss')\r\n\t\t\t\t\t),\r\n\t\t\t\t\tkeyboard: keyboard_events_count,\r\n\t\t\t\t\tmouse: mouse_events_count,\r\n\t\t\t\t\ttime_slot: new Date(\r\n\t\t\t\t\t\tmoment.unix(cell_time).format('YYYY-MM-DD HH:mm:ss')\r\n\t\t\t\t\t),\r\n\t\t\t\t\toverall: activity * multiply,\r\n\t\t\t\t\tduration: durtion,\r\n\t\t\t\t\torganizationId\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\tconst integratedSlot = await this.commandBus.execute(\r\n\t\t\t\tnew IntegrationMapSyncEntityCommand({\r\n\t\t\t\t\tgauzyId: gauzyTimeSlot.id,\r\n\t\t\t\t\tintegrationId,\r\n\t\t\t\t\tsourceId,\r\n\t\t\t\t\tentity: IntegrationEntity.TIME_SLOT,\r\n\t\t\t\t\torganizationId\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\tintegratedTimeSlots = integratedTimeSlots.concat(integratedSlot);\r\n\t\t}\r\n\r\n\t\treturn integratedTimeSlots;\r\n\t}\r\n\r\n\tasync syncWorkDiaries(\r\n\t\torganizationId,\r\n\t\tintegrationId,\r\n\t\tsyncedContracts,\r\n\t\tconfig,\r\n\t\temployeeId,\r\n\t\tforDate\r\n\t) {\r\n\t\tconst workDiaries = await Promise.all(\r\n\t\t\tsyncedContracts.map(async (contract) => {\r\n\t\t\t\tconst wd = await this.getWorkDiary({\r\n\t\t\t\t\tcontractId: contract.sourceId,\r\n\t\t\t\t\tconfig,\r\n\t\t\t\t\tforDate\r\n\t\t\t\t})\r\n\t\t\t\t\t.then((response) => response)\r\n\t\t\t\t\t.catch((error) => error);\r\n\r\n\t\t\t\tif (wd.hasOwnProperty('statusCode') && wd.statusCode === 404) {\r\n\t\t\t\t\treturn wd;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst cells = wd.data.cells;\r\n\t\t\t\tconst sourceId = wd.data.contract.record_id;\r\n\r\n\t\t\t\tif (!cells.length) {\r\n\t\t\t\t\treturn [];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst timeLogDto = {\r\n\t\t\t\t\t...this.formatLogFromSlots(cells),\r\n\t\t\t\t\temployeeId,\r\n\t\t\t\t\tintegrationId,\r\n\t\t\t\t\torganizationId,\r\n\t\t\t\t\tprojectId: contract.gauzyId,\r\n\t\t\t\t\tstartDate: moment\r\n\t\t\t\t\t\t.unix(cells[0].cell_time)\r\n\t\t\t\t\t\t.format('YYYY-MM-DD HH:mm:ss'),\r\n\t\t\t\t\tduration: cells.length * 10 * 60,\r\n\t\t\t\t\tsourceId\r\n\t\t\t\t};\r\n\r\n\t\t\t\tconst timeSlotsDto = {\r\n\t\t\t\t\ttimeSlots: cells,\r\n\t\t\t\t\temployeeId,\r\n\t\t\t\t\tintegrationId,\r\n\t\t\t\t\tsourceId,\r\n\t\t\t\t\torganizationId\r\n\t\t\t\t};\r\n\r\n\t\t\t\tconst integratedTimeLog = await this.syncTimeLog(timeLogDto);\r\n\t\t\t\tconst integratedTimeSlots = await this.syncTimeSlots(\r\n\t\t\t\t\ttimeSlotsDto\r\n\t\t\t\t);\r\n\t\t\t\tconst integratedScreenshots = await this.syncSnapshots(\r\n\t\t\t\t\ttimeSlotsDto\r\n\t\t\t\t);\r\n\t\t\t\tconst timeSlotsActivities = await this.getTimeSlotActivitiesByContractId(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcontractId: sourceId,\r\n\t\t\t\t\t\temployeeId,\r\n\t\t\t\t\t\torganizationId,\r\n\t\t\t\t\t\tconfig,\r\n\t\t\t\t\t\ttimeSlots: cells\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tintegratedTimeLog,\r\n\t\t\t\t\tintegratedTimeSlots,\r\n\t\t\t\t\tintegratedScreenshots,\r\n\t\t\t\t\ttimeSlotsActivities\r\n\t\t\t\t};\r\n\t\t\t})\r\n\t\t);\r\n\t\treturn workDiaries;\r\n\t}\r\n\r\n\tformatLogFromSlots(slots) {\r\n\t\treturn slots.reduce(\r\n\t\t\t(prev, current) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...prev,\r\n\t\t\t\t\tkeyboard: prev.keyboard += +current.keyboard_events_count,\r\n\t\t\t\t\tmouse: prev.mouse += +current.mouse_events_count,\r\n\t\t\t\t\tlogType: slots.manual\r\n\t\t\t\t\t\t? TimeLogType.MANUAL\r\n\t\t\t\t\t\t: TimeLogType.TRACKED\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tkeyboard: 0,\r\n\t\t\t\tmouse: 0\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tasync syncContractsRelatedData({\r\n\t\tintegrationId,\r\n\t\torganizationId,\r\n\t\tcontracts,\r\n\t\temployeeId,\r\n\t\tconfig,\r\n\t\tentitiesToSync,\r\n\t\tproviderRefernceId,\r\n\t\tproviderId\r\n\t}) {\r\n\t\tconst syncedContracts = await this.syncContracts({\r\n\t\t\tcontracts,\r\n\t\t\tintegrationId,\r\n\t\t\torganizationId\r\n\t\t});\r\n\r\n\t\tif (!employeeId) {\r\n\t\t\tconst employee = await this._getUpworkGauzyEmployee(\r\n\t\t\t\tproviderRefernceId,\r\n\t\t\t\tintegrationId,\r\n\t\t\t\torganizationId,\r\n\t\t\t\tconfig\r\n\t\t\t);\r\n\t\t\temployeeId = employee.gauzyId;\r\n\t\t}\r\n\r\n\t\treturn await Promise.all(\r\n\t\t\tentitiesToSync.map(async (entity) => {\r\n\t\t\t\tswitch (entity.key) {\r\n\t\t\t\t\tcase 'workDiary':\r\n\t\t\t\t\t\treturn await this.syncWorkDiaries(\r\n\t\t\t\t\t\t\torganizationId,\r\n\t\t\t\t\t\t\tintegrationId,\r\n\t\t\t\t\t\t\tsyncedContracts,\r\n\t\t\t\t\t\t\tconfig,\r\n\t\t\t\t\t\t\temployeeId,\r\n\t\t\t\t\t\t\tentity.datePicker.selectedDate\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\tcase 'report':\r\n\t\t\t\t\t\treturn await this.syncReports(\r\n\t\t\t\t\t\t\torganizationId,\r\n\t\t\t\t\t\t\tintegrationId,\r\n\t\t\t\t\t\t\tconfig,\r\n\t\t\t\t\t\t\temployeeId,\r\n\t\t\t\t\t\t\tproviderRefernceId,\r\n\t\t\t\t\t\t\tproviderId,\r\n\t\t\t\t\t\t\tentity.datePicker.selectedDate\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\tcase 'proposal':\r\n\t\t\t\t\t\treturn await this.syncProposalsOffers(\r\n\t\t\t\t\t\t\torganizationId,\r\n\t\t\t\t\t\t\tintegrationId,\r\n\t\t\t\t\t\t\tconfig,\r\n\t\t\t\t\t\t\temployeeId\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\t/*\r\n\t * Get timeslot minute activities\r\n\t */\r\n\tasync syncTimeSlotsActivity({\r\n\t\temployeeId,\r\n\t\torganizationId,\r\n\t\ttimeSlot,\r\n\t\ttimeSlotActivity\r\n\t}) {\r\n\t\ttry {\r\n\t\t\tconst { minutes } = timeSlotActivity;\r\n\t\t\tconst { cell_time } = timeSlot;\r\n\r\n\t\t\tconst integratedTimeSlotsMinutes = await Promise.all(\r\n\t\t\t\tminutes.map(async (minute) => {\r\n\t\t\t\t\tconst {\r\n\t\t\t\t\t\trecord: findTimeSlot\r\n\t\t\t\t\t} = await this._timeSlotService.findOneOrFail({\r\n\t\t\t\t\t\twhere: {\r\n\t\t\t\t\t\t\temployeeId: employeeId,\r\n\t\t\t\t\t\t\tstartedAt: moment\r\n\t\t\t\t\t\t\t\t.unix(cell_time)\r\n\t\t\t\t\t\t\t\t.format('YYYY-MM-DD HH:mm:ss')\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif (!findTimeSlot) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst { time, mouse, keyboard } = minute;\r\n\t\t\t\t\tconst gauzyTimeSlotMinute = await this.commandBus.execute(\r\n\t\t\t\t\t\tnew CreateTimeSlotMinutesCommand({\r\n\t\t\t\t\t\t\tmouse,\r\n\t\t\t\t\t\t\tkeyboard,\r\n\t\t\t\t\t\t\tdatetime: new Date(\r\n\t\t\t\t\t\t\t\tmoment.unix(time).format('YYYY-MM-DD HH:mm:ss')\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\ttimeSlot: findTimeSlot,\r\n\t\t\t\t\t\t\torganizationId\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t);\r\n\t\t\t\t\treturn gauzyTimeSlotMinute;\r\n\t\t\t\t})\r\n\t\t\t);\r\n\r\n\t\t\treturn integratedTimeSlotsMinutes;\r\n\t\t} catch (error) {\r\n\t\t\tthrow new BadRequestException(\r\n\t\t\t\t'Cannot sync timeslot every minute activity'\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\t/*\r\n\t * Get snapshots/timeslot minutes activites\r\n\t */\r\n\tasync getTimeSlotActivitiesByContractId({\r\n\t\tcontractId,\r\n\t\temployeeId,\r\n\t\torganizationId,\r\n\t\tconfig,\r\n\t\ttimeSlots\r\n\t}) {\r\n\t\tconst timeSlotActivities = await Promise.all(\r\n\t\t\ttimeSlots.map(async (timeslot) => {\r\n\t\t\t\tconst {\r\n\t\t\t\t\tsnapshot: timeSlotActivity\r\n\t\t\t\t} = await this.getSnapshotByContractId(\r\n\t\t\t\t\tconfig,\r\n\t\t\t\t\tcontractId,\r\n\t\t\t\t\ttimeslot\r\n\t\t\t\t);\r\n\t\t\t\tconst integratedTimeSlotActivities = await this.syncTimeSlotsActivity(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\temployeeId,\r\n\t\t\t\t\t\torganizationId,\r\n\t\t\t\t\t\ttimeSlot: timeslot,\r\n\t\t\t\t\t\ttimeSlotActivity\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tintegratedTimeSlotActivities\r\n\t\t\t\t};\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\treturn timeSlotActivities;\r\n\t}\r\n\r\n\t/**\r\n\t * Get snapshots for given contractId and Unix time\r\n\t */\r\n\tasync getSnapshotByContractId(\r\n\t\tconfig: IUpworkApiConfig,\r\n\t\tcontractId,\r\n\t\ttimeSlot\r\n\t): Promise<any> {\r\n\t\tconst api = new UpworkApi(config);\r\n\t\tconst snapshots = new Snapshot(api);\r\n\t\tconst { snapshot_time: snapshotTime } = timeSlot;\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tapi.setAccessToken(config.accessToken, config.accessSecret, () => {\r\n\t\t\t\tsnapshots.getByContract(contractId, snapshotTime, (err, data) =>\r\n\t\t\t\t\terr ? reject(err) : resolve(data)\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/*\r\n\t * Sync Snapshots By Contract\r\n\t */\r\n\tasync syncSnapshots(timeSlotsData) {\r\n\t\tconst {\r\n\t\t\ttimeSlots = [],\r\n\t\t\temployeeId,\r\n\t\t\tintegrationId,\r\n\t\t\tsourceId,\r\n\t\t\torganizationId\r\n\t\t} = timeSlotsData;\r\n\t\tconst integrationMaps = await timeSlots.map(\r\n\t\t\tasync ({\r\n\t\t\t\tcell_time,\r\n\t\t\t\tscreenshot_img,\r\n\t\t\t\tscreenshot_img_thmb,\r\n\t\t\t\tsnapshot_time\r\n\t\t\t}) => {\r\n\t\t\t\tconst recordedAt = moment\r\n\t\t\t\t\t.unix(snapshot_time)\r\n\t\t\t\t\t.format('YYYY-MM-DD HH:mm:ss');\r\n\t\t\t\tconst activityTimestamp = moment\r\n\t\t\t\t\t.unix(cell_time)\r\n\t\t\t\t\t.format('YYYY-MM-DD HH:mm:ss');\r\n\r\n\t\t\t\tconst gauzyScreenshot = await this.commandBus.execute(\r\n\t\t\t\t\tnew ScreenshotCreateCommand({\r\n\t\t\t\t\t\tfile: screenshot_img,\r\n\t\t\t\t\t\tthumb: screenshot_img_thmb,\r\n\t\t\t\t\t\trecordedAt,\r\n\t\t\t\t\t\tactivityTimestamp,\r\n\t\t\t\t\t\temployeeId,\r\n\t\t\t\t\t\torganizationId\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\r\n\t\t\t\treturn await this._integrationMapService.create({\r\n\t\t\t\t\tgauzyId: gauzyScreenshot.id,\r\n\t\t\t\t\tintegrationId,\r\n\t\t\t\t\tsourceId,\r\n\t\t\t\t\tentity: IntegrationEntity.SCREENSHOT,\r\n\t\t\t\t\torganizationId\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\treturn await Promise.all(integrationMaps);\r\n\t}\r\n\r\n\tprivate async _getUpworkAuthenticatedUser(config: IUpworkApiConfig) {\r\n\t\tconst api = new UpworkApi(config);\r\n\t\tconst users = new Users(api);\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tapi.setAccessToken(config.accessToken, config.accessSecret, () => {\r\n\t\t\t\tusers.getMyInfo((err, data) =>\r\n\t\t\t\t\terr ? reject(err) : resolve(data)\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tprivate async _getUpworkUserInfo(config: IUpworkApiConfig) {\r\n\t\tconst api = new UpworkApi(config);\r\n\t\tconst auth = new Auth(api);\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tapi.setAccessToken(config.accessToken, config.accessSecret, () => {\r\n\t\t\t\tauth.getUserInfo((err, data) =>\r\n\t\t\t\t\terr ? reject(err) : resolve(data)\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tprivate async _handleEmployee({ integrationId, organizationId, config }) {\r\n\t\tconst promises = [];\r\n\t\tpromises.push(this._getUpworkAuthenticatedUser(config));\r\n\t\tpromises.push(this._getUpworkUserInfo(config));\r\n\r\n\t\treturn Promise.all(promises).then(async (results: any[]) => {\r\n\t\t\tconst { user } = results[0];\r\n\t\t\tconst { info } = results[1];\r\n\t\t\tuser['info'] = info;\r\n\r\n\t\t\treturn await this.syncEmployee({\r\n\t\t\t\tintegrationId,\r\n\t\t\t\tuser,\r\n\t\t\t\torganizationId\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tprivate async _getUpworkGauzyEmployee(\r\n\t\tproviderRefernceId,\r\n\t\tintegrationId,\r\n\t\torganizationId,\r\n\t\tconfig: IUpworkApiConfig\r\n\t) {\r\n\t\tconst tenantId = RequestContext.currentTenantId();\r\n\t\tconst { record } = await this._integrationMapService.findOneOrFail({\r\n\t\t\twhere: {\r\n\t\t\t\tsourceId: providerRefernceId,\r\n\t\t\t\tentity: IntegrationEntity.EMPLOYEE,\r\n\t\t\t\torganizationId,\r\n\t\t\t\ttenantId\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn record\r\n\t\t\t? record\r\n\t\t\t: await this._handleEmployee({\r\n\t\t\t\t\tintegrationId,\r\n\t\t\t\t\torganizationId,\r\n\t\t\t\t\tconfig\r\n\t\t\t  });\r\n\t}\r\n\r\n\tasync syncEmployee({ integrationId, user, organizationId }) {\r\n\t\tconst { reference: userId, email, info } = user;\r\n\t\tconst { record } = await this._userService.findOneOrFail({\r\n\t\t\twhere: { email: email }\r\n\t\t});\r\n\r\n\t\t//upwork profile picture\r\n\t\tconst { portrait_100_img: imageUrl } = info;\r\n\r\n\t\tlet employee;\r\n\t\tif (record) {\r\n\t\t\temployee = await this.commandBus.execute(\r\n\t\t\t\tnew EmployeeGetCommand({ where: { userId: record.id } })\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tconst [role, organization] = await Promise.all([\r\n\t\t\t\tawait this._roleService.findOne({\r\n\t\t\t\t\twhere: { name: RolesEnum.EMPLOYEE }\r\n\t\t\t\t}),\r\n\t\t\t\tawait this._organizationService.findOne({\r\n\t\t\t\t\twhere: { id: organizationId }\r\n\t\t\t\t})\r\n\t\t\t]);\r\n\r\n\t\t\tconst { first_name: firstName, last_name: lastName, status } = user;\r\n\t\t\tconst isActive = status === 'active' ? true : false;\r\n\t\t\temployee = await this.commandBus.execute(\r\n\t\t\t\tnew EmployeeCreateCommand({\r\n\t\t\t\t\tuser: {\r\n\t\t\t\t\t\temail,\r\n\t\t\t\t\t\tfirstName,\r\n\t\t\t\t\t\tlastName,\r\n\t\t\t\t\t\trole,\r\n\t\t\t\t\t\ttags: null,\r\n\t\t\t\t\t\ttenant: null,\r\n\t\t\t\t\t\timageUrl\r\n\t\t\t\t\t},\r\n\t\t\t\t\tpassword: environment.defaultHubstaffUserPass,\r\n\t\t\t\t\torganization,\r\n\t\t\t\t\tstartedWorkOn: new Date(\r\n\t\t\t\t\t\tmoment().format('YYYY-MM-DD HH:mm:ss')\r\n\t\t\t\t\t),\r\n\t\t\t\t\tisActive\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn await this._integrationMapService.create({\r\n\t\t\tgauzyId: employee.id,\r\n\t\t\tintegrationId,\r\n\t\t\tsourceId: userId,\r\n\t\t\tentity: IntegrationEntity.EMPLOYEE,\r\n\t\t\torganizationId\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Sync contract client\r\n\t */\r\n\tasync syncClient(\r\n\t\tintegrationId,\r\n\t\torganizationId,\r\n\t\tclient\r\n\t): Promise<OrganizationContact> {\r\n\t\tconst { company_id: sourceId, company_name: name } = client;\r\n\t\tconst { record } = await this._orgClientService.findOneOrFail({\r\n\t\t\twhere: {\r\n\t\t\t\tname,\r\n\t\t\t\torganizationId: organizationId\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (record) {\r\n\t\t\treturn record;\r\n\t\t}\r\n\r\n\t\tconst gauzyClient = await this.commandBus.execute(\r\n\t\t\tnew OrganizationContactCreateCommand({\r\n\t\t\t\tname,\r\n\t\t\t\torganizationId,\r\n\t\t\t\tcontactType: ContactType.CLIENT\r\n\t\t\t})\r\n\t\t);\r\n\t\tawait this._integrationMapService.create({\r\n\t\t\tgauzyId: gauzyClient.id,\r\n\t\t\tintegrationId,\r\n\t\t\tsourceId,\r\n\t\t\tentity: IntegrationEntity.CLIENT,\r\n\t\t\torganizationId\r\n\t\t});\r\n\r\n\t\treturn gauzyClient;\r\n\t}\r\n\r\n\t/*\r\n\t * Sync upwork transactions/earnings reports\r\n\t */\r\n\tasync syncReports(\r\n\t\torganizationId,\r\n\t\tintegrationId,\r\n\t\tconfig: IUpworkApiConfig,\r\n\t\temployeeId,\r\n\t\tproviderRefernceId,\r\n\t\tproviderId,\r\n\t\tdateRange: IUpworkDateRange\r\n\t) {\r\n\t\ttry {\r\n\t\t\tconst syncedIncome = await this._syncIncome(\r\n\t\t\t\torganizationId,\r\n\t\t\t\tintegrationId,\r\n\t\t\t\tconfig,\r\n\t\t\t\temployeeId,\r\n\t\t\t\tproviderId,\r\n\t\t\t\tdateRange\r\n\t\t\t);\r\n\r\n\t\t\tconst syncedExpense = await this._syncExpense(\r\n\t\t\t\torganizationId,\r\n\t\t\t\tintegrationId,\r\n\t\t\t\tconfig,\r\n\t\t\t\temployeeId,\r\n\t\t\t\tproviderRefernceId,\r\n\t\t\t\tdateRange\r\n\t\t\t);\r\n\t\t\treturn {\r\n\t\t\t\tsyncedIncome,\r\n\t\t\t\tsyncedExpense\r\n\t\t\t};\r\n\t\t} catch (error) {\r\n\t\t\tthrow new BadRequestException('Cannot sync reports');\r\n\t\t}\r\n\t}\r\n\r\n\t/*\r\n\t * Sync upwork freelancer expense\r\n\t */\r\n\tprivate async _syncExpense(\r\n\t\torganizationId,\r\n\t\tintegrationId,\r\n\t\tconfig: IUpworkApiConfig,\r\n\t\temployeeId,\r\n\t\tproviderRefernceId,\r\n\t\tdateRange: IUpworkDateRange\r\n\t) {\r\n\t\tconst reports = await this._upworkReportService.getEarningReportByFreelancer(\r\n\t\t\tconfig,\r\n\t\t\tproviderRefernceId,\r\n\t\t\tdateRange\r\n\t\t);\r\n\t\tconst {\r\n\t\t\ttable: { cols = [] }\r\n\t\t} = reports;\r\n\r\n\t\tlet {\r\n\t\t\ttable: { rows = [] }\r\n\t\t} = reports;\r\n\r\n\t\tconst columns = _.pluck(cols, 'label');\r\n\t\t//mapped inner row and associate to object key\r\n\t\trows = _.map(rows, function (row) {\r\n\t\t\tconst innerRow = _.pluck(row['c'], 'v');\r\n\t\t\tconst ele = {};\r\n\t\t\tfor (let index = 0; index < columns.length; index++) {\r\n\t\t\t\tele[columns[index]] = innerRow[index];\r\n\t\t\t}\r\n\t\t\treturn ele;\r\n\t\t});\r\n\r\n\t\treturn await Promise.all(\r\n\t\t\trows\r\n\t\t\t\t.filter(\r\n\t\t\t\t\t(row) => row.subtype === ExpenseCategoriesEnum.SERVICE_FEE\r\n\t\t\t\t)\r\n\t\t\t\t.map(async (row) => {\r\n\t\t\t\t\tconst {\r\n\t\t\t\t\t\tamount,\r\n\t\t\t\t\t\tdate,\r\n\t\t\t\t\t\tdescription,\r\n\t\t\t\t\t\tsubtype,\r\n\t\t\t\t\t\treference\r\n\t\t\t\t\t} = row;\r\n\t\t\t\t\tconst {\r\n\t\t\t\t\t\trecord: category\r\n\t\t\t\t\t} = await this._expenseCategoryService.findOneOrFail({\r\n\t\t\t\t\t\twhere: {\r\n\t\t\t\t\t\t\tname: ExpenseCategoriesEnum.SERVICE_FEE,\r\n\t\t\t\t\t\t\torganizationId\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tconst {\r\n\t\t\t\t\t\trecord: vendor\r\n\t\t\t\t\t} = await this._orgVendorService.findOneOrFail({\r\n\t\t\t\t\t\twhere: {\r\n\t\t\t\t\t\t\tname: OrganizationVendorEnum.UPWORK,\r\n\t\t\t\t\t\t\torganizationId\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tconst {\r\n\t\t\t\t\t\trecord: integrationMap\r\n\t\t\t\t\t} = await this._integrationMapService.findOneOrFail({\r\n\t\t\t\t\t\twhere: {\r\n\t\t\t\t\t\t\tintegrationId,\r\n\t\t\t\t\t\t\tsourceId: reference,\r\n\t\t\t\t\t\t\tentity: IntegrationEntity.EXPENSE,\r\n\t\t\t\t\t\t\torganizationId\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif (integrationMap) {\r\n\t\t\t\t\t\treturn integrationMap;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst gauzyExpense = await this.commandBus.execute(\r\n\t\t\t\t\t\tnew ExpenseCreateCommand({\r\n\t\t\t\t\t\t\temployeeId,\r\n\t\t\t\t\t\t\torganizationId,\r\n\t\t\t\t\t\t\tamount,\r\n\t\t\t\t\t\t\tcategory,\r\n\t\t\t\t\t\t\tvalueDate: new Date(\r\n\t\t\t\t\t\t\t\tmoment(date).format('YYYY-MM-DD HH:mm:ss')\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\tvendor,\r\n\t\t\t\t\t\t\treference,\r\n\t\t\t\t\t\t\tnotes: description,\r\n\t\t\t\t\t\t\ttypeOfExpense: subtype,\r\n\t\t\t\t\t\t\tcurrency: env.defaultCurrency\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\treturn await this._integrationMapService.create({\r\n\t\t\t\t\t\tgauzyId: gauzyExpense.id,\r\n\t\t\t\t\t\tintegrationId,\r\n\t\t\t\t\t\tsourceId: reference,\r\n\t\t\t\t\t\tentity: IntegrationEntity.EXPENSE,\r\n\t\t\t\t\t\torganizationId\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\t/*\r\n\t * Sync upwork freelancer income\r\n\t */\r\n\tprivate async _syncIncome(\r\n\t\torganizationId,\r\n\t\tintegrationId,\r\n\t\tconfig: IUpworkApiConfig,\r\n\t\temployeeId,\r\n\t\tproviderId,\r\n\t\tdateRange: IUpworkDateRange\r\n\t) {\r\n\t\tconst reports = await this._upworkReportService.getFullReportByFreelancer(\r\n\t\t\tconfig,\r\n\t\t\tproviderId,\r\n\t\t\tdateRange\r\n\t\t);\r\n\t\tconst {\r\n\t\t\ttable: { cols = [] }\r\n\t\t} = reports;\r\n\r\n\t\tlet {\r\n\t\t\ttable: { rows = [] }\r\n\t\t} = reports;\r\n\r\n\t\tconst columns = _.pluck(cols, 'label');\r\n\t\t//mapped inner row and associate to object key\r\n\t\trows = _.map(rows, function (row) {\r\n\t\t\tconst innerRow = _.pluck(row['c'], 'v');\r\n\t\t\tconst ele = {};\r\n\t\t\tfor (let index = 0; index < columns.length; index++) {\r\n\t\t\t\tele[columns[index]] = innerRow[index];\r\n\t\t\t}\r\n\t\t\treturn ele;\r\n\t\t});\r\n\r\n\t\tlet integratedIncomes = [];\r\n\t\tfor await (const row of rows) {\r\n\t\t\tconst {\r\n\t\t\t\tcompany_id: clientId,\r\n\t\t\t\tcompany_name: clientName,\r\n\t\t\t\tmemo: notes,\r\n\t\t\t\tworked_on,\r\n\t\t\t\tassignment_rate,\r\n\t\t\t\thours,\r\n\t\t\t\tassignment_ref: contractId\r\n\t\t\t} = row;\r\n\r\n\t\t\t//sync upwork contract client\r\n\t\t\tawait this.syncClient(integrationId, organizationId, row);\r\n\r\n\t\t\tconst { record: income } = await this._incomeService.findOneOrFail({\r\n\t\t\t\twhere: {\r\n\t\t\t\t\temployeeId,\r\n\t\t\t\t\tclientId,\r\n\t\t\t\t\treference: contractId,\r\n\t\t\t\t\tvalueDate: new Date(\r\n\t\t\t\t\t\tmoment(worked_on).format('YYYY-MM-DD HH:mm:ss')\r\n\t\t\t\t\t),\r\n\t\t\t\t\torganizationId\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tlet integratedIncome;\r\n\t\t\tif (income) {\r\n\t\t\t\tconst findIntegration = await this._integrationMapService.findOneOrFail(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\twhere: {\r\n\t\t\t\t\t\t\tgauzyId: income.id,\r\n\t\t\t\t\t\t\tintegrationId,\r\n\t\t\t\t\t\t\tentity: IntegrationEntity.INCOME,\r\n\t\t\t\t\t\t\torganizationId\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t\tintegratedIncome = findIntegration.record;\r\n\t\t\t} else {\r\n\t\t\t\tconst amount = parseFloat(\r\n\t\t\t\t\t(parseFloat(hours) * parseFloat(assignment_rate)).toFixed(2)\r\n\t\t\t\t);\r\n\t\t\t\tconst gauzyIncome = await this.commandBus.execute(\r\n\t\t\t\t\tnew IncomeCreateCommand({\r\n\t\t\t\t\t\temployeeId,\r\n\t\t\t\t\t\torganizationId,\r\n\t\t\t\t\t\tclientName,\r\n\t\t\t\t\t\tclientId,\r\n\t\t\t\t\t\tamount,\r\n\t\t\t\t\t\tvalueDate: new Date(\r\n\t\t\t\t\t\t\tmoment(worked_on).format('YYYY-MM-DD HH:mm:ss')\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tnotes,\r\n\t\t\t\t\t\ttags: [],\r\n\t\t\t\t\t\treference: contractId,\r\n\t\t\t\t\t\tcurrency: env.defaultCurrency\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\t\tintegratedIncome = await this._integrationMapService.create({\r\n\t\t\t\t\tgauzyId: gauzyIncome.id,\r\n\t\t\t\t\tintegrationId,\r\n\t\t\t\t\tsourceId: contractId,\r\n\t\t\t\t\tentity: IntegrationEntity.INCOME,\r\n\t\t\t\t\torganizationId\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tintegratedIncomes = integratedIncomes.concat(integratedIncome);\r\n\t\t}\r\n\r\n\t\treturn integratedIncomes;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all reports for upwork integration\r\n\t */\r\n\tasync getReportListByIntegration(\r\n\t\tintegrationId,\r\n\t\tfilter,\r\n\t\trelations\r\n\t): Promise<IPagination<any>> {\r\n\t\tconst { organizationId, tenantId } = filter;\r\n\t\tconst { items, total } = await this._integrationMapService.findAll({\r\n\t\t\twhere: {\r\n\t\t\t\tintegration: {\r\n\t\t\t\t\tid: integrationId\r\n\t\t\t\t},\r\n\t\t\t\tentity: In([\r\n\t\t\t\t\tIntegrationEntity.INCOME,\r\n\t\t\t\t\tIntegrationEntity.EXPENSE\r\n\t\t\t\t]),\r\n\t\t\t\torganizationId,\r\n\t\t\t\ttenantId\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst reports = {\r\n\t\t\titems: [],\r\n\t\t\ttotal\r\n\t\t};\r\n\t\tif (items.length === 0) {\r\n\t\t\treturn reports;\r\n\t\t}\r\n\r\n\t\tconst gauzyIds = _.pluck(items, 'gauzyId');\r\n\t\tconst {\r\n\t\t\tdateRange: { start, end }\r\n\t\t} = filter;\r\n\r\n\t\tconst whereClause = {\r\n\t\t\tid: In(gauzyIds),\r\n\t\t\tvalueDate: Between(\r\n\t\t\t\tmoment(start).format('YYYY-MM-DD hh:mm:ss'),\r\n\t\t\t\tmoment(end).format('YYYY-MM-DD hh:mm:ss')\r\n\t\t\t),\r\n\t\t\torganizationId,\r\n\t\t\ttenantId\r\n\t\t};\r\n\r\n\t\tconst income = await this._incomeService.findAll({\r\n\t\t\twhere: whereClause,\r\n\t\t\trelations: relations.income\r\n\t\t});\r\n\t\tconst expense = await this._expenseService.findAll({\r\n\t\t\twhere: whereClause,\r\n\t\t\trelations: relations.expense\r\n\t\t});\r\n\r\n\t\treports.total = income.total + expense.total;\r\n\t\treports.items = reports.items.concat(income.items);\r\n\t\treports.items = reports.items.concat(expense.items);\r\n\r\n\t\treports.items = _.sortBy(reports.items, function (item) {\r\n\t\t\treturn item.valueDate;\r\n\t\t}).reverse();\r\n\r\n\t\treturn reports;\r\n\t}\r\n\r\n\t/*\r\n\t * Sync upwork offers for freelancer\r\n\t */\r\n\tasync syncProposalsOffers(\r\n\t\torganizationId,\r\n\t\tintegrationId,\r\n\t\tconfig: IUpworkApiConfig,\r\n\t\temployeeId\r\n\t) {\r\n\t\tconst proposals = await this._getProposals(config);\r\n\t\tconst offers = await this._getOffers(config);\r\n\r\n\t\tconst syncedOffers = await this._syncOffers(\r\n\t\t\tconfig,\r\n\t\t\toffers,\r\n\t\t\torganizationId,\r\n\t\t\tintegrationId,\r\n\t\t\temployeeId\r\n\t\t);\r\n\r\n\t\tconst syncedProposals = await this._syncProposals(\r\n\t\t\tconfig,\r\n\t\t\tproposals,\r\n\t\t\torganizationId,\r\n\t\t\tintegrationId,\r\n\t\t\temployeeId\r\n\t\t);\r\n\r\n\t\treturn {\r\n\t\t\tsyncedOffers,\r\n\t\t\tsyncedProposals\r\n\t\t};\r\n\t}\r\n\r\n\t/*\r\n\t * Sync upwork proposals for freelancer\r\n\t */\r\n\tprivate async _getProposals(config: IUpworkApiConfig) {\r\n\t\ttry {\r\n\t\t\tconst promises = [];\r\n\t\t\tfor (const status in IUpworkProposalStatusEnum) {\r\n\t\t\t\tif (isNaN(Number(status))) {\r\n\t\t\t\t\tpromises.push(\r\n\t\t\t\t\t\tthis._upworkOfferService\r\n\t\t\t\t\t\t\t.getProposalLisByFreelancer(\r\n\t\t\t\t\t\t\t\tconfig,\r\n\t\t\t\t\t\t\t\tIUpworkProposalStatusEnum[status]\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t.then((response) => response)\r\n\t\t\t\t\t\t\t.catch((error) => error)\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn Promise.all(promises).then(async (results: any[]) => {\r\n\t\t\t\treturn results;\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tthrow new BadRequestException('Cannot sync proposals');\r\n\t\t}\r\n\t}\r\n\r\n\t/*\r\n\t * Sync upwork offers for freelancer\r\n\t */\r\n\tprivate async _getOffers(config: IUpworkApiConfig) {\r\n\t\ttry {\r\n\t\t\tconst promises = [];\r\n\t\t\tfor (const status in IUpworkOfferStatusEnum) {\r\n\t\t\t\tif (isNaN(Number(status))) {\r\n\t\t\t\t\tpromises.push(\r\n\t\t\t\t\t\tthis._upworkOfferService\r\n\t\t\t\t\t\t\t.getOffersListByFreelancer(\r\n\t\t\t\t\t\t\t\tconfig,\r\n\t\t\t\t\t\t\t\tIUpworkOfferStatusEnum[status]\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t.then((response) => response)\r\n\t\t\t\t\t\t\t.catch((error) => error)\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn Promise.all(promises).then(async (results: any[]) => {\r\n\t\t\t\treturn results;\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tthrow new BadRequestException('Cannot sync offers');\r\n\t\t}\r\n\t}\r\n\r\n\t/*\r\n\t * Sync upwork offers for freelancer\r\n\t */\r\n\tprivate async _syncOffers(\r\n\t\tconfig: IUpworkApiConfig,\r\n\t\toffers,\r\n\t\torganizationId,\r\n\t\tintegrationId,\r\n\t\temployeeId\r\n\t) {\r\n\t\treturn await Promise.all(\r\n\t\t\toffers\r\n\t\t\t\t.filter(\r\n\t\t\t\t\t(row) =>\r\n\t\t\t\t\t\trow['offers'] && row['offers'].hasOwnProperty('offer')\r\n\t\t\t\t)\r\n\t\t\t\t.map((row) => row['offers'])\r\n\t\t\t\t.map(async (row) => {\r\n\t\t\t\t\tconst { offer: items } = row;\r\n\t\t\t\t\tlet integratedOffers = [];\r\n\r\n\t\t\t\t\tfor await (const item of items) {\r\n\t\t\t\t\t\tconst {\r\n\t\t\t\t\t\t\ttitle: proposalContent,\r\n\t\t\t\t\t\t\tterms_data,\r\n\t\t\t\t\t\t\tlast_event_state,\r\n\t\t\t\t\t\t\tjob_posting_ref,\r\n\t\t\t\t\t\t\trid: sourceId\r\n\t\t\t\t\t\t} = item;\r\n\t\t\t\t\t\tlet { title: jobPostContent } = item;\r\n\t\t\t\t\t\t//find upwork job\r\n\t\t\t\t\t\tconst job = await this._upworkJobService\r\n\t\t\t\t\t\t\t.getJobProfileByKey(config, job_posting_ref)\r\n\t\t\t\t\t\t\t.then((response) => response)\r\n\t\t\t\t\t\t\t.catch((error) => error);\r\n\r\n\t\t\t\t\t\t//if job not found/closed\r\n\t\t\t\t\t\tif (job.statusCode !== 400) {\r\n\t\t\t\t\t\t\tconst { profile } = job;\r\n\t\t\t\t\t\t\tjobPostContent = profile['op_description'];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst tenantId = RequestContext.currentTenantId();\r\n\t\t\t\t\t\tconst integrationMap = await this._integrationMapService.findOneOrFail(\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\twhere: {\r\n\t\t\t\t\t\t\t\t\tsourceId,\r\n\t\t\t\t\t\t\t\t\tentity: IntegrationEntity.PROPOSAL,\r\n\t\t\t\t\t\t\t\t\torganizationId,\r\n\t\t\t\t\t\t\t\t\ttenantId\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tlet integratedOffer;\r\n\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\tintegrationMap &&\r\n\t\t\t\t\t\t\tintegrationMap['success'] === true\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\tintegratedOffer = integrationMap.record;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tconst gauzyOffer = await this.commandBus.execute(\r\n\t\t\t\t\t\t\t\tnew ProposalCreateCommand({\r\n\t\t\t\t\t\t\t\t\temployeeId,\r\n\t\t\t\t\t\t\t\t\torganizationId,\r\n\t\t\t\t\t\t\t\t\tvalueDate: new Date(\r\n\t\t\t\t\t\t\t\t\t\tunixTimestampToDate(\r\n\t\t\t\t\t\t\t\t\t\t\tterms_data.start_date\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t\t\tstatus: last_event_state\r\n\t\t\t\t\t\t\t\t\t\t.trim()\r\n\t\t\t\t\t\t\t\t\t\t.toUpperCase(),\r\n\t\t\t\t\t\t\t\t\tproposalContent,\r\n\t\t\t\t\t\t\t\t\tjobPostContent,\r\n\t\t\t\t\t\t\t\t\tjobPostUrl: job_posting_ref\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tintegratedOffer = await this._integrationMapService.create(\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tgauzyId: gauzyOffer.id,\r\n\t\t\t\t\t\t\t\t\tintegrationId,\r\n\t\t\t\t\t\t\t\t\tsourceId,\r\n\t\t\t\t\t\t\t\t\tentity: IntegrationEntity.PROPOSAL,\r\n\t\t\t\t\t\t\t\t\torganizationId\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tintegratedOffers = integratedOffers.concat(\r\n\t\t\t\t\t\t\tintegratedOffer\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn integratedOffers;\r\n\t\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\t/*\r\n\t * Sync upwork proposals for freelancer\r\n\t */\r\n\tprivate async _syncProposals(\r\n\t\tconfig: IUpworkApiConfig,\r\n\t\tproposals,\r\n\t\torganizationId,\r\n\t\tintegrationId,\r\n\t\temployeeId\r\n\t) {\r\n\t\treturn await Promise.all(\r\n\t\t\tproposals\r\n\t\t\t\t.filter(\r\n\t\t\t\t\t(row) =>\r\n\t\t\t\t\t\trow['data'] &&\r\n\t\t\t\t\t\trow['data'].hasOwnProperty('applications')\r\n\t\t\t\t)\r\n\t\t\t\t.map((row) => row.data.applications)\r\n\t\t\t\t.map(async (row) => row)\r\n\t\t);\r\n\t}\r\n}\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { UserOrganizationDeleteCommand } from '../user-organization.delete.command';\r\nimport { UserOrganization } from '../../user-organization.entity';\r\nimport { UserService } from '../../../user/user.service';\r\nimport { UserOrganizationService } from '../../user-organization.services';\r\nimport { DeleteResult } from 'typeorm';\r\nimport { RoleService } from '../../../role/role.service';\r\nimport { RolesEnum, LanguagesEnum, IUser } from '@gauzy/models';\r\nimport { UnauthorizedException, BadRequestException } from '@nestjs/common';\r\nimport { I18nService } from 'nestjs-i18n';\r\n\r\n/**\r\n * 1. Remove user from given organization if user belongs to multiple organizations\r\n * 2. Remove user record if the user belongs only to the given organization\r\n * 3. Allow the deletion of Admin and Super Admin Users only if there are more than 1 users of that Role.\r\n * 4. When a Super Admins are deleted, they must be removed from all existing organizations.\r\n * 5. Super Admin user can be deleted only by a Super Admin user.\r\n */\r\n@CommandHandler(UserOrganizationDeleteCommand)\r\nexport class UserOrganizationDeleteHandler\r\n\timplements ICommandHandler<UserOrganizationDeleteCommand> {\r\n\tconstructor(\r\n\t\tprivate readonly userOrganizationService: UserOrganizationService,\r\n\t\tprivate readonly userService: UserService,\r\n\t\tprivate readonly roleService: RoleService,\r\n\t\tprivate readonly i18n: I18nService\r\n\t) {}\r\n\r\n\tpublic async execute(\r\n\t\tcommand: UserOrganizationDeleteCommand\r\n\t): Promise<UserOrganization | DeleteResult> {\r\n\t\tconst { input } = command;\r\n\r\n\t\t// 1. find user to delete\r\n\t\tconst {\r\n\t\t\tuser: {\r\n\t\t\t\trole: { name: roleName }\r\n\t\t\t},\r\n\t\t\tuserId\r\n\t\t} = await this.userOrganizationService.findOne(\r\n\t\t\tinput.userOrganizationId,\r\n\t\t\t{ relations: ['user', 'user.role'] }\r\n\t\t);\r\n\r\n\t\t// 2. Handle Super Admin Deletion if applicable\r\n\t\tif (roleName === RolesEnum.SUPER_ADMIN)\r\n\t\t\treturn this._removeSuperAdmin(\r\n\t\t\t\tinput.requestingUser,\r\n\t\t\t\tuserId,\r\n\t\t\t\tinput.language\r\n\t\t\t);\r\n\r\n\t\treturn this._removeUserFromOrganization(\r\n\t\t\tuserId,\r\n\t\t\tinput.userOrganizationId\r\n\t\t);\r\n\t}\r\n\r\n\tprivate async _removeUserFromOrganization(\r\n\t\tuserId: string,\r\n\t\tuserOrganizationId: string\r\n\t): Promise<UserOrganization | DeleteResult> {\r\n\t\t// 1. get count of organizations the user belongs to\r\n\t\tconst { total } = await this.userOrganizationService.findAll({\r\n\t\t\twhere: { userId }\r\n\t\t});\r\n\r\n\t\treturn total === 1\r\n\t\t\t? this.userService.delete(userId)\r\n\t\t\t: this.userOrganizationService.delete(userOrganizationId);\r\n\t}\r\n\r\n\tprivate async _removeSuperAdmin(\r\n\t\trequestingUser: IUser,\r\n\t\tuserId: string,\r\n\t\tlanguage: LanguagesEnum\r\n\t): Promise<UserOrganization | DeleteResult> {\r\n\t\t// 1. Check if the requesting user has permission to delete Super Admin\r\n\t\tconst { name: requestingUserRoleName } = await this.roleService.findOne(\r\n\t\t\trequestingUser.roleId\r\n\t\t);\r\n\r\n\t\tif (requestingUserRoleName !== RolesEnum.SUPER_ADMIN)\r\n\t\t\tthrow new UnauthorizedException(\r\n\t\t\t\t'Only Super Admin user can delete Super Admin users'\r\n\t\t\t);\r\n\r\n\t\t// 2. Check if there are at least 2 Super Admins before deleting Super Admin user\r\n\t\tconst { total } = await this.userService.findAll({\r\n\t\t\twhere: {\r\n\t\t\t\trole: { id: requestingUser.roleId },\r\n\t\t\t\ttenant: { id: requestingUser.tenantId }\r\n\t\t\t},\r\n\t\t\trelations: ['role', 'tenant']\r\n\t\t});\r\n\r\n\t\tif (total === 1)\r\n\t\t\tthrow new BadRequestException(\r\n\t\t\t\tawait this.i18n.translate(\r\n\t\t\t\t\t'USER_ORGANIZATION.CANNOT_DELETE_ALL_SUPER_ADMINS',\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlang: language,\r\n\t\t\t\t\t\targs: { count: 1 }\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t);\r\n\r\n\t\t// 3. Delete Super Admin user from all organizations\r\n\t\treturn this.userService.delete(userId);\r\n\t}\r\n}\r\n","import { UserOrganizationDeleteHandler } from './handlers/user-organization.delete.handler';\r\n\r\nexport const CommandHandlers = [UserOrganizationDeleteHandler];\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { IUserOrganizationDeleteInput } from '@gauzy/models';\r\n\r\nexport class UserOrganizationDeleteCommand implements ICommand {\r\n\tstatic readonly type = '[UserOrganization] Delete';\r\n\r\n\tconstructor(public readonly input: IUserOrganizationDeleteInput) {}\r\n}\r\n","import {\r\n\tController,\r\n\tHttpStatus,\r\n\tGet,\r\n\tQuery,\r\n\tUseGuards,\r\n\tHttpCode,\r\n\tDelete,\r\n\tParam,\r\n\tReq\r\n} from '@nestjs/common';\r\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport { CrudController } from '../core/crud/crud.controller';\r\nimport { IUserOrganization, RolesEnum, LanguagesEnum } from '@gauzy/models';\r\nimport { UserOrganizationService } from './user-organization.services';\r\nimport { IPagination } from '../core';\r\nimport { UserOrganization } from './user-organization.entity';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { Not } from 'typeorm';\r\nimport { CommandBus } from '@nestjs/cqrs';\r\nimport { UserOrganizationDeleteCommand } from './commands/user-organization.delete.command';\r\nimport { I18nLang } from 'nestjs-i18n';\r\nimport { ParseJsonPipe } from '../shared/pipes/parse-json.pipe';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('UserOrganization')\r\n@UseGuards(AuthGuard('jwt'), TenantPermissionGuard)\r\n@Controller()\r\nexport class UserOrganizationController extends CrudController<\r\n\tIUserOrganization\r\n> {\r\n\tconstructor(\r\n\t\tprivate readonly userOrganizationService: UserOrganizationService,\r\n\t\tprivate readonly commandBus: CommandBus\r\n\t) {\r\n\t\tsuper(userOrganizationService);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find all UserOrganizations.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found UserOrganizations',\r\n\t\ttype: UserOrganization\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get()\r\n\tasync findAllEmployees(\r\n\t\t@Query('data', ParseJsonPipe) data: any\r\n\t): Promise<IPagination<UserOrganization>> {\r\n\t\tconst { relations, findInput } = data;\r\n\t\treturn this.userOrganizationService.findAll({\r\n\t\t\twhere: findInput,\r\n\t\t\trelations\r\n\t\t});\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Delete user from organization' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NO_CONTENT,\r\n\t\tdescription: 'The user has been successfully deleted'\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@Delete(':id')\r\n\tasync delete(\r\n\t\t@Param('id') id: string,\r\n\t\t@Req() request,\r\n\t\t@I18nLang() language: LanguagesEnum\r\n\t): Promise<UserOrganization> {\r\n\t\treturn this.commandBus.execute(\r\n\t\t\tnew UserOrganizationDeleteCommand({\r\n\t\t\t\tuserOrganizationId: id,\r\n\t\t\t\trequestingUser: request.user,\r\n\t\t\t\tlanguage\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find number of Organizations user belongs to' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Count of Organizations given user belongs to',\r\n\t\ttype: Number\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get(':id')\r\n\tasync findOrganizationCount(@Param('id') id: string): Promise<number> {\r\n\t\tconst { userId } = await this.findById(id);\r\n\t\tconst { total } = await this.userOrganizationService.findAll({\r\n\t\t\twhere: {\r\n\t\t\t\tuserId,\r\n\t\t\t\tisActive: true,\r\n\t\t\t\tuser: {\r\n\t\t\t\t\trole: { name: Not(RolesEnum.EMPLOYEE) }\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\trelations: ['user', 'user.role']\r\n\t\t});\r\n\t\treturn total;\r\n\t}\r\n\r\n\t// This was not being used and it overrides the default unnecessarily, so removed until required.\r\n\t// Please do not user Get() for findOne and use something like @Get(/organization/id)\r\n\t// @ApiOperation({ summary: 'Find one from the search input' })\r\n\t// @ApiResponse({ status: HttpStatus.OK, description: 'Found user organization', type: UserOrganization })\r\n\t// @ApiResponse({ status: HttpStatus.NOT_FOUND, description: 'Record not found' })\r\n\t// @Get()\r\n\t// async findOne(@Query('findInputStr') findInputStr: string): Promise<IUserOrganization> {\r\n\t//     const findInput = JSON.parse(findInputStr);\r\n\t//     return this.userOrganizationService.findOne({ where: findInput });\r\n\t// }\r\n}\r\n","import {\r\n\tEntity,\r\n\tIndex,\r\n\tColumn,\r\n\tJoinColumn,\r\n\tRelationId,\r\n\tManyToOne\r\n} from 'typeorm';\r\nimport { IUserOrganization } from '@gauzy/models';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsString, IsNotEmpty } from 'class-validator';\r\nimport { User } from '../user/user.entity';\r\nimport { TenantOrganizationBase } from '../core/entities/tenant-organization-base';\r\n\r\n@Entity('user_organization')\r\nexport class UserOrganization extends TenantOrganizationBase\r\n\timplements IUserOrganization {\r\n\t@ApiProperty({ type: User })\r\n\t@ManyToOne((type) => User, { nullable: true, onDelete: 'CASCADE' })\r\n\t@JoinColumn()\r\n\tuser?: User;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@IsNotEmpty()\r\n\t@Index()\r\n\t@Column()\r\n\t@RelationId((userOrganization: UserOrganization) => userOrganization.user)\r\n\tuserId: string;\r\n\r\n\t@ApiProperty({ type: Boolean, default: true })\r\n\t@Index()\r\n\t@Column({ default: true })\r\n\tisDefault: boolean;\r\n\r\n\t@ApiProperty({ type: Boolean, default: true })\r\n\t@Index()\r\n\t@Column({ default: true })\r\n\tisActive: boolean;\r\n}\r\n","import { Module, forwardRef } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { UserOrganizationService } from './user-organization.services';\r\nimport { UserOrganizationController } from './user-organization.controller';\r\nimport { UserOrganization } from './user-organization.entity';\r\nimport { Organization } from '../organization/organization.entity';\r\nimport { User } from '../user/user.entity';\r\nimport { UserService } from '../user/user.service';\r\nimport { CommandHandlers } from './commands';\r\nimport { CqrsModule } from '@nestjs/cqrs';\r\nimport { SharedModule } from '../shared';\r\nimport { Role } from '../role/role.entity';\r\nimport { RoleService } from '../role/role.service';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n@Module({\r\n\timports: [\r\n\t\tforwardRef(() =>\r\n\t\t\tTypeOrmModule.forFeature([\r\n\t\t\t\tUserOrganization,\r\n\t\t\t\tOrganization,\r\n\t\t\t\tUser,\r\n\t\t\t\tRole\r\n\t\t\t])\r\n\t\t),\r\n\t\tSharedModule,\r\n\t\tCqrsModule,\r\n\t\tTenantModule\r\n\t],\r\n\tcontrollers: [UserOrganizationController],\r\n\tproviders: [\r\n\t\tUserOrganizationService,\r\n\t\tUserService,\r\n\t\tRoleService,\r\n\t\t...CommandHandlers\r\n\t],\r\n\texports: [UserOrganizationService]\r\n})\r\nexport class UserOrganizationModule {}\r\n","import { Connection } from 'typeorm';\r\nimport {\r\n\tIOrganization,\r\n\tIUser,\r\n\tIUserOrganization,\r\n\tISeedUsers\r\n} from '@gauzy/models';\r\nimport { UserOrganization } from './user-organization.entity';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\n\r\nexport const createDefaultUsersOrganizations = async (\r\n\tconnection: Connection,\r\n\tdefaultData: {\r\n\t\torganizations: IOrganization[];\r\n\t\tusers: IUser[];\r\n\t}\r\n): Promise<IUserOrganization[]> => {\r\n\tlet userOrganization: IUserOrganization;\r\n\r\n\tconst usersOrganizations: IUserOrganization[] = [];\r\n\tconst defaultUsers = defaultData.users;\r\n\tconst defaultOrgs = defaultData.organizations;\r\n\r\n\tdefaultOrgs.forEach((org) => {\r\n\t\tfor (const user of defaultUsers) {\r\n\t\t\tuserOrganization = new UserOrganization();\r\n\t\t\tuserOrganization.organizationId = org.id;\r\n\t\t\tuserOrganization.tenant = org.tenant;\r\n\t\t\tuserOrganization.userId = user.id;\r\n\t\t\tusersOrganizations.push(userOrganization);\r\n\t\t}\r\n\t});\r\n\treturn await insertUserOrganization(connection, usersOrganizations);\r\n};\r\n\r\nexport const createRandomUsersOrganizations = async (\r\n\tconnection: Connection,\r\n\ttenants: Tenant[],\r\n\ttenantOrganizationsMap: Map<Tenant, IOrganization[]>,\r\n\ttenantSuperAdminsMap: Map<Tenant, IUser[]>,\r\n\ttenantUsersMap: Map<Tenant, ISeedUsers>,\r\n\temployeesPerOrganization: number\r\n): Promise<IUserOrganization[]> => {\r\n\tconst usersOrganizations: IUserOrganization[] = [];\r\n\r\n\tfor (const tenant of tenants) {\r\n\t\tconst orgs = tenantOrganizationsMap.get(tenant);\r\n\t\tconst superAdmins = tenantSuperAdminsMap.get(tenant);\r\n\t\tconst { adminUsers, employeeUsers } = tenantUsersMap.get(tenant);\r\n\r\n\t\tlet start = 0;\r\n\t\tlet end: number = employeesPerOrganization;\r\n\r\n\t\tlet count = 0;\r\n\r\n\t\torgs.forEach((org) => {\r\n\t\t\tconst userList = [\r\n\t\t\t\t...employeeUsers.slice(start, end),\r\n\t\t\t\tadminUsers[count % adminUsers.length],\r\n\t\t\t\t...superAdmins\r\n\t\t\t];\r\n\t\t\tstart = end;\r\n\t\t\tend = end + employeesPerOrganization;\r\n\t\t\tcount++;\r\n\r\n\t\t\tuserList.forEach(async (user) => {\r\n\t\t\t\tif (user.id) {\r\n\t\t\t\t\tconst userOrganization = new UserOrganization();\r\n\t\t\t\t\tuserOrganization.organizationId = org.id;\r\n\t\t\t\t\tuserOrganization.userId = user.id;\r\n\t\t\t\t\tuserOrganization.tenant = org.tenant;\r\n\t\t\t\t\tusersOrganizations.push(userOrganization);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\treturn await insertUserOrganization(connection, usersOrganizations);\r\n};\r\n\r\nconst insertUserOrganization = async (\r\n\tconnection: Connection,\r\n\tuserOrganizations: IUserOrganization[]\r\n): Promise<IUserOrganization[]> => {\r\n\treturn await connection.manager.save(userOrganizations);\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { CrudService } from '../core/crud/crud.service';\r\nimport { UserOrganization } from './user-organization.entity';\r\nimport { User } from '../user/user.entity';\r\nimport { RolesEnum } from '@gauzy/models';\r\nimport { Organization } from '../organization/organization.entity';\r\n\r\n@Injectable()\r\nexport class UserOrganizationService extends CrudService<UserOrganization> {\r\n\tconstructor(\r\n\t\t@InjectRepository(UserOrganization)\r\n\t\tprivate readonly userOrganizationRepository: Repository<\r\n\t\t\tUserOrganization\r\n\t\t>,\r\n\t\t@InjectRepository(Organization)\r\n\t\tprivate readonly organizationRepository: Repository<Organization>\r\n\t) {\r\n\t\tsuper(userOrganizationRepository);\r\n\t}\r\n\r\n\tasync addUserToOrganization(\r\n\t\tuser: User,\r\n\t\torganizationId: string\r\n\t): Promise<UserOrganization | UserOrganization[]> {\r\n\t\tconst roleName: string = user.role.name;\r\n\r\n\t\tif (roleName === RolesEnum.SUPER_ADMIN)\r\n\t\t\treturn this._addUserToAllOrganizations(user.id, user.tenant.id);\r\n\r\n\t\tconst entity: UserOrganization = new UserOrganization();\r\n\t\tentity.organizationId = organizationId;\r\n\t\tentity.tenantId = user.tenantId;\r\n\t\tentity.userId = user.id;\r\n\t\treturn this.create(entity);\r\n\t}\r\n\r\n\tprivate async _addUserToAllOrganizations(\r\n\t\tuserId: string,\r\n\t\ttenantId: string\r\n\t): Promise<UserOrganization[]> {\r\n\t\tconst organizations = await this.organizationRepository.find({\r\n\t\t\tselect: ['id'],\r\n\t\t\twhere: { tenant: { id: tenantId } },\r\n\t\t\trelations: ['tenant']\r\n\t\t});\r\n\t\tconst entities: UserOrganization[] = [];\r\n\r\n\t\torganizations.forEach((organization) => {\r\n\t\t\tconst entity: UserOrganization = new UserOrganization();\r\n\t\t\tentity.organizationId = organization.id;\r\n\t\t\tentity.tenantId = tenantId;\r\n\t\t\tentity.userId = userId;\r\n\t\t\tentities.push(entity);\r\n\t\t});\r\n\r\n\t\treturn this.repository.save(entities);\r\n\t}\r\n}\r\n","import { UserCreateHandler } from './user.create.handler';\r\n\r\nexport const CommandHandlers = [UserCreateHandler];\r\n","import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\r\nimport { UserCreateCommand } from '../user.create.command';\r\nimport { UserService } from '../../user.service';\r\nimport { IUser } from '@gauzy/models';\r\n\r\n@CommandHandler(UserCreateCommand)\r\nexport class UserCreateHandler implements ICommandHandler<UserCreateCommand> {\r\n\tconstructor(private readonly userService: UserService) {}\r\n\r\n\tpublic async execute(command: UserCreateCommand): Promise<IUser> {\r\n\t\tconst { input } = command;\r\n\r\n\t\treturn await this.userService.create(input);\r\n\t}\r\n}\r\n","export { UserCreateCommand } from './user.create.command';\r\n","import { ICommand } from '@nestjs/cqrs';\r\nimport { IUserCreateInput } from '@gauzy/models';\r\n\r\nexport class UserCreateCommand implements ICommand {\r\n\tstatic readonly type = '[User] Register';\r\n\r\n\tconstructor(public readonly input: IUserCreateInput) {}\r\n}\r\n","import { LanguagesEnum } from '@gauzy/models';\r\n\r\nexport const DEFAULT_SUPER_ADMINS = [\r\n\t{\r\n\t\temail: 'admin@ever.co',\r\n\t\tpassword: 'admin',\r\n\t\tfirstName: 'Admin',\r\n\t\tlastName: 'Super',\r\n\t\timageUrl: 'assets/images/avatars/ruslan.jpg',\r\n\t\tpreferredLanguage: LanguagesEnum.ENGLISH\r\n\t}\r\n];\r\n\r\nexport const DEFAULT_ADMINS = [\r\n\t{\r\n\t\temail: 'local.admin@ever.co',\r\n\t\tpassword: 'admin',\r\n\t\tfirstName: 'Admin',\r\n\t\tlastName: 'Local',\r\n\t\timageUrl: 'assets/images/avatars/ruslan.jpg',\r\n\t\tpreferredLanguage: LanguagesEnum.ENGLISH\r\n\t}\r\n];\r\n","// Modified code from https://github.com/xmlking/ngx-starter-kit.\r\n// MIT License, see https://github.com/xmlking/ngx-starter-kit/blob/develop/LICENSE\r\n// Copyright (c) 2018 Sumanth Chinthagunta\r\n\r\nimport {\r\n\tController,\r\n\tGet,\r\n\tHttpStatus,\r\n\tParam,\r\n\tQuery,\r\n\tUseGuards,\r\n\tHttpCode,\r\n\tPost,\r\n\tBody,\r\n\tPut\r\n} from '@nestjs/common';\r\nimport {\r\n\tApiOperation,\r\n\tApiResponse,\r\n\tApiTags,\r\n\tApiBearerAuth\r\n} from '@nestjs/swagger';\r\nimport { IPagination } from '../core';\r\nimport { CrudController } from '../core/crud/crud.controller';\r\nimport { UUIDValidationPipe, ParseJsonPipe } from '../shared';\r\nimport { User } from './user.entity';\r\nimport { UserService } from './user.service';\r\nimport { PermissionGuard } from '../shared/guards/auth/permission.guard';\r\nimport { PermissionsEnum } from '@gauzy/models';\r\nimport { Permissions } from '../shared/decorators/permissions';\r\nimport { RequestContext } from '../core/context';\r\nimport { CommandBus } from '@nestjs/cqrs';\r\nimport { UserCreateCommand } from './commands';\r\nimport { IUserCreateInput, IUserUpdateInput } from '@gauzy/models';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { TenantPermissionGuard } from '../shared/guards/auth/tenant-permission.guard';\r\n\r\n@ApiTags('User')\r\n@ApiBearerAuth()\r\n@Controller()\r\n@UseGuards(AuthGuard('jwt'))\r\nexport class UserController extends CrudController<User> {\r\n\tconstructor(\r\n\t\tprivate readonly userService: UserService,\r\n\t\tprivate readonly commandBus: CommandBus\r\n\t) {\r\n\t\tsuper(userService);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find current user.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found current user',\r\n\t\ttype: User\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get('/me')\r\n\tasync findCurrentUser(@Query('data') data: string): Promise<User> {\r\n\t\tconst { relations } = JSON.parse(data);\r\n\t\tconst currentUserId = RequestContext.currentUser().id;\r\n\t\treturn this.userService.findOne(currentUserId, {\r\n\t\t\trelations\r\n\t\t});\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find user by email address.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found user by email address',\r\n\t\ttype: User\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get('/email/:email')\r\n\tasync findByEmail(@Param('email') email: string): Promise<User> {\r\n\t\treturn this.userService.getUserByEmail(email);\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find User by id.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found one record',\r\n\t\ttype: User\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@Get(':id')\r\n\tasync findById(\r\n\t\t@Param('id', UUIDValidationPipe) id: string,\r\n\t\t@Query('data', ParseJsonPipe) data?: any\r\n\t): Promise<User> {\r\n\t\tconst { relations } = data;\r\n\t\treturn this.userService.findOne(id, { relations });\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Find all users.' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.OK,\r\n\t\tdescription: 'Found users',\r\n\t\ttype: User\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.NOT_FOUND,\r\n\t\tdescription: 'Record not found'\r\n\t})\r\n\t@UseGuards(PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_USERS_VIEW)\r\n\t@Get()\r\n\tasync findAllUsers(\r\n\t\t@Query('data', ParseJsonPipe) data: any\r\n\t): Promise<IPagination<User>> {\r\n\t\tconst { relations, findInput } = data;\r\n\t\treturn this.userService.findAll({\r\n\t\t\twhere: findInput,\r\n\t\t\trelations\r\n\t\t});\r\n\t}\r\n\r\n\t@ApiOperation({ summary: 'Create new record' })\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.CREATED,\r\n\t\tdescription: 'The record has been successfully created.' /*, type: T*/\r\n\t})\r\n\t@ApiResponse({\r\n\t\tstatus: HttpStatus.BAD_REQUEST,\r\n\t\tdescription:\r\n\t\t\t'Invalid input, The response body may contain clues as to what went wrong'\r\n\t})\r\n\t@UseGuards(PermissionGuard)\r\n\t@UseGuards(TenantPermissionGuard, PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_USERS_EDIT)\r\n\t@HttpCode(HttpStatus.CREATED)\r\n\t@Post()\r\n\tasync create(\r\n\t\t@Body() entity: IUserCreateInput,\r\n\t\t...options: any[]\r\n\t): Promise<User> {\r\n\t\treturn this.commandBus.execute(new UserCreateCommand(entity));\r\n\t}\r\n\r\n\t@HttpCode(HttpStatus.ACCEPTED)\r\n\t@UseGuards(TenantPermissionGuard, PermissionGuard)\r\n\t@Permissions(PermissionsEnum.ORG_USERS_EDIT)\r\n\t@Put(':id')\r\n\tasync update(\r\n\t\t@Param('id') id: string,\r\n\t\t@Body() entity: IUserUpdateInput,\r\n\t\t...options: any[]\r\n\t): Promise<any> {\r\n\t\treturn this.userService.updateProfile(id, {\r\n\t\t\tid,\r\n\t\t\t...entity\r\n\t\t});\r\n\t}\r\n}\r\n","// Modified code from https://github.com/xmlking/ngx-starter-kit.\r\n// MIT License, see https://github.com/xmlking/ngx-starter-kit/blob/develop/LICENSE\r\n// Copyright (c) 2018 Sumanth Chinthagunta\r\n\r\nimport {\r\n\tIUser,\r\n\tIRole,\r\n\tLanguagesEnum,\r\n\tComponentLayoutStyleEnum,\r\n\tITag,\r\n\tIEmployee\r\n} from '@gauzy/models';\r\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\r\nimport {\r\n\tIsAscii,\r\n\tIsEmail,\r\n\tIsNotEmpty,\r\n\tIsOptional,\r\n\tIsString,\r\n\tMaxLength,\r\n\tMinLength,\r\n\tIsEnum\r\n} from 'class-validator';\r\nimport {\r\n\tColumn,\r\n\tEntity,\r\n\tIndex,\r\n\tJoinColumn,\r\n\tManyToOne,\r\n\tRelationId,\r\n\tManyToMany,\r\n\tJoinTable,\r\n\tOneToOne,\r\n\tAfterLoad\r\n} from 'typeorm';\r\nimport { Role } from '../role/role.entity';\r\nimport { Tag } from '../tags/tag.entity';\r\nimport { Employee } from '../employee/employee.entity';\r\nimport { TenantBase } from '../core/entities/tenant-base';\r\n\r\n@Entity('user')\r\nexport class User extends TenantBase implements IUser {\r\n\t@ManyToMany(() => Tag)\r\n\t@JoinTable({\r\n\t\tname: 'tag_user'\r\n\t})\r\n\ttags?: ITag[];\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@IsString()\r\n\t@Index()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tthirdPartyId?: string;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@IsString()\r\n\t@Index()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tfirstName?: string;\r\n\r\n\t@ApiPropertyOptional({ type: String })\r\n\t@IsString()\r\n\t@Index()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tlastName?: string;\r\n\r\n\t@ApiProperty({ type: String, minLength: 3, maxLength: 100 })\r\n\t@IsEmail()\r\n\t@IsNotEmpty()\r\n\t@Index({ unique: true })\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\temail?: string;\r\n\r\n\t@ApiPropertyOptional({ type: String, minLength: 3, maxLength: 20 })\r\n\t@IsAscii()\r\n\t@MinLength(3)\r\n\t@MaxLength(20)\r\n\t@Index({ unique: true })\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\tusername?: string;\r\n\r\n\t@OneToOne('Employee', (employee: Employee) => employee.user)\r\n\temployee?: IEmployee;\r\n\r\n\t@ApiPropertyOptional({ type: Role })\r\n\t@ManyToOne(() => Role, { nullable: true, onDelete: 'CASCADE' })\r\n\t@JoinColumn()\r\n\trole?: IRole;\r\n\r\n\t@ApiPropertyOptional({ type: String, readOnly: true })\r\n\t@RelationId((user: User) => user.role)\r\n\treadonly roleId?: string;\r\n\r\n\t@ApiProperty({ type: String })\r\n\t@IsString()\r\n\t@Column()\r\n\t@IsOptional()\r\n\t@Column({ nullable: true })\r\n\thash?: string;\r\n\r\n\t@ApiPropertyOptional({ type: String, maxLength: 500 })\r\n\t@IsOptional()\r\n\t@Column({ length: 500, nullable: true })\r\n\timageUrl?: string;\r\n\r\n\t@ApiProperty({ type: String, enum: LanguagesEnum })\r\n\t@IsEnum(LanguagesEnum)\r\n\t@Column({ nullable: true })\r\n\tpreferredLanguage?: string;\r\n\r\n\t@ApiProperty({ type: String, enum: ComponentLayoutStyleEnum })\r\n\t@IsEnum(ComponentLayoutStyleEnum)\r\n\t@Column({ nullable: true })\r\n\tpreferredComponentLayout?: string;\r\n\r\n\tname?: string;\r\n\r\n\temployeeId?: string;\r\n\r\n\t@AfterLoad()\r\n\tafterLoad?() {\r\n\t\tconst name = this.firstName + ' ' + this.lastName;\r\n\t\tthis.name = name;\r\n\t\tthis.employeeId = this.employee ? this.employee.id : null;\r\n\t}\r\n}\r\n","// Modified code from https://github.com/xmlking/ngx-starter-kit.\r\n// MIT License, see https://github.com/xmlking/ngx-starter-kit/blob/develop/LICENSE\r\n// Copyright (c) 2018 Sumanth Chinthagunta\r\n\r\nimport { forwardRef, Module } from '@nestjs/common';\r\nimport { CqrsModule } from '@nestjs/cqrs';\r\nimport { CommandHandlers } from './commands/handlers';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { User } from './user.entity';\r\nimport { UserService } from './user.service';\r\nimport { UserController } from './user.controller';\r\nimport { SharedModule } from '../shared';\r\nimport { TenantModule } from '../tenant/tenant.module';\r\n\r\n@Module({\r\n\timports: [\r\n\t\tforwardRef(() => TypeOrmModule.forFeature([User])),\r\n\t\tforwardRef(() => TenantModule),\r\n\t\tSharedModule,\r\n\t\tCqrsModule\r\n\t],\r\n\tcontrollers: [UserController],\r\n\tproviders: [UserService, ...CommandHandlers],\r\n\texports: [TypeOrmModule, UserService]\r\n})\r\nexport class UserModule {}\r\n","// Modified code from https://github.com/alexitaylor/angular-graphql-nestjs-postgres-starter-kit.\r\n// MIT License, see https://github.com/alexitaylor/angular-graphql-nestjs-postgres-starter-kit/blob/master/LICENSE\r\n// Copyright (c) 2019 Alexi Taylor\r\n\r\nimport { Connection } from 'typeorm';\r\nimport * as bcrypt from 'bcryptjs';\r\nimport { environment as env } from '@env-api/environment';\r\nimport * as faker from 'faker';\r\nimport {\r\n\tIDefaultUser,\r\n\tRolesEnum,\r\n\tISeedUsers,\r\n\tLanguagesEnum,\r\n\tIRole\r\n} from '@gauzy/models';\r\nimport { Role } from '../role/role.entity';\r\nimport { User } from './user.entity';\r\nimport { getUserDummyImage } from '../core';\r\nimport { Tenant } from '../tenant/tenant.entity';\r\nimport { DEFAULT_EMPLOYEES } from '../employee/default-employees';\r\nimport { DEFAULT_CANDIDATES } from '../candidate/default-candidates';\r\nimport { DEFAULT_SUPER_ADMINS, DEFAULT_ADMINS } from './default-users';\r\n\r\nexport const createDefaultSuperAdminUsers = async (\r\n\tconnection: Connection,\r\n\troles: Role[],\r\n\ttenant: Tenant\r\n): Promise<User[]> => {\r\n\tconst superAdmins: User[] = [];\r\n\tconst superAdminRole = roles.find(\r\n\t\t(role) => role.name === RolesEnum.SUPER_ADMIN\r\n\t);\r\n\r\n\t// Generate default super admins\r\n\tfor (const superAdmin of DEFAULT_SUPER_ADMINS) {\r\n\t\tconst superAdminUser: User = await generateDefaultUser(\r\n\t\t\tsuperAdmin,\r\n\t\t\tsuperAdminRole,\r\n\t\t\ttenant\r\n\t\t);\r\n\t\tsuperAdmins.push(superAdminUser);\r\n\t}\r\n\r\n\treturn await insertUsers(connection, superAdmins);\r\n};\r\n\r\nexport const createRandomSuperAdminUsers = async (\r\n\tconnection: Connection,\r\n\troles: Role[],\r\n\ttenants: Tenant[],\r\n\tnoOfSuperAdmins: number = 1\r\n): Promise<Map<Tenant, User[]>> => {\r\n\tconst superAdminRole = roles.find(\r\n\t\t(role) => role.name === RolesEnum.SUPER_ADMIN\r\n\t);\r\n\r\n\tconst tenantSuperAdminsMap: Map<Tenant, User[]> = new Map();\r\n\r\n\tconst superAdmins: User[] = [];\r\n\r\n\tfor (const tenant of tenants) {\r\n\t\tconst tenantSuperAdmins = [];\r\n\t\t// Generate random super admins\r\n\t\tfor (let i = 0; i < noOfSuperAdmins; i++) {\r\n\t\t\tconst superAdminUser = await generateRandomUser(\r\n\t\t\t\tsuperAdminRole,\r\n\t\t\t\ttenant\r\n\t\t\t);\r\n\t\t\ttenantSuperAdmins.push(superAdminUser);\r\n\t\t\tsuperAdmins.push(superAdminUser);\r\n\t\t}\r\n\t\ttenantSuperAdminsMap.set(tenant, tenantSuperAdmins);\r\n\t}\r\n\r\n\tawait insertUsers(connection, superAdmins);\r\n\treturn tenantSuperAdminsMap;\r\n};\r\n\r\nexport const createDefaultUsers = async (\r\n\tconnection: Connection,\r\n\troles: Role[],\r\n\ttenant: Tenant\r\n): Promise<{\r\n\tadminUsers: User[];\r\n\tdefaultEmployeeUsers: User[];\r\n\tdefaultCandidateUsers: User[];\r\n}> => {\r\n\tconst _adminUsers: Promise<User[]> = seedAdminUsers(roles, tenant);\r\n\r\n\tconst _defaultEmployeeUsers: Promise<User[]> = seedDefaultEmployeeUsers(\r\n\t\troles,\r\n\t\ttenant\r\n\t);\r\n\r\n\tconst _defaultCandidateUsers: Promise<User[]> = seedDefaultCandidateUsers(\r\n\t\troles,\r\n\t\ttenant\r\n\t);\r\n\r\n\tconst [\r\n\t\tadminUsers,\r\n\t\tdefaultEmployeeUsers,\r\n\t\tdefaultCandidateUsers\r\n\t] = await Promise.all([\r\n\t\t_adminUsers,\r\n\t\t_defaultEmployeeUsers,\r\n\t\t_defaultCandidateUsers\r\n\t]);\r\n\r\n\tawait insertUsers(connection, [\r\n\t\t...adminUsers,\r\n\t\t...defaultEmployeeUsers,\r\n\t\t...defaultCandidateUsers\r\n\t]);\r\n\r\n\treturn {\r\n\t\tadminUsers,\r\n\t\tdefaultEmployeeUsers,\r\n\t\tdefaultCandidateUsers\r\n\t};\r\n};\r\n\r\nexport const createRandomUsers = async (\r\n\tconnection: Connection,\r\n\troles: Role[],\r\n\ttenants: Tenant[],\r\n\torganizationPerTenant: number,\r\n\temployeesPerOrganization: number,\r\n\tcandidatesPerOrganization: number,\r\n\tmanagersPerOrganization: number,\r\n\tdataEntriesPerOrganization: number,\r\n\tviewerPerOrganization: number\r\n): Promise<Map<Tenant, ISeedUsers>> => {\r\n\tconst randomTenantUsers: Map<Tenant, ISeedUsers> = new Map();\r\n\r\n\tfor (const tenant of tenants) {\r\n\t\tconst _adminUsers: Promise<User[]> = seedRandomUsers(\r\n\t\t\tRolesEnum.ADMIN,\r\n\t\t\troles,\r\n\t\t\ttenant,\r\n\t\t\torganizationPerTenant //Because we want to seed at least one admin per organization\r\n\t\t);\r\n\r\n\t\tconst _employeeUsers: Promise<User[]> = seedRandomUsers(\r\n\t\t\tRolesEnum.EMPLOYEE,\r\n\t\t\troles,\r\n\t\t\ttenant,\r\n\t\t\temployeesPerOrganization * organizationPerTenant\r\n\t\t);\r\n\r\n\t\tconst _candidateUsers: Promise<User[]> = seedRandomUsers(\r\n\t\t\tRolesEnum.CANDIDATE,\r\n\t\t\troles,\r\n\t\t\ttenant,\r\n\t\t\tcandidatesPerOrganization * organizationPerTenant\r\n\t\t);\r\n\r\n\t\tconst _managerUsers: Promise<User[]> = seedRandomUsers(\r\n\t\t\tRolesEnum.MANAGER,\r\n\t\t\troles,\r\n\t\t\ttenant,\r\n\t\t\tmanagersPerOrganization * organizationPerTenant\r\n\t\t);\r\n\r\n\t\tconst _dataEntryUsers: Promise<User[]> = seedRandomUsers(\r\n\t\t\tRolesEnum.DATA_ENTRY,\r\n\t\t\troles,\r\n\t\t\ttenant,\r\n\t\t\tdataEntriesPerOrganization * organizationPerTenant\r\n\t\t);\r\n\r\n\t\tconst _viewerUsers: Promise<User[]> = seedRandomUsers(\r\n\t\t\tRolesEnum.VIEWER,\r\n\t\t\troles,\r\n\t\t\ttenant,\r\n\t\t\tviewerPerOrganization * organizationPerTenant\r\n\t\t);\r\n\r\n\t\tconst [\r\n\t\t\tpromiseAdminUsers,\r\n\t\t\tpromiseEmployeeUsers,\r\n\t\t\tpromiseCandidateUsers,\r\n\t\t\tpromiseManagerUsers,\r\n\t\t\tpromiseDataEntryUsers,\r\n\t\t\tpromiseViewerUsers\r\n\t\t] = await Promise.all([\r\n\t\t\t_adminUsers,\r\n\t\t\t_employeeUsers,\r\n\t\t\t_candidateUsers,\r\n\t\t\t_managerUsers,\r\n\t\t\t_dataEntryUsers,\r\n\t\t\t_viewerUsers\r\n\t\t]);\r\n\r\n\t\tconst adminUsers = await insertUsers(connection, [\r\n\t\t\t...promiseAdminUsers\r\n\t\t]);\r\n\t\tconst employeeUsers = await insertUsers(connection, [\r\n\t\t\t...promiseEmployeeUsers\r\n\t\t]);\r\n\t\tconst candidateUsers = await insertUsers(connection, [\r\n\t\t\t...promiseCandidateUsers\r\n\t\t]);\r\n\r\n\t\tawait insertUsers(connection, [\r\n\t\t\t...promiseManagerUsers,\r\n\t\t\t...promiseDataEntryUsers,\r\n\t\t\t...promiseViewerUsers\r\n\t\t]);\r\n\r\n\t\trandomTenantUsers.set(tenant, {\r\n\t\t\tadminUsers,\r\n\t\t\temployeeUsers,\r\n\t\t\tcandidateUsers\r\n\t\t});\r\n\t}\r\n\r\n\treturn randomTenantUsers;\r\n};\r\n\r\nconst seedAdminUsers = async (\r\n\troles: Role[],\r\n\ttenant: Tenant\r\n): Promise<User[]> => {\r\n\tconst adminRole = roles.find(\r\n\t\t(role: IRole) => role.name === RolesEnum.ADMIN\r\n\t);\r\n\tconst admins: Promise<User>[] = [];\r\n\tlet adminUser: Promise<User>;\r\n\t// Generate default admins\r\n\tfor (const admin of DEFAULT_ADMINS) {\r\n\t\tadminUser = generateDefaultUser(admin, adminRole, tenant);\r\n\t\tadmins.push(adminUser);\r\n\t}\r\n\r\n\treturn Promise.all(admins);\r\n};\r\n\r\nconst seedDefaultEmployeeUsers = async (\r\n\troles: Role[],\r\n\ttenant: Tenant\r\n): Promise<User[]> => {\r\n\tconst employeeRole = roles.find(\r\n\t\t(role: IRole) => role.name === RolesEnum.EMPLOYEE\r\n\t);\r\n\tconst defaultEmployees = DEFAULT_EMPLOYEES;\r\n\tconst defaultUsers: Promise<User>[] = [];\r\n\r\n\tlet user: Promise<User>;\r\n\t// Generate default users\r\n\tfor (const employee of defaultEmployees) {\r\n\t\tuser = generateDefaultUser(employee, employeeRole, tenant);\r\n\t\tdefaultUsers.push(user);\r\n\t}\r\n\r\n\treturn Promise.all(defaultUsers);\r\n};\r\n\r\nconst seedRandomUsers = async (\r\n\troleEnum: RolesEnum,\r\n\troles: Role[],\r\n\ttenant: Tenant,\r\n\tmaxUserCount: number\r\n): Promise<User[]> => {\r\n\tconst role = roles.find(({ name }) => name === roleEnum);\r\n\tconst randomUsers: Promise<User>[] = [];\r\n\tlet user: Promise<User>;\r\n\r\n\t// Generate 50 random users\r\n\tfor (let i = 0; i < maxUserCount; i++) {\r\n\t\tuser = generateRandomUser(role, tenant);\r\n\t\trandomUsers.push(user);\r\n\t}\r\n\treturn Promise.all(randomUsers);\r\n};\r\n\r\nconst seedDefaultCandidateUsers = async (\r\n\troles: Role[],\r\n\ttenant: Tenant\r\n): Promise<User[]> => {\r\n\tconst candidateRole = roles.find(\r\n\t\t(role: IRole) => role.name === RolesEnum.CANDIDATE\r\n\t);\r\n\tconst defaultCandidates = DEFAULT_CANDIDATES;\r\n\tconst defaultCandidateUsers: Promise<User>[] = [];\r\n\tlet user: Promise<User>;\r\n\r\n\t// Generate default candidate users\r\n\tfor (const candidate of defaultCandidates) {\r\n\t\tuser = generateDefaultUser(candidate, candidateRole, tenant);\r\n\t\tdefaultCandidateUsers.push(user);\r\n\t}\r\n\r\n\treturn Promise.all(defaultCandidateUsers);\r\n};\r\n\r\nconst generateDefaultUser = async (\r\n\tdefaultUser: IDefaultUser,\r\n\trole: Role,\r\n\ttenant: Tenant\r\n): Promise<User> => {\r\n\tconst user = new User();\r\n\tconst {\r\n\t\tfirstName,\r\n\t\tlastName,\r\n\t\temail,\r\n\t\timageUrl,\r\n\t\tpreferredLanguage\r\n\t} = defaultUser;\r\n\r\n\tuser.email = email;\r\n\tuser.firstName = firstName;\r\n\tuser.lastName = lastName;\r\n\tuser.role = role;\r\n\tuser.imageUrl = getUserDummyImage(user);\r\n\tuser.imageUrl = imageUrl;\r\n\tuser.tenant = tenant;\r\n\tuser.preferredLanguage = preferredLanguage;\r\n\r\n\tuser.hash = await bcrypt.hash(\r\n\t\tdefaultUser.password,\r\n\t\tenv.USER_PASSWORD_BCRYPT_SALT_ROUNDS\r\n\t);\r\n\r\n\treturn user;\r\n};\r\n\r\nconst generateRandomUser = async (\r\n\trole: Role,\r\n\ttenant: Tenant\r\n): Promise<User> => {\r\n\tconst gender = faker.random.number(1);\r\n\tconst firstName = faker.name.firstName(gender);\r\n\tconst lastName = faker.name.lastName(gender);\r\n\tconst username = faker.internet.userName(firstName, lastName);\r\n\tconst email = faker.internet.email(firstName, lastName);\r\n\tconst avatar = faker.image.avatar();\r\n\r\n\tconst user = new User();\r\n\tuser.firstName = firstName;\r\n\tuser.lastName = lastName;\r\n\tuser.username = username;\r\n\tuser.email = email;\r\n\tuser.role = role;\r\n\tuser.imageUrl = avatar;\r\n\tuser.tenant = tenant;\r\n\r\n\tconst languages = Object.values(LanguagesEnum);\r\n\tuser.preferredLanguage =\r\n\t\tlanguages[Math.floor(Math.random() * languages.length)];\r\n\r\n\tuser.hash = await bcrypt.hash(\r\n\t\t'123456',\r\n\t\tenv.USER_PASSWORD_BCRYPT_SALT_ROUNDS\r\n\t);\r\n\r\n\treturn user;\r\n};\r\n\r\nconst insertUsers = async (\r\n\tconnection: Connection,\r\n\tusers: User[]\r\n): Promise<User[]> => {\r\n\treturn await connection.manager.save(users);\r\n};\r\n","// Modified code from https://github.com/xmlking/ngx-starter-kit.\r\n// MIT License, see https://github.com/xmlking/ngx-starter-kit/blob/develop/LICENSE\r\n// Copyright (c) 2018 Sumanth Chinthagunta\r\n\r\nimport { Injectable, NotFoundException } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository, InsertResult } from 'typeorm';\r\nimport { User } from './user.entity';\r\nimport { CrudService } from '../core/crud/crud.service';\r\n\r\n@Injectable()\r\nexport class UserService extends CrudService<User> {\r\n\tconstructor(\r\n\t\t@InjectRepository(User)\r\n\t\tuserRepository: Repository<User>\r\n\t) {\r\n\t\tsuper(userRepository);\r\n\t}\r\n\r\n\tasync getUserByEmail(email: string): Promise<User> {\r\n\t\tconst user = await this.repository\r\n\t\t\t.createQueryBuilder('user')\r\n\t\t\t.where('user.email = :email', { email })\r\n\t\t\t.getOne();\r\n\t\treturn user;\r\n\t}\r\n\r\n\tasync getUserIdByEmail(email: string): Promise<string> {\r\n\t\tconst user = await this.getUserByEmail(email);\r\n\t\tconst userId = user.id;\r\n\t\treturn userId;\r\n\t}\r\n\r\n\tasync checkIfExistsEmail(email: string): Promise<boolean> {\r\n\t\tconst count = await this.repository\r\n\t\t\t.createQueryBuilder('user')\r\n\t\t\t.where('user.email = :email', { email })\r\n\t\t\t.getCount();\r\n\t\treturn count > 0;\r\n\t}\r\n\r\n\tasync checkIfExists(id: string): Promise<boolean> {\r\n\t\tconst count = await this.repository\r\n\t\t\t.createQueryBuilder('user')\r\n\t\t\t.where('user.id = :id', { id })\r\n\t\t\t.getCount();\r\n\t\treturn count > 0;\r\n\t}\r\n\r\n\tasync checkIfExistsThirdParty(thirdPartyId: string): Promise<boolean> {\r\n\t\tconst count = await this.repository\r\n\t\t\t.createQueryBuilder('user')\r\n\t\t\t.where('user.thirdPartyId = :thirdPartyId', { thirdPartyId })\r\n\t\t\t.getCount();\r\n\t\treturn count > 0;\r\n\t}\r\n\r\n\tasync getIfExists(id: string): Promise<User> {\r\n\t\treturn await this.repository\r\n\t\t\t.createQueryBuilder('user')\r\n\t\t\t.where('user.id = :id', { id })\r\n\t\t\t.getOne();\r\n\t}\r\n\r\n\tasync getIfExistsThirdParty(thirdPartyId: string): Promise<User> {\r\n\t\treturn await this.repository\r\n\t\t\t.createQueryBuilder('user')\r\n\t\t\t.where('user.thirdPartyId = :thirdPartyId', { thirdPartyId })\r\n\t\t\t.getOne();\r\n\t}\r\n\r\n\tasync createOne(user: User): Promise<InsertResult> {\r\n\t\treturn await this.repository.insert(user);\r\n\t}\r\n\r\n\tasync changePassword(id: string, hash: string) {\r\n\t\tconst user = await this.findOne(id);\r\n\t\tuser.hash = hash;\r\n\t\treturn await this.repository.save(user);\r\n\t}\r\n\r\n\t/*\r\n\t * Update user profile\r\n\t */\r\n\tasync updateProfile(\r\n\t\tid: string | number,\r\n\t\tpartialEntity: User,\r\n\t\t...options: any[]\r\n\t): Promise<User> {\r\n\t\ttry {\r\n\t\t\tconst user = await this.findOne(id);\r\n\t\t\tif (!user) {\r\n\t\t\t\tthrow new NotFoundException(`The user was not found`);\r\n\t\t\t}\r\n\r\n\t\t\tif (partialEntity['hash']) {\r\n\t\t\t\tconst hashPassword = await this.getPasswordHash(\r\n\t\t\t\t\tpartialEntity['hash']\r\n\t\t\t\t);\r\n\t\t\t\tpartialEntity['hash'] = hashPassword;\r\n\t\t\t}\r\n\r\n\t\t\treturn await this.repository.save(partialEntity);\r\n\t\t} catch (err) {\r\n\t\t\tthrow new NotFoundException(`The record was not found`, err);\r\n\t\t}\r\n\t}\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\nrequire('dotenv').config();\r\nimport * as path from 'path';\r\nimport { IEnvironment, IGauzyFeatures } from './ienvironment';\r\nimport { TypeOrmModuleOptions } from '@nestjs/typeorm';\r\nimport { FileStorageProviderEnum } from '@gauzy/models';\r\n\r\nconst dbType =\r\n\tprocess.env.DB_TYPE && process.env.DB_TYPE === 'postgres'\r\n\t\t? 'postgres'\r\n\t\t: 'sqlite';\r\n\r\nlet databaseConfig: TypeOrmModuleOptions;\r\n\r\nif (process.env.IS_ELECTRON && process.env.GAUZY_USER_PATH) {\r\n\trequire('app-root-path').setPath(process.env.GAUZY_USER_PATH);\r\n}\r\n\r\nswitch (dbType) {\r\n\tcase 'postgres':\r\n\t\tdatabaseConfig = {\r\n\t\t\ttype: dbType,\r\n\t\t\thost: process.env.DB_HOST || 'localhost',\r\n\t\t\tport: process.env.DB_PORT\r\n\t\t\t\t? parseInt(process.env.DB_PORT, 10)\r\n\t\t\t\t: 5432,\r\n\t\t\tdatabase: process.env.DB_NAME || 'postgres',\r\n\t\t\tusername: process.env.DB_USER || 'postgres',\r\n\t\t\tpassword: process.env.DB_PASS || 'root',\r\n\t\t\tkeepConnectionAlive: true,\r\n\t\t\tlogging: true,\r\n\t\t\tlogger: 'file', //Removes console logging, instead logs all queries in a file ormlogs.log\r\n\t\t\tsynchronize: true,\r\n\t\t\tuuidExtension: 'pgcrypto'\r\n\t\t};\r\n\t\tbreak;\r\n\r\n\tcase 'sqlite':\r\n\t\tdatabaseConfig = {\r\n\t\t\ttype: dbType,\r\n\t\t\tdatabase:\r\n\t\t\t\tprocess.env.DB_PATH ||\r\n\t\t\t\tpath.join(\r\n\t\t\t\t\tpath.resolve('.', ...['apps', 'api', 'data']),\r\n\t\t\t\t\t'gauzy.sqlite3'\r\n\t\t\t\t),\r\n\t\t\tkeepConnectionAlive: true,\r\n\t\t\tlogging: true,\r\n\t\t\tlogger: 'file', //Removes console logging, instead logs all queries in a file ormlogs.log\r\n\t\t\tsynchronize: true\r\n\t\t};\r\n\t\tbreak;\r\n}\r\n\r\nconsole.log(`DB Config: ${JSON.stringify(databaseConfig)}`);\r\n\r\nexport const environment: IEnvironment = {\r\n\tport: process.env.port || 3000,\r\n\thost: process.env.host || 'http://localhost',\r\n\tbaseUrl: process.env.BASE_URL || 'http://localhost:3000',\r\n\r\n\tproduction: false,\r\n\tenvName: 'dev',\r\n\r\n\tenv: {\r\n\t\tLOG_LEVEL: 'debug'\r\n\t},\r\n\r\n\tEXPRESS_SESSION_SECRET: 'gauzy',\r\n\tUSER_PASSWORD_BCRYPT_SALT_ROUNDS: 12,\r\n\tJWT_SECRET: 'secretKey',\r\n\r\n\tfileSystem: {\r\n\t\tname:\r\n\t\t\t(process.env.FILE_PROVIDER as FileStorageProviderEnum) ||\r\n\t\t\tFileStorageProviderEnum.LOCAL\r\n\t},\r\n\r\n\tawsConfig: {\r\n\t\taccessKeyId: process.env.AWS_ACCESS_KEY_ID,\r\n\t\tsecretAccessKey: process.env.AWS_SECRET_ACCESS_KEY,\r\n\t\tregion: process.env.AWS_REGION,\r\n\t\ts3: {\r\n\t\t\tbucket: process.env.AWS_S3_BUCKET\r\n\t\t}\r\n\t},\r\n\r\n\tdatabase: databaseConfig,\r\n\r\n\tfacebookConfig: {\r\n\t\tloginDialogUri: 'https://www.facebook.com/v2.12/dialog/oauth',\r\n\t\taccessTokenUri: 'https://graph.facebook.com/v2.12/oauth/access_token',\r\n\t\tclientId: process.env.FacebookClientId,\r\n\t\tclientSecret: process.env.FacebookClientSecret,\r\n\t\toauthRedirectUri: `${process.env.host}:${process.env.port}/api/auth/facebook/callback`,\r\n\t\tstate: '{fbstate}'\r\n\t},\r\n\r\n\tgoogleConfig: {\r\n\t\tclientId: process.env.GoogleClientId,\r\n\t\tclientSecret: process.env.GoogleClientSecret\r\n\t},\r\n\r\n\tgithubConfig: {\r\n\t\tclientId: process.env.GithubClientId,\r\n\t\tclientSecret: process.env.GithubClientSecret\r\n\t},\r\n\r\n\tmicrosoftConfig: {\r\n\t\tclientId: process.env.MicrosoftClientId,\r\n\t\tclientSecret: process.env.MicrosoftConfig,\r\n\t\tresource: process.env.MicrosoftResource,\r\n\t\ttenant: process.env.MicrosoftTenant\r\n\t},\r\n\r\n\tlinkedinConfig: {\r\n\t\tclientId: process.env.LinkedinClientId,\r\n\t\tclientSecret: process.env.LinkedinClientSecret\r\n\t},\r\n\r\n\ttwitterConfig: {\r\n\t\tclientId: process.env.TwitterClientId,\r\n\t\tclientSecret: process.env.TwitterClientSecret\r\n\t},\r\n\r\n\tfiverrConfig: {\r\n\t\tclientId: process.env.FiverrClientId,\r\n\t\tclientSecret: process.env.FiverrClientSecret\r\n\t},\r\n\r\n\tkeycloakConfig: {\r\n\t\trealm: process.env.KeycloakRealm,\r\n\t\tclientId: process.env.KeycloakClientId,\r\n\t\tsecret: process.env.KeycloakSecret,\r\n\t\tauthServerUrl: process.env.KeycloakAuthServerURL,\r\n\t\tcookieKey: process.env.KeycloakCookieKey\r\n\t},\r\n\r\n\tauth0Config: {\r\n\t\tclientID: process.env.Auth0ClientId,\r\n\t\tclientSecret: process.env.Auth0ClientSecret,\r\n\t\tdomain: process.env.Auth0Domanin\r\n\t},\r\n\r\n\tsentry: {\r\n\t\tdns: process.env.SENTRY_DSN\r\n\t},\r\n\r\n\tdefaultHubstaffUserPass:\r\n\t\tprocess.env.INTEGRATED_HUBSTAFF_USER_PASS || 'hubstaff',\r\n\r\n\tupworkConfig: {\r\n\t\tcallbackUrl:\r\n\t\t\tprocess.env.UPWORK_CALLBACK_URL ||\r\n\t\t\t'http://localhost:4200/#/pages/integrations/upwork'\r\n\t},\r\n\r\n\tisElectron: process.env.IS_ELECTRON === 'true' ? true : false,\r\n\tgauzyUserPath: process.env.GAUZY_USER_PATH,\r\n\tallowSuperAdminRole:\r\n\t\tprocess.env.AllowSuperAdminRole === 'false' ? false : true,\r\n\r\n\t/**\r\n\t * Endpoint for Gauzy AI API (optional), e.g.: http://localhost:3005/graphql\r\n\t */\r\n\tgauzyAIGraphQLEndpoint: process.env.GAUZY_AI_GRAPHQL_ENDPOINT,\r\n\r\n\tsmtpConfig: {\r\n\t\thost: process.env.MAIL_HOST,\r\n\t\tport: parseInt(process.env.MAIL_PORT, 10),\r\n\t\tsecure: process.env.MAIL_PORT === '465' ? true : false, // true for 465, false for other ports\r\n\t\tauth: {\r\n\t\t\tuser: process.env.MAIL_USERNAME,\r\n\t\t\tpass: process.env.MAIL_PASSWORD\r\n\t\t},\r\n\t\tfrom: process.env.MAIL_FROM_ADDRESS\r\n\t},\r\n\tdefaultCurrency: process.env.DEFAULT_CURRENCY || 'USD',\r\n\r\n\tunleashConfig: {\r\n\t\turl: process.env.UNLEASH_API_URL,\r\n\t\tappName: process.env.UNLEASH_APP_NAME,\r\n\t\tenvironment: 'development',\r\n\t\tinstanceId: process.env.UNLEASH_INSTANCE_ID,\r\n\t\trefreshInterval: parseInt(process.env.UNLEASH_REFRESH_INTERVAL) || 1000,\r\n\t\tmetricsInterval: parseInt(process.env.UNLEASH_METRICS_INTERVAL) || 1000\r\n\t}\r\n};\r\n\r\nexport const gauzyToggleFeatures: IGauzyFeatures = {\r\n\tFEATURE_DASHBOARD: process.env.FEATURE_DASHBOARD === 'false' ? false : true,\r\n\tFEATURE_TIME_TRACKING:\r\n\t\tprocess.env.FEATURE_TIME_TRACKING === 'false' ? false : true,\r\n\tFEATURE_ESTIMATE: process.env.FEATURE_ESTIMATE === 'false' ? false : true,\r\n\tFEATURE_ESTIMATE_RECEIVED:\r\n\t\tprocess.env.FEATURE_ESTIMATE_RECEIVED === 'false' ? false : true,\r\n\tFEATURE_INVOICE: process.env.FEATURE_INVOICE === 'false' ? false : true,\r\n\tFEATURE_INVOICE_RECURRING:\r\n\t\tprocess.env.FEATURE_INVOICE_RECURRING === 'false' ? false : true,\r\n\tFEATURE_INVOICE_RECEIVED:\r\n\t\tprocess.env.FEATURE_INVOICE_RECEIVED === 'false' ? false : true,\r\n\tFEATURE_INCOME: process.env.FEATURE_INCOME === 'false' ? false : true,\r\n\tFEATURE_EXPENSE: process.env.FEATURE_EXPENSE === 'false' ? false : true,\r\n\tFEATURE_PAYMENT: process.env.FEATURE_PAYMENT === 'false' ? false : true,\r\n\tFEATURE_PROPOSAL: process.env.FEATURE_PROPOSAL === 'false' ? false : true,\r\n\tFEATURE_PROPOSAL_TEMPLATE:\r\n\t\tprocess.env.FEATURE_PROPOSAL_TEMPLATE === 'false' ? false : true,\r\n\tFEATURE_PIPELINE: process.env.FEATURE_PIPELINE === 'false' ? false : true,\r\n\tFEATURE_PIPELINE_DEAL:\r\n\t\tprocess.env.FEATURE_PIPELINE_DEAL === 'false' ? false : true,\r\n\tFEATURE_DASHBOARD_TASK:\r\n\t\tprocess.env.FEATURE_DASHBOARD_TASK === 'false' ? false : true,\r\n\tFEATURE_TEAM_TASK: process.env.FEATURE_TEAM_TASK === 'false' ? false : true,\r\n\tFEATURE_MY_TASK: process.env.FEATURE_MY_TASK === 'false' ? false : true,\r\n\tFEATURE_JOB: process.env.FEATURE_JOB === 'false' ? false : true,\r\n\tFEATURE_EMPLOYEES: process.env.FEATURE_EMPLOYEES === 'false' ? false : true,\r\n\tFEATURE_EMPLOYEE_TIME_ACTIVITY:\r\n\t\tprocess.env.FEATURE_EMPLOYEE_TIME_ACTIVITY === 'false' ? false : true,\r\n\tFEATURE_EMPLOYEE_TIMESHEETS:\r\n\t\tprocess.env.FEATURE_EMPLOYEE_TIMESHEETS === 'false' ? false : true,\r\n\tFEATURE_EMPLOYEE_APPOINTMENT:\r\n\t\tprocess.env.FEATURE_EMPLOYEE_APPOINTMENT === 'false' ? false : true,\r\n\tFEATURE_EMPLOYEE_APPROVAL:\r\n\t\tprocess.env.FEATURE_EMPLOYEE_APPROVAL === 'false' ? false : true,\r\n\tFEATURE_EMPLOYEE_APPROVAL_POLICY:\r\n\t\tprocess.env.FEATURE_EMPLOYEE_APPROVAL_POLICY === 'false' ? false : true,\r\n\tFEATURE_EMPLOYEE_LEVEL:\r\n\t\tprocess.env.FEATURE_EMPLOYEE_LEVEL === 'false' ? false : true,\r\n\tFEATURE_EMPLOYEE_POSITION:\r\n\t\tprocess.env.FEATURE_EMPLOYEE_POSITION === 'false' ? false : true,\r\n\tFEATURE_EMPLOYEE_TIMEOFF:\r\n\t\tprocess.env.FEATURE_EMPLOYEE_TIMEOFF === 'false' ? false : true,\r\n\tFEATURE_EMPLOYEE_RECURRING_EXPENSE:\r\n\t\tprocess.env.FEATURE_EMPLOYEE_RECURRING_EXPENSE === 'false'\r\n\t\t\t? false\r\n\t\t\t: true,\r\n\tFEATURE_EMPLOYEE_CANDIDATE:\r\n\t\tprocess.env.FEATURE_EMPLOYEE_CANDIDATE === 'false' ? false : true,\r\n\tFEATURE_MANAGE_INTERVIEW:\r\n\t\tprocess.env.FEATURE_MANAGE_INTERVIEW === 'false' ? false : true,\r\n\tFEATURE_MANAGE_INVITE:\r\n\t\tprocess.env.FEATURE_MANAGE_INVITE === 'false' ? false : true,\r\n\tFEATURE_ORGANIZATION:\r\n\t\tprocess.env.FEATURE_ORGANIZATION === 'false' ? false : true,\r\n\tFEATURE_ORGANIZATION_EQUIPMENT:\r\n\t\tprocess.env.FEATURE_ORGANIZATION_EQUIPMENT === 'false' ? false : true,\r\n\tFEATURE_ORGANIZATION_INVENTORY:\r\n\t\tprocess.env.FEATURE_ORGANIZATION_INVENTORY === 'false' ? false : true,\r\n\tFEATURE_ORGANIZATION_TAG:\r\n\t\tprocess.env.FEATURE_ORGANIZATION_TAG === 'false' ? false : true,\r\n\tFEATURE_ORGANIZATION_VENDOR:\r\n\t\tprocess.env.FEATURE_ORGANIZATION_VENDOR === 'false' ? false : true,\r\n\tFEATURE_ORGANIZATION_PROJECT:\r\n\t\tprocess.env.FEATURE_ORGANIZATION_PROJECT === 'false' ? false : true,\r\n\tFEATURE_ORGANIZATION_DEPARTMENT:\r\n\t\tprocess.env.FEATURE_ORGANIZATION_DEPARTMENT === 'false' ? false : true,\r\n\tFEATURE_ORGANIZATION_TEAM:\r\n\t\tprocess.env.FEATURE_ORGANIZATION_TEAM === 'false' ? false : true,\r\n\tFEATURE_ORGANIZATION_DOCUMENT:\r\n\t\tprocess.env.FEATURE_ORGANIZATION_DOCUMENT === 'false' ? false : true,\r\n\tFEATURE_ORGANIZATION_EMPLOYMENT_TYPE:\r\n\t\tprocess.env.FEATURE_ORGANIZATION_EMPLOYMENT_TYPE === 'false'\r\n\t\t\t? false\r\n\t\t\t: true,\r\n\tFEATURE_ORGANIZATION_RECURRING_EXPENSE:\r\n\t\tprocess.env.FEATURE_ORGANIZATION_RECURRING_EXPENSE === 'false'\r\n\t\t\t? false\r\n\t\t\t: true,\r\n\tFEATURE_ORGANIZATION_HELP_CENTER:\r\n\t\tprocess.env.FEATURE_ORGANIZATION_HELP_CENTER === 'false' ? false : true,\r\n\tFEATURE_CONTACT: process.env.FEATURE_CONTACT === 'false' ? false : true,\r\n\tFEATURE_GOAL: process.env.FEATURE_GOAL === 'false' ? false : true,\r\n\tFEATURE_GOAL_REPORT:\r\n\t\tprocess.env.FEATURE_GOAL_REPORT === 'false' ? false : true,\r\n\tFEATURE_GOAL_SETTING:\r\n\t\tprocess.env.FEATURE_GOAL_SETTING === 'false' ? false : true,\r\n\tFEATURE_REPORT: process.env.FEATURE_REPORT === 'false' ? false : true,\r\n\tFEATURE_USER: process.env.FEATURE_USER === 'false' ? false : true,\r\n\tFEATURE_ORGANIZATIONS:\r\n\t\tprocess.env.FEATURE_ORGANIZATIONS === 'false' ? false : true,\r\n\tFEATURE_APP_INTEGRATION:\r\n\t\tprocess.env.FEATURE_APP_INTEGRATION === 'false' ? false : true,\r\n\tFEATURE_SETTING: process.env.FEATURE_SETTING === 'false' ? false : true,\r\n\tFEATURE_EMAIL_HISTORY:\r\n\t\tprocess.env.FEATURE_EMAIL_HISTORY === 'false' ? false : true,\r\n\tFEATURE_EMAIL_TEMPLATE:\r\n\t\tprocess.env.FEATURE_EMAIL_TEMPLATE === 'false' ? false : true,\r\n\tFEATURE_IMPORT_EXPORT:\r\n\t\tprocess.env.FEATURE_IMPORT_EXPORT === 'false' ? false : true,\r\n\tFEATURE_FILE_STORAGE:\r\n\t\tprocess.env.FEATURE_FILE_STORAGE === 'false' ? false : true,\r\n\tFEATURE_PAYMENT_GATEWAY:\r\n\t\tprocess.env.FEATURE_PAYMENT_GATEWAY === 'false' ? false : true,\r\n\tFEATURE_SMS_GATEWAY:\r\n\t\tprocess.env.FEATURE_SMS_GATEWAY === 'false' ? false : true,\r\n\tFEATURE_SMTP: process.env.FEATURE_SMTP === 'false' ? false : true,\r\n\tFEATURE_ROLES_PERMISSION:\r\n\t\tprocess.env.FEATURE_ROLES_PERMISSION === 'false' ? false : true\r\n};\r\n","// import * as csurf from 'csurf';\r\nimport * as helmet from 'helmet';\r\nimport { NestFactory } from '@nestjs/core';\r\nimport { AppModule } from './app/app.module';\r\nimport { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';\r\nimport { SentryService } from '@ntegral/nestjs-sentry';\r\nimport * as expressSession from 'express-session';\r\nimport { environment as env } from '@env-api/environment';\r\nimport { AppService } from './app/app.service';\r\n\r\nasync function bootstrap() {\r\n\tconst app = await NestFactory.create(AppModule, {\r\n\t\tlogger: ['error', 'warn']\r\n\t});\r\n\tapp.useLogger(app.get(SentryService));\r\n\tapp.enableCors();\r\n\r\n\t// TODO: enable csurf\r\n\t// As explained on the csurf middleware page https://github.com/expressjs/csurf#csurf,\r\n\t// the csurf module requires either a session middleware or cookie-parser to be initialized first.\r\n\t// app.use(csurf());\r\n\r\n\tapp.use(\r\n\t\texpressSession({\r\n\t\t\tsecret: env.EXPRESS_SESSION_SECRET,\r\n\t\t\tresave: true,\r\n\t\t\tsaveUninitialized: true\r\n\t\t})\r\n\t);\r\n\r\n\tapp.use(helmet());\r\n\tconst globalPrefix = 'api';\r\n\tapp.setGlobalPrefix(globalPrefix);\r\n\r\n\tconst service = app.select(AppModule).get(AppService);\r\n\tawait service.seedDBIfEmpty();\r\n\r\n\tconst options = new DocumentBuilder()\r\n\t\t.setTitle('Gauzy API')\r\n\t\t.setVersion('1.0')\r\n\t\t.addBearerAuth()\r\n\t\t// .setBasePath('api/')\r\n\t\t.build();\r\n\r\n\tconst document = SwaggerModule.createDocument(app, options);\r\n\tSwaggerModule.setup('swg', app, document);\r\n\tconst port = process.env.port || 3000;\r\n\tawait app.listen(port, () => {\r\n\t\tconsole.log(\r\n\t\t\t'Listening at http://localhost:' + port + '/' + globalPrefix\r\n\t\t);\r\n\t});\r\n}\r\n\r\nbootstrap();\r\n","module.exports = require(\"@angular/common/http\");","module.exports = require(\"@angular/core\");","module.exports = require(\"@apollo/client/core\");","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/common/utils/http-error-by-code.util\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/cqrs\");","module.exports = require(\"@nestjs/passport\");","module.exports = require(\"@nestjs/platform-express\");","module.exports = require(\"@nestjs/serve-static\");","module.exports = require(\"@nestjs/swagger\");","module.exports = require(\"@nestjs/typeorm\");","module.exports = require(\"@ntegral/nestjs-sentry\");","module.exports = require(\"@sentry/node\");","module.exports = require(\"@sentry/tracing\");","module.exports = require(\"@sentry/types\");","module.exports = require(\"app-root-path\");","module.exports = require(\"archiver\");","module.exports = require(\"aws-sdk\");","module.exports = require(\"bcryptjs\");","module.exports = require(\"chalk\");","module.exports = require(\"class-transformer\");","module.exports = require(\"class-validator\");","module.exports = require(\"cls-hooked\");","module.exports = require(\"cross-fetch\");","module.exports = require(\"csv-parser\");","module.exports = require(\"csv-writer\");","module.exports = require(\"date-fns\");","module.exports = require(\"dotenv\");","module.exports = require(\"email-templates\");","module.exports = require(\"express\");","module.exports = require(\"express-session\");","module.exports = require(\"faker\");","module.exports = require(\"fs\");","module.exports = require(\"fs-extra\");","module.exports = require(\"handlebars\");","module.exports = require(\"helmet\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"lodash\");","module.exports = require(\"mjml\");","module.exports = require(\"moment\");","module.exports = require(\"moment-range\");","module.exports = require(\"moment-timezone\");","module.exports = require(\"multer\");","module.exports = require(\"multer-s3\");","module.exports = require(\"nest-router\");","module.exports = require(\"nestjs-i18n\");","module.exports = require(\"nodemailer\");","module.exports = require(\"os\");","module.exports = require(\"passport\");","module.exports = require(\"passport-auth0\");","module.exports = require(\"passport-azure-ad-oauth2\");","module.exports = require(\"passport-facebook-token\");","module.exports = require(\"passport-github2\");","module.exports = require(\"passport-google-oauth20\");","module.exports = require(\"passport-jwt\");","module.exports = require(\"passport-linkedin-oauth2\");","module.exports = require(\"passport-twitter\");","module.exports = require(\"path\");","module.exports = require(\"request\");","module.exports = require(\"rimraf\");","module.exports = require(\"rxjs\");","module.exports = require(\"rxjs/operators\");","module.exports = require(\"sharp\");","module.exports = require(\"tslib\");","module.exports = require(\"typeorm\");","module.exports = require(\"typeorm/query-builder/QueryPartialEntity\");","module.exports = require(\"underscore\");","module.exports = require(\"unleash-client\");","module.exports = require(\"unzipper\");","module.exports = require(\"upwork-api\");","module.exports = require(\"upwork-api/lib/routers/auth.js\");","module.exports = require(\"upwork-api/lib/routers/hr/engagements.js\");","module.exports = require(\"upwork-api/lib/routers/hr/freelancers/applications.js\");","module.exports = require(\"upwork-api/lib/routers/hr/freelancers/offers.js\");","module.exports = require(\"upwork-api/lib/routers/jobs/profile.js\");","module.exports = require(\"upwork-api/lib/routers/organization/users.js\");","module.exports = require(\"upwork-api/lib/routers/reports/finance/billings.js\");","module.exports = require(\"upwork-api/lib/routers/reports/finance/earnings.js\");","module.exports = require(\"upwork-api/lib/routers/reports/time.js\");","module.exports = require(\"upwork-api/lib/routers/snapshot.js\");","module.exports = require(\"upwork-api/lib/routers/workdiary.js\");","module.exports = require(\"uuid\");"],"sourceRoot":""}